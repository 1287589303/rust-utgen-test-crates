fns:
{
    "rand_pcg::pcg64::Lcg64Xsh32::new": FnData {
        fn_name: "new",
        complete_fn_name: "rand_pcg::pcg64::Lcg64Xsh32::new",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "new",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32::new",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: Some(
                                            MyPath {
                                                name: "new",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::new",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: new,
                                span: bytes(23028..23031),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: state,
                                                span: bytes(23032..23037),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(23039..23042),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: stream,
                                                span: bytes(23044..23050),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(23052..23055),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(23060..23064),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: increment,
                                            span: bytes(23143..23152),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: stream,
                                                                            span: bytes(23156..23162),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shl(
                                                            Shl,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 1,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Lcg64Xsh32,
                                                            span: bytes(23182..23192),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: from_state_incr,
                                                            span: bytes(23194..23209),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: state,
                                                                span: bytes(23210..23215),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: increment,
                                                                span: bytes(23217..23226),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg64Xsh32,
                                            span: bytes(21210..21220),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(21787..21793),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(21806..21813),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(21819..21823),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(21825..21830),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(21832..21835),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(23028..23031),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(23032..23037),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23039..23042),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(23044..23050),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23052..23055),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(23060..23064),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(23143..23152),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(23156..23162),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg64Xsh32,
                                                                    span: bytes(23182..23192),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(23194..23209),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(23210..23215),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(23217..23226),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(23241..23247),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(23256..23271),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(23272..23277),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23279..23282),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(23284..23293),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23295..23298),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(23303..23307),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(23326..23329),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Lcg64Xsh32,
                                                                        span: bytes(23332..23342),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(23345..23350),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(23345..23350),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(23352..23361),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(23352..23361),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(23414..23417),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(23418..23423),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(23426..23429),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(23430..23435),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(23436..23448),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(23449..23452),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(23453..23462),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(23473..23476),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(23477..23481),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(23493..23496),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(23510..23516),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(23525..23529),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(23535..23539),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128::Mcg128Xsl64 as fmt::Debug>::fmt": FnData {
        fn_name: "fmt",
        complete_fn_name: "<rand_pcg::pcg128::Mcg128Xsl64 as fmt::Debug>::fmt",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fmt",
                    complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as fmt::Debug>::fmt",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64 as fmt",
                                        next: Some(
                                            MyPath {
                                                name: "Debug>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#5}::fmt",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fmt,
                                span: bytes(11909..11912),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(11914..11918),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(11920..11921),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(11928..11931),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Formatter,
                                                                span: bytes(11933..11942),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(11947..11950),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(11952..11958),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Macro {
                                        attrs: [],
                                        mac: Macro {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: write,
                                                            span: bytes(11969..11974),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            bang_token: Not,
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: f,
                                                    span: bytes(11976..11977),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(11977..11978),
                                                },
                                                Literal {
                                                    lit: "Mcg128Xsl64 {{}}",
                                                    span: bytes(11979..11997),
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 5,
                struct_name: Name {
                    name: "Mcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Debug",
                        complete_name: "",
                        import_name: MyPath {
                            name: "fmt",
                            next: Some(
                                MyPath {
                                    name: "Debug",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(11873..11876),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: Debug,
                                                span: bytes(11878..11883),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mcg128Xsl64,
                                            span: bytes(11888..11899),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "fmt",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as fmt::Debug>::fmt",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as fmt",
                                                next: Some(
                                                    MyPath {
                                                        name: "Debug>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fmt",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#5}::fmt",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fmt,
                                        span: bytes(11909..11912),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(11914..11918),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(11920..11921),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(11928..11931),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(11933..11942),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(11947..11950),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(11952..11958),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Macro {
                                                attrs: [],
                                                mac: Macro {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: write,
                                                                    span: bytes(11969..11974),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    bang_token: Not,
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: f,
                                                            span: bytes(11976..11977),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(11977..11978),
                                                        },
                                                        Literal {
                                                            lit: "Mcg128Xsl64 {{}}",
                                                            span: bytes(11979..11997),
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg64::Lcg64Xsh32::step": FnData {
        fn_name: "step",
        complete_fn_name: "rand_pcg::pcg64::Lcg64Xsh32::step",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "step",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32::step",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: Some(
                                            MyPath {
                                                name: "step",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::step",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(23510..23516),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: step,
                                span: bytes(23525..23529),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(23535..23539),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(23597..23601),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(23602..23607),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(23610..23614),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(23628..23633),
                                                        },
                                                    ),
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: wrapping_mul,
                                                    span: bytes(23647..23659),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: MULTIPLIER,
                                                                        span: bytes(23660..23670),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(23685..23697),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(23698..23702),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: increment,
                                                            span: bytes(23703..23712),
                                                        },
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg64Xsh32,
                                            span: bytes(21210..21220),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(21787..21793),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(21806..21813),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(21819..21823),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(21825..21830),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(21832..21835),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(23028..23031),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(23032..23037),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23039..23042),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(23044..23050),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23052..23055),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(23060..23064),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(23143..23152),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(23156..23162),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg64Xsh32,
                                                                    span: bytes(23182..23192),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(23194..23209),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(23210..23215),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(23217..23226),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(23241..23247),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(23256..23271),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(23272..23277),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23279..23282),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(23284..23293),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23295..23298),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(23303..23307),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(23326..23329),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Lcg64Xsh32,
                                                                        span: bytes(23332..23342),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(23345..23350),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(23345..23350),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(23352..23361),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(23352..23361),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(23414..23417),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(23418..23423),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(23426..23429),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(23430..23435),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(23436..23448),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(23449..23452),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(23453..23462),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(23473..23476),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(23477..23481),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(23493..23496),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(23510..23516),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(23525..23529),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(23535..23539),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128cm::output_dxsm": FnData {
        fn_name: "output_dxsm",
        complete_fn_name: "rand_pcg::pcg128cm::output_dxsm",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "output_dxsm",
                    complete_name: "rand_pcg::pcg128cm::output_dxsm",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "output_dxsm",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "output_dxsm",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: inline,
                                                    span: bytes(19087..19093),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: always,
                                            span: bytes(19094..19100),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: output_dxsm,
                                span: bytes(19106..19117),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: state,
                                                span: bytes(19118..19123),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(19125..19129),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(19134..19137),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: hi,
                                            span: bytes(19355..19357),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: state,
                                                                            span: bytes(19361..19366),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 64,
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(19377..19380),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: lo,
                                            span: bytes(19394..19396),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: state,
                                                                    span: bytes(19399..19404),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(19408..19411),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: lo,
                                                            span: bytes(19418..19420),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        op: BinOp::BitOrAssign(
                                            OrEq,
                                        ),
                                        right: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 1,
                                            },
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: hi,
                                                            span: bytes(19431..19433),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        op: BinOp::BitXorAssign(
                                            CaretEq,
                                        ),
                                        right: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: hi,
                                                                span: bytes(19437..19439),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Shr(
                                                Shr,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 32,
                                                },
                                            },
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: hi,
                                                            span: bytes(19451..19453),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: hi,
                                                                span: bytes(19456..19458),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_mul,
                                                span: bytes(19459..19471),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: MULTIPLIER,
                                                                    span: bytes(19472..19482),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Binary {
                                        attrs: [],
                                        left: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: hi,
                                                            span: bytes(19489..19491),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        op: BinOp::BitXorAssign(
                                            CaretEq,
                                        ),
                                        right: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: hi,
                                                                span: bytes(19495..19497),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Shr(
                                                Shr,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 48,
                                                },
                                            },
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: hi,
                                                            span: bytes(19509..19511),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: hi,
                                                                span: bytes(19514..19516),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_mul,
                                                span: bytes(19517..19529),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: lo,
                                                                    span: bytes(19530..19532),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: hi,
                                                        span: bytes(19540..19542),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
            },
        ),
    },
    "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::fill_bytes": FnData {
        fn_name: "fill_bytes",
        complete_fn_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::fill_bytes",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fill_bytes",
                    complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::fill_bytes",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_bytes",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::fill_bytes",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(18973..18979),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fill_bytes,
                                span: bytes(18988..18998),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(19004..19008),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: dest,
                                                span: bytes(19010..19014),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Slice {
                                                bracket_token: Bracket,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u8,
                                                                    span: bytes(19022..19024),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: impls,
                                                            span: bytes(19037..19042),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fill_bytes_via_next,
                                                            span: bytes(19044..19063),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(19064..19068),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: dest,
                                                                span: bytes(19070..19074),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(18717..18724),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128CmDxsm64,
                                            span: bytes(18729..18743),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(18752..18758),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(18767..18775),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(18781..18785),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(18790..18793),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(18840..18846),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(18855..18863),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(18869..18873),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(18878..18881),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(18973..18979),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(18988..18998),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(19004..19008),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(19010..19014),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(19022..19024),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::fill_bytes": FnData {
        fn_name: "fill_bytes",
        complete_fn_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::fill_bytes",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fill_bytes",
                    complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::fill_bytes",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_bytes",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::fill_bytes",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(9259..9265),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fill_bytes,
                                span: bytes(9274..9284),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(9290..9294),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: dest,
                                                span: bytes(9296..9300),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Slice {
                                                bracket_token: Bracket,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u8,
                                                                    span: bytes(9308..9310),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: impls,
                                                            span: bytes(9323..9328),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fill_bytes_via_next,
                                                            span: bytes(9330..9349),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(9350..9354),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: dest,
                                                                span: bytes(9356..9360),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(9027..9034),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128Xsl64,
                                            span: bytes(9039..9050),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(9059..9065),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(9074..9082),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9088..9092),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(9097..9100),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(9147..9153),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(9162..9170),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9176..9180),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(9185..9188),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(9259..9265),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(9274..9284),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9290..9294),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(9296..9300),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(9308..9310),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::fill_bytes": FnData {
        fn_name: "fill_bytes",
        complete_fn_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::fill_bytes",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fill_bytes",
                    complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::fill_bytes",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_bytes",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::fill_bytes",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(25069..25075),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fill_bytes,
                                span: bytes(25084..25094),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(25100..25104),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: dest,
                                                span: bytes(25106..25110),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Slice {
                                                bracket_token: Bracket,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u8,
                                                                    span: bytes(25118..25120),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: impls,
                                                            span: bytes(25133..25138),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fill_bytes_via_next,
                                                            span: bytes(25140..25159),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(25160..25164),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: dest,
                                                                span: bytes(25166..25170),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(24414..24421),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg64Xsh32,
                                            span: bytes(24426..24436),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(24445..24451),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(24460..24468),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(24474..24478),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(24483..24486),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: ROTATE,
                                    span: bytes(24699..24705),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24707..24710),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 59,
                                    },
                                },
                                semi_token: Semi,
                            },
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: XSHIFT,
                                    span: bytes(24741..24747),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24749..24752),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 18,
                                    },
                                },
                                semi_token: Semi,
                            },
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: SPARE,
                                    span: bytes(24789..24794),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24796..24799),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 27,
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(24974..24980),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(24989..24997),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(25003..25007),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(25012..25015),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(25069..25075),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(25084..25094),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(25100..25104),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(25106..25110),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(25118..25120),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u64": FnData {
        fn_name: "next_u64",
        complete_fn_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u64",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "next_u64",
                    complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u64",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::next_u64",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(24974..24980),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: next_u64,
                                span: bytes(24989..24997),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(25003..25007),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(25012..25015),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: impls,
                                                            span: bytes(25026..25031),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: next_u64_via_u32,
                                                            span: bytes(25033..25049),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(25050..25054),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(24414..24421),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg64Xsh32,
                                            span: bytes(24426..24436),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(24445..24451),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(24460..24468),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(24474..24478),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(24483..24486),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: ROTATE,
                                    span: bytes(24699..24705),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24707..24710),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 59,
                                    },
                                },
                                semi_token: Semi,
                            },
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: XSHIFT,
                                    span: bytes(24741..24747),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24749..24752),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 18,
                                    },
                                },
                                semi_token: Semi,
                            },
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: SPARE,
                                    span: bytes(24789..24794),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24796..24799),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 27,
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(24974..24980),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(24989..24997),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(25003..25007),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(25012..25015),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(25069..25075),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(25084..25094),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(25100..25104),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(25106..25110),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(25118..25120),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128cm::Lcg128CmDxsm64::step": FnData {
        fn_name: "step",
        complete_fn_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::step",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "step",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::step",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: Some(
                                            MyPath {
                                                name: "step",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::step",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: inline,
                                                    span: bytes(17647..17653),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: always,
                                            span: bytes(17654..17660),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: step,
                                span: bytes(17670..17674),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(17680..17684),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(17742..17746),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(17747..17752),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(17755..17759),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(17773..17778),
                                                        },
                                                    ),
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: wrapping_mul,
                                                    span: bytes(17792..17804),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Cast {
                                                        attrs: [],
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: MULTIPLIER,
                                                                            span: bytes(17805..17815),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        as_token: As,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u128,
                                                                            span: bytes(17819..17823),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(17838..17850),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(17851..17855),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: increment,
                                                            span: bytes(17856..17865),
                                                        },
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128CmDxsm64,
                                            span: bytes(15202..15216),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(15783..15789),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(15802..15809),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(15815..15819),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(15821..15826),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(15828..15832),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(17173..17176),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(17177..17182),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17184..17188),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(17190..17196),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17198..17202),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(17207..17211),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(17290..17299),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(17303..17309),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(17329..17333),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(17335..17350),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(17351..17356),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(17358..17367),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(17382..17388),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(17397..17412),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(17413..17418),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17420..17424),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(17426..17435),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17437..17441),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(17446..17450),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(17469..17472),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(17475..17479),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(17482..17487),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(17482..17487),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(17489..17498),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(17489..17498),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(17551..17554),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(17555..17560),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(17563..17566),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(17567..17572),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(17573..17585),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(17586..17589),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(17590..17599),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(17610..17613),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(17614..17618),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(17630..17633),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: inline,
                                                            span: bytes(17647..17653),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: always,
                                                    span: bytes(17654..17660),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(17670..17674),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(17680..17684),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128::Lcg128Xsl64::new": FnData {
        fn_name: "new",
        complete_fn_name: "rand_pcg::pcg128::Lcg128Xsl64::new",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "new",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64::new",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: Some(
                                            MyPath {
                                                name: "new",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::new",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: new,
                                span: bytes(7487..7490),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: state,
                                                span: bytes(7491..7496),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(7498..7502),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: stream,
                                                span: bytes(7504..7510),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(7512..7516),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(7521..7525),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: increment,
                                            span: bytes(7604..7613),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: stream,
                                                                            span: bytes(7617..7623),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shl(
                                                            Shl,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 1,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Lcg128Xsl64,
                                                            span: bytes(7643..7654),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: from_state_incr,
                                                            span: bytes(7656..7671),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: state,
                                                                span: bytes(7672..7677),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: increment,
                                                                span: bytes(7679..7688),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128Xsl64,
                                            span: bytes(5700..5711),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(6278..6284),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(6297..6304),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(6310..6314),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(6316..6321),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(6323..6327),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(7487..7490),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(7491..7496),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7498..7502),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(7504..7510),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7512..7516),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7521..7525),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(7604..7613),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(7617..7623),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg128Xsl64,
                                                                    span: bytes(7643..7654),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(7656..7671),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(7672..7677),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(7679..7688),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7703..7709),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(7718..7733),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(7734..7739),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7741..7745),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(7747..7756),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7758..7762),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7767..7771),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(7790..7793),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Lcg128Xsl64,
                                                                        span: bytes(7796..7807),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(7810..7815),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(7810..7815),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(7817..7826),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(7817..7826),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(7879..7882),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(7883..7888),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(7891..7894),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(7895..7900),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(7901..7913),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(7914..7917),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(7918..7927),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(7938..7941),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(7942..7946),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(7958..7961),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7975..7981),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(7990..7994),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(8000..8004),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg64::Lcg64Xsh32::advance": FnData {
        fn_name: "advance",
        complete_fn_name: "rand_pcg::pcg64::Lcg64Xsh32::advance",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "advance",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32::advance",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: Some(
                                            MyPath {
                                                name: "advance",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::advance",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(21787..21793),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: advance,
                                span: bytes(21806..21813),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(21819..21823),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: delta,
                                                span: bytes(21825..21830),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(21832..21835),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: acc_mult,
                                                span: bytes(21855..21863),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(21865..21868),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 1,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: acc_plus,
                                                span: bytes(21890..21898),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(21900..21903),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: cur_mult,
                                            span: bytes(21925..21933),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: MULTIPLIER,
                                                                span: bytes(21936..21946),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: cur_plus,
                                            span: bytes(21964..21972),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(21975..21979),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: increment,
                                                        span: bytes(21980..21989),
                                                    },
                                                ),
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: mdelta,
                                            span: bytes(22007..22013),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: delta,
                                                                span: bytes(22016..22021),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::While {
                                        attrs: [],
                                        label: None,
                                        while_token: While,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mdelta,
                                                                span: bytes(22038..22044),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Gt(
                                                Gt,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: mdelta,
                                                                                        span: bytes(22067..22073),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::BitAnd(
                                                                        And,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Ne(
                                                                Ne,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: acc_mult,
                                                                                            span: bytes(22102..22110),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: acc_mult,
                                                                                                span: bytes(22113..22121),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: wrapping_mul,
                                                                                span: bytes(22122..22134),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cur_mult,
                                                                                                    span: bytes(22135..22143),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: acc_plus,
                                                                                            span: bytes(22162..22170),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: acc_plus,
                                                                                                    span: bytes(22173..22181),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: wrapping_mul,
                                                                                    span: bytes(22182..22194),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: cur_mult,
                                                                                                        span: bytes(22195..22203),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: wrapping_add,
                                                                                span: bytes(22205..22217),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cur_plus,
                                                                                                    span: bytes(22218..22226),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cur_plus,
                                                                            span: bytes(22255..22263),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_mult,
                                                                                    span: bytes(22266..22274),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: wrapping_add,
                                                                    span: bytes(22275..22287),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_mul,
                                                                span: bytes(22291..22303),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_plus,
                                                                                    span: bytes(22304..22312),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cur_mult,
                                                                            span: bytes(22327..22335),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: cur_mult,
                                                                                span: bytes(22338..22346),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_mul,
                                                                span: bytes(22347..22359),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_mult,
                                                                                    span: bytes(22360..22368),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mdelta,
                                                                            span: bytes(22383..22389),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::DivAssign(
                                                            SlashEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(22414..22418),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(22419..22424),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: acc_mult,
                                                                    span: bytes(22427..22435),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: wrapping_mul,
                                                    span: bytes(22436..22448),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: self,
                                                                            span: bytes(22449..22453),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(22454..22459),
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(22461..22473),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: acc_plus,
                                                                    span: bytes(22474..22482),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg64Xsh32,
                                            span: bytes(21210..21220),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(21787..21793),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(21806..21813),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(21819..21823),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(21825..21830),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(21832..21835),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(23028..23031),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(23032..23037),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23039..23042),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(23044..23050),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23052..23055),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(23060..23064),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(23143..23152),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(23156..23162),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg64Xsh32,
                                                                    span: bytes(23182..23192),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(23194..23209),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(23210..23215),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(23217..23226),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(23241..23247),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(23256..23271),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(23272..23277),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23279..23282),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(23284..23293),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23295..23298),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(23303..23307),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(23326..23329),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Lcg64Xsh32,
                                                                        span: bytes(23332..23342),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(23345..23350),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(23345..23350),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(23352..23361),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(23352..23361),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(23414..23417),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(23418..23423),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(23426..23429),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(23430..23435),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(23436..23448),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(23449..23452),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(23453..23462),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(23473..23476),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(23477..23481),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(23493..23496),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(23510..23516),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(23525..23529),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(23535..23539),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128::Lcg128Xsl64 as fmt::Debug>::fmt": FnData {
        fn_name: "fmt",
        complete_fn_name: "<rand_pcg::pcg128::Lcg128Xsl64 as fmt::Debug>::fmt",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fmt",
                    complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as fmt::Debug>::fmt",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64 as fmt",
                                        next: Some(
                                            MyPath {
                                                name: "Debug>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#1}::fmt",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fmt,
                                span: bytes(8301..8304),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(8306..8310),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(8312..8313),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(8320..8323),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Formatter,
                                                                span: bytes(8325..8334),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(8339..8342),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(8344..8350),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Macro {
                                        attrs: [],
                                        mac: Macro {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: write,
                                                            span: bytes(8361..8366),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            bang_token: Not,
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: f,
                                                    span: bytes(8368..8369),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(8369..8370),
                                                },
                                                Literal {
                                                    lit: "Lcg128Xsl64 {{}}",
                                                    span: bytes(8371..8389),
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 1,
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Debug",
                        complete_name: "",
                        import_name: MyPath {
                            name: "fmt",
                            next: Some(
                                MyPath {
                                    name: "Debug",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(8265..8268),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: Debug,
                                                span: bytes(8270..8275),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128Xsl64,
                                            span: bytes(8280..8291),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "fmt",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as fmt::Debug>::fmt",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as fmt",
                                                next: Some(
                                                    MyPath {
                                                        name: "Debug>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fmt",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#1}::fmt",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fmt,
                                        span: bytes(8301..8304),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(8306..8310),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(8312..8313),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(8320..8323),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(8325..8334),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(8339..8342),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(8344..8350),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Macro {
                                                attrs: [],
                                                mac: Macro {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: write,
                                                                    span: bytes(8361..8366),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    bang_token: Not,
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: f,
                                                            span: bytes(8368..8369),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(8369..8370),
                                                        },
                                                        Literal {
                                                            lit: "Lcg128Xsl64 {{}}",
                                                            span: bytes(8371..8389),
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128::Lcg128Xsl64::step": FnData {
        fn_name: "step",
        complete_fn_name: "rand_pcg::pcg128::Lcg128Xsl64::step",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "step",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64::step",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: Some(
                                            MyPath {
                                                name: "step",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::step",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(7975..7981),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: step,
                                span: bytes(7990..7994),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(8000..8004),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(8062..8066),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(8067..8072),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(8075..8079),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(8093..8098),
                                                        },
                                                    ),
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: wrapping_mul,
                                                    span: bytes(8112..8124),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: MULTIPLIER,
                                                                        span: bytes(8125..8135),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(8150..8162),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: self,
                                                                        span: bytes(8163..8167),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: increment,
                                                            span: bytes(8168..8177),
                                                        },
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128Xsl64,
                                            span: bytes(5700..5711),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(6278..6284),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(6297..6304),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(6310..6314),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(6316..6321),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(6323..6327),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(7487..7490),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(7491..7496),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7498..7502),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(7504..7510),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7512..7516),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7521..7525),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(7604..7613),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(7617..7623),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg128Xsl64,
                                                                    span: bytes(7643..7654),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(7656..7671),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(7672..7677),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(7679..7688),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7703..7709),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(7718..7733),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(7734..7739),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7741..7745),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(7747..7756),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7758..7762),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7767..7771),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(7790..7793),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Lcg128Xsl64,
                                                                        span: bytes(7796..7807),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(7810..7815),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(7810..7815),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(7817..7826),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(7817..7826),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(7879..7882),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(7883..7888),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(7891..7894),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(7895..7900),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(7901..7913),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(7914..7917),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(7918..7927),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(7938..7941),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(7942..7946),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(7958..7961),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7975..7981),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(7990..7994),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(8000..8004),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u32": FnData {
        fn_name: "next_u32",
        complete_fn_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u32",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "next_u32",
                    complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u32",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u32",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::next_u32",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(18752..18758),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: next_u32,
                                span: bytes(18767..18775),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(18781..18785),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(18790..18793),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Cast {
                                        attrs: [],
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(18804..18808),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: next_u64,
                                                span: bytes(18809..18817),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        as_token: As,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(18823..18826),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(18717..18724),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128CmDxsm64,
                                            span: bytes(18729..18743),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(18752..18758),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(18767..18775),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(18781..18785),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(18790..18793),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(18840..18846),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(18855..18863),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(18869..18873),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(18878..18881),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(18973..18979),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(18988..18998),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(19004..19008),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(19010..19014),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(19022..19024),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128::Mcg128Xsl64::new": FnData {
        fn_name: "new",
        complete_fn_name: "rand_pcg::pcg128::Mcg128Xsl64::new",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "new",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64::new",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: Some(
                                            MyPath {
                                                name: "new",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#4}::new",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: new,
                                span: bytes(11641..11644),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: state,
                                                span: bytes(11645..11650),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(11652..11656),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(11661..11665),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Struct {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Mcg128Xsl64,
                                                        span: bytes(11755..11766),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        brace_token: Brace,
                                        fields: [
                                            FieldValue {
                                                attrs: [],
                                                member: Member::Named(
                                                    Ident {
                                                        sym: state,
                                                        span: bytes(11769..11774),
                                                    },
                                                ),
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                expr: Expr::Binary {
                                                    attrs: [],
                                                    left: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(11776..11781),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    op: BinOp::BitOr(
                                                        Or,
                                                    ),
                                                    right: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 1,
                                                        },
                                                    },
                                                },
                                            },
                                        ],
                                        dot2_token: None,
                                        rest: None,
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 4,
                struct_name: Name {
                    name: "Mcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mcg128Xsl64,
                                            span: bytes(10173..10184),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128::Mcg128Xsl64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#4}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(10751..10757),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(10770..10777),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(10783..10787),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(10789..10794),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(10796..10800),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128::Mcg128Xsl64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#4}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(11641..11644),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(11645..11650),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(11652..11656),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(11661..11665),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Mcg128Xsl64,
                                                                span: bytes(11755..11766),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(11769..11774),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: state,
                                                                                span: bytes(11776..11781),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::BitOr(
                                                                Or,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg64::Lcg64Xsh32::from_state_incr": FnData {
        fn_name: "from_state_incr",
        complete_fn_name: "rand_pcg::pcg64::Lcg64Xsh32::from_state_incr",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from_state_incr",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32::from_state_incr",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: Some(
                                            MyPath {
                                                name: "from_state_incr",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::from_state_incr",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(23241..23247),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from_state_incr,
                                span: bytes(23256..23271),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: state,
                                                span: bytes(23272..23277),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(23279..23282),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: increment,
                                                span: bytes(23284..23293),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(23295..23298),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(23303..23307),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: pcg,
                                            span: bytes(23326..23329),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Lcg64Xsh32,
                                                                span: bytes(23332..23342),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(23345..23350),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: state,
                                                                            span: bytes(23345..23350),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: increment,
                                                                span: bytes(23352..23361),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: increment,
                                                                            span: bytes(23352..23361),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(23414..23417),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(23418..23423),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(23426..23429),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: state,
                                                        span: bytes(23430..23435),
                                                    },
                                                ),
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(23436..23448),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(23449..23452),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: increment,
                                                            span: bytes(23453..23462),
                                                        },
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: pcg,
                                                            span: bytes(23473..23476),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: step,
                                            span: bytes(23477..23481),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: pcg,
                                                        span: bytes(23493..23496),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg64Xsh32,
                                            span: bytes(21210..21220),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(21787..21793),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(21806..21813),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(21819..21823),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(21825..21830),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(21832..21835),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(23028..23031),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(23032..23037),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23039..23042),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(23044..23050),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23052..23055),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(23060..23064),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(23143..23152),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(23156..23162),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg64Xsh32,
                                                                    span: bytes(23182..23192),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(23194..23209),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(23210..23215),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(23217..23226),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(23241..23247),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(23256..23271),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(23272..23277),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23279..23282),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(23284..23293),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(23295..23298),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(23303..23307),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(23326..23329),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Lcg64Xsh32,
                                                                        span: bytes(23332..23342),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(23345..23350),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(23345..23350),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(23352..23361),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(23352..23361),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(23414..23417),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(23418..23423),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(23426..23429),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(23430..23435),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(23436..23448),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(23449..23452),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(23453..23462),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(23473..23476),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(23477..23481),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(23493..23496),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg64::Lcg64Xsh32::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(23510..23516),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(23525..23529),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(23535..23539),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u32": FnData {
        fn_name: "next_u32",
        complete_fn_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u32",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "next_u32",
                    complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u32",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u32",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#7}::next_u32",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(12548..12554),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: next_u32,
                                span: bytes(12563..12571),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(12577..12581),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(12586..12589),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Cast {
                                        attrs: [],
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(12600..12604),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: next_u64,
                                                span: bytes(12605..12613),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        as_token: As,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(12619..12622),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 7,
                struct_name: Name {
                    name: "Mcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(12516..12523),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mcg128Xsl64,
                                            span: bytes(12528..12539),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(12548..12554),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(12563..12571),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12577..12581),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(12586..12589),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(12636..12642),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(12651..12659),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12665..12669),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(12674..12677),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(12785..12791),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(12800..12810),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12816..12820),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(12822..12826),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(12834..12836),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u64": FnData {
        fn_name: "next_u64",
        complete_fn_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u64",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "next_u64",
                    complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u64",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::next_u64",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(9147..9153),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: next_u64,
                                span: bytes(9162..9170),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(9176..9180),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(9185..9188),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: self,
                                                            span: bytes(9199..9203),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: step,
                                            span: bytes(9204..9208),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: output_xsl_rr,
                                                            span: bytes(9220..9233),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(9234..9238),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: state,
                                                        span: bytes(9239..9244),
                                                    },
                                                ),
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(9027..9034),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128Xsl64,
                                            span: bytes(9039..9050),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(9059..9065),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(9074..9082),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9088..9092),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(9097..9100),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(9147..9153),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(9162..9170),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9176..9180),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(9185..9188),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(9259..9265),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(9274..9284),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9290..9294),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(9296..9300),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(9308..9310),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128cm::Lcg128CmDxsm64::advance": FnData {
        fn_name: "advance",
        complete_fn_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::advance",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "advance",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::advance",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: Some(
                                            MyPath {
                                                name: "advance",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::advance",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(15783..15789),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: advance,
                                span: bytes(15802..15809),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(15815..15819),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: delta,
                                                span: bytes(15821..15826),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(15828..15832),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: acc_mult,
                                                span: bytes(15852..15860),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(15862..15866),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 1,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: acc_plus,
                                                span: bytes(15888..15896),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(15898..15902),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: cur_mult,
                                            span: bytes(15924..15932),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: MULTIPLIER,
                                                                    span: bytes(15935..15945),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(15949..15953),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: cur_plus,
                                            span: bytes(15971..15979),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(15982..15986),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: increment,
                                                        span: bytes(15987..15996),
                                                    },
                                                ),
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: mdelta,
                                            span: bytes(16014..16020),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: delta,
                                                                span: bytes(16023..16028),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::While {
                                        attrs: [],
                                        label: None,
                                        while_token: While,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mdelta,
                                                                span: bytes(16045..16051),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Gt(
                                                Gt,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: mdelta,
                                                                                        span: bytes(16074..16080),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::BitAnd(
                                                                        And,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Ne(
                                                                Ne,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: acc_mult,
                                                                                            span: bytes(16109..16117),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: acc_mult,
                                                                                                span: bytes(16120..16128),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: wrapping_mul,
                                                                                span: bytes(16129..16141),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cur_mult,
                                                                                                    span: bytes(16142..16150),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: acc_plus,
                                                                                            span: bytes(16169..16177),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: acc_plus,
                                                                                                    span: bytes(16180..16188),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: wrapping_mul,
                                                                                    span: bytes(16189..16201),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: cur_mult,
                                                                                                        span: bytes(16202..16210),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: wrapping_add,
                                                                                span: bytes(16212..16224),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cur_plus,
                                                                                                    span: bytes(16225..16233),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cur_plus,
                                                                            span: bytes(16262..16270),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_mult,
                                                                                    span: bytes(16273..16281),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: wrapping_add,
                                                                    span: bytes(16282..16294),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_mul,
                                                                span: bytes(16298..16310),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_plus,
                                                                                    span: bytes(16311..16319),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cur_mult,
                                                                            span: bytes(16334..16342),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: cur_mult,
                                                                                span: bytes(16345..16353),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_mul,
                                                                span: bytes(16354..16366),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_mult,
                                                                                    span: bytes(16367..16375),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mdelta,
                                                                            span: bytes(16390..16396),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::DivAssign(
                                                            SlashEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(16421..16425),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(16426..16431),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: acc_mult,
                                                                    span: bytes(16434..16442),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: wrapping_mul,
                                                    span: bytes(16443..16455),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: self,
                                                                            span: bytes(16456..16460),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(16461..16466),
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(16468..16480),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: acc_plus,
                                                                    span: bytes(16481..16489),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128CmDxsm64,
                                            span: bytes(15202..15216),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(15783..15789),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(15802..15809),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(15815..15819),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(15821..15826),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(15828..15832),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(17173..17176),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(17177..17182),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17184..17188),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(17190..17196),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17198..17202),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(17207..17211),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(17290..17299),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(17303..17309),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(17329..17333),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(17335..17350),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(17351..17356),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(17358..17367),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(17382..17388),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(17397..17412),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(17413..17418),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17420..17424),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(17426..17435),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17437..17441),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(17446..17450),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(17469..17472),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(17475..17479),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(17482..17487),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(17482..17487),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(17489..17498),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(17489..17498),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(17551..17554),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(17555..17560),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(17563..17566),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(17567..17572),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(17573..17585),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(17586..17589),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(17590..17599),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(17610..17613),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(17614..17618),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(17630..17633),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: inline,
                                                            span: bytes(17647..17653),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: always,
                                                    span: bytes(17654..17660),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(17670..17674),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(17680..17684),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::SeedableRng>::from_seed": FnData {
        fn_name: "from_seed",
        complete_fn_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::SeedableRng>::from_seed",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from_seed",
                    complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::SeedableRng>::from_seed",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_seed",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#2}::from_seed",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from_seed,
                                span: bytes(24144..24153),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: seed,
                                                span: bytes(24154..24158),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(24160..24164),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Seed,
                                                            span: bytes(24166..24170),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(24175..24179),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: seed_u64,
                                            span: bytes(24198..24206),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Repeat {
                                                attrs: [],
                                                bracket_token: Bracket,
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0u64,
                                                    },
                                                },
                                                semi_token: Semi,
                                                len: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 2,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: le,
                                                            span: bytes(24228..24230),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: read_u64_into,
                                                            span: bytes(24232..24245),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: None,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: seed,
                                                                    span: bytes(24247..24251),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: seed_u64,
                                                                    span: bytes(24258..24266),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Lcg64Xsh32,
                                                            span: bytes(24342..24352),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: from_state_incr,
                                                            span: bytes(24354..24369),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Index {
                                                attrs: [],
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: seed_u64,
                                                                    span: bytes(24370..24378),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                bracket_token: Bracket,
                                                index: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0,
                                                    },
                                                },
                                            },
                                            Comma,
                                            Expr::Binary {
                                                attrs: [],
                                                left: Expr::Index {
                                                    attrs: [],
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: seed_u64,
                                                                        span: bytes(24383..24391),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    bracket_token: Bracket,
                                                    index: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 1,
                                                        },
                                                    },
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 1,
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 2,
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "SeedableRng",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "SeedableRng",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: SeedableRng,
                                                span: bytes(23938..23949),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg64Xsh32,
                                            span: bytes(23954..23964),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [
                    ImplTypeItem {
                        item: Some(
                            ImplItemType {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                type_token: Type,
                                ident: Ident {
                                    sym: Seed,
                                    span: bytes(23976..23980),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                eq_token: Eq,
                                ty: Type::Array {
                                    bracket_token: Bracket,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u8,
                                                        span: bytes(23984..23986),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    semi_token: Semi,
                                    len: Expr::Lit {
                                        attrs: [],
                                        lit: Lit::Int {
                                            token: 16,
                                        },
                                    },
                                },
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                ],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_seed",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::SeedableRng>::from_seed",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "SeedableRng>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "from_seed",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::from_seed",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_seed,
                                        span: bytes(24144..24153),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: seed,
                                                        span: bytes(24154..24158),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(24160..24164),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Seed,
                                                                    span: bytes(24166..24170),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(24175..24179),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: seed_u64,
                                                    span: bytes(24198..24206),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Repeat {
                                                        attrs: [],
                                                        bracket_token: Bracket,
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0u64,
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                        len: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: le,
                                                                    span: bytes(24228..24230),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: read_u64_into,
                                                                    span: bytes(24232..24245),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: seed,
                                                                            span: bytes(24247..24251),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: seed_u64,
                                                                            span: bytes(24258..24266),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg64Xsh32,
                                                                    span: bytes(24342..24352),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(24354..24369),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Index {
                                                        attrs: [],
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: seed_u64,
                                                                            span: bytes(24370..24378),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        bracket_token: Bracket,
                                                        index: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0,
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Index {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: seed_u64,
                                                                                span: bytes(24383..24391),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            bracket_token: Bracket,
                                                            index: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [
                    "u8",
                ],
            },
        ),
    },
    "rand_pcg::pcg128cm::Lcg128CmDxsm64::from_state_incr": FnData {
        fn_name: "from_state_incr",
        complete_fn_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::from_state_incr",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from_state_incr",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::from_state_incr",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: Some(
                                            MyPath {
                                                name: "from_state_incr",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::from_state_incr",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(17382..17388),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from_state_incr,
                                span: bytes(17397..17412),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: state,
                                                span: bytes(17413..17418),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(17420..17424),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: increment,
                                                span: bytes(17426..17435),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(17437..17441),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(17446..17450),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: pcg,
                                            span: bytes(17469..17472),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(17475..17479),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(17482..17487),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: state,
                                                                            span: bytes(17482..17487),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: increment,
                                                                span: bytes(17489..17498),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: increment,
                                                                            span: bytes(17489..17498),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(17551..17554),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(17555..17560),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(17563..17566),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: state,
                                                        span: bytes(17567..17572),
                                                    },
                                                ),
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(17573..17585),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(17586..17589),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: increment,
                                                            span: bytes(17590..17599),
                                                        },
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: pcg,
                                                            span: bytes(17610..17613),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: step,
                                            span: bytes(17614..17618),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: pcg,
                                                        span: bytes(17630..17633),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128CmDxsm64,
                                            span: bytes(15202..15216),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(15783..15789),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(15802..15809),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(15815..15819),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(15821..15826),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(15828..15832),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(17173..17176),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(17177..17182),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17184..17188),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(17190..17196),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17198..17202),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(17207..17211),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(17290..17299),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(17303..17309),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(17329..17333),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(17335..17350),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(17351..17356),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(17358..17367),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(17382..17388),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(17397..17412),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(17413..17418),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17420..17424),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(17426..17435),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17437..17441),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(17446..17450),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(17469..17472),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(17475..17479),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(17482..17487),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(17482..17487),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(17489..17498),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(17489..17498),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(17551..17554),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(17555..17560),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(17563..17566),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(17567..17572),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(17573..17585),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(17586..17589),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(17590..17599),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(17610..17613),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(17614..17618),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(17630..17633),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: inline,
                                                            span: bytes(17647..17653),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: always,
                                                    span: bytes(17654..17660),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(17670..17674),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(17680..17684),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg64::Lcg64Xsh32 as fmt::Debug>::fmt": FnData {
        fn_name: "fmt",
        complete_fn_name: "<rand_pcg::pcg64::Lcg64Xsh32 as fmt::Debug>::fmt",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fmt",
                    complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as fmt::Debug>::fmt",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32 as fmt",
                                        next: Some(
                                            MyPath {
                                                name: "Debug>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#1}::fmt",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fmt,
                                span: bytes(23835..23838),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(23840..23844),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(23846..23847),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(23854..23857),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Formatter,
                                                                span: bytes(23859..23868),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(23873..23876),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(23878..23884),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Macro {
                                        attrs: [],
                                        mac: Macro {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: write,
                                                            span: bytes(23895..23900),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            bang_token: Not,
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: f,
                                                    span: bytes(23902..23903),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(23903..23904),
                                                },
                                                Literal {
                                                    lit: "Lcg64Xsh32 {{}}",
                                                    span: bytes(23905..23922),
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 1,
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Debug",
                        complete_name: "",
                        import_name: MyPath {
                            name: "fmt",
                            next: Some(
                                MyPath {
                                    name: "Debug",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(23800..23803),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: Debug,
                                                span: bytes(23805..23810),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg64Xsh32,
                                            span: bytes(23815..23825),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "fmt",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as fmt::Debug>::fmt",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as fmt",
                                                next: Some(
                                                    MyPath {
                                                        name: "Debug>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fmt",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#1}::fmt",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fmt,
                                        span: bytes(23835..23838),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(23840..23844),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(23846..23847),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(23854..23857),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(23859..23868),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(23873..23876),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(23878..23884),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Macro {
                                                attrs: [],
                                                mac: Macro {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: write,
                                                                    span: bytes(23895..23900),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    bang_token: Not,
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: f,
                                                            span: bytes(23902..23903),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(23903..23904),
                                                        },
                                                        Literal {
                                                            lit: "Lcg64Xsh32 {{}}",
                                                            span: bytes(23905..23922),
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128cm::Lcg128CmDxsm64::new": FnData {
        fn_name: "new",
        complete_fn_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::new",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "new",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::new",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: Some(
                                            MyPath {
                                                name: "new",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::new",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: new,
                                span: bytes(17173..17176),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: state,
                                                span: bytes(17177..17182),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(17184..17188),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: stream,
                                                span: bytes(17190..17196),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(17198..17202),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(17207..17211),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: increment,
                                            span: bytes(17290..17299),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: stream,
                                                                            span: bytes(17303..17309),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shl(
                                                            Shl,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 1,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(17329..17333),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: from_state_incr,
                                                            span: bytes(17335..17350),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: state,
                                                                span: bytes(17351..17356),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: increment,
                                                                span: bytes(17358..17367),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128CmDxsm64,
                                            span: bytes(15202..15216),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(15783..15789),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(15802..15809),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(15815..15819),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(15821..15826),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(15828..15832),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(17173..17176),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(17177..17182),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17184..17188),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(17190..17196),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17198..17202),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(17207..17211),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(17290..17299),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(17303..17309),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(17329..17333),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(17335..17350),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(17351..17356),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(17358..17367),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(17382..17388),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(17397..17412),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(17413..17418),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17420..17424),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(17426..17435),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(17437..17441),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(17446..17450),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(17469..17472),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(17475..17479),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(17482..17487),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(17482..17487),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(17489..17498),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(17489..17498),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(17551..17554),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(17555..17560),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(17563..17566),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(17567..17572),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(17573..17585),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(17586..17589),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(17590..17599),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(17610..17613),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(17614..17618),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(17630..17633),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: inline,
                                                            span: bytes(17647..17653),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: always,
                                                    span: bytes(17654..17660),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(17670..17674),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(17680..17684),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u64": FnData {
        fn_name: "next_u64",
        complete_fn_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u64",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "next_u64",
                    complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u64",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::next_u64",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(18840..18846),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: next_u64,
                                span: bytes(18855..18863),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(18869..18873),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(18878..18881),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: res,
                                            span: bytes(18896..18899),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: output_dxsm,
                                                                    span: bytes(18902..18913),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: self,
                                                                            span: bytes(18914..18918),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(18919..18924),
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: self,
                                                            span: bytes(18935..18939),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: step,
                                            span: bytes(18940..18944),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: res,
                                                        span: bytes(18956..18959),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(18717..18724),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128CmDxsm64,
                                            span: bytes(18729..18743),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(18752..18758),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(18767..18775),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(18781..18785),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(18790..18793),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(18840..18846),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(18855..18863),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(18869..18873),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(18878..18881),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(18973..18979),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(18988..18998),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(19004..19008),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(19010..19014),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(19022..19024),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as fmt::Debug>::fmt": FnData {
        fn_name: "fmt",
        complete_fn_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as fmt::Debug>::fmt",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fmt",
                    complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as fmt::Debug>::fmt",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64 as fmt",
                                        next: Some(
                                            MyPath {
                                                name: "Debug>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#1}::fmt",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fmt,
                                span: bytes(17992..17995),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: None,
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(17997..18001),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: f,
                                                span: bytes(18003..18004),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(18011..18014),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Formatter,
                                                                span: bytes(18016..18025),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: fmt,
                                                    span: bytes(18030..18033),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Result,
                                                    span: bytes(18035..18041),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Macro {
                                        attrs: [],
                                        mac: Macro {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: write,
                                                            span: bytes(18052..18057),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            bang_token: Not,
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: f,
                                                    span: bytes(18059..18060),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(18060..18061),
                                                },
                                                Literal {
                                                    lit: "Lcg128CmDxsm64 {{}}",
                                                    span: bytes(18062..18083),
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 1,
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "Debug",
                        complete_name: "",
                        import_name: MyPath {
                            name: "fmt",
                            next: Some(
                                MyPath {
                                    name: "Debug",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(17953..17956),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: Debug,
                                                span: bytes(17958..17963),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128CmDxsm64,
                                            span: bytes(17968..17982),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "fmt",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as fmt::Debug>::fmt",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as fmt",
                                                next: Some(
                                                    MyPath {
                                                        name: "Debug>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fmt",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#1}::fmt",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fmt,
                                        span: bytes(17992..17995),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: None,
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(17997..18001),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: f,
                                                        span: bytes(18003..18004),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(18011..18014),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Formatter,
                                                                        span: bytes(18016..18025),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(18030..18033),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Result,
                                                            span: bytes(18035..18041),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Macro {
                                                attrs: [],
                                                mac: Macro {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: write,
                                                                    span: bytes(18052..18057),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    bang_token: Not,
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: f,
                                                            span: bytes(18059..18060),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(18060..18061),
                                                        },
                                                        Literal {
                                                            lit: "Lcg128CmDxsm64 {{}}",
                                                            span: bytes(18062..18083),
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::fill_bytes": FnData {
        fn_name: "fill_bytes",
        complete_fn_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::fill_bytes",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "fill_bytes",
                    complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::fill_bytes",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_bytes",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#7}::fill_bytes",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(12785..12791),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: fill_bytes,
                                span: bytes(12800..12810),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(12816..12820),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: dest,
                                                span: bytes(12822..12826),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Slice {
                                                bracket_token: Bracket,
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u8,
                                                                    span: bytes(12834..12836),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: impls,
                                                            span: bytes(12849..12854),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fill_bytes_via_next,
                                                            span: bytes(12856..12875),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(12876..12880),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: dest,
                                                                span: bytes(12882..12886),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 7,
                struct_name: Name {
                    name: "Mcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(12516..12523),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mcg128Xsl64,
                                            span: bytes(12528..12539),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(12548..12554),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(12563..12571),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12577..12581),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(12586..12589),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(12636..12642),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(12651..12659),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12665..12669),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(12674..12677),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(12785..12791),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(12800..12810),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12816..12820),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(12822..12826),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(12834..12836),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u32": FnData {
        fn_name: "next_u32",
        complete_fn_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u32",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "next_u32",
                    complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u32",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u32",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::next_u32",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(24445..24451),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: next_u32,
                                span: bytes(24460..24468),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(24474..24478),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24483..24486),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: state,
                                            span: bytes(24501..24506),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(24509..24513),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: state,
                                                        span: bytes(24514..24519),
                                                    },
                                                ),
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: self,
                                                            span: bytes(24529..24533),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: step,
                                            span: bytes(24534..24538),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: ROTATE,
                                            span: bytes(24699..24705),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(24707..24710),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 59,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: XSHIFT,
                                            span: bytes(24741..24747),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(24749..24752),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 18,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: SPARE,
                                            span: bytes(24789..24794),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(24796..24799),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 27,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: rot,
                                            span: bytes(24834..24837),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: state,
                                                                            span: bytes(24841..24846),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ROTATE,
                                                                            span: bytes(24850..24856),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(24861..24864),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: xsh,
                                            span: bytes(24878..24881),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: state,
                                                                                            span: bytes(24887..24892),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Shr(
                                                                            Shr,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: XSHIFT,
                                                                                            span: bytes(24896..24902),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                op: BinOp::BitXor(
                                                                    Caret,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(24906..24911),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: SPARE,
                                                                            span: bytes(24916..24921),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(24926..24929),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: xsh,
                                                            span: bytes(24939..24942),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: rotate_right,
                                            span: bytes(24943..24955),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: rot,
                                                                span: bytes(24956..24959),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: ROTATE,
                            span: bytes(24699..24705),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u32,
                                            span: bytes(24707..24710),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 59,
                            },
                        },
                        semi_token: Semi,
                    },
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: XSHIFT,
                            span: bytes(24741..24747),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u32,
                                            span: bytes(24749..24752),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 18,
                            },
                        },
                        semi_token: Semi,
                    },
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: SPARE,
                            span: bytes(24789..24794),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u32,
                                            span: bytes(24796..24799),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 27,
                            },
                        },
                        semi_token: Semi,
                    },
                ],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(24414..24421),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg64Xsh32,
                                            span: bytes(24426..24436),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(24445..24451),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(24460..24468),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(24474..24478),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(24483..24486),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: ROTATE,
                                    span: bytes(24699..24705),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24707..24710),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 59,
                                    },
                                },
                                semi_token: Semi,
                            },
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: XSHIFT,
                                    span: bytes(24741..24747),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24749..24752),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 18,
                                    },
                                },
                                semi_token: Semi,
                            },
                            Item::Const {
                                attrs: [],
                                vis: Visibility::Inherited,
                                const_token: Const,
                                ident: Ident {
                                    sym: SPARE,
                                    span: bytes(24789..24794),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Colon,
                                ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(24796..24799),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                eq_token: Eq,
                                expr: Expr::Lit {
                                    attrs: [],
                                    lit: Lit::Int {
                                        token: 27,
                                    },
                                },
                                semi_token: Semi,
                            },
                        ],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(24974..24980),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(24989..24997),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(25003..25007),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(25012..25015),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg64",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg64Xsh32 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(25069..25075),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(25084..25094),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(25100..25104),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(25106..25110),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(25118..25120),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u64": FnData {
        fn_name: "next_u64",
        complete_fn_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u64",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "next_u64",
                    complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u64",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#7}::next_u64",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(12636..12642),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: next_u64,
                                span: bytes(12651..12659),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(12665..12669),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(12674..12677),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(12688..12692),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(12693..12698),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(12701..12705),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: state,
                                                        span: bytes(12706..12711),
                                                    },
                                                ),
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_mul,
                                                span: bytes(12712..12724),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: MULTIPLIER,
                                                                    span: bytes(12725..12735),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: output_xsl_rr,
                                                            span: bytes(12746..12759),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(12760..12764),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: state,
                                                        span: bytes(12765..12770),
                                                    },
                                                ),
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 7,
                struct_name: Name {
                    name: "Mcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(12516..12523),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mcg128Xsl64,
                                            span: bytes(12528..12539),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(12548..12554),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(12563..12571),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12577..12581),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(12586..12589),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(12636..12642),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(12651..12659),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12665..12669),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(12674..12677),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#7}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(12785..12791),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(12800..12810),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(12816..12820),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(12822..12826),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(12834..12836),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128::Lcg128Xsl64::from_state_incr": FnData {
        fn_name: "from_state_incr",
        complete_fn_name: "rand_pcg::pcg128::Lcg128Xsl64::from_state_incr",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from_state_incr",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64::from_state_incr",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: Some(
                                            MyPath {
                                                name: "from_state_incr",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::from_state_incr",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(7703..7709),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from_state_incr,
                                span: bytes(7718..7733),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: state,
                                                span: bytes(7734..7739),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(7741..7745),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: increment,
                                                span: bytes(7747..7756),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(7758..7762),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(7767..7771),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: pcg,
                                            span: bytes(7790..7793),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Lcg128Xsl64,
                                                                span: bytes(7796..7807),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(7810..7815),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: state,
                                                                            span: bytes(7810..7815),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: increment,
                                                                span: bytes(7817..7826),
                                                            },
                                                        ),
                                                        colon_token: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: increment,
                                                                            span: bytes(7817..7826),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(7879..7882),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(7883..7888),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(7891..7894),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: state,
                                                        span: bytes(7895..7900),
                                                    },
                                                ),
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(7901..7913),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(7914..7917),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: increment,
                                                            span: bytes(7918..7927),
                                                        },
                                                    ),
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: pcg,
                                                            span: bytes(7938..7941),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: step,
                                            span: bytes(7942..7946),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Expr(
                                    Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: pcg,
                                                        span: bytes(7958..7961),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128Xsl64,
                                            span: bytes(5700..5711),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(6278..6284),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(6297..6304),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(6310..6314),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(6316..6321),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(6323..6327),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(7487..7490),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(7491..7496),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7498..7502),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(7504..7510),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7512..7516),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7521..7525),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(7604..7613),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(7617..7623),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg128Xsl64,
                                                                    span: bytes(7643..7654),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(7656..7671),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(7672..7677),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(7679..7688),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7703..7709),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(7718..7733),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(7734..7739),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7741..7745),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(7747..7756),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7758..7762),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7767..7771),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(7790..7793),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Lcg128Xsl64,
                                                                        span: bytes(7796..7807),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(7810..7815),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(7810..7815),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(7817..7826),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(7817..7826),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(7879..7882),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(7883..7888),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(7891..7894),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(7895..7900),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(7901..7913),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(7914..7917),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(7918..7927),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(7938..7941),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(7942..7946),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(7958..7961),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7975..7981),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(7990..7994),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(8000..8004),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128::Lcg128Xsl64::advance": FnData {
        fn_name: "advance",
        complete_fn_name: "rand_pcg::pcg128::Lcg128Xsl64::advance",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "advance",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64::advance",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: Some(
                                            MyPath {
                                                name: "advance",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#0}::advance",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(6278..6284),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: advance,
                                span: bytes(6297..6304),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(6310..6314),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: delta,
                                                span: bytes(6316..6321),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(6323..6327),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: acc_mult,
                                                span: bytes(6347..6355),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(6357..6361),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 1,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: acc_plus,
                                                span: bytes(6383..6391),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(6393..6397),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: cur_mult,
                                            span: bytes(6419..6427),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: MULTIPLIER,
                                                                span: bytes(6430..6440),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: cur_plus,
                                            span: bytes(6458..6466),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Field {
                                                attrs: [],
                                                base: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: self,
                                                                    span: bytes(6469..6473),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                member: Member::Named(
                                                    Ident {
                                                        sym: increment,
                                                        span: bytes(6474..6483),
                                                    },
                                                ),
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: mdelta,
                                            span: bytes(6501..6507),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: delta,
                                                                span: bytes(6510..6515),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::While {
                                        attrs: [],
                                        label: None,
                                        while_token: While,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mdelta,
                                                                span: bytes(6532..6538),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Gt(
                                                Gt,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: mdelta,
                                                                                        span: bytes(6561..6567),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::BitAnd(
                                                                        And,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Ne(
                                                                Ne,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: acc_mult,
                                                                                            span: bytes(6596..6604),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: acc_mult,
                                                                                                span: bytes(6607..6615),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: wrapping_mul,
                                                                                span: bytes(6616..6628),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cur_mult,
                                                                                                    span: bytes(6629..6637),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: acc_plus,
                                                                                            span: bytes(6656..6664),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: acc_plus,
                                                                                                    span: bytes(6667..6675),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: wrapping_mul,
                                                                                    span: bytes(6676..6688),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: cur_mult,
                                                                                                        span: bytes(6689..6697),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: wrapping_add,
                                                                                span: bytes(6699..6711),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cur_plus,
                                                                                                    span: bytes(6712..6720),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cur_plus,
                                                                            span: bytes(6749..6757),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_mult,
                                                                                    span: bytes(6760..6768),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: wrapping_add,
                                                                    span: bytes(6769..6781),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_mul,
                                                                span: bytes(6785..6797),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_plus,
                                                                                    span: bytes(6798..6806),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cur_mult,
                                                                            span: bytes(6821..6829),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: cur_mult,
                                                                                span: bytes(6832..6840),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_mul,
                                                                span: bytes(6841..6853),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_mult,
                                                                                    span: bytes(6854..6862),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mdelta,
                                                                            span: bytes(6877..6883),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::DivAssign(
                                                            SlashEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(6908..6912),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(6913..6918),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: acc_mult,
                                                                    span: bytes(6921..6929),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: wrapping_mul,
                                                    span: bytes(6930..6942),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: self,
                                                                            span: bytes(6943..6947),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(6948..6953),
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(6955..6967),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: acc_plus,
                                                                    span: bytes(6968..6976),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 0,
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128Xsl64,
                                            span: bytes(5700..5711),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(6278..6284),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(6297..6304),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(6310..6314),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(6316..6321),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(6323..6327),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(7487..7490),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(7491..7496),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7498..7502),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: stream,
                                                        span: bytes(7504..7510),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7512..7516),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7521..7525),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: increment,
                                                    span: bytes(7604..7613),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: stream,
                                                                                    span: bytes(7617..7623),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg128Xsl64,
                                                                    span: bytes(7643..7654),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(7656..7671),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(7672..7677),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: increment,
                                                                        span: bytes(7679..7688),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_state_incr",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::from_state_incr",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_state_incr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::from_state_incr",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7703..7709),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_state_incr,
                                        span: bytes(7718..7733),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(7734..7739),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7741..7745),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: increment,
                                                        span: bytes(7747..7756),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(7758..7762),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(7767..7771),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: pcg,
                                                    span: bytes(7790..7793),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Struct {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Lcg128Xsl64,
                                                                        span: bytes(7796..7807),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        brace_token: Brace,
                                                        fields: [
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: state,
                                                                        span: bytes(7810..7815),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(7810..7815),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Comma,
                                                            FieldValue {
                                                                attrs: [],
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: increment,
                                                                        span: bytes(7817..7826),
                                                                    },
                                                                ),
                                                                colon_token: None,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: increment,
                                                                                    span: bytes(7817..7826),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                        dot2_token: None,
                                                        rest: None,
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Assign {
                                                attrs: [],
                                                left: Expr::Field {
                                                    attrs: [],
                                                    base: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: pcg,
                                                                        span: bytes(7879..7882),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    dot_token: Dot,
                                                    member: Member::Named(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(7883..7888),
                                                        },
                                                    ),
                                                },
                                                eq_token: Eq,
                                                right: Expr::MethodCall {
                                                    attrs: [],
                                                    receiver: Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: pcg,
                                                                            span: bytes(7891..7894),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(7895..7900),
                                                            },
                                                        ),
                                                    },
                                                    dot_token: Dot,
                                                    method: Ident {
                                                        sym: wrapping_add,
                                                        span: bytes(7901..7913),
                                                    },
                                                    turbofish: None,
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Field {
                                                            attrs: [],
                                                            base: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: pcg,
                                                                                span: bytes(7914..7917),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            member: Member::Named(
                                                                Ident {
                                                                    sym: increment,
                                                                    span: bytes(7918..7927),
                                                                },
                                                            ),
                                                        },
                                                    ],
                                                },
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: pcg,
                                                                    span: bytes(7938..7941),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: step,
                                                    span: bytes(7942..7946),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Expr(
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: pcg,
                                                                span: bytes(7958..7961),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "step",
                            complete_name: "rand_pcg::pcg128::Lcg128Xsl64::step",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "step",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#0}::step",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(7975..7981),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: step,
                                        span: bytes(7990..7994),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(8000..8004),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u32": FnData {
        fn_name: "next_u32",
        complete_fn_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u32",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "next_u32",
                    complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u32",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u32",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#3}::next_u32",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(9059..9065),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: next_u32,
                                span: bytes(9074..9082),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(9088..9092),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u32,
                                                    span: bytes(9097..9100),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Expr(
                                    Expr::Cast {
                                        attrs: [],
                                        expr: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(9111..9115),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: next_u64,
                                                span: bytes(9116..9124),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [],
                                        },
                                        as_token: As,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(9130..9133),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 3,
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "RngCore",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "RngCore",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: RngCore,
                                                span: bytes(9027..9034),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128Xsl64,
                                            span: bytes(9039..9050),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u32",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u32",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u32",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(9059..9065),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u32,
                                        span: bytes(9074..9082),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9088..9092),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(9097..9100),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "next_u64",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::next_u64",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::next_u64",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(9147..9153),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: next_u64,
                                        span: bytes(9162..9170),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9176..9180),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(9185..9188),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "fill_bytes",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::RngCore>::fill_bytes",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#3}::fill_bytes",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(9259..9265),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: fill_bytes,
                                        span: bytes(9274..9284),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(9290..9294),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: dest,
                                                        span: bytes(9296..9300),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Slice {
                                                        bracket_token: Bracket,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u8,
                                                                            span: bytes(9308..9310),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: false,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "rand_pcg::pcg128::Mcg128Xsl64::advance": FnData {
        fn_name: "advance",
        complete_fn_name: "rand_pcg::pcg128::Mcg128Xsl64::advance",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "advance",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64::advance",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: Some(
                                            MyPath {
                                                name: "advance",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#4}::advance",
                item: Some(
                    ImplItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: inline,
                                                span: bytes(10751..10757),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: advance,
                                span: bytes(10770..10777),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Receiver(
                                    Receiver {
                                        attrs: [],
                                        reference: Some(
                                            (
                                                And,
                                                None,
                                            ),
                                        ),
                                        mutability: Some(
                                            Mut,
                                        ),
                                        self_token: SelfValue,
                                        colon_token: None,
                                        ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Self,
                                                                span: bytes(10783..10787),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    },
                                ),
                                Comma,
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: delta,
                                                span: bytes(10789..10794),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(10796..10800),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Default,
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: acc_mult,
                                                span: bytes(10820..10828),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(10830..10834),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 1,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: acc_plus,
                                                span: bytes(10856..10864),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(10866..10870),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: cur_mult,
                                            span: bytes(10892..10900),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: MULTIPLIER,
                                                                span: bytes(10903..10913),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Type {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            ident: Ident {
                                                sym: cur_plus,
                                                span: bytes(10931..10939),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(10941..10945),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: mdelta,
                                            span: bytes(10967..10973),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: delta,
                                                                span: bytes(10976..10981),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::While {
                                        attrs: [],
                                        label: None,
                                        while_token: While,
                                        cond: Expr::Binary {
                                            attrs: [],
                                            left: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: mdelta,
                                                                span: bytes(10998..11004),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            op: BinOp::Gt(
                                                Gt,
                                            ),
                                            right: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Int {
                                                    token: 0,
                                                },
                                            },
                                        },
                                        body: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Paren {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                expr: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: mdelta,
                                                                                        span: bytes(11027..11033),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::BitAnd(
                                                                        And,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            op: BinOp::Ne(
                                                                Ne,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: acc_mult,
                                                                                            span: bytes(11062..11070),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: acc_mult,
                                                                                                span: bytes(11073..11081),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: wrapping_mul,
                                                                                span: bytes(11082..11094),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cur_mult,
                                                                                                    span: bytes(11095..11103),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: acc_plus,
                                                                                            span: bytes(11122..11130),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: acc_plus,
                                                                                                    span: bytes(11133..11141),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: wrapping_mul,
                                                                                    span: bytes(11142..11154),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: cur_mult,
                                                                                                        span: bytes(11155..11163),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: wrapping_add,
                                                                                span: bytes(11165..11177),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: cur_plus,
                                                                                                    span: bytes(11178..11186),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cur_plus,
                                                                            span: bytes(11215..11223),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_mult,
                                                                                    span: bytes(11226..11234),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: wrapping_add,
                                                                    span: bytes(11235..11247),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_mul,
                                                                span: bytes(11251..11263),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_plus,
                                                                                    span: bytes(11264..11272),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cur_mult,
                                                                            span: bytes(11287..11295),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: cur_mult,
                                                                                span: bytes(11298..11306),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_mul,
                                                                span: bytes(11307..11319),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cur_mult,
                                                                                    span: bytes(11320..11328),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: mdelta,
                                                                            span: bytes(11343..11349),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::DivAssign(
                                                            SlashEq,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                    None,
                                ),
                                Stmt::Expr(
                                    Expr::Assign {
                                        attrs: [],
                                        left: Expr::Field {
                                            attrs: [],
                                            base: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: self,
                                                                span: bytes(11374..11378),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            dot_token: Dot,
                                            member: Member::Named(
                                                Ident {
                                                    sym: state,
                                                    span: bytes(11379..11384),
                                                },
                                            ),
                                        },
                                        eq_token: Eq,
                                        right: Expr::MethodCall {
                                            attrs: [],
                                            receiver: Expr::MethodCall {
                                                attrs: [],
                                                receiver: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: acc_mult,
                                                                    span: bytes(11387..11395),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                dot_token: Dot,
                                                method: Ident {
                                                    sym: wrapping_mul,
                                                    span: bytes(11396..11408),
                                                },
                                                turbofish: None,
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Field {
                                                        attrs: [],
                                                        base: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: self,
                                                                            span: bytes(11409..11413),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(11414..11419),
                                                            },
                                                        ),
                                                    },
                                                ],
                                            },
                                            dot_token: Dot,
                                            method: Ident {
                                                sym: wrapping_add,
                                                span: bytes(11421..11433),
                                            },
                                            turbofish: None,
                                            paren_token: Paren,
                                            args: [
                                                Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: acc_plus,
                                                                    span: bytes(11434..11442),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: PubT,
                is_constructor: false,
            },
            ImplItem {
                impl_num: 4,
                struct_name: Name {
                    name: "Mcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: None,
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: None,
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mcg128Xsl64,
                                            span: bytes(10173..10184),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "advance",
                            complete_name: "rand_pcg::pcg128::Mcg128Xsl64::advance",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "advance",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#4}::advance",
                        item: Some(
                            ImplItemFn {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: inline,
                                                        span: bytes(10751..10757),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: advance,
                                        span: bytes(10770..10777),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Receiver(
                                            Receiver {
                                                attrs: [],
                                                reference: Some(
                                                    (
                                                        And,
                                                        None,
                                                    ),
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                self_token: SelfValue,
                                                colon_token: None,
                                                ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Self,
                                                                        span: bytes(10783..10787),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        ),
                                        Comma,
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: delta,
                                                        span: bytes(10789..10794),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(10796..10800),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Default,
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: false,
                    },
                    ImplFnItem {
                        fn_name: Name {
                            name: "new",
                            complete_name: "rand_pcg::pcg128::Mcg128Xsl64::new",
                            import_name: MyPath {
                                name: "rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64",
                                                next: Some(
                                                    MyPath {
                                                        name: "new",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#4}::new",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: new,
                                        span: bytes(11641..11644),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: state,
                                                        span: bytes(11645..11650),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u128,
                                                                    span: bytes(11652..11656),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(11661..11665),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Expr(
                                            Expr::Struct {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Mcg128Xsl64,
                                                                span: bytes(11755..11766),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [
                                                    FieldValue {
                                                        attrs: [],
                                                        member: Member::Named(
                                                            Ident {
                                                                sym: state,
                                                                span: bytes(11769..11774),
                                                            },
                                                        ),
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        expr: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: state,
                                                                                span: bytes(11776..11781),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::BitOr(
                                                                Or,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 1,
                                                                },
                                                            },
                                                        },
                                                    },
                                                ],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                        is_constructor: true,
                    },
                ],
                relative_types: [],
            },
        ),
    },
    "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::SeedableRng>::from_seed": FnData {
        fn_name: "from_seed",
        complete_fn_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::SeedableRng>::from_seed",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from_seed",
                    complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::SeedableRng>::from_seed",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_seed",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#2}::from_seed",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from_seed,
                                span: bytes(18309..18318),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: seed,
                                                span: bytes(18319..18323),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(18325..18329),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Seed,
                                                            span: bytes(18331..18335),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(18340..18344),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: seed_u64,
                                            span: bytes(18363..18371),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Repeat {
                                                attrs: [],
                                                bracket_token: Bracket,
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0u64,
                                                    },
                                                },
                                                semi_token: Semi,
                                                len: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 4,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: le,
                                                            span: bytes(18393..18395),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: read_u64_into,
                                                            span: bytes(18397..18410),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: None,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: seed,
                                                                    span: bytes(18412..18416),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: seed_u64,
                                                                    span: bytes(18423..18431),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: state,
                                            span: bytes(18446..18451),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(18454..18458),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: from,
                                                                        span: bytes(18460..18464),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Index {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: seed_u64,
                                                                                span: bytes(18465..18473),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            bracket_token: Bracket,
                                                            index: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(18481..18485),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(18487..18491),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(18492..18500),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::Shl(
                                                            Shl,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 64,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: incr,
                                            span: bytes(18525..18529),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(18532..18536),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: from,
                                                                        span: bytes(18538..18542),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Index {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: seed_u64,
                                                                                span: bytes(18543..18551),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            bracket_token: Bracket,
                                                            index: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(18559..18563),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(18565..18569),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(18570..18578),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 3,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::Shl(
                                                            Shl,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 64,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(18664..18668),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: from_state_incr,
                                                            span: bytes(18670..18685),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: state,
                                                                span: bytes(18686..18691),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: incr,
                                                                    span: bytes(18693..18697),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 1,
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 2,
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "SeedableRng",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "SeedableRng",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: SeedableRng,
                                                span: bytes(18099..18110),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128CmDxsm64,
                                            span: bytes(18115..18129),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [
                    ImplTypeItem {
                        item: Some(
                            ImplItemType {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                type_token: Type,
                                ident: Ident {
                                    sym: Seed,
                                    span: bytes(18141..18145),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                eq_token: Eq,
                                ty: Type::Array {
                                    bracket_token: Bracket,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u8,
                                                        span: bytes(18149..18151),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    semi_token: Semi,
                                    len: Expr::Lit {
                                        attrs: [],
                                        lit: Lit::Int {
                                            token: 32,
                                        },
                                    },
                                },
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                ],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_seed",
                            complete_name: "<rand_pcg::pcg128cm::Lcg128CmDxsm64 as rand_core::SeedableRng>::from_seed",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128cm",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128CmDxsm64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "SeedableRng>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "from_seed",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::from_seed",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_seed,
                                        span: bytes(18309..18318),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: seed,
                                                        span: bytes(18319..18323),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(18325..18329),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Seed,
                                                                    span: bytes(18331..18335),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(18340..18344),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: seed_u64,
                                                    span: bytes(18363..18371),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Repeat {
                                                        attrs: [],
                                                        bracket_token: Bracket,
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0u64,
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                        len: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 4,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: le,
                                                                    span: bytes(18393..18395),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: read_u64_into,
                                                                    span: bytes(18397..18410),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: seed,
                                                                            span: bytes(18412..18416),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: seed_u64,
                                                                            span: bytes(18423..18431),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: state,
                                                    span: bytes(18446..18451),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(18454..18458),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(18460..18464),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(18465..18473),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u128,
                                                                                        span: bytes(18481..18485),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: from,
                                                                                        span: bytes(18487..18491),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Index {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: seed_u64,
                                                                                                span: bytes(18492..18500),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            bracket_token: Bracket,
                                                                            index: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 64,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: incr,
                                                    span: bytes(18525..18529),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(18532..18536),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(18538..18542),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(18543..18551),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 2,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u128,
                                                                                        span: bytes(18559..18563),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: from,
                                                                                        span: bytes(18565..18569),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Index {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: seed_u64,
                                                                                                span: bytes(18570..18578),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            bracket_token: Bracket,
                                                                            index: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 3,
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 64,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(18664..18668),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(18670..18685),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(18686..18691),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: incr,
                                                                            span: bytes(18693..18697),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [
                    "u8",
                ],
            },
        ),
    },
    "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::SeedableRng>::from_seed": FnData {
        fn_name: "from_seed",
        complete_fn_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::SeedableRng>::from_seed",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from_seed",
                    complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::SeedableRng>::from_seed",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_seed",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#2}::from_seed",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from_seed,
                                span: bytes(8612..8621),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: seed,
                                                span: bytes(8622..8626),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(8628..8632),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Seed,
                                                            span: bytes(8634..8638),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(8643..8647),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: seed_u64,
                                            span: bytes(8666..8674),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Repeat {
                                                attrs: [],
                                                bracket_token: Bracket,
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0u64,
                                                    },
                                                },
                                                semi_token: Semi,
                                                len: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 4,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: le,
                                                            span: bytes(8696..8698),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: read_u64_into,
                                                            span: bytes(8700..8713),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: None,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: seed,
                                                                    span: bytes(8715..8719),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: seed_u64,
                                                                    span: bytes(8726..8734),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: state,
                                            span: bytes(8749..8754),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(8757..8761),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: from,
                                                                        span: bytes(8763..8767),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Index {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: seed_u64,
                                                                                span: bytes(8768..8776),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            bracket_token: Bracket,
                                                            index: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(8784..8788),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(8790..8794),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(8795..8803),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::Shl(
                                                            Shl,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 64,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: incr,
                                            span: bytes(8828..8832),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(8835..8839),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: from,
                                                                        span: bytes(8841..8845),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Index {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: seed_u64,
                                                                                span: bytes(8846..8854),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            bracket_token: Bracket,
                                                            index: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 2,
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(8862..8866),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(8868..8872),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(8873..8881),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 3,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::Shl(
                                                            Shl,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 64,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Lcg128Xsl64,
                                                            span: bytes(8967..8978),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: from_state_incr,
                                                            span: bytes(8980..8995),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: state,
                                                                span: bytes(8996..9001),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Expr::Binary {
                                                attrs: [],
                                                left: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: incr,
                                                                    span: bytes(9003..9007),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 1,
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 2,
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "SeedableRng",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "SeedableRng",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: SeedableRng,
                                                span: bytes(8405..8416),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Lcg128Xsl64,
                                            span: bytes(8421..8432),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [
                    ImplTypeItem {
                        item: Some(
                            ImplItemType {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                type_token: Type,
                                ident: Ident {
                                    sym: Seed,
                                    span: bytes(8444..8448),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                eq_token: Eq,
                                ty: Type::Array {
                                    bracket_token: Bracket,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u8,
                                                        span: bytes(8452..8454),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    semi_token: Semi,
                                    len: Expr::Lit {
                                        attrs: [],
                                        lit: Lit::Int {
                                            token: 32,
                                        },
                                    },
                                },
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                ],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_seed",
                            complete_name: "<rand_pcg::pcg128::Lcg128Xsl64 as rand_core::SeedableRng>::from_seed",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Lcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "SeedableRng>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "from_seed",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#2}::from_seed",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_seed,
                                        span: bytes(8612..8621),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: seed,
                                                        span: bytes(8622..8626),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(8628..8632),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Seed,
                                                                    span: bytes(8634..8638),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(8643..8647),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: seed_u64,
                                                    span: bytes(8666..8674),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Repeat {
                                                        attrs: [],
                                                        bracket_token: Bracket,
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0u64,
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                        len: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 4,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: le,
                                                                    span: bytes(8696..8698),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: read_u64_into,
                                                                    span: bytes(8700..8713),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: seed,
                                                                            span: bytes(8715..8719),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: seed_u64,
                                                                            span: bytes(8726..8734),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: state,
                                                    span: bytes(8749..8754),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(8757..8761),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(8763..8767),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(8768..8776),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u128,
                                                                                        span: bytes(8784..8788),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: from,
                                                                                        span: bytes(8790..8794),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Index {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: seed_u64,
                                                                                                span: bytes(8795..8803),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            bracket_token: Bracket,
                                                                            index: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 64,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: incr,
                                                    span: bytes(8828..8832),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(8835..8839),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(8841..8845),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(8846..8854),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 2,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u128,
                                                                                        span: bytes(8862..8866),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: from,
                                                                                        span: bytes(8868..8872),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Index {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: seed_u64,
                                                                                                span: bytes(8873..8881),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            bracket_token: Bracket,
                                                                            index: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 3,
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 64,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lcg128Xsl64,
                                                                    span: bytes(8967..8978),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: from_state_incr,
                                                                    span: bytes(8980..8995),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(8996..9001),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: incr,
                                                                            span: bytes(9003..9007),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 1,
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [
                    "u8",
                ],
            },
        ),
    },
    "rand_pcg::pcg128::output_xsl_rr": FnData {
        fn_name: "output_xsl_rr",
        complete_fn_name: "rand_pcg::pcg128::output_xsl_rr",
        fn_type: Fn(
            FnItem {
                fn_name: Name {
                    name: "output_xsl_rr",
                    complete_name: "rand_pcg::pcg128::output_xsl_rr",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "output_xsl_rr",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "output_xsl_rr",
                item: Some(
                    ItemFn {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: inline,
                                                    span: bytes(12899..12905),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: always,
                                            span: bytes(12906..12912),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Inherited,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: output_xsl_rr,
                                span: bytes(12918..12931),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: state,
                                                span: bytes(12932..12937),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(12939..12943),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: u64,
                                                    span: bytes(12948..12951),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: XSHIFT,
                                            span: bytes(13089..13095),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(13097..13100),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 64,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Item(
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: ROTATE,
                                            span: bytes(13140..13146),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(13148..13151),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 122,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: rot,
                                            span: bytes(13179..13182),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Cast {
                                                attrs: [],
                                                expr: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: state,
                                                                            span: bytes(13186..13191),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        op: BinOp::Shr(
                                                            Shr,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ROTATE,
                                                                            span: bytes(13195..13201),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                as_token: As,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(13206..13209),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: xsl,
                                            span: bytes(13219..13222),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Cast {
                                                        attrs: [],
                                                        expr: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(13227..13232),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shr(
                                                                    Shr,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: XSHIFT,
                                                                                    span: bytes(13236..13242),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        as_token: As,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(13247..13250),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                op: BinOp::BitXor(
                                                    Caret,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Cast {
                                                        attrs: [],
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: state,
                                                                            span: bytes(13255..13260),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        as_token: As,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(13264..13267),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::MethodCall {
                                        attrs: [],
                                        receiver: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: xsl,
                                                            span: bytes(13274..13277),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        dot_token: Dot,
                                        method: Ident {
                                            sym: rotate_right,
                                            span: bytes(13278..13290),
                                        },
                                        turbofish: None,
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: rot,
                                                                span: bytes(13291..13294),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: XSHIFT,
                            span: bytes(13089..13095),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u32,
                                            span: bytes(13097..13100),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 64,
                            },
                        },
                        semi_token: Semi,
                    },
                    Item::Const {
                        attrs: [],
                        vis: Visibility::Inherited,
                        const_token: Const,
                        ident: Ident {
                            sym: ROTATE,
                            span: bytes(13140..13146),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        colon_token: Colon,
                        ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: u32,
                                            span: bytes(13148..13151),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        eq_token: Eq,
                        expr: Expr::Lit {
                            attrs: [],
                            lit: Lit::Int {
                                token: 122,
                            },
                        },
                        semi_token: Semi,
                    },
                ],
                visibility: Pri,
            },
        ),
    },
    "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::SeedableRng>::from_seed": FnData {
        fn_name: "from_seed",
        complete_fn_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::SeedableRng>::from_seed",
        fn_type: ImplFn(
            ImplFnItem {
                fn_name: Name {
                    name: "from_seed",
                    complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::SeedableRng>::from_seed",
                    import_name: MyPath {
                        name: "<rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64 as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_seed",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
                complete_name_in_file: "{impl#6}::from_seed",
                item: Some(
                    ImplItemFn {
                        attrs: [],
                        vis: Visibility::Inherited,
                        defaultness: None,
                        sig: Signature {
                            constness: None,
                            asyncness: None,
                            unsafety: None,
                            abi: None,
                            fn_token: Fn,
                            ident: Ident {
                                sym: from_seed,
                                span: bytes(12216..12225),
                            },
                            generics: Generics {
                                lt_token: None,
                                params: [],
                                gt_token: None,
                                where_clause: None,
                            },
                            paren_token: Paren,
                            inputs: [
                                FnArg::Typed(
                                    PatType {
                                        attrs: [],
                                        pat: Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: seed,
                                                span: bytes(12226..12230),
                                            },
                                            subpat: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(12232..12236),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Seed,
                                                            span: bytes(12238..12242),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                ),
                            ],
                            variadic: None,
                            output: ReturnType::Type(
                                RArrow,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Self,
                                                    span: bytes(12247..12251),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: seed_u64,
                                            span: bytes(12320..12328),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Repeat {
                                                attrs: [],
                                                bracket_token: Bracket,
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 0u64,
                                                    },
                                                },
                                                semi_token: Semi,
                                                len: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 2,
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: le,
                                                            span: bytes(12350..12352),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: read_u64_into,
                                                            span: bytes(12354..12367),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: None,
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: seed,
                                                                    span: bytes(12369..12373),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                            Comma,
                                            Expr::Reference {
                                                attrs: [],
                                                and_token: And,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                expr: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: seed_u64,
                                                                    span: bytes(12380..12388),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                    Some(
                                        Semi,
                                    ),
                                ),
                                Stmt::Local {
                                    attrs: [],
                                    let_token: Let,
                                    pat: Pat::Ident {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: None,
                                        ident: Ident {
                                            sym: state,
                                            span: bytes(12403..12408),
                                        },
                                        subpat: None,
                                    },
                                    init: Some(
                                        LocalInit {
                                            eq_token: Eq,
                                            expr: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u128,
                                                                        span: bytes(12411..12415),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: from,
                                                                        span: bytes(12417..12421),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Index {
                                                            attrs: [],
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: seed_u64,
                                                                                span: bytes(12422..12430),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            bracket_token: Bracket,
                                                            index: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 0,
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                op: BinOp::BitOr(
                                                    Or,
                                                ),
                                                right: Expr::Paren {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(12438..12442),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(12444..12448),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(12449..12457),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::Shl(
                                                            Shl,
                                                        ),
                                                        right: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 64,
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            diverge: None,
                                        },
                                    ),
                                    semi_token: Semi,
                                },
                                Stmt::Expr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Mcg128Xsl64,
                                                            span: bytes(12478..12489),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: new,
                                                            span: bytes(12491..12494),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: state,
                                                                span: bytes(12495..12500),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ),
                inside_items: [],
                visibility: Pri,
                is_constructor: true,
            },
            ImplItem {
                impl_num: 6,
                struct_name: Name {
                    name: "Mcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                trait_name: Some(
                    Name {
                        name: "SeedableRng",
                        complete_name: "",
                        import_name: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "SeedableRng",
                                    next: None,
                                },
                            ),
                        },
                    },
                ),
                item: Some(
                    ItemImpl {
                        attrs: [],
                        defaultness: None,
                        unsafety: None,
                        impl_token: Impl,
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        trait_: Some(
                            (
                                None,
                                Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: SeedableRng,
                                                span: bytes(12152..12163),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                                For,
                            ),
                        ),
                        self_ty: Type::Path {
                            qself: None,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident {
                                            sym: Mcg128Xsl64,
                                            span: bytes(12168..12179),
                                        },
                                        arguments: PathArguments::None,
                                    },
                                ],
                            },
                        },
                        brace_token: Brace,
                        items: [],
                    },
                ),
                types: [
                    ImplTypeItem {
                        item: Some(
                            ImplItemType {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                type_token: Type,
                                ident: Ident {
                                    sym: Seed,
                                    span: bytes(12191..12195),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                eq_token: Eq,
                                ty: Type::Array {
                                    bracket_token: Bracket,
                                    elem: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u8,
                                                        span: bytes(12199..12201),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    semi_token: Semi,
                                    len: Expr::Lit {
                                        attrs: [],
                                        lit: Lit::Int {
                                            token: 16,
                                        },
                                    },
                                },
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                ],
                consts: [],
                functions: [
                    ImplFnItem {
                        fn_name: Name {
                            name: "from_seed",
                            complete_name: "<rand_pcg::pcg128::Mcg128Xsl64 as rand_core::SeedableRng>::from_seed",
                            import_name: MyPath {
                                name: "<rand_pcg",
                                next: Some(
                                    MyPath {
                                        name: "pcg128",
                                        next: Some(
                                            MyPath {
                                                name: "Mcg128Xsl64 as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "SeedableRng>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "from_seed",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        },
                        complete_name_in_file: "{impl#6}::from_seed",
                        item: Some(
                            ImplItemFn {
                                attrs: [],
                                vis: Visibility::Inherited,
                                defaultness: None,
                                sig: Signature {
                                    constness: None,
                                    asyncness: None,
                                    unsafety: None,
                                    abi: None,
                                    fn_token: Fn,
                                    ident: Ident {
                                        sym: from_seed,
                                        span: bytes(12216..12225),
                                    },
                                    generics: Generics {
                                        lt_token: None,
                                        params: [],
                                        gt_token: None,
                                        where_clause: None,
                                    },
                                    paren_token: Paren,
                                    inputs: [
                                        FnArg::Typed(
                                            PatType {
                                                attrs: [],
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: seed,
                                                        span: bytes(12226..12230),
                                                    },
                                                    subpat: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(12232..12236),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Seed,
                                                                    span: bytes(12238..12242),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                    variadic: None,
                                    output: ReturnType::Type(
                                        RArrow,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Self,
                                                            span: bytes(12247..12251),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                },
                                block: Block {
                                    brace_token: Brace,
                                    stmts: [
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                ident: Ident {
                                                    sym: seed_u64,
                                                    span: bytes(12320..12328),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Repeat {
                                                        attrs: [],
                                                        bracket_token: Bracket,
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 0u64,
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                        len: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 2,
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: le,
                                                                    span: bytes(12350..12352),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: read_u64_into,
                                                                    span: bytes(12354..12367),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: None,
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: seed,
                                                                            span: bytes(12369..12373),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    Comma,
                                                    Expr::Reference {
                                                        attrs: [],
                                                        and_token: And,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        expr: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: seed_u64,
                                                                            span: bytes(12380..12388),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ],
                                            },
                                            Some(
                                                Semi,
                                            ),
                                        ),
                                        Stmt::Local {
                                            attrs: [],
                                            let_token: Let,
                                            pat: Pat::Ident {
                                                attrs: [],
                                                by_ref: None,
                                                mutability: None,
                                                ident: Ident {
                                                    sym: state,
                                                    span: bytes(12403..12408),
                                                },
                                                subpat: None,
                                            },
                                            init: Some(
                                                LocalInit {
                                                    eq_token: Eq,
                                                    expr: Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u128,
                                                                                span: bytes(12411..12415),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from,
                                                                                span: bytes(12417..12421),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Index {
                                                                    attrs: [],
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed_u64,
                                                                                        span: bytes(12422..12430),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    bracket_token: Bracket,
                                                                    index: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u128,
                                                                                        span: bytes(12438..12442),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: from,
                                                                                        span: bytes(12444..12448),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Index {
                                                                            attrs: [],
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: seed_u64,
                                                                                                span: bytes(12449..12457),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            bracket_token: Bracket,
                                                                            index: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 1,
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 64,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                    diverge: None,
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                        Stmt::Expr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Mcg128Xsl64,
                                                                    span: bytes(12478..12489),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: new,
                                                                    span: bytes(12491..12494),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: state,
                                                                        span: bytes(12495..12500),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                            None,
                                        ),
                                    ],
                                },
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                        is_constructor: true,
                    },
                ],
                relative_types: [
                    "u8",
                ],
            },
        ),
    },
}
structs:
{
    "rand_pcg::pcg128::Mcg128Xsl64": StructData {
        struct_name: "Mcg128Xsl64",
        complete_struct_name: "rand_pcg::pcg128::Mcg128Xsl64",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "Mcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Mcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Mcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(9926..9932),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Clone,
                                            span: bytes(9933..9938),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(9938..9939),
                                        },
                                        Ident {
                                            sym: PartialEq,
                                            span: bytes(9940..9949),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(9949..9950),
                                        },
                                        Ident {
                                            sym: Eq,
                                            span: bytes(9951..9953),
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(9958..9966),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(9967..9974),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(9975..9976),
                                        },
                                        Literal {
                                            lit: "serde",
                                            span: bytes(9977..9984),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(9984..9985),
                                        },
                                        Ident {
                                            sym: derive,
                                            span: bytes(9986..9992),
                                        },
                                        Group {
                                            delimiter: Parenthesis,
                                            stream: TokenStream [
                                                Ident {
                                                    sym: Serialize,
                                                    span: bytes(9993..10002),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(10002..10003),
                                                },
                                                Ident {
                                                    sym: Deserialize,
                                                    span: bytes(10004..10015),
                                                },
                                            ],
                                            span: bytes(9992..10016),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: Mcg128Xsl64,
                            span: bytes(10030..10041),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: state,
                                            span: bytes(10048..10053),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u128,
                                                        span: bytes(10055..10059),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "u128",
                ],
            },
        ),
    },
    "rand_pcg::pcg128cm::Lcg128CmDxsm64": StructData {
        struct_name: "Lcg128CmDxsm64",
        complete_struct_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "Lcg128CmDxsm64",
                    complete_name: "rand_pcg::pcg128cm::Lcg128CmDxsm64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128cm",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128CmDxsm64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(14944..14950),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Clone,
                                            span: bytes(14951..14956),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(14956..14957),
                                        },
                                        Ident {
                                            sym: PartialEq,
                                            span: bytes(14958..14967),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(14967..14968),
                                        },
                                        Ident {
                                            sym: Eq,
                                            span: bytes(14969..14971),
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(14976..14984),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(14985..14992),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(14993..14994),
                                        },
                                        Literal {
                                            lit: "serde",
                                            span: bytes(14995..15002),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(15002..15003),
                                        },
                                        Ident {
                                            sym: derive,
                                            span: bytes(15004..15010),
                                        },
                                        Group {
                                            delimiter: Parenthesis,
                                            stream: TokenStream [
                                                Ident {
                                                    sym: Serialize,
                                                    span: bytes(15011..15020),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(15020..15021),
                                                },
                                                Ident {
                                                    sym: Deserialize,
                                                    span: bytes(15022..15033),
                                                },
                                            ],
                                            span: bytes(15010..15034),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: Lcg128CmDxsm64,
                            span: bytes(15048..15062),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: state,
                                            span: bytes(15069..15074),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u128,
                                                        span: bytes(15076..15080),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: increment,
                                            span: bytes(15086..15095),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u128,
                                                        span: bytes(15097..15101),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "u128",
                ],
            },
        ),
    },
    "rand_pcg::pcg64::Lcg64Xsh32": StructData {
        struct_name: "Lcg64Xsh32",
        complete_struct_name: "rand_pcg::pcg64::Lcg64Xsh32",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "Lcg64Xsh32",
                    complete_name: "rand_pcg::pcg64::Lcg64Xsh32",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg64",
                                next: Some(
                                    MyPath {
                                        name: "Lcg64Xsh32",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(20963..20969),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Clone,
                                            span: bytes(20970..20975),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(20975..20976),
                                        },
                                        Ident {
                                            sym: PartialEq,
                                            span: bytes(20977..20986),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(20986..20987),
                                        },
                                        Ident {
                                            sym: Eq,
                                            span: bytes(20988..20990),
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(20995..21003),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(21004..21011),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(21012..21013),
                                        },
                                        Literal {
                                            lit: "serde",
                                            span: bytes(21014..21021),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(21021..21022),
                                        },
                                        Ident {
                                            sym: derive,
                                            span: bytes(21023..21029),
                                        },
                                        Group {
                                            delimiter: Parenthesis,
                                            stream: TokenStream [
                                                Ident {
                                                    sym: Serialize,
                                                    span: bytes(21030..21039),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(21039..21040),
                                                },
                                                Ident {
                                                    sym: Deserialize,
                                                    span: bytes(21041..21052),
                                                },
                                            ],
                                            span: bytes(21029..21053),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: Lcg64Xsh32,
                            span: bytes(21067..21077),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: state,
                                            span: bytes(21084..21089),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u64,
                                                        span: bytes(21091..21094),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: increment,
                                            span: bytes(21100..21109),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u64,
                                                        span: bytes(21111..21114),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "u64",
                ],
            },
        ),
    },
    "rand_pcg::pcg128::Lcg128Xsl64": StructData {
        struct_name: "Lcg128Xsl64",
        complete_struct_name: "rand_pcg::pcg128::Lcg128Xsl64",
        struct_type: Struct(
            StructItem {
                struct_name: Name {
                    name: "Lcg128Xsl64",
                    complete_name: "rand_pcg::pcg128::Lcg128Xsl64",
                    import_name: MyPath {
                        name: "rand_pcg",
                        next: Some(
                            MyPath {
                                name: "pcg128",
                                next: Some(
                                    MyPath {
                                        name: "Lcg128Xsl64",
                                        next: None,
                                    },
                                ),
                            },
                        ),
                    },
                },
                item: Some(
                    ItemStruct {
                        attrs: [
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: derive,
                                                    span: bytes(5448..5454),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: Clone,
                                            span: bytes(5455..5460),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(5460..5461),
                                        },
                                        Ident {
                                            sym: PartialEq,
                                            span: bytes(5462..5471),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(5471..5472),
                                        },
                                        Ident {
                                            sym: Eq,
                                            span: bytes(5473..5475),
                                        },
                                    ],
                                },
                            },
                            Attribute {
                                pound_token: Pound,
                                style: AttrStyle::Outer,
                                bracket_token: Bracket,
                                meta: Meta::List {
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cfg_attr,
                                                    span: bytes(5480..5488),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                    delimiter: MacroDelimiter::Paren(
                                        Paren,
                                    ),
                                    tokens: TokenStream [
                                        Ident {
                                            sym: feature,
                                            span: bytes(5489..5496),
                                        },
                                        Punct {
                                            char: '=',
                                            spacing: Alone,
                                            span: bytes(5497..5498),
                                        },
                                        Literal {
                                            lit: "serde",
                                            span: bytes(5499..5506),
                                        },
                                        Punct {
                                            char: ',',
                                            spacing: Alone,
                                            span: bytes(5506..5507),
                                        },
                                        Ident {
                                            sym: derive,
                                            span: bytes(5508..5514),
                                        },
                                        Group {
                                            delimiter: Parenthesis,
                                            stream: TokenStream [
                                                Ident {
                                                    sym: Serialize,
                                                    span: bytes(5515..5524),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(5524..5525),
                                                },
                                                Ident {
                                                    sym: Deserialize,
                                                    span: bytes(5526..5537),
                                                },
                                            ],
                                            span: bytes(5514..5538),
                                        },
                                    ],
                                },
                            },
                        ],
                        vis: Visibility::Public(
                            Pub,
                        ),
                        struct_token: Struct,
                        ident: Ident {
                            sym: Lcg128Xsl64,
                            span: bytes(5552..5563),
                        },
                        generics: Generics {
                            lt_token: None,
                            params: [],
                            gt_token: None,
                            where_clause: None,
                        },
                        fields: Fields::Named {
                            brace_token: Brace,
                            named: [
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: state,
                                            span: bytes(5570..5575),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u128,
                                                        span: bytes(5577..5581),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                                Field {
                                    attrs: [],
                                    vis: Visibility::Inherited,
                                    mutability: FieldMutability::None,
                                    ident: Some(
                                        Ident {
                                            sym: increment,
                                            span: bytes(5587..5596),
                                        },
                                    ),
                                    colon_token: Some(
                                        Colon,
                                    ),
                                    ty: Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u128,
                                                        span: bytes(5598..5602),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                },
                                Comma,
                            ],
                        },
                        semi_token: None,
                    },
                ),
                visibility: PubT,
                relative_types: [
                    "u128",
                ],
            },
        ),
    },
}