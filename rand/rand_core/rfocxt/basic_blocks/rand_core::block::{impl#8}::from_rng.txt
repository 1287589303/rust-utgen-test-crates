[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_core/src/block.rs:415:19: 415:35 (#0),
                    scope: scope[0],
                },
                kind: _2 = <R as SeedableRng>::from_rng::<impl RngCore>(move _3) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_core/src/block.rs:415:9: 415:36 (#0),
                    scope: scope[0],
                },
                kind: _0 = block::BlockRng64::<R>::new(move _2) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_core/src/block.rs:416:6: 416:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_core/src/block.rs:415:35: 415:36 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_core/src/block.rs:414:5: 416:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: block::BlockRng64<R/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_core/src/block.rs:414:44: 414:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_core/src/block.rs:414:22: 414:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_core/src/block.rs:414:17: 414:20 (#0),
                            ),
                        ),
                        pat_span: rand_core/src/block.rs:414:17: 414:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut impl RngCore/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_core/src/block.rs:414:17: 414:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_core/src/block.rs:415:9: 415:36 (#0),
                },
            ),
        ),
        ty: R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_core/src/block.rs:415:19: 415:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_core/src/block.rs:415:9: 415:36 (#0),
                },
            ),
        ),
        ty: &'{erased} mut impl RngCore/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_core/src/block.rs:415:31: 415:34 (#0),
            scope: scope[0],
        },
    },
]