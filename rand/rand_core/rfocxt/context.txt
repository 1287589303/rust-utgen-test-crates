CrateContext {
    crate_name: "rand_core",
    crate_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core",
    entry_file_paths: [
        "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src/lib.rs",
    ],
    main_mod_contexts: [
        RefCell {
            value: ModContext {
             mod_info: Mod(
                ModModInfo {
                    mod_name: "rand_core",
                    mod_tree: MyPath {
                        name: "rand_core",
                        next: None,
                    },
                    file_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src/lib.rs",
                    parent_directory_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src",
                    mod_file_directory_path: None,
                    visibility: PubT,
                },
            ),
             syntax_context: SyntaxContext {
                consts: [],
                trait_aliases: [],
                uses: [
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: core,
                                            span: bytes(1516..1520),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Group(
                                            UseGroup {
                                                brace_token: Brace,
                                                items: [
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(1523..1526),
                                                            },
                                                        },
                                                    ),
                                                    Comma,
                                                    UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: ops,
                                                                span: bytes(1528..1531),
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: DerefMut,
                                                                        span: bytes(1533..1541),
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: Pri,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(1625..1628),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(1629..1636),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(1637..1638),
                                                },
                                                Literal {
                                                    lit: "os_rng",
                                                    span: bytes(1639..1647),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: os,
                                            span: bytes(1658..1660),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Group(
                                            UseGroup {
                                                brace_token: Brace,
                                                items: [
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: OsError,
                                                                span: bytes(1663..1670),
                                                            },
                                                        },
                                                    ),
                                                    Comma,
                                                    UseTree::Name(
                                                        UseName {
                                                            ident: Ident {
                                                                sym: OsRng,
                                                                span: bytes(1672..1677),
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: PubT,
                    },
                ],
                mods: [
                    ModItem {
                        mod_name: "block",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: block,
                                    span: bytes(1553..1558),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    ModItem {
                        mod_name: "impls",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: impls,
                                    span: bytes(1568..1573),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    ModItem {
                        mod_name: "le",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: le,
                                    span: bytes(1583..1585),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    ModItem {
                        mod_name: "os",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(1589..1592),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(1593..1600),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(1601..1602),
                                                },
                                                Literal {
                                                    lit: "os_rng",
                                                    span: bytes(1603..1611),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: os,
                                    span: bytes(1618..1620),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    ModItem {
                        mod_name: "test",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(23531..23534),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: test,
                                                    span: bytes(23535..23539),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: test,
                                    span: bytes(23546..23550),
                                },
                                content: Some(
                                    (
                                        Brace,
                                        [],
                                    ),
                                ),
                                semi: None,
                            },
                        ),
                        inside_items: [
                            Item::Use {
                                attrs: [],
                                vis: Visibility::Inherited,
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: super,
                                            span: bytes(23561..23566),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Glob(
                                            UseGlob {
                                                star_token: Star,
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                            Item::Struct {
                                attrs: [],
                                vis: Visibility::Inherited,
                                struct_token: Struct,
                                ident: Ident {
                                    sym: SomeRng,
                                    span: bytes(25033..25040),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                fields: Fields::Unit,
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                            Item::Impl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: RngCore,
                                                        span: bytes(25052..25059),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: SomeRng,
                                                    span: bytes(25064..25071),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [
                                    ImplItem::Fn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u32,
                                                span: bytes(25085..25093),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(25099..25103),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(25108..25111),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: unimplemented,
                                                                            span: bytes(25126..25139),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    ImplItem::Fn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u64,
                                                span: bytes(25164..25172),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(25178..25182),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(25187..25190),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: unimplemented,
                                                                            span: bytes(25205..25218),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                    ImplItem::Fn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fill_bytes,
                                                span: bytes(25243..25253),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(25259..25263),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Wild {
                                                            attrs: [],
                                                            underscore_token: Underscore,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(25274..25276),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: unimplemented,
                                                                            span: bytes(25293..25306),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ],
                            },
                            Item::Impl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: CryptoRng,
                                                        span: bytes(25336..25345),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: SomeRng,
                                                    span: bytes(25350..25357),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ],
                        visibility: Pri,
                    },
                ],
                statics: [],
                types: [],
                structs: [
                    StructItem {
                        struct_name: Name {
                            name: "UnwrapErr",
                            complete_name: "rand_core::UnwrapErr",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "UnwrapErr",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: derive,
                                                            span: bytes(11474..11480),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: Debug,
                                                    span: bytes(11481..11486),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(11486..11487),
                                                },
                                                Ident {
                                                    sym: Default,
                                                    span: bytes(11488..11495),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(11495..11496),
                                                },
                                                Ident {
                                                    sym: Clone,
                                                    span: bytes(11497..11502),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(11502..11503),
                                                },
                                                Ident {
                                                    sym: Copy,
                                                    span: bytes(11504..11508),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(11508..11509),
                                                },
                                                Ident {
                                                    sym: Eq,
                                                    span: bytes(11510..11512),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(11512..11513),
                                                },
                                                Ident {
                                                    sym: PartialEq,
                                                    span: bytes(11514..11523),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(11523..11524),
                                                },
                                                Ident {
                                                    sym: Hash,
                                                    span: bytes(11525..11529),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: UnwrapErr,
                                    span: bytes(11543..11552),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(11553..11554),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryRngCore,
                                                                            span: bytes(11556..11566),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Unnamed {
                                    paren_token: Paren,
                                    unnamed: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Public(
                                                Pub,
                                            ),
                                            mutability: FieldMutability::None,
                                            ident: None,
                                            colon_token: None,
                                            ty: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: R,
                                                                span: bytes(11572..11573),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                    ],
                                },
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "R",
                            "TryRngCore",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "UnwrapMut",
                            complete_name: "rand_core::UnwrapMut",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "UnwrapMut",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: derive,
                                                            span: bytes(12101..12107),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: Debug,
                                                    span: bytes(12108..12113),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(12113..12114),
                                                },
                                                Ident {
                                                    sym: Eq,
                                                    span: bytes(12115..12117),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(12117..12118),
                                                },
                                                Ident {
                                                    sym: PartialEq,
                                                    span: bytes(12119..12128),
                                                },
                                                Punct {
                                                    char: ',',
                                                    spacing: Alone,
                                                    span: bytes(12128..12129),
                                                },
                                                Ident {
                                                    sym: Hash,
                                                    span: bytes(12130..12134),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: UnwrapMut,
                                    span: bytes(12148..12157),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(12158..12159),
                                                    ident: Ident {
                                                        sym: r,
                                                        span: bytes(12159..12160),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                        Comma,
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(12162..12163),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryRngCore,
                                                                            span: bytes(12165..12175),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::Maybe(
                                                                Question,
                                                            ),
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(12179..12184),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Unnamed {
                                    paren_token: Paren,
                                    unnamed: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Public(
                                                Pub,
                                            ),
                                            mutability: FieldMutability::None,
                                            ident: None,
                                            colon_token: None,
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: Some(
                                                    Lifetime {
                                                        apostrophe: bytes(12191..12192),
                                                        ident: Ident {
                                                            sym: r,
                                                            span: bytes(12192..12193),
                                                        },
                                                    },
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: R,
                                                                    span: bytes(12198..12199),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                    ],
                                },
                                semi_token: Some(
                                    Semi,
                                ),
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "R",
                            "Sized",
                            "TryRngCore",
                        ],
                    },
                    StructItem {
                        struct_name: Name {
                            name: "RngReadAdapter",
                            complete_name: "rand_core::RngReadAdapter",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "RngReadAdapter",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemStruct {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(22825..22828),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(22829..22836),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(22837..22838),
                                                },
                                                Literal {
                                                    lit: "std",
                                                    span: bytes(22839..22844),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                struct_token: Struct,
                                ident: Ident {
                                    sym: RngReadAdapter,
                                    span: bytes(22858..22872),
                                },
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(22873..22874),
                                                    ident: Ident {
                                                        sym: a,
                                                        span: bytes(22874..22875),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                        Comma,
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(22877..22878),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryRngCore,
                                                                            span: bytes(22880..22890),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::Maybe(
                                                                Question,
                                                            ),
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(22894..22899),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                fields: Fields::Named {
                                    brace_token: Brace,
                                    named: [
                                        Field {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            mutability: FieldMutability::None,
                                            ident: Some(
                                                Ident {
                                                    sym: inner,
                                                    span: bytes(22907..22912),
                                                },
                                            ),
                                            colon_token: Some(
                                                Colon,
                                            ),
                                            ty: Type::Reference {
                                                and_token: And,
                                                lifetime: Some(
                                                    Lifetime {
                                                        apostrophe: bytes(22915..22916),
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(22916..22917),
                                                        },
                                                    },
                                                ),
                                                mutability: Some(
                                                    Mut,
                                                ),
                                                elem: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: R,
                                                                    span: bytes(22922..22923),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                        Comma,
                                    ],
                                },
                                semi_token: None,
                            },
                        ),
                        visibility: PubT,
                        relative_types: [
                            "R",
                            "Sized",
                            "TryRngCore",
                        ],
                    },
                ],
                enums: [],
                unions: [],
                impls: [
                    ImplItem {
                        impl_num: 0,
                        struct_name: Name {
                            name: "",
                            complete_name: "",
                            import_name: MyPath {
                                name: "",
                                next: None,
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "RngCore",
                                complete_name: "rand_core::RngCore",
                                import_name: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "RngCore",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: T,
                                                    span: bytes(6202..6203),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: DerefMut,
                                                                            span: bytes(6205..6213),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: Some(
                                        WhereClause {
                                            where_token: Where,
                                            predicates: [
                                                WherePredicate::Type(
                                                    PredicateType {
                                                        lifetimes: None,
                                                        bounded_ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: T,
                                                                            span: bytes(6239..6240),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Target,
                                                                            span: bytes(6242..6248),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        colon_token: Colon,
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: RngCore,
                                                                                    span: bytes(6250..6257),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Comma,
                                            ],
                                        },
                                    ),
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: RngCore,
                                                        span: bytes(6215..6222),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: T,
                                                    span: bytes(6227..6228),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next_u32",
                                    complete_name: "< as rand_core::RngCore>::next_u32",
                                    import_name: MyPath {
                                        name: "< as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u32",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#0}::next_u32",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(6267..6273),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u32,
                                                span: bytes(6282..6290),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(6296..6300),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(6305..6308),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(6319..6323),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: deref_mut,
                                                                span: bytes(6324..6333),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: next_u32,
                                                            span: bytes(6336..6344),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next_u64",
                                    complete_name: "< as rand_core::RngCore>::next_u64",
                                    import_name: MyPath {
                                        name: "< as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#0}::next_u64",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(6360..6366),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u64,
                                                span: bytes(6375..6383),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(6389..6393),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(6398..6401),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(6412..6416),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: deref_mut,
                                                                span: bytes(6417..6426),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: next_u64,
                                                            span: bytes(6429..6437),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "fill_bytes",
                                    complete_name: "< as rand_core::RngCore>::fill_bytes",
                                    import_name: MyPath {
                                        name: "< as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_bytes",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#0}::fill_bytes",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(6453..6459),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fill_bytes,
                                                span: bytes(6468..6478),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(6484..6488),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dst,
                                                                span: bytes(6490..6493),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(6501..6503),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(6516..6520),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: deref_mut,
                                                                span: bytes(6521..6530),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: fill_bytes,
                                                            span: bytes(6533..6543),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: dst,
                                                                                span: bytes(6544..6547),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [
                            "DerefMut",
                        ],
                    },
                    ImplItem {
                        impl_num: 1,
                        struct_name: Name {
                            name: "",
                            complete_name: "",
                            import_name: MyPath {
                                name: "",
                                next: None,
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "CryptoRng",
                                complete_name: "rand_core::CryptoRng",
                                import_name: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "CryptoRng",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: T,
                                                    span: bytes(8127..8128),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: DerefMut,
                                                                            span: bytes(8130..8138),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: Some(
                                        WhereClause {
                                            where_token: Where,
                                            predicates: [
                                                WherePredicate::Type(
                                                    PredicateType {
                                                        lifetimes: None,
                                                        bounded_ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: T,
                                                                            span: bytes(8162..8163),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Target,
                                                                            span: bytes(8165..8171),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        colon_token: Colon,
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: CryptoRng,
                                                                                    span: bytes(8173..8182),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: CryptoRng,
                                                        span: bytes(8140..8149),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: T,
                                                    span: bytes(8154..8155),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [],
                        relative_types: [
                            "DerefMut",
                        ],
                    },
                    ImplItem {
                        impl_num: 2,
                        struct_name: Name {
                            name: "",
                            complete_name: "",
                            import_name: MyPath {
                                name: "",
                                next: None,
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "TryRngCore",
                                complete_name: "rand_core::TryRngCore",
                                import_name: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "TryRngCore",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(9973..9974),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: RngCore,
                                                                            span: bytes(9976..9983),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::Maybe(
                                                                Question,
                                                            ),
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(9987..9992),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: TryRngCore,
                                                        span: bytes(9994..10004),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(10009..10010),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            ImplTypeItem {
                                item: Some(
                                    ImplItemType {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Error,
                                            span: bytes(10022..10027),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: core,
                                                            span: bytes(10030..10034),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: convert,
                                                            span: bytes(10036..10043),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Infallible,
                                                            span: bytes(10045..10055),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "try_next_u32",
                                    complete_name: "< as rand_core::TryRngCore>::try_next_u32",
                                    import_name: MyPath {
                                        name: "< as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "TryRngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "try_next_u32",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#2}::try_next_u32",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(10064..10070),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: try_next_u32,
                                                span: bytes(10079..10091),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(10097..10101),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(10106..10112),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u32,
                                                                                                span: bytes(10113..10116),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(10118..10122),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(10124..10129),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Ok,
                                                                            span: bytes(10141..10143),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(10144..10148),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: next_u32,
                                                                    span: bytes(10149..10157),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "try_next_u64",
                                    complete_name: "< as rand_core::TryRngCore>::try_next_u64",
                                    import_name: MyPath {
                                        name: "< as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "TryRngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "try_next_u64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#2}::try_next_u64",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(10174..10180),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: try_next_u64,
                                                span: bytes(10189..10201),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(10207..10211),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(10216..10222),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u64,
                                                                                                span: bytes(10223..10226),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(10228..10232),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(10234..10239),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Ok,
                                                                            span: bytes(10251..10253),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(10254..10258),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: next_u64,
                                                                    span: bytes(10259..10267),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "try_fill_bytes",
                                    complete_name: "< as rand_core::TryRngCore>::try_fill_bytes",
                                    import_name: MyPath {
                                        name: "< as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "TryRngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "try_fill_bytes",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#2}::try_fill_bytes",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(10284..10290),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: try_fill_bytes,
                                                span: bytes(10299..10313),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(10319..10323),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dst,
                                                                span: bytes(10325..10328),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(10336..10338),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(10344..10350),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Tuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(10355..10359),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(10361..10366),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: self,
                                                                            span: bytes(10378..10382),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: fill_bytes,
                                                            span: bytes(10383..10393),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: dst,
                                                                                span: bytes(10394..10397),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Ok,
                                                                            span: bytes(10408..10410),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [],
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [
                            "RngCore",
                            "Sized",
                            "Infallible",
                            "convert",
                            "core",
                        ],
                    },
                    ImplItem {
                        impl_num: 3,
                        struct_name: Name {
                            name: "",
                            complete_name: "",
                            import_name: MyPath {
                                name: "",
                                next: None,
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "TryCryptoRng",
                                complete_name: "rand_core::TryCryptoRng",
                                import_name: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "TryCryptoRng",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(11310..11311),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: CryptoRng,
                                                                            span: bytes(11313..11322),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::Maybe(
                                                                Question,
                                                            ),
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(11326..11331),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: TryCryptoRng,
                                                        span: bytes(11333..11345),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(11350..11351),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [],
                        relative_types: [
                            "CryptoRng",
                            "Sized",
                        ],
                    },
                    ImplItem {
                        impl_num: 4,
                        struct_name: Name {
                            name: "UnwrapErr",
                            complete_name: "rand_core::UnwrapErr",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "UnwrapErr",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "RngCore",
                                complete_name: "rand_core::RngCore",
                                import_name: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "RngCore",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(11582..11583),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryRngCore,
                                                                            span: bytes(11585..11595),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: RngCore,
                                                        span: bytes(11597..11604),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: UnwrapErr,
                                                    span: bytes(11609..11618),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(11619..11620),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next_u32",
                                    complete_name: "<rand_core::UnwrapErr as rand_core::RngCore>::next_u32",
                                    import_name: MyPath {
                                        name: "<rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "UnwrapErr as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#4}::next_u32",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(11630..11636),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u32,
                                                span: bytes(11645..11653),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(11659..11663),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(11668..11671),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(11682..11686),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 0,
                                                                        span: bytes(11687..11688),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: try_next_u32,
                                                                span: bytes(11689..11701),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: unwrap,
                                                            span: bytes(11704..11710),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next_u64",
                                    complete_name: "<rand_core::UnwrapErr as rand_core::RngCore>::next_u64",
                                    import_name: MyPath {
                                        name: "<rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "UnwrapErr as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#4}::next_u64",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(11726..11732),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u64,
                                                span: bytes(11741..11749),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(11755..11759),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(11764..11767),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(11778..11782),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 0,
                                                                        span: bytes(11783..11784),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: try_next_u64,
                                                                span: bytes(11785..11797),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: unwrap,
                                                            span: bytes(11800..11806),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "fill_bytes",
                                    complete_name: "<rand_core::UnwrapErr as rand_core::RngCore>::fill_bytes",
                                    import_name: MyPath {
                                        name: "<rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "UnwrapErr as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#4}::fill_bytes",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(11822..11828),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fill_bytes,
                                                span: bytes(11837..11847),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(11853..11857),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dst,
                                                                span: bytes(11859..11862),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(11870..11872),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(11885..11889),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 0,
                                                                        span: bytes(11890..11891),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: try_fill_bytes,
                                                                span: bytes(11892..11906),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: dst,
                                                                                    span: bytes(11907..11910),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: unwrap,
                                                            span: bytes(11912..11918),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [
                            "TryRngCore",
                        ],
                    },
                    ImplItem {
                        impl_num: 5,
                        struct_name: Name {
                            name: "UnwrapErr",
                            complete_name: "rand_core::UnwrapErr",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "UnwrapErr",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "CryptoRng",
                                complete_name: "rand_core::CryptoRng",
                                import_name: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "CryptoRng",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(11935..11936),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryCryptoRng,
                                                                            span: bytes(11938..11950),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: CryptoRng,
                                                        span: bytes(11952..11961),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: UnwrapErr,
                                                    span: bytes(11966..11975),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(11976..11977),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [],
                        relative_types: [
                            "TryCryptoRng",
                        ],
                    },
                    ImplItem {
                        impl_num: 6,
                        struct_name: Name {
                            name: "UnwrapMut",
                            complete_name: "rand_core::UnwrapMut",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "UnwrapMut",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: None,
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Lifetime(
                                            LifetimeParam {
                                                attrs: [],
                                                lifetime: Lifetime {
                                                    apostrophe: bytes(12208..12209),
                                                    ident: Ident {
                                                        sym: r,
                                                        span: bytes(12209..12210),
                                                    },
                                                },
                                                colon_token: None,
                                                bounds: [],
                                            },
                                        ),
                                        Comma,
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(12212..12213),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryRngCore,
                                                                            span: bytes(12215..12225),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::Maybe(
                                                                Question,
                                                            ),
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(12229..12234),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: None,
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: UnwrapMut,
                                                    span: bytes(12236..12245),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(12246..12247),
                                                                ident: Ident {
                                                                    sym: r,
                                                                    span: bytes(12247..12248),
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(12250..12251),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "re",
                                    complete_name: "rand_core::UnwrapMut::re",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "UnwrapMut",
                                                next: Some(
                                                    MyPath {
                                                        name: "re",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#6}::re",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: inline,
                                                                    span: bytes(12549..12555),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: always,
                                                            span: bytes(12556..12562),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: re,
                                                span: bytes(12576..12578),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Lifetime(
                                                        LifetimeParam {
                                                            attrs: [],
                                                            lifetime: Lifetime {
                                                                apostrophe: bytes(12579..12580),
                                                                ident: Ident {
                                                                    sym: b,
                                                                    span: bytes(12580..12581),
                                                                },
                                                            },
                                                            colon_token: None,
                                                            bounds: [],
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: Some(
                                                    WhereClause {
                                                        where_token: Where,
                                                        predicates: [
                                                            WherePredicate::Lifetime(
                                                                PredicateLifetime {
                                                                    lifetime: Lifetime {
                                                                        apostrophe: bytes(12635..12636),
                                                                        ident: Ident {
                                                                            sym: r,
                                                                            span: bytes(12636..12637),
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        Lifetime {
                                                                            apostrophe: bytes(12639..12640),
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(12640..12641),
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                        ],
                                                    },
                                                ),
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(12584..12585),
                                                                        ident: Ident {
                                                                            sym: b,
                                                                            span: bytes(12585..12586),
                                                                        },
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: Some(
                                                                Lifetime {
                                                                    apostrophe: bytes(12584..12585),
                                                                    ident: Ident {
                                                                        sym: b,
                                                                        span: bytes(12585..12586),
                                                                    },
                                                                },
                                                            ),
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(12591..12595),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: UnwrapMut,
                                                                    span: bytes(12600..12609),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(12610..12611),
                                                                                ident: Ident {
                                                                                    sym: b,
                                                                                    span: bytes(12611..12612),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: R,
                                                                                                span: bytes(12614..12615),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: UnwrapMut,
                                                                            span: bytes(12657..12666),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(12667..12671),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 0,
                                                                        span: bytes(12672..12673),
                                                                    },
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [
                            "Sized",
                            "TryRngCore",
                        ],
                    },
                    ImplItem {
                        impl_num: 7,
                        struct_name: Name {
                            name: "UnwrapMut",
                            complete_name: "rand_core::UnwrapMut",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "UnwrapMut",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "RngCore",
                                complete_name: "rand_core::RngCore",
                                import_name: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "RngCore",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(12689..12690),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryRngCore,
                                                                            span: bytes(12692..12702),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::Maybe(
                                                                Question,
                                                            ),
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(12706..12711),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: RngCore,
                                                        span: bytes(12713..12720),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: UnwrapMut,
                                                    span: bytes(12725..12734),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(12735..12736),
                                                                ident: Ident {
                                                                    sym: _,
                                                                    span: bytes(12736..12737),
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(12739..12740),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next_u32",
                                    complete_name: "<rand_core::UnwrapMut as rand_core::RngCore>::next_u32",
                                    import_name: MyPath {
                                        name: "<rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "UnwrapMut as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#7}::next_u32",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(12750..12756),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u32,
                                                span: bytes(12765..12773),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(12779..12783),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(12788..12791),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(12802..12806),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 0,
                                                                        span: bytes(12807..12808),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: try_next_u32,
                                                                span: bytes(12809..12821),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: unwrap,
                                                            span: bytes(12824..12830),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "next_u64",
                                    complete_name: "<rand_core::UnwrapMut as rand_core::RngCore>::next_u64",
                                    import_name: MyPath {
                                        name: "<rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "UnwrapMut as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next_u64",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#7}::next_u64",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(12846..12852),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u64,
                                                span: bytes(12861..12869),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(12875..12879),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(12884..12887),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(12898..12902),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 0,
                                                                        span: bytes(12903..12904),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: try_next_u64,
                                                                span: bytes(12905..12917),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: unwrap,
                                                            span: bytes(12920..12926),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                            ImplFnItem {
                                fn_name: Name {
                                    name: "fill_bytes",
                                    complete_name: "<rand_core::UnwrapMut as rand_core::RngCore>::fill_bytes",
                                    import_name: MyPath {
                                        name: "<rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "UnwrapMut as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "RngCore>",
                                                        next: Some(
                                                            MyPath {
                                                                name: "fill_bytes",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#7}::fill_bytes",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(12942..12948),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fill_bytes,
                                                span: bytes(12957..12967),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(12973..12977),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dst,
                                                                span: bytes(12979..12982),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(12990..12992),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(13005..13009),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 0,
                                                                        span: bytes(13010..13011),
                                                                    },
                                                                ),
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: try_fill_bytes,
                                                                span: bytes(13012..13026),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: dst,
                                                                                    span: bytes(13027..13030),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: unwrap,
                                                            span: bytes(13032..13038),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [
                            "Sized",
                            "TryRngCore",
                        ],
                    },
                    ImplItem {
                        impl_num: 8,
                        struct_name: Name {
                            name: "UnwrapMut",
                            complete_name: "rand_core::UnwrapMut",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "UnwrapMut",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "CryptoRng",
                                complete_name: "rand_core::CryptoRng",
                                import_name: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "CryptoRng",
                                            next: None,
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(13055..13056),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryCryptoRng,
                                                                            span: bytes(13058..13070),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::Maybe(
                                                                Question,
                                                            ),
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(13074..13079),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: CryptoRng,
                                                        span: bytes(13081..13090),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: UnwrapMut,
                                                    span: bytes(13095..13104),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(13105..13106),
                                                                ident: Ident {
                                                                    sym: _,
                                                                    span: bytes(13106..13107),
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(13109..13110),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [],
                        relative_types: [
                            "Sized",
                            "TryCryptoRng",
                        ],
                    },
                    ImplItem {
                        impl_num: 9,
                        struct_name: Name {
                            name: "RngReadAdapter",
                            complete_name: "rand_core::RngReadAdapter",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "RngReadAdapter",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "Read",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "std",
                                    next: Some(
                                        MyPath {
                                            name: "io",
                                            next: Some(
                                                MyPath {
                                                    name: "Read",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(22930..22933),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(22934..22941),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(22942..22943),
                                                },
                                                Literal {
                                                    lit: "std",
                                                    span: bytes(22944..22949),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(22957..22958),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryRngCore,
                                                                            span: bytes(22960..22970),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::Maybe(
                                                                Question,
                                                            ),
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(22974..22979),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: std,
                                                        span: bytes(22981..22984),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: io,
                                                        span: bytes(22986..22988),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Read,
                                                        span: bytes(22990..22994),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: RngReadAdapter,
                                                    span: bytes(22999..23013),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(23014..23015),
                                                                ident: Ident {
                                                                    sym: _,
                                                                    span: bytes(23015..23016),
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(23018..23019),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "read",
                                    complete_name: "<rand_core::RngReadAdapter as std::io::Read>::read",
                                    import_name: MyPath {
                                        name: "<rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngReadAdapter as std",
                                                next: Some(
                                                    MyPath {
                                                        name: "io",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Read>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "read",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#9}::read",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(23029..23035),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: read,
                                                span: bytes(23044..23048),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(23054..23058),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: buf,
                                                                span: bytes(23060..23063),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(23071..23073),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(23079..23085),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(23086..23091),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: std,
                                                                                                span: bytes(23093..23096),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: io,
                                                                                                span: bytes(23098..23100),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(23102..23107),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Try {
                                                        attrs: [],
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(23119..23123),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: inner,
                                                                            span: bytes(23124..23129),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: try_fill_bytes,
                                                                    span: bytes(23130..23144),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: buf,
                                                                                        span: bytes(23145..23148),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: map_err,
                                                                span: bytes(23150..23157),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Closure {
                                                                    attrs: [],
                                                                    lifetimes: None,
                                                                    constness: None,
                                                                    movability: None,
                                                                    asyncness: None,
                                                                    capture: None,
                                                                    or1_token: Or,
                                                                    inputs: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: err,
                                                                                span: bytes(23159..23162),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                    or2_token: Or,
                                                                    output: ReturnType::Default,
                                                                    body: Expr::Block {
                                                                        attrs: [],
                                                                        label: None,
                                                                        block: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: std,
                                                                                                            span: bytes(23178..23181),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: io,
                                                                                                            span: bytes(23183..23185),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Error,
                                                                                                            span: bytes(23187..23192),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: new,
                                                                                                            span: bytes(23194..23197),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: std,
                                                                                                                span: bytes(23198..23201),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: io,
                                                                                                                span: bytes(23203..23205),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: ErrorKind,
                                                                                                                span: bytes(23207..23216),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Other,
                                                                                                                span: bytes(23218..23223),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Macro {
                                                                                                attrs: [],
                                                                                                mac: Macro {
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: std,
                                                                                                                    span: bytes(23225..23228),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                            PathSep,
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: format,
                                                                                                                    span: bytes(23230..23236),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    bang_token: Not,
                                                                                                    delimiter: MacroDelimiter::Paren(
                                                                                                        Paren,
                                                                                                    ),
                                                                                                    tokens: TokenStream [
                                                                                                        Literal {
                                                                                                            lit: "RNG error: {err}",
                                                                                                            span: bytes(23238..23256),
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        question_token: Question,
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Ok,
                                                                            span: bytes(23280..23282),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: buf,
                                                                                    span: bytes(23283..23286),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: len,
                                                                    span: bytes(23287..23290),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: false,
                            },
                        ],
                        relative_types: [
                            "Sized",
                            "TryRngCore",
                        ],
                    },
                    ImplItem {
                        impl_num: 10,
                        struct_name: Name {
                            name: "RngReadAdapter",
                            complete_name: "rand_core::RngReadAdapter",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "RngReadAdapter",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        trait_name: Some(
                            Name {
                                name: "Debug",
                                complete_name: "",
                                import_name: MyPath {
                                    name: "std",
                                    next: Some(
                                        MyPath {
                                            name: "fmt",
                                            next: Some(
                                                MyPath {
                                                    name: "Debug",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                        ),
                        item: Some(
                            ItemImpl {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::List {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cfg,
                                                            span: bytes(23305..23308),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            delimiter: MacroDelimiter::Paren(
                                                Paren,
                                            ),
                                            tokens: TokenStream [
                                                Ident {
                                                    sym: feature,
                                                    span: bytes(23309..23316),
                                                },
                                                Punct {
                                                    char: '=',
                                                    spacing: Alone,
                                                    span: bytes(23317..23318),
                                                },
                                                Literal {
                                                    lit: "std",
                                                    span: bytes(23319..23324),
                                                },
                                            ],
                                        },
                                    },
                                ],
                                defaultness: None,
                                unsafety: None,
                                impl_token: Impl,
                                generics: Generics {
                                    lt_token: Some(
                                        Lt,
                                    ),
                                    params: [
                                        GenericParam::Type(
                                            TypeParam {
                                                attrs: [],
                                                ident: Ident {
                                                    sym: R,
                                                    span: bytes(23332..23333),
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TryRngCore,
                                                                            span: bytes(23335..23345),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::Maybe(
                                                                Question,
                                                            ),
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(23349..23354),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                eq_token: None,
                                                default: None,
                                            },
                                        ),
                                    ],
                                    gt_token: Some(
                                        Gt,
                                    ),
                                    where_clause: None,
                                },
                                trait_: Some(
                                    (
                                        None,
                                        Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: std,
                                                        span: bytes(23356..23359),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(23361..23364),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: Debug,
                                                        span: bytes(23366..23371),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                        For,
                                    ),
                                ),
                                self_ty: Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: RngReadAdapter,
                                                    span: bytes(23376..23390),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Lifetime(
                                                            Lifetime {
                                                                apostrophe: bytes(23391..23392),
                                                                ident: Ident {
                                                                    sym: _,
                                                                    span: bytes(23392..23393),
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericArgument::Type(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(23395..23396),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            ImplFnItem {
                                fn_name: Name {
                                    name: "fmt",
                                    complete_name: "<rand_core::RngReadAdapter as std::fmt::Debug>::fmt",
                                    import_name: MyPath {
                                        name: "<rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngReadAdapter as std",
                                                next: Some(
                                                    MyPath {
                                                        name: "fmt",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Debug>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "{impl#10}::fmt",
                                item: Some(
                                    ImplItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        defaultness: None,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fmt,
                                                span: bytes(23407..23410),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(23412..23416),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: f,
                                                                span: bytes(23418..23419),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: std,
                                                                                span: bytes(23426..23429),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: fmt,
                                                                                span: bytes(23431..23434),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Formatter,
                                                                                span: bytes(23436..23445),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Lifetime(
                                                                                        Lifetime {
                                                                                            apostrophe: bytes(23446..23447),
                                                                                            ident: Ident {
                                                                                                sym: _,
                                                                                                span: bytes(23447..23448),
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: std,
                                                                    span: bytes(23454..23457),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: fmt,
                                                                    span: bytes(23459..23462),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(23464..23470),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f,
                                                                                span: bytes(23481..23482),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: debug_struct,
                                                                span: bytes(23483..23495),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Str {
                                                                        token: "ReadAdapter",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: finish,
                                                            span: bytes(23511..23517),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                                is_constructor: true,
                            },
                        ],
                        relative_types: [
                            "Sized",
                            "TryRngCore",
                        ],
                    },
                ],
                functions: [],
                traits: [
                    TraitItem {
                        trait_name: Name {
                            name: "RngCore",
                            complete_name: "rand_core::RngCore",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "RngCore",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemTrait {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                auto_token: None,
                                restriction: None,
                                trait_token: Trait,
                                ident: Ident {
                                    sym: RngCore,
                                    span: bytes(5023..5030),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: None,
                                supertraits: [],
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [
                            TraitFnItem {
                                fn_name: Name {
                                    name: "next_u32",
                                    complete_name: "<  as rand_core::RngCore>::next_u32",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u32",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "RngCore::next_u32",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u32,
                                                span: bytes(5319..5327),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(5333..5337),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(5342..5345),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                inside_items: [],
                                is_constructor: false,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "next_u64",
                                    complete_name: "<  as rand_core::RngCore>::next_u64",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "RngCore::next_u64",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u64,
                                                span: bytes(5635..5643),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(5649..5653),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(5658..5661),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                inside_items: [],
                                is_constructor: false,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "fill_bytes",
                                    complete_name: "<  as rand_core::RngCore>::fill_bytes",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "RngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_bytes",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "RngCore::fill_bytes",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fill_bytes,
                                                span: bytes(6155..6165),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(6171..6175),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dst,
                                                                span: bytes(6177..6180),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(6188..6190),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                inside_items: [],
                                is_constructor: false,
                            },
                        ],
                        visibility: PubT,
                        relative_types: [],
                    },
                    TraitItem {
                        trait_name: Name {
                            name: "CryptoRng",
                            complete_name: "rand_core::CryptoRng",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "CryptoRng",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemTrait {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                auto_token: None,
                                restriction: None,
                                trait_token: Trait,
                                ident: Ident {
                                    sym: CryptoRng,
                                    span: bytes(8099..8108),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Some(
                                    Colon,
                                ),
                                supertraits: [
                                    TypeParamBound::Trait(
                                        TraitBound {
                                            paren_token: None,
                                            modifier: TraitBoundModifier::None,
                                            lifetimes: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: RngCore,
                                                            span: bytes(8110..8117),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ],
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [],
                        visibility: PubT,
                        relative_types: [
                            "RngCore",
                        ],
                    },
                    TraitItem {
                        trait_name: Name {
                            name: "TryRngCore",
                            complete_name: "rand_core::TryRngCore",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "TryRngCore",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemTrait {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                auto_token: None,
                                restriction: None,
                                trait_token: Trait,
                                ident: Ident {
                                    sym: TryRngCore,
                                    span: bytes(8779..8789),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: None,
                                supertraits: [],
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            TraitTypeItem {
                                item: Some(
                                    TraitItemType {
                                        attrs: [],
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Error,
                                            span: bytes(8856..8861),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        bounds: [
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: fmt,
                                                                    span: bytes(8863..8866),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Debug,
                                                                    span: bytes(8868..8873),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                            Plus,
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: fmt,
                                                                    span: bytes(8876..8879),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Display,
                                                                    span: bytes(8881..8888),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                        default: None,
                                        semi_token: Semi,
                                    },
                                ),
                            },
                        ],
                        consts: [],
                        functions: [
                            TraitFnItem {
                                fn_name: Name {
                                    name: "try_next_u32",
                                    complete_name: "<  as rand_core::TryRngCore>::try_next_u32",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "TryRngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "try_next_u32",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "TryRngCore::try_next_u32",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: try_next_u32,
                                                span: bytes(8936..8948),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(8954..8958),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(8963..8969),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u32,
                                                                                                span: bytes(8970..8973),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(8975..8979),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(8981..8986),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "try_next_u64",
                                    complete_name: "<  as rand_core::TryRngCore>::try_next_u64",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "TryRngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "try_next_u64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "TryRngCore::try_next_u64",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: try_next_u64,
                                                span: bytes(9034..9046),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(9052..9056),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(9061..9067),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u64,
                                                                                                span: bytes(9068..9071),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(9073..9077),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(9079..9084),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "try_fill_bytes",
                                    complete_name: "<  as rand_core::TryRngCore>::try_fill_bytes",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "TryRngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "try_fill_bytes",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "TryRngCore::try_fill_bytes",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: try_fill_bytes,
                                                span: bytes(9141..9155),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(9161..9165),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dst,
                                                                span: bytes(9167..9170),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(9178..9180),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(9186..9192),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Tuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(9197..9201),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(9203..9208),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "unwrap_err",
                                    complete_name: "<  as rand_core::TryRngCore>::unwrap_err",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "TryRngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "unwrap_err",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "TryRngCore::unwrap_err",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: unwrap_err,
                                                span: bytes(9268..9278),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: Some(
                                                    WhereClause {
                                                        where_token: Where,
                                                        predicates: [
                                                            WherePredicate::Type(
                                                                PredicateType {
                                                                    lifetimes: None,
                                                                    bounded_ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(9322..9326),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Sized,
                                                                                                span: bytes(9328..9333),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                        ],
                                                    },
                                                ),
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: None,
                                                        mutability: None,
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(9279..9283),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: UnwrapErr,
                                                                    span: bytes(9288..9297),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(9298..9302),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: Some(
                                            Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Expr(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: UnwrapErr,
                                                                                span: bytes(9349..9358),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(9359..9363),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        ),
                                        semi_token: None,
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "unwrap_mut",
                                    complete_name: "<  as rand_core::TryRngCore>::unwrap_mut",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "TryRngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "unwrap_mut",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "TryRngCore::unwrap_mut",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: unwrap_mut,
                                                span: bytes(9428..9438),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(9444..9448),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: UnwrapMut,
                                                                    span: bytes(9453..9462),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(9463..9464),
                                                                                ident: Ident {
                                                                                    sym: _,
                                                                                    span: bytes(9464..9465),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(9467..9471),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: Some(
                                            Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Expr(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: UnwrapMut,
                                                                                span: bytes(9483..9492),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(9493..9497),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        ),
                                        semi_token: None,
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "read_adapter",
                                    complete_name: "<  as rand_core::TryRngCore>::read_adapter",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "TryRngCore>",
                                                next: Some(
                                                    MyPath {
                                                        name: "read_adapter",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "TryRngCore::read_adapter",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(9568..9571),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(9572..9579),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(9580..9581),
                                                        },
                                                        Literal {
                                                            lit: "std",
                                                            span: bytes(9582..9587),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: read_adapter,
                                                span: bytes(9597..9609),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: Some(
                                                    WhereClause {
                                                        where_token: Where,
                                                        predicates: [
                                                            WherePredicate::Type(
                                                                PredicateType {
                                                                    lifetimes: None,
                                                                    bounded_ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(9667..9671),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    colon_token: Colon,
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Sized,
                                                                                                span: bytes(9673..9678),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                        ],
                                                    },
                                                ),
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Receiver(
                                                    Receiver {
                                                        attrs: [],
                                                        reference: Some(
                                                            (
                                                                And,
                                                                None,
                                                            ),
                                                        ),
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        self_token: SelfValue,
                                                        colon_token: None,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(9615..9619),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: RngReadAdapter,
                                                                    span: bytes(9624..9638),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(9639..9640),
                                                                                ident: Ident {
                                                                                    sym: _,
                                                                                    span: bytes(9640..9641),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(9643..9647),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: Some(
                                            Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Expr(
                                                        Expr::Struct {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: RngReadAdapter,
                                                                            span: bytes(9694..9708),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            brace_token: Brace,
                                                            fields: [
                                                                FieldValue {
                                                                    attrs: [],
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: inner,
                                                                            span: bytes(9711..9716),
                                                                        },
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(9718..9722),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                            dot2_token: None,
                                                            rest: None,
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        ),
                                        semi_token: None,
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                        ],
                        visibility: PubT,
                        relative_types: [],
                    },
                    TraitItem {
                        trait_name: Name {
                            name: "TryCryptoRng",
                            complete_name: "rand_core::TryCryptoRng",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "TryCryptoRng",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemTrait {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                auto_token: None,
                                restriction: None,
                                trait_token: Trait,
                                ident: Ident {
                                    sym: TryCryptoRng,
                                    span: bytes(11276..11288),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Some(
                                    Colon,
                                ),
                                supertraits: [
                                    TypeParamBound::Trait(
                                        TraitBound {
                                            paren_token: None,
                                            modifier: TraitBoundModifier::None,
                                            lifetimes: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: TryRngCore,
                                                            span: bytes(11290..11300),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ],
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [],
                        consts: [],
                        functions: [],
                        visibility: PubT,
                        relative_types: [
                            "TryRngCore",
                        ],
                    },
                    TraitItem {
                        trait_name: Name {
                            name: "SeedableRng",
                            complete_name: "rand_core::SeedableRng",
                            import_name: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "SeedableRng",
                                        next: None,
                                    },
                                ),
                            },
                        },
                        item: Some(
                            ItemTrait {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                auto_token: None,
                                restriction: None,
                                trait_token: Trait,
                                ident: Ident {
                                    sym: SeedableRng,
                                    span: bytes(13795..13806),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                colon_token: Some(
                                    Colon,
                                ),
                                supertraits: [
                                    TypeParamBound::Trait(
                                        TraitBound {
                                            paren_token: None,
                                            modifier: TraitBoundModifier::None,
                                            lifetimes: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Sized,
                                                            span: bytes(13808..13813),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ],
                                brace_token: Brace,
                                items: [],
                            },
                        ),
                        types: [
                            TraitTypeItem {
                                item: Some(
                                    TraitItemType {
                                        attrs: [],
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Seed,
                                            span: bytes(15436..15440),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        bounds: [
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Clone,
                                                                    span: bytes(15442..15447),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                            Plus,
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Default,
                                                                    span: bytes(15450..15457),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                            Plus,
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: AsRef,
                                                                    span: bytes(15460..15465),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Slice {
                                                                                bracket_token: Bracket,
                                                                                elem: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u8,
                                                                                                    span: bytes(15467..15469),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                            Plus,
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: AsMut,
                                                                    span: bytes(15474..15479),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Slice {
                                                                                bracket_token: Bracket,
                                                                                elem: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u8,
                                                                                                    span: bytes(15481..15483),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                        default: None,
                                        semi_token: Semi,
                                    },
                                ),
                            },
                        ],
                        consts: [],
                        functions: [
                            TraitFnItem {
                                fn_name: Name {
                                    name: "from_seed",
                                    complete_name: "<  as rand_core::SeedableRng>::from_seed",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_seed",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "SeedableRng::from_seed",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: from_seed,
                                                span: bytes(17036..17045),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: seed,
                                                                span: bytes(17046..17050),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(17052..17056),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Seed,
                                                                            span: bytes(17058..17062),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(17067..17071),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: None,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "seed_from_u64",
                                    complete_name: "<  as rand_core::SeedableRng>::seed_from_u64",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "seed_from_u64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "SeedableRng::seed_from_u64",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: seed_from_u64,
                                                span: bytes(17862..17875),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            ident: Ident {
                                                                sym: state,
                                                                span: bytes(17880..17885),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(17887..17890),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(17895..17899),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: Some(
                                            Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Item(
                                                        Item::Fn {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            sig: Signature {
                                                                constness: None,
                                                                asyncness: None,
                                                                unsafety: None,
                                                                abi: None,
                                                                fn_token: Fn,
                                                                ident: Ident {
                                                                    sym: pcg32,
                                                                    span: bytes(17986..17991),
                                                                },
                                                                generics: Generics {
                                                                    lt_token: None,
                                                                    params: [],
                                                                    gt_token: None,
                                                                    where_clause: None,
                                                                },
                                                                paren_token: Paren,
                                                                inputs: [
                                                                    FnArg::Typed(
                                                                        PatType {
                                                                            attrs: [],
                                                                            pat: Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(17992..17997),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            colon_token: Colon,
                                                                            ty: Type::Reference {
                                                                                and_token: And,
                                                                                lifetime: None,
                                                                                mutability: Some(
                                                                                    Mut,
                                                                                ),
                                                                                elem: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(18004..18007),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                variadic: None,
                                                                output: ReturnType::Type(
                                                                    RArrow,
                                                                    Type::Array {
                                                                        bracket_token: Bracket,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u8,
                                                                                            span: bytes(18013..18015),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        semi_token: Semi,
                                                                        len: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 4,
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Item(
                                                                        Item::Const {
                                                                            attrs: [],
                                                                            vis: Visibility::Inherited,
                                                                            const_token: Const,
                                                                            ident: Ident {
                                                                                sym: MUL,
                                                                                span: bytes(18040..18043),
                                                                            },
                                                                            generics: Generics {
                                                                                lt_token: None,
                                                                                params: [],
                                                                                gt_token: None,
                                                                                where_clause: None,
                                                                            },
                                                                            colon_token: Colon,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u64,
                                                                                                span: bytes(18045..18048),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            eq_token: Eq,
                                                                            expr: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 6364136223846793005,
                                                                                },
                                                                            },
                                                                            semi_token: Semi,
                                                                        },
                                                                    ),
                                                                    Stmt::Item(
                                                                        Item::Const {
                                                                            attrs: [],
                                                                            vis: Visibility::Inherited,
                                                                            const_token: Const,
                                                                            ident: Ident {
                                                                                sym: INC,
                                                                                span: bytes(18090..18093),
                                                                            },
                                                                            generics: Generics {
                                                                                lt_token: None,
                                                                                params: [],
                                                                                gt_token: None,
                                                                                where_clause: None,
                                                                            },
                                                                            colon_token: Colon,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u64,
                                                                                                span: bytes(18095..18098),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            eq_token: Eq,
                                                                            expr: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 11634580027462260723,
                                                                                },
                                                                            },
                                                                            semi_token: Semi,
                                                                        },
                                                                    ),
                                                                    Stmt::Expr(
                                                                        Expr::Assign {
                                                                            attrs: [],
                                                                            left: Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: state,
                                                                                                    span: bytes(18265..18270),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            eq_token: Eq,
                                                                            right: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: state,
                                                                                                        span: bytes(18273..18278),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: wrapping_mul,
                                                                                        span: bytes(18279..18291),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: MUL,
                                                                                                            span: bytes(18292..18295),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: wrapping_add,
                                                                                    span: bytes(18297..18309),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: INC,
                                                                                                        span: bytes(18310..18313),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Some(
                                                                            Semi,
                                                                        ),
                                                                    ),
                                                                    Stmt::Local {
                                                                        attrs: [],
                                                                        let_token: Let,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: state,
                                                                                span: bytes(18332..18337),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        init: Some(
                                                                            LocalInit {
                                                                                eq_token: Eq,
                                                                                expr: Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Deref(
                                                                                        Star,
                                                                                    ),
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: state,
                                                                                                        span: bytes(18341..18346),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                diverge: None,
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                    Stmt::Local {
                                                                        attrs: [],
                                                                        let_token: Let,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: xorshifted,
                                                                                span: bytes(18430..18440),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        init: Some(
                                                                            LocalInit {
                                                                                eq_token: Eq,
                                                                                expr: Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Paren {
                                                                                                attrs: [],
                                                                                                paren_token: Paren,
                                                                                                expr: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Paren {
                                                                                                        attrs: [],
                                                                                                        paren_token: Paren,
                                                                                                        expr: Expr::Binary {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: state,
                                                                                                                                span: bytes(18446..18451),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            op: BinOp::Shr(
                                                                                                                Shr,
                                                                                                            ),
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 18,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    op: BinOp::BitXor(
                                                                                                        Caret,
                                                                                                    ),
                                                                                                    right: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: state,
                                                                                                                        span: bytes(18461..18466),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Shr(
                                                                                                Shr,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 27,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u32,
                                                                                                        span: bytes(18478..18481),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                diverge: None,
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                    Stmt::Local {
                                                                        attrs: [],
                                                                        let_token: Let,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: rot,
                                                                                span: bytes(18499..18502),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        init: Some(
                                                                            LocalInit {
                                                                                eq_token: Eq,
                                                                                expr: Expr::Cast {
                                                                                    attrs: [],
                                                                                    expr: Expr::Paren {
                                                                                        attrs: [],
                                                                                        paren_token: Paren,
                                                                                        expr: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: state,
                                                                                                                span: bytes(18506..18511),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Shr(
                                                                                                Shr,
                                                                                            ),
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 59,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    as_token: As,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u32,
                                                                                                        span: bytes(18522..18525),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                diverge: None,
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                    Stmt::Local {
                                                                        attrs: [],
                                                                        let_token: Let,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: x,
                                                                                span: bytes(18543..18544),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        init: Some(
                                                                            LocalInit {
                                                                                eq_token: Eq,
                                                                                expr: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: xorshifted,
                                                                                                        span: bytes(18547..18557),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: rotate_right,
                                                                                        span: bytes(18558..18570),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: rot,
                                                                                                            span: bytes(18571..18574),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                diverge: None,
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                    Stmt::Expr(
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: x,
                                                                                                span: bytes(18589..18590),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: to_le_bytes,
                                                                                span: bytes(18591..18602),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Stmt::Local {
                                                        attrs: [],
                                                        let_token: Let,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            ident: Ident {
                                                                sym: seed,
                                                                span: bytes(18632..18636),
                                                            },
                                                            subpat: None,
                                                        },
                                                        init: Some(
                                                            LocalInit {
                                                                eq_token: Eq,
                                                                expr: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(18639..18643),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Seed,
                                                                                        span: bytes(18645..18649),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: default,
                                                                                        span: bytes(18651..18658),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                diverge: None,
                                                            },
                                                        ),
                                                        semi_token: Semi,
                                                    },
                                                    Stmt::Local {
                                                        attrs: [],
                                                        let_token: Let,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            ident: Ident {
                                                                sym: iter,
                                                                span: bytes(18678..18682),
                                                            },
                                                            subpat: None,
                                                        },
                                                        init: Some(
                                                            LocalInit {
                                                                eq_token: Eq,
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: seed,
                                                                                            span: bytes(18685..18689),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: as_mut,
                                                                            span: bytes(18690..18696),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: chunks_exact_mut,
                                                                        span: bytes(18699..18715),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 4,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                diverge: None,
                                                            },
                                                        ),
                                                        semi_token: Semi,
                                                    },
                                                    Stmt::Expr(
                                                        Expr::ForLoop {
                                                            attrs: [],
                                                            label: None,
                                                            for_token: For,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: chunk,
                                                                    span: bytes(18732..18737),
                                                                },
                                                                subpat: None,
                                                            },
                                                            in_token: In,
                                                            expr: Expr::Reference {
                                                                attrs: [],
                                                                and_token: And,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(18746..18750),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            body: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: chunk,
                                                                                                span: bytes(18765..18770),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: copy_from_slice,
                                                                                span: bytes(18771..18786),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Reference {
                                                                                    attrs: [],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: pcg32,
                                                                                                            span: bytes(18788..18793),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: Some(
                                                                                                    Mut,
                                                                                                ),
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: state,
                                                                                                                    span: bytes(18799..18804),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        Some(
                                                                            Semi,
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                        None,
                                                    ),
                                                    Stmt::Local {
                                                        attrs: [],
                                                        let_token: Let,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: rem,
                                                                span: bytes(18830..18833),
                                                            },
                                                            subpat: None,
                                                        },
                                                        init: Some(
                                                            LocalInit {
                                                                eq_token: Eq,
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: iter,
                                                                                        span: bytes(18836..18840),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: into_remainder,
                                                                        span: bytes(18841..18855),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                diverge: None,
                                                            },
                                                        ),
                                                        semi_token: Semi,
                                                    },
                                                    Stmt::Expr(
                                                        Expr::If {
                                                            attrs: [],
                                                            if_token: If,
                                                            cond: Expr::Unary {
                                                                attrs: [],
                                                                op: UnOp::Not(
                                                                    Not,
                                                                ),
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: rem,
                                                                                        span: bytes(18871..18874),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: is_empty,
                                                                        span: bytes(18875..18883),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            },
                                                            then_branch: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: rem,
                                                                                                span: bytes(18900..18903),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: copy_from_slice,
                                                                                span: bytes(18904..18919),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Reference {
                                                                                    attrs: [],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::Index {
                                                                                        attrs: [],
                                                                                        expr: Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: pcg32,
                                                                                                                span: bytes(18921..18926),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Reference {
                                                                                                    attrs: [],
                                                                                                    and_token: And,
                                                                                                    mutability: Some(
                                                                                                        Mut,
                                                                                                    ),
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: state,
                                                                                                                        span: bytes(18932..18937),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bracket_token: Bracket,
                                                                                        index: Expr::Range {
                                                                                            attrs: [],
                                                                                            start: None,
                                                                                            limits: RangeLimits::HalfOpen(
                                                                                                DotDot,
                                                                                            ),
                                                                                            end: Some(
                                                                                                Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: rem,
                                                                                                                        span: bytes(18941..18944),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: len,
                                                                                                        span: bytes(18945..18948),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [],
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        Some(
                                                                            Semi,
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                            else_branch: None,
                                                        },
                                                        None,
                                                    ),
                                                    Stmt::Expr(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(18973..18977),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from_seed,
                                                                                span: bytes(18979..18988),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: seed,
                                                                                    span: bytes(18989..18993),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        ),
                                        semi_token: None,
                                    },
                                ),
                                inside_items: [
                                    Item::Fn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: pcg32,
                                                span: bytes(17986..17991),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: state,
                                                                span: bytes(17992..17997),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u64,
                                                                                span: bytes(18004..18007),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Array {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(18013..18015),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    semi_token: Semi,
                                                    len: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 4,
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Item(
                                                    Item::Const {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        const_token: Const,
                                                        ident: Ident {
                                                            sym: MUL,
                                                            span: bytes(18040..18043),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(18045..18048),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 6364136223846793005,
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                Stmt::Item(
                                                    Item::Const {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        const_token: Const,
                                                        ident: Ident {
                                                            sym: INC,
                                                            span: bytes(18090..18093),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(18095..18098),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 11634580027462260723,
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: state,
                                                                                span: bytes(18265..18270),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(18273..18278),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: wrapping_mul,
                                                                    span: bytes(18279..18291),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: MUL,
                                                                                        span: bytes(18292..18295),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_add,
                                                                span: bytes(18297..18309),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: INC,
                                                                                    span: bytes(18310..18313),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: state,
                                                            span: bytes(18332..18337),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Unary {
                                                                attrs: [],
                                                                op: UnOp::Deref(
                                                                    Star,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(18341..18346),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: xorshifted,
                                                            span: bytes(18430..18440),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Paren {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            expr: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: state,
                                                                                                            span: bytes(18446..18451),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Shr(
                                                                                            Shr,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 18,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitXor(
                                                                                    Caret,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: state,
                                                                                                    span: bytes(18461..18466),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Shr(
                                                                            Shr,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 27,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(18478..18481),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: rot,
                                                            span: bytes(18499..18502),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: state,
                                                                                            span: bytes(18506..18511),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Shr(
                                                                            Shr,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 59,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(18522..18525),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: x,
                                                            span: bytes(18543..18544),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: xorshifted,
                                                                                    span: bytes(18547..18557),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: rotate_right,
                                                                    span: bytes(18558..18570),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: rot,
                                                                                        span: bytes(18571..18574),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: x,
                                                                            span: bytes(18589..18590),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: to_le_bytes,
                                                            span: bytes(18591..18602),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "from_rng",
                                    complete_name: "<  as rand_core::SeedableRng>::from_rng",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_rng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "SeedableRng::from_rng",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: from_rng,
                                                span: bytes(20327..20335),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: rng,
                                                                span: bytes(20336..20339),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::ImplTrait {
                                                                impl_token: Impl,
                                                                bounds: [
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::None,
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: RngCore,
                                                                                            span: bytes(20351..20358),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(20363..20367),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: Some(
                                            Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Local {
                                                        attrs: [],
                                                        let_token: Let,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            ident: Ident {
                                                                sym: seed,
                                                                span: bytes(20386..20390),
                                                            },
                                                            subpat: None,
                                                        },
                                                        init: Some(
                                                            LocalInit {
                                                                eq_token: Eq,
                                                                expr: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(20393..20397),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Seed,
                                                                                        span: bytes(20399..20403),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: default,
                                                                                        span: bytes(20405..20412),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                diverge: None,
                                                            },
                                                        ),
                                                        semi_token: Semi,
                                                    },
                                                    Stmt::Expr(
                                                        Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: rng,
                                                                                span: bytes(20424..20427),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: fill_bytes,
                                                                span: bytes(20428..20438),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: seed,
                                                                                        span: bytes(20439..20443),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_mut,
                                                                        span: bytes(20444..20450),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            ],
                                                        },
                                                        Some(
                                                            Semi,
                                                        ),
                                                    ),
                                                    Stmt::Expr(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(20463..20467),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: from_seed,
                                                                                span: bytes(20469..20478),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: seed,
                                                                                    span: bytes(20479..20483),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        ),
                                        semi_token: None,
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "try_from_rng",
                                    complete_name: "<  as rand_core::SeedableRng>::try_from_rng",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "try_from_rng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "SeedableRng::try_from_rng",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: try_from_rng,
                                                span: bytes(20650..20662),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: R,
                                                                span: bytes(20663..20664),
                                                            },
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TryRngCore,
                                                                                        span: bytes(20666..20676),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: rng,
                                                                span: bytes(20678..20681),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(20688..20689),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(20694..20700),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(20701..20705),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: R,
                                                                                                span: bytes(20707..20708),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(20710..20715),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: Some(
                                            Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Local {
                                                        attrs: [],
                                                        let_token: Let,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            ident: Ident {
                                                                sym: seed,
                                                                span: bytes(20735..20739),
                                                            },
                                                            subpat: None,
                                                        },
                                                        init: Some(
                                                            LocalInit {
                                                                eq_token: Eq,
                                                                expr: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(20742..20746),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Seed,
                                                                                        span: bytes(20748..20752),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: default,
                                                                                        span: bytes(20754..20761),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                diverge: None,
                                                            },
                                                        ),
                                                        semi_token: Semi,
                                                    },
                                                    Stmt::Expr(
                                                        Expr::Try {
                                                            attrs: [],
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: rng,
                                                                                    span: bytes(20773..20776),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: try_fill_bytes,
                                                                    span: bytes(20777..20791),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: seed,
                                                                                            span: bytes(20792..20796),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: as_mut,
                                                                            span: bytes(20797..20803),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            question_token: Question,
                                                        },
                                                        Some(
                                                            Semi,
                                                        ),
                                                    ),
                                                    Stmt::Expr(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Ok,
                                                                                span: bytes(20817..20819),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(20820..20824),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: from_seed,
                                                                                        span: bytes(20826..20835),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: seed,
                                                                                            span: bytes(20836..20840),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ],
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        ),
                                        semi_token: None,
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "from_os_rng",
                                    complete_name: "<  as rand_core::SeedableRng>::from_os_rng",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "from_os_rng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "SeedableRng::from_os_rng",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(21648..21651),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(21652..21659),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(21660..21661),
                                                        },
                                                        Literal {
                                                            lit: "os_rng",
                                                            span: bytes(21662..21670),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: from_os_rng,
                                                span: bytes(21680..21691),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Self,
                                                                    span: bytes(21697..21701),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: Some(
                                            Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Expr(
                                                        Expr::Match {
                                                            attrs: [],
                                                            match_token: Match,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(21718..21722),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: try_from_os_rng,
                                                                                    span: bytes(21724..21739),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            brace_token: Brace,
                                                            arms: [
                                                                Arm {
                                                                    attrs: [],
                                                                    pat: Pat::TupleStruct {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Ok,
                                                                                        span: bytes(21756..21758),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: res,
                                                                                    span: bytes(21759..21762),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    guard: None,
                                                                    fat_arrow_token: FatArrow,
                                                                    body: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: res,
                                                                                        span: bytes(21767..21770),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    comma: Some(
                                                                        Comma,
                                                                    ),
                                                                },
                                                                Arm {
                                                                    attrs: [],
                                                                    pat: Pat::TupleStruct {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Err,
                                                                                        span: bytes(21784..21787),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: err,
                                                                                    span: bytes(21788..21791),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    guard: None,
                                                                    fat_arrow_token: FatArrow,
                                                                    body: Expr::Macro {
                                                                        attrs: [],
                                                                        mac: Macro {
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: panic,
                                                                                            span: bytes(21796..21801),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            bang_token: Not,
                                                                            delimiter: MacroDelimiter::Paren(
                                                                                Paren,
                                                                            ),
                                                                            tokens: TokenStream [
                                                                                Literal {
                                                                                    lit: "from_os_rng failed: {}",
                                                                                    span: bytes(21803..21827),
                                                                                },
                                                                                Punct {
                                                                                    char: ',',
                                                                                    spacing: Alone,
                                                                                    span: bytes(21827..21828),
                                                                                },
                                                                                Ident {
                                                                                    sym: err,
                                                                                    span: bytes(21829..21832),
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    comma: Some(
                                                                        Comma,
                                                                    ),
                                                                },
                                                            ],
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        ),
                                        semi_token: None,
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                            TraitFnItem {
                                fn_name: Name {
                                    name: "try_from_os_rng",
                                    complete_name: "<  as rand_core::SeedableRng>::try_from_os_rng",
                                    import_name: MyPath {
                                        name: "<  as rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng>",
                                                next: Some(
                                                    MyPath {
                                                        name: "try_from_os_rng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "SeedableRng::try_from_os_rng",
                                item: Some(
                                    TraitItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(22237..22240),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(22241..22248),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(22249..22250),
                                                        },
                                                        Literal {
                                                            lit: "os_rng",
                                                            span: bytes(22251..22259),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: try_from_os_rng,
                                                span: bytes(22269..22284),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Result,
                                                                    span: bytes(22290..22296),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(22297..22301),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: getrandom,
                                                                                                span: bytes(22303..22312),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Error,
                                                                                                span: bytes(22314..22319),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        default: Some(
                                            Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Local {
                                                        attrs: [],
                                                        let_token: Let,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            ident: Ident {
                                                                sym: seed,
                                                                span: bytes(22339..22343),
                                                            },
                                                            subpat: None,
                                                        },
                                                        init: Some(
                                                            LocalInit {
                                                                eq_token: Eq,
                                                                expr: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(22346..22350),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Seed,
                                                                                        span: bytes(22352..22356),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: default,
                                                                                        span: bytes(22358..22365),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                diverge: None,
                                                            },
                                                        ),
                                                        semi_token: Semi,
                                                    },
                                                    Stmt::Expr(
                                                        Expr::Try {
                                                            attrs: [],
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: getrandom,
                                                                                    span: bytes(22377..22386),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fill,
                                                                                    span: bytes(22388..22392),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: seed,
                                                                                            span: bytes(22393..22397),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: as_mut,
                                                                            span: bytes(22398..22404),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            question_token: Question,
                                                        },
                                                        Some(
                                                            Semi,
                                                        ),
                                                    ),
                                                    Stmt::Local {
                                                        attrs: [],
                                                        let_token: Let,
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: res,
                                                                span: bytes(22422..22425),
                                                            },
                                                            subpat: None,
                                                        },
                                                        init: Some(
                                                            LocalInit {
                                                                eq_token: Eq,
                                                                expr: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(22428..22432),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: from_seed,
                                                                                        span: bytes(22434..22443),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: seed,
                                                                                            span: bytes(22444..22448),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                diverge: None,
                                                            },
                                                        ),
                                                        semi_token: Semi,
                                                    },
                                                    Stmt::Expr(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Ok,
                                                                                span: bytes(22459..22461),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: res,
                                                                                    span: bytes(22462..22465),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        ),
                                        semi_token: None,
                                    },
                                ),
                                inside_items: [],
                                is_constructor: true,
                            },
                        ],
                        visibility: PubT,
                        relative_types: [
                            "Sized",
                        ],
                    },
                ],
                use_trees: [
                    UseTree {
                        use_name: "fmt",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "fmt",
                                    next: None,
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "DerefMut",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "core",
                            next: Some(
                                MyPath {
                                    name: "ops",
                                    next: Some(
                                        MyPath {
                                            name: "DerefMut",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: Pri,
                    },
                    UseTree {
                        use_name: "OsError",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "os",
                                    next: Some(
                                        MyPath {
                                            name: "OsError",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: PubT,
                    },
                    UseTree {
                        use_name: "OsRng",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "rand_core",
                            next: Some(
                                MyPath {
                                    name: "os",
                                    next: Some(
                                        MyPath {
                                            name: "OsRng",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: PubT,
                    },
                ],
            },
             sub_mods: [
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "test",
                            mod_tree: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "test",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "",
                            parent_directory_path: "",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: super,
                                                    span: bytes(23561..23566),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Glob(
                                                    UseGlob {
                                                        star_token: Star,
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [
                            StructItem {
                                struct_name: Name {
                                    name: "SomeRng",
                                    complete_name: "rand_core::test::SomeRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "test",
                                                next: Some(
                                                    MyPath {
                                                        name: "SomeRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: SomeRng,
                                            span: bytes(25033..25040),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        fields: Fields::Unit,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                visibility: Pri,
                                relative_types: [],
                            },
                        ],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "SomeRng",
                                    complete_name: "rand_core::test::SomeRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "test",
                                                next: Some(
                                                    MyPath {
                                                        name: "SomeRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "",
                                            next: None,
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RngCore,
                                                                span: bytes(25052..25059),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: SomeRng,
                                                            span: bytes(25064..25071),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "next_u32",
                                            complete_name: "<rand_core::test::SomeRng as >::next_u32",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "test",
                                                        next: Some(
                                                            MyPath {
                                                                name: "SomeRng as >",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "next_u32",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::next_u32",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next_u32,
                                                        span: bytes(25085..25093),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(25099..25103),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u32,
                                                                            span: bytes(25108..25111),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Macro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: unimplemented,
                                                                                    span: bytes(25126..25139),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Not,
                                                                    delimiter: MacroDelimiter::Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "next_u64",
                                            complete_name: "<rand_core::test::SomeRng as >::next_u64",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "test",
                                                        next: Some(
                                                            MyPath {
                                                                name: "SomeRng as >",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "next_u64",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::next_u64",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next_u64,
                                                        span: bytes(25164..25172),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(25178..25182),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(25187..25190),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Macro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: unimplemented,
                                                                                    span: bytes(25205..25218),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Not,
                                                                    delimiter: MacroDelimiter::Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fill_bytes",
                                            complete_name: "<rand_core::test::SomeRng as >::fill_bytes",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "test",
                                                        next: Some(
                                                            MyPath {
                                                                name: "SomeRng as >",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fill_bytes",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::fill_bytes",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fill_bytes,
                                                        span: bytes(25243..25253),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(25259..25263),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Wild {
                                                                    attrs: [],
                                                                    underscore_token: Underscore,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Slice {
                                                                        bracket_token: Bracket,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u8,
                                                                                            span: bytes(25274..25276),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Macro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: unimplemented,
                                                                                    span: bytes(25293..25306),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Not,
                                                                    delimiter: MacroDelimiter::Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 1,
                                struct_name: Name {
                                    name: "SomeRng",
                                    complete_name: "rand_core::test::SomeRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "test",
                                                next: Some(
                                                    MyPath {
                                                        name: "SomeRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "",
                                            next: None,
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: CryptoRng,
                                                                span: bytes(25336..25345),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: SomeRng,
                                                            span: bytes(25350..25357),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [],
                                relative_types: [],
                            },
                        ],
                        functions: [],
                        traits: [],
                        use_trees: [
                            UseTree {
                                use_name: "*",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "super",
                                    next: Some(
                                        MyPath {
                                            name: "*",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: []
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Fn(
                        FunctionModInfo {
                            function_name: "SeedableRng::seed_from_u64",
                            mod_tree: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "SeedableRng",
                                        next: Some(
                                            MyPath {
                                                name: "seed_from_u64",
                                                next: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                            visibility: Pri,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [],
                        functions: [
                            FnItem {
                                fn_name: Name {
                                    name: "pcg32",
                                    complete_name: "rand_core::SeedableRng::seed_from_u64::pcg32",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng",
                                                next: Some(
                                                    MyPath {
                                                        name: "seed_from_u64",
                                                        next: Some(
                                                            MyPath {
                                                                name: "pcg32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "pcg32",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: pcg32,
                                                span: bytes(17986..17991),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: state,
                                                                span: bytes(17992..17997),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u64,
                                                                                span: bytes(18004..18007),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Array {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(18013..18015),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    semi_token: Semi,
                                                    len: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 4,
                                                        },
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Item(
                                                    Item::Const {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        const_token: Const,
                                                        ident: Ident {
                                                            sym: MUL,
                                                            span: bytes(18040..18043),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(18045..18048),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 6364136223846793005,
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                Stmt::Item(
                                                    Item::Const {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        const_token: Const,
                                                        ident: Ident {
                                                            sym: INC,
                                                            span: bytes(18090..18093),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(18095..18098),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        expr: Expr::Lit {
                                                            attrs: [],
                                                            lit: Lit::Int {
                                                                token: 11634580027462260723,
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                Stmt::Expr(
                                                    Expr::Assign {
                                                        attrs: [],
                                                        left: Expr::Unary {
                                                            attrs: [],
                                                            op: UnOp::Deref(
                                                                Star,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: state,
                                                                                span: bytes(18265..18270),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        eq_token: Eq,
                                                        right: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(18273..18278),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: wrapping_mul,
                                                                    span: bytes(18279..18291),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: MUL,
                                                                                        span: bytes(18292..18295),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: wrapping_add,
                                                                span: bytes(18297..18309),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: INC,
                                                                                    span: bytes(18310..18313),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: state,
                                                            span: bytes(18332..18337),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Unary {
                                                                attrs: [],
                                                                op: UnOp::Deref(
                                                                    Star,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: state,
                                                                                    span: bytes(18341..18346),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: xorshifted,
                                                            span: bytes(18430..18440),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Paren {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            expr: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: state,
                                                                                                            span: bytes(18446..18451),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::Shr(
                                                                                            Shr,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 18,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::BitXor(
                                                                                    Caret,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: state,
                                                                                                    span: bytes(18461..18466),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Shr(
                                                                            Shr,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 27,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(18478..18481),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: rot,
                                                            span: bytes(18499..18502),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: state,
                                                                                            span: bytes(18506..18511),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Shr(
                                                                            Shr,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 59,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(18522..18525),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: x,
                                                            span: bytes(18543..18544),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: xorshifted,
                                                                                    span: bytes(18547..18557),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: rotate_right,
                                                                    span: bytes(18558..18570),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: rot,
                                                                                        span: bytes(18571..18574),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: x,
                                                                            span: bytes(18589..18590),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: to_le_bytes,
                                                            span: bytes(18591..18602),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: MUL,
                                            span: bytes(18040..18043),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(18045..18048),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 6364136223846793005,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                    Item::Const {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        const_token: Const,
                                        ident: Ident {
                                            sym: INC,
                                            span: bytes(18090..18093),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Colon,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(18095..18098),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        eq_token: Eq,
                                        expr: Expr::Lit {
                                            attrs: [],
                                            lit: Lit::Int {
                                                token: 11634580027462260723,
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ],
                                visibility: Pri,
                            },
                        ],
                        traits: [],
                        use_trees: [],
                    },
                     sub_mods: [
                        RefCell {
                            value: ModContext {
                             mod_info: Fn(
                                FunctionModInfo {
                                    function_name: "pcg32",
                                    mod_tree: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "SeedableRng",
                                                next: Some(
                                                    MyPath {
                                                        name: "seed_from_u64",
                                                        next: Some(
                                                            MyPath {
                                                                name: "pcg32",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                    visibility: Pri,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [
                                    ConstItem {
                                        item: Some(
                                            ItemConst {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                const_token: Const,
                                                ident: Ident {
                                                    sym: MUL,
                                                    span: bytes(18040..18043),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(18045..18048),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                eq_token: Eq,
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 6364136223846793005,
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    ConstItem {
                                        item: Some(
                                            ItemConst {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                const_token: Const,
                                                ident: Ident {
                                                    sym: INC,
                                                    span: bytes(18090..18093),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: Colon,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(18095..18098),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                eq_token: Eq,
                                                expr: Expr::Lit {
                                                    attrs: [],
                                                    lit: Lit::Int {
                                                        token: 11634580027462260723,
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                trait_aliases: [],
                                uses: [],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [],
                                enums: [],
                                unions: [],
                                impls: [],
                                functions: [],
                                traits: [],
                                use_trees: [],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                    ]
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "block",
                            mod_tree: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "block",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src/block.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src",
                            mod_file_directory_path: None,
                            visibility: PubT,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(30309..30314),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: impls,
                                                            span: bytes(30316..30321),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: fill_via_chunks,
                                                                    span: bytes(30323..30338),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(30344..30349),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: CryptoRng,
                                                                        span: bytes(30352..30361),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: RngCore,
                                                                        span: bytes(30363..30370),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: SeedableRng,
                                                                        span: bytes(30372..30383),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TryRngCore,
                                                                        span: bytes(30385..30395),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(30402..30406),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(30408..30411),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(30415..30418),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(30419..30426),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(30427..30428),
                                                        },
                                                        Literal {
                                                            lit: "serde",
                                                            span: bytes(30429..30436),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: serde,
                                                    span: bytes(30443..30448),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Deserialize,
                                                                        span: bytes(30451..30462),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Serialize,
                                                                        span: bytes(30464..30473),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [
                            ModItem {
                                mod_name: "test",
                                file_name: None,
                                item: Some(
                                    ItemMod {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(42849..42852),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: test,
                                                            span: bytes(42853..42857),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        unsafety: None,
                                        mod_token: Mod,
                                        ident: Ident {
                                            sym: test,
                                            span: bytes(42864..42868),
                                        },
                                        content: Some(
                                            (
                                                Brace,
                                                [],
                                            ),
                                        ),
                                        semi: None,
                                    },
                                ),
                                inside_items: [
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(42879..42884),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: block,
                                                            span: bytes(42886..42891),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Group(
                                                            UseGroup {
                                                                brace_token: Brace,
                                                                items: [
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: BlockRng,
                                                                                span: bytes(42894..42902),
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: BlockRng64,
                                                                                span: bytes(42904..42914),
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: BlockRngCore,
                                                                                span: bytes(42916..42928),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(42939..42944),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: RngCore,
                                                                        span: bytes(42947..42954),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: SeedableRng,
                                                                        span: bytes(42956..42967),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Struct {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: derive,
                                                                    span: bytes(42977..42983),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: Debug,
                                                            span: bytes(42984..42989),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(42989..42990),
                                                        },
                                                        Ident {
                                                            sym: Clone,
                                                            span: bytes(42991..42996),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: DummyRng,
                                            span: bytes(43010..43018),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        fields: Fields::Named {
                                            brace_token: Brace,
                                            named: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: counter,
                                                            span: bytes(43029..43036),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u32,
                                                                        span: bytes(43038..43041),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                            ],
                                        },
                                        semi_token: None,
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: BlockRngCore,
                                                                span: bytes(43059..43071),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: DummyRng,
                                                            span: bytes(43076..43084),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Item,
                                                    span: bytes(43100..43104),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(43107..43110),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Results,
                                                    span: bytes(43125..43132),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Array {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u32,
                                                                        span: bytes(43136..43139),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    semi_token: Semi,
                                                    len: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 16,
                                                        },
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: generate,
                                                        span: bytes(43158..43166),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(43172..43176),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: results,
                                                                        span: bytes(43178..43185),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(43192..43196),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Results,
                                                                                        span: bytes(43198..43205),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: r,
                                                                        span: bytes(43225..43226),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                in_token: In,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: results,
                                                                                    span: bytes(43230..43237),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Deref(
                                                                                        Star,
                                                                                    ),
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: r,
                                                                                                        span: bytes(43257..43258),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(43261..43265),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: counter,
                                                                                            span: bytes(43266..43273),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(43291..43295),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: counter,
                                                                                            span: bytes(43296..43303),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(43306..43310),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: counter,
                                                                                                span: bytes(43311..43318),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: wrapping_add,
                                                                                        span: bytes(43319..43331),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 3511615421,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: SeedableRng,
                                                                span: bytes(43385..43396),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: DummyRng,
                                                            span: bytes(43401..43409),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Seed,
                                                    span: bytes(43425..43429),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Array {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(43433..43435),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    semi_token: Semi,
                                                    len: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 4,
                                                        },
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: from_seed,
                                                        span: bytes(43453..43462),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: seed,
                                                                        span: bytes(43463..43467),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(43469..43473),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Seed,
                                                                                    span: bytes(43475..43479),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(43484..43488),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: DummyRng,
                                                                                span: bytes(43503..43511),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: counter,
                                                                                span: bytes(43530..43537),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u32,
                                                                                                span: bytes(43539..43542),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: from_le_bytes,
                                                                                                span: bytes(43544..43557),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: seed,
                                                                                                    span: bytes(43558..43562),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Struct {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: derive,
                                                                    span: bytes(44591..44597),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: Debug,
                                                            span: bytes(44598..44603),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(44603..44604),
                                                        },
                                                        Ident {
                                                            sym: Clone,
                                                            span: bytes(44605..44610),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: DummyRng64,
                                            span: bytes(44624..44634),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        fields: Fields::Named {
                                            brace_token: Brace,
                                            named: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: counter,
                                                            span: bytes(44645..44652),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(44654..44657),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                            ],
                                        },
                                        semi_token: None,
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: BlockRngCore,
                                                                span: bytes(44675..44687),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: DummyRng64,
                                                            span: bytes(44692..44702),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Item,
                                                    span: bytes(44718..44722),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(44725..44728),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Results,
                                                    span: bytes(44743..44750),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Array {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(44754..44757),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    semi_token: Semi,
                                                    len: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 8,
                                                        },
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: generate,
                                                        span: bytes(44775..44783),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(44789..44793),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: results,
                                                                        span: bytes(44795..44802),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(44809..44813),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Results,
                                                                                        span: bytes(44815..44822),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: r,
                                                                        span: bytes(44842..44843),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                in_token: In,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: results,
                                                                                    span: bytes(44847..44854),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Unary {
                                                                                    attrs: [],
                                                                                    op: UnOp::Deref(
                                                                                        Star,
                                                                                    ),
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: r,
                                                                                                        span: bytes(44874..44875),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(44878..44882),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: counter,
                                                                                            span: bytes(44883..44890),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(44908..44912),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: counter,
                                                                                            span: bytes(44913..44920),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(44923..44927),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: counter,
                                                                                                span: bytes(44928..44935),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: wrapping_add,
                                                                                        span: bytes(44936..44948),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 2781463553396133981,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: SeedableRng,
                                                                span: bytes(45011..45022),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: DummyRng64,
                                                            span: bytes(45027..45037),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Seed,
                                                    span: bytes(45053..45057),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Array {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(45061..45063),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    semi_token: Semi,
                                                    len: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 8,
                                                        },
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: from_seed,
                                                        span: bytes(45081..45090),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: seed,
                                                                        span: bytes(45091..45095),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(45097..45101),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Seed,
                                                                                    span: bytes(45103..45107),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(45112..45116),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: DummyRng64,
                                                                                span: bytes(45131..45141),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: counter,
                                                                                span: bytes(45160..45167),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u64,
                                                                                                span: bytes(45169..45172),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: from_le_bytes,
                                                                                                span: bytes(45174..45187),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: seed,
                                                                                                    span: bytes(45188..45192),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ],
                                visibility: Pri,
                            },
                        ],
                        statics: [],
                        types: [],
                        structs: [
                            StructItem {
                                struct_name: Name {
                                    name: "BlockRng",
                                    complete_name: "rand_core::block::BlockRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: derive,
                                                                    span: bytes(33143..33149),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: Clone,
                                                            span: bytes(33150..33155),
                                                        },
                                                    ],
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg_attr,
                                                                    span: bytes(33160..33168),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(33169..33176),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(33177..33178),
                                                        },
                                                        Literal {
                                                            lit: "serde",
                                                            span: bytes(33179..33186),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(33186..33187),
                                                        },
                                                        Ident {
                                                            sym: derive,
                                                            span: bytes(33188..33194),
                                                        },
                                                        Group {
                                                            delimiter: Parenthesis,
                                                            stream: TokenStream [
                                                                Ident {
                                                                    sym: Serialize,
                                                                    span: bytes(33195..33204),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(33204..33205),
                                                                },
                                                                Ident {
                                                                    sym: Deserialize,
                                                                    span: bytes(33206..33217),
                                                                },
                                                            ],
                                                            span: bytes(33194..33218),
                                                        },
                                                    ],
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg_attr,
                                                                    span: bytes(33223..33231),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(33237..33244),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(33245..33246),
                                                        },
                                                        Literal {
                                                            lit: "serde",
                                                            span: bytes(33247..33254),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(33254..33255),
                                                        },
                                                        Ident {
                                                            sym: serde,
                                                            span: bytes(33260..33265),
                                                        },
                                                        Group {
                                                            delimiter: Parenthesis,
                                                            stream: TokenStream [
                                                                Ident {
                                                                    sym: bound,
                                                                    span: bytes(33275..33280),
                                                                },
                                                                Punct {
                                                                    char: '=',
                                                                    spacing: Alone,
                                                                    span: bytes(33281..33282),
                                                                },
                                                                Literal {
                                                                    lit: "for<'x> R: Serialize + Deserialize<'x>, for<'x> R::Results: Serialize + Deserialize<'x>",
                                                                    span: bytes(33283..33372),
                                                                },
                                                            ],
                                                            span: bytes(33265..33378),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: BlockRng,
                                            span: bytes(33393..33401),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(33402..33403),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(33405..33417),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        fields: Fields::Named {
                                            brace_token: Brace,
                                            named: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: results,
                                                            span: bytes(33425..33432),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: R,
                                                                        span: bytes(33434..33435),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Results,
                                                                        span: bytes(33437..33444),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: index,
                                                            span: bytes(33450..33455),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: usize,
                                                                        span: bytes(33457..33462),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                                Field {
                                                    attrs: [
                                                        Attribute {
                                                            pound_token: Pound,
                                                            style: AttrStyle::Outer,
                                                            bracket_token: Bracket,
                                                            meta: Meta::NameValue {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: doc,
                                                                                span: bytes(33468..33537),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                eq_token: Eq,
                                                                value: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Str {
                                                                        token: " The *core* part of the RNG, implementing the `generate` function.",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    ],
                                                    vis: Visibility::Public(
                                                        Pub,
                                                    ),
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: core,
                                                            span: bytes(33546..33550),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: R,
                                                                        span: bytes(33552..33553),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                            ],
                                        },
                                        semi_token: None,
                                    },
                                ),
                                visibility: PubT,
                                relative_types: [
                                    "BlockRngCore",
                                    "R",
                                    "Results",
                                    "usize",
                                ],
                            },
                            StructItem {
                                struct_name: Name {
                                    name: "BlockRng64",
                                    complete_name: "rand_core::block::BlockRng64",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: derive,
                                                                    span: bytes(38508..38514),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: Clone,
                                                            span: bytes(38515..38520),
                                                        },
                                                    ],
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg_attr,
                                                                    span: bytes(38525..38533),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(38534..38541),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(38542..38543),
                                                        },
                                                        Literal {
                                                            lit: "serde",
                                                            span: bytes(38544..38551),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(38551..38552),
                                                        },
                                                        Ident {
                                                            sym: derive,
                                                            span: bytes(38553..38559),
                                                        },
                                                        Group {
                                                            delimiter: Parenthesis,
                                                            stream: TokenStream [
                                                                Ident {
                                                                    sym: Serialize,
                                                                    span: bytes(38560..38569),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(38569..38570),
                                                                },
                                                                Ident {
                                                                    sym: Deserialize,
                                                                    span: bytes(38571..38582),
                                                                },
                                                            ],
                                                            span: bytes(38559..38583),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: BlockRng64,
                                            span: bytes(38597..38607),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(38608..38609),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(38611..38623),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(38627..38632),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        fields: Fields::Named {
                                            brace_token: Brace,
                                            named: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: results,
                                                            span: bytes(38640..38647),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: R,
                                                                        span: bytes(38649..38650),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Results,
                                                                        span: bytes(38652..38659),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: index,
                                                            span: bytes(38665..38670),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: usize,
                                                                        span: bytes(38672..38677),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: half_used,
                                                            span: bytes(38683..38692),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: bool,
                                                                        span: bytes(38694..38698),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                                Field {
                                                    attrs: [
                                                        Attribute {
                                                            pound_token: Pound,
                                                            style: AttrStyle::Outer,
                                                            bracket_token: Bracket,
                                                            meta: Meta::NameValue {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: doc,
                                                                                span: bytes(38756..38825),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                eq_token: Eq,
                                                                value: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Str {
                                                                        token: " The *core* part of the RNG, implementing the `generate` function.",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    ],
                                                    vis: Visibility::Public(
                                                        Pub,
                                                    ),
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: core,
                                                            span: bytes(38834..38838),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: R,
                                                                        span: bytes(38840..38841),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                            ],
                                        },
                                        semi_token: None,
                                    },
                                ),
                                visibility: PubT,
                                relative_types: [
                                    "BlockRngCore",
                                    "R",
                                    "Results",
                                    "Sized",
                                    "bool",
                                    "usize",
                                ],
                            },
                        ],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "BlockRng",
                                    complete_name: "rand_core::block::BlockRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Debug",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "fmt",
                                            next: Some(
                                                MyPath {
                                                    name: "Debug",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(33642..33643),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(33645..33657),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(33660..33663),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Debug,
                                                                                    span: bytes(33665..33670),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(33672..33675),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Debug,
                                                                span: bytes(33677..33682),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng,
                                                            span: bytes(33687..33695),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(33696..33697),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<rand_core::block::BlockRng as fmt::Debug>::fmt",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng as fmt",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "Debug>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "fmt",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(33708..33711),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(33713..33717),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(33719..33722),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(33729..33732),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(33734..33743),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(33748..33751),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(33753..33759),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: fmt,
                                                                                                    span: bytes(33770..33773),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: debug_struct,
                                                                                    span: bytes(33774..33786),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Str {
                                                                                            token: "BlockRng",
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: field,
                                                                                span: bytes(33812..33817),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Str {
                                                                                        token: "core",
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Reference {
                                                                                    attrs: [],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(33827..33831),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: core,
                                                                                                span: bytes(33832..33836),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: field,
                                                                            span: bytes(33851..33856),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Str {
                                                                                    token: "result_len",
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: None,
                                                                                expr: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(33872..33876),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: results,
                                                                                                    span: bytes(33877..33884),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: as_ref,
                                                                                            span: bytes(33885..33891),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: len,
                                                                                        span: bytes(33894..33897),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: field,
                                                                        span: bytes(33914..33919),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Str {
                                                                                token: "index",
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Expr::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: None,
                                                                            expr: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(33930..33934),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: index,
                                                                                        span: bytes(33935..33940),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: finish,
                                                                    span: bytes(33955..33961),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "BlockRngCore",
                                    "Debug",
                                    "fmt",
                                ],
                            },
                            ImplItem {
                                impl_num: 1,
                                struct_name: Name {
                                    name: "BlockRng",
                                    complete_name: "rand_core::block::BlockRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: None,
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(33978..33979),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(33981..33993),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: None,
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng,
                                                            span: bytes(33995..34003),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(34004..34005),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "new",
                                            complete_name: "rand_core::block::BlockRng::new",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "new",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::new",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(34145..34151),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: new,
                                                        span: bytes(34164..34167),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: core,
                                                                        span: bytes(34168..34172),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: R,
                                                                                    span: bytes(34174..34175),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: BlockRng,
                                                                            span: bytes(34180..34188),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: R,
                                                                                                        span: bytes(34189..34190),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: results_empty,
                                                                    span: bytes(34206..34219),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: R,
                                                                                            span: bytes(34222..34223),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Results,
                                                                                            span: bytes(34225..34232),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: default,
                                                                                            span: bytes(34234..34241),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: BlockRng,
                                                                                span: bytes(34253..34261),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: core,
                                                                                span: bytes(34276..34280),
                                                                            },
                                                                        ),
                                                                        colon_token: None,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: core,
                                                                                            span: bytes(34276..34280),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: index,
                                                                                span: bytes(34294..34299),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: results_empty,
                                                                                                    span: bytes(34301..34314),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: as_ref,
                                                                                    span: bytes(34315..34321),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: len,
                                                                                span: bytes(34324..34327),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: results,
                                                                                span: bytes(34343..34350),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: results_empty,
                                                                                            span: bytes(34352..34365),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "index",
                                            complete_name: "rand_core::block::BlockRng::index",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "index",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::index",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(34616..34622),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(34623..34629),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: index,
                                                        span: bytes(34643..34648),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(34650..34654),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(34659..34664),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(34675..34679),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: index,
                                                                        span: bytes(34680..34685),
                                                                    },
                                                                ),
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "reset",
                                            complete_name: "rand_core::block::BlockRng::reset",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "reset",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::reset",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(34820..34826),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: reset,
                                                        span: bytes(34839..34844),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(34850..34854),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(34866..34870),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: index,
                                                                            span: bytes(34871..34876),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(34879..34883),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: results,
                                                                                    span: bytes(34884..34891),
                                                                                },
                                                                            ),
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: as_ref,
                                                                            span: bytes(34892..34898),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: len,
                                                                        span: bytes(34901..34904),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "generate_and_set",
                                            complete_name: "rand_core::block::BlockRng::generate_and_set",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "generate_and_set",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::generate_and_set",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(35018..35024),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: generate_and_set,
                                                        span: bytes(35037..35053),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(35059..35063),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: index,
                                                                        span: bytes(35065..35070),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: usize,
                                                                                    span: bytes(35072..35077),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: assert,
                                                                                span: bytes(35089..35095),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: index,
                                                                        span: bytes(35097..35102),
                                                                    },
                                                                    Punct {
                                                                        char: '<',
                                                                        spacing: Alone,
                                                                        span: bytes(35103..35104),
                                                                    },
                                                                    Ident {
                                                                        sym: self,
                                                                        span: bytes(35105..35109),
                                                                    },
                                                                    Punct {
                                                                        char: '.',
                                                                        spacing: Alone,
                                                                        span: bytes(35109..35110),
                                                                    },
                                                                    Ident {
                                                                        sym: results,
                                                                        span: bytes(35110..35117),
                                                                    },
                                                                    Punct {
                                                                        char: '.',
                                                                        spacing: Alone,
                                                                        span: bytes(35117..35118),
                                                                    },
                                                                    Ident {
                                                                        sym: as_ref,
                                                                        span: bytes(35118..35124),
                                                                    },
                                                                    Group {
                                                                        delimiter: Parenthesis,
                                                                        stream: TokenStream [],
                                                                        span: bytes(35124..35126),
                                                                    },
                                                                    Punct {
                                                                        char: '.',
                                                                        spacing: Alone,
                                                                        span: bytes(35126..35127),
                                                                    },
                                                                    Ident {
                                                                        sym: len,
                                                                        span: bytes(35127..35130),
                                                                    },
                                                                    Group {
                                                                        delimiter: Parenthesis,
                                                                        stream: TokenStream [],
                                                                        span: bytes(35130..35132),
                                                                    },
                                                                ],
                                                            },
                                                            semi_token: Some(
                                                                Semi,
                                                            ),
                                                        },
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(35143..35147),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: core,
                                                                            span: bytes(35148..35152),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: generate,
                                                                    span: bytes(35153..35161),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(35167..35171),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: results,
                                                                                    span: bytes(35172..35179),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(35190..35194),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: index,
                                                                            span: bytes(35195..35200),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: index,
                                                                                    span: bytes(35203..35208),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "BlockRngCore",
                                ],
                            },
                            ImplItem {
                                impl_num: 2,
                                struct_name: Name {
                                    name: "BlockRng",
                                    complete_name: "rand_core::block::BlockRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "RngCore",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "RngCore",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(35224..35225),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(35227..35239),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::AssocType(
                                                                                            AssocType {
                                                                                                ident: Ident {
                                                                                                    sym: Item,
                                                                                                    span: bytes(35240..35244),
                                                                                                },
                                                                                                generics: None,
                                                                                                eq_token: Eq,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u32,
                                                                                                                    span: bytes(35247..35250),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RngCore,
                                                                span: bytes(35253..35260),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng,
                                                            span: bytes(35265..35273),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(35274..35275),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "next_u32",
                                            complete_name: "<rand_core::block::BlockRng as rand_core::RngCore>::next_u32",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "RngCore>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "next_u32",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::next_u32",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(35285..35291),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next_u32,
                                                        span: bytes(35300..35308),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(35314..35318),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u32,
                                                                            span: bytes(35323..35326),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(35340..35344),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: index,
                                                                                span: bytes(35345..35350),
                                                                            },
                                                                        ),
                                                                    },
                                                                    op: BinOp::Ge(
                                                                        Ge,
                                                                    ),
                                                                    right: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(35354..35358),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: results,
                                                                                        span: bytes(35359..35366),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_ref,
                                                                                span: bytes(35367..35373),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: len,
                                                                            span: bytes(35376..35379),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(35396..35400),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: generate_and_set,
                                                                                    span: bytes(35401..35417),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: None,
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: value,
                                                                    span: bytes(35445..35450),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Index {
                                                                        attrs: [],
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(35453..35457),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: results,
                                                                                        span: bytes(35458..35465),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_ref,
                                                                                span: bytes(35466..35472),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        bracket_token: Bracket,
                                                                        index: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(35475..35479),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: index,
                                                                                    span: bytes(35480..35485),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(35496..35500),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: index,
                                                                            span: bytes(35501..35506),
                                                                        },
                                                                    ),
                                                                },
                                                                op: BinOp::AddAssign(
                                                                    PlusEq,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(35521..35526),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "next_u64",
                                            complete_name: "<rand_core::block::BlockRng as rand_core::RngCore>::next_u64",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "RngCore>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "next_u64",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::next_u64",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(35540..35546),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next_u64,
                                                        span: bytes(35555..35563),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(35569..35573),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(35578..35581),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: read_u64,
                                                                    span: bytes(35596..35604),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Closure {
                                                                        attrs: [],
                                                                        lifetimes: None,
                                                                        constness: None,
                                                                        movability: None,
                                                                        asyncness: None,
                                                                        capture: None,
                                                                        or1_token: Or,
                                                                        inputs: [
                                                                            Pat::Type {
                                                                                attrs: [],
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: results,
                                                                                        span: bytes(35608..35615),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                                colon_token: Colon,
                                                                                ty: Type::Reference {
                                                                                    and_token: And,
                                                                                    lifetime: None,
                                                                                    mutability: None,
                                                                                    elem: Type::Slice {
                                                                                        bracket_token: Bracket,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u32,
                                                                                                            span: bytes(35619..35622),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: index,
                                                                                    span: bytes(35625..35630),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                        or2_token: Or,
                                                                        output: ReturnType::Default,
                                                                        body: Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Local {
                                                                                        attrs: [],
                                                                                        let_token: Let,
                                                                                        pat: Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: data,
                                                                                                span: bytes(35650..35654),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        init: Some(
                                                                                            LocalInit {
                                                                                                eq_token: Eq,
                                                                                                expr: Expr::Reference {
                                                                                                    attrs: [],
                                                                                                    and_token: And,
                                                                                                    mutability: None,
                                                                                                    expr: Expr::Index {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: results,
                                                                                                                            span: bytes(35658..35665),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        bracket_token: Bracket,
                                                                                                        index: Expr::Range {
                                                                                                            attrs: [],
                                                                                                            start: Some(
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: index,
                                                                                                                                    span: bytes(35666..35671),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                            limits: RangeLimits::Closed(
                                                                                                                DotDotEq,
                                                                                                            ),
                                                                                                            end: Some(
                                                                                                                Expr::Binary {
                                                                                                                    attrs: [],
                                                                                                                    left: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: index,
                                                                                                                                        span: bytes(35674..35679),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    op: BinOp::Add(
                                                                                                                        Plus,
                                                                                                                    ),
                                                                                                                    right: Expr::Lit {
                                                                                                                        attrs: [],
                                                                                                                        lit: Lit::Int {
                                                                                                                            token: 1,
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                diverge: None,
                                                                                            },
                                                                                        ),
                                                                                        semi_token: Semi,
                                                                                    },
                                                                                    Stmt::Expr(
                                                                                        Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Paren {
                                                                                                attrs: [],
                                                                                                paren_token: Paren,
                                                                                                expr: Expr::Binary {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Call {
                                                                                                        attrs: [],
                                                                                                        func: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: u64,
                                                                                                                            span: bytes(35699..35702),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: from,
                                                                                                                            span: bytes(35704..35708),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Index {
                                                                                                                attrs: [],
                                                                                                                expr: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: data,
                                                                                                                                    span: bytes(35709..35713),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                bracket_token: Bracket,
                                                                                                                index: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 1,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    op: BinOp::Shl(
                                                                                                        Shl,
                                                                                                    ),
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 32,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::BitOr(
                                                                                                Or,
                                                                                            ),
                                                                                            right: Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u64,
                                                                                                                    span: bytes(35727..35730),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                            PathSep,
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: from,
                                                                                                                    span: bytes(35732..35736),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Index {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: data,
                                                                                                                            span: bytes(35737..35741),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        bracket_token: Bracket,
                                                                                                        index: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 0,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: len,
                                                                    span: bytes(35770..35773),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(35776..35780),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: results,
                                                                                        span: bytes(35781..35788),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_ref,
                                                                                span: bytes(35789..35795),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: len,
                                                                            span: bytes(35798..35801),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: index,
                                                                    span: bytes(35818..35823),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(35826..35830),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: index,
                                                                                span: bytes(35831..35836),
                                                                            },
                                                                        ),
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: index,
                                                                                        span: bytes(35849..35854),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Lt(
                                                                        Lt,
                                                                    ),
                                                                    right: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: len,
                                                                                            span: bytes(35857..35860),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Sub(
                                                                            Minus,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(35879..35883),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: index,
                                                                                            span: bytes(35884..35889),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                op: BinOp::AddAssign(
                                                                                    PlusEq,
                                                                                ),
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 2,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: read_u64,
                                                                                                    span: bytes(35958..35966),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(35967..35971),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: results,
                                                                                                    span: bytes(35972..35979),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: as_ref,
                                                                                            span: bytes(35980..35986),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: index,
                                                                                                        span: bytes(35990..35995),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: Some(
                                                                    (
                                                                        Else,
                                                                        Expr::If {
                                                                            attrs: [],
                                                                            if_token: If,
                                                                            cond: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: index,
                                                                                                    span: bytes(36015..36020),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::Ge(
                                                                                    Ge,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: len,
                                                                                                    span: bytes(36024..36027),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            then_branch: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(36042..36046),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: generate_and_set,
                                                                                                span: bytes(36047..36063),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 2,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: read_u64,
                                                                                                                span: bytes(36080..36088),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(36089..36093),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: results,
                                                                                                                span: bytes(36094..36101),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: as_ref,
                                                                                                        span: bytes(36102..36108),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [],
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 0,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                            else_branch: Some(
                                                                                (
                                                                                    Else,
                                                                                    Expr::Block {
                                                                                        attrs: [],
                                                                                        label: None,
                                                                                        block: Block {
                                                                                            brace_token: Brace,
                                                                                            stmts: [
                                                                                                Stmt::Local {
                                                                                                    attrs: [],
                                                                                                    let_token: Let,
                                                                                                    pat: Pat::Ident {
                                                                                                        attrs: [],
                                                                                                        by_ref: None,
                                                                                                        mutability: None,
                                                                                                        ident: Ident {
                                                                                                            sym: x,
                                                                                                            span: bytes(36148..36149),
                                                                                                        },
                                                                                                        subpat: None,
                                                                                                    },
                                                                                                    init: Some(
                                                                                                        LocalInit {
                                                                                                            eq_token: Eq,
                                                                                                            expr: Expr::Call {
                                                                                                                attrs: [],
                                                                                                                func: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: u64,
                                                                                                                                    span: bytes(36152..36155),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                            PathSep,
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: from,
                                                                                                                                    span: bytes(36157..36161),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Index {
                                                                                                                        attrs: [],
                                                                                                                        expr: Expr::MethodCall {
                                                                                                                            attrs: [],
                                                                                                                            receiver: Expr::Field {
                                                                                                                                attrs: [],
                                                                                                                                base: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: self,
                                                                                                                                                    span: bytes(36162..36166),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                dot_token: Dot,
                                                                                                                                member: Member::Named(
                                                                                                                                    Ident {
                                                                                                                                        sym: results,
                                                                                                                                        span: bytes(36167..36174),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            },
                                                                                                                            dot_token: Dot,
                                                                                                                            method: Ident {
                                                                                                                                sym: as_ref,
                                                                                                                                span: bytes(36175..36181),
                                                                                                                            },
                                                                                                                            turbofish: None,
                                                                                                                            paren_token: Paren,
                                                                                                                            args: [],
                                                                                                                        },
                                                                                                                        bracket_token: Bracket,
                                                                                                                        index: Expr::Binary {
                                                                                                                            attrs: [],
                                                                                                                            left: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: len,
                                                                                                                                                span: bytes(36184..36187),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            op: BinOp::Sub(
                                                                                                                                Minus,
                                                                                                                            ),
                                                                                                                            right: Expr::Lit {
                                                                                                                                attrs: [],
                                                                                                                                lit: Lit::Int {
                                                                                                                                    token: 1,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            diverge: None,
                                                                                                        },
                                                                                                    ),
                                                                                                    semi_token: Semi,
                                                                                                },
                                                                                                Stmt::Expr(
                                                                                                    Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(36207..36211),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: generate_and_set,
                                                                                                            span: bytes(36212..36228),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [
                                                                                                            Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                                Stmt::Local {
                                                                                                    attrs: [],
                                                                                                    let_token: Let,
                                                                                                    pat: Pat::Ident {
                                                                                                        attrs: [],
                                                                                                        by_ref: None,
                                                                                                        mutability: None,
                                                                                                        ident: Ident {
                                                                                                            sym: y,
                                                                                                            span: bytes(36249..36250),
                                                                                                        },
                                                                                                        subpat: None,
                                                                                                    },
                                                                                                    init: Some(
                                                                                                        LocalInit {
                                                                                                            eq_token: Eq,
                                                                                                            expr: Expr::Call {
                                                                                                                attrs: [],
                                                                                                                func: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: u64,
                                                                                                                                    span: bytes(36253..36256),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                            PathSep,
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: from,
                                                                                                                                    span: bytes(36258..36262),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                paren_token: Paren,
                                                                                                                args: [
                                                                                                                    Expr::Index {
                                                                                                                        attrs: [],
                                                                                                                        expr: Expr::MethodCall {
                                                                                                                            attrs: [],
                                                                                                                            receiver: Expr::Field {
                                                                                                                                attrs: [],
                                                                                                                                base: Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: self,
                                                                                                                                                    span: bytes(36263..36267),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                dot_token: Dot,
                                                                                                                                member: Member::Named(
                                                                                                                                    Ident {
                                                                                                                                        sym: results,
                                                                                                                                        span: bytes(36268..36275),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            },
                                                                                                                            dot_token: Dot,
                                                                                                                            method: Ident {
                                                                                                                                sym: as_ref,
                                                                                                                                span: bytes(36276..36282),
                                                                                                                            },
                                                                                                                            turbofish: None,
                                                                                                                            paren_token: Paren,
                                                                                                                            args: [],
                                                                                                                        },
                                                                                                                        bracket_token: Bracket,
                                                                                                                        index: Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Int {
                                                                                                                                token: 0,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                            diverge: None,
                                                                                                        },
                                                                                                    ),
                                                                                                    semi_token: Semi,
                                                                                                },
                                                                                                Stmt::Expr(
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Paren {
                                                                                                            attrs: [],
                                                                                                            paren_token: Paren,
                                                                                                            expr: Expr::Binary {
                                                                                                                attrs: [],
                                                                                                                left: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: y,
                                                                                                                                    span: bytes(36303..36304),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                op: BinOp::Shl(
                                                                                                                    Shl,
                                                                                                                ),
                                                                                                                right: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 32,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::BitOr(
                                                                                                            Or,
                                                                                                        ),
                                                                                                        right: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: x,
                                                                                                                            span: bytes(36314..36315),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    None,
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fill_bytes",
                                            complete_name: "<rand_core::block::BlockRng as rand_core::RngCore>::fill_bytes",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "RngCore>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "fill_bytes",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::fill_bytes",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(36339..36345),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fill_bytes,
                                                        span: bytes(36354..36364),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(36370..36374),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: dest,
                                                                        span: bytes(36376..36380),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Slice {
                                                                        bracket_token: Bracket,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u8,
                                                                                            span: bytes(36388..36390),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: read_len,
                                                                    span: bytes(36411..36419),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::While {
                                                                attrs: [],
                                                                label: None,
                                                                while_token: While,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: read_len,
                                                                                        span: bytes(36439..36447),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Lt(
                                                                        Lt,
                                                                    ),
                                                                    right: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: dest,
                                                                                            span: bytes(36450..36454),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: len,
                                                                            span: bytes(36455..36458),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(36478..36482),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: index,
                                                                                                span: bytes(36483..36488),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    op: BinOp::Ge(
                                                                                        Ge,
                                                                                    ),
                                                                                    right: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(36492..36496),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: results,
                                                                                                        span: bytes(36497..36504),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: as_ref,
                                                                                                span: bytes(36505..36511),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [],
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: len,
                                                                                            span: bytes(36514..36517),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(36538..36542),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: generate_and_set,
                                                                                                    span: bytes(36543..36559),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 0,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                            None,
                                                                        ),
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Tuple {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: consumed_u32,
                                                                                            span: bytes(36595..36607),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    Comma,
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: filled_u8,
                                                                                            span: bytes(36609..36618),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: fill_via_chunks,
                                                                                                            span: bytes(36638..36653),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: None,
                                                                                                expr: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: self,
                                                                                                                                span: bytes(36655..36659),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident {
                                                                                                                    sym: results,
                                                                                                                    span: bytes(36660..36667),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: as_mut,
                                                                                                            span: bytes(36668..36674),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [],
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Range {
                                                                                                        attrs: [],
                                                                                                        start: Some(
                                                                                                            Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(36677..36681),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: index,
                                                                                                                        span: bytes(36682..36687),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                        limits: RangeLimits::HalfOpen(
                                                                                                            DotDot,
                                                                                                        ),
                                                                                                        end: None,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: Some(
                                                                                                    Mut,
                                                                                                ),
                                                                                                expr: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: dest,
                                                                                                                        span: bytes(36697..36701),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Range {
                                                                                                        attrs: [],
                                                                                                        start: Some(
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: read_len,
                                                                                                                                span: bytes(36702..36710),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                        limits: RangeLimits::HalfOpen(
                                                                                                            DotDot,
                                                                                                        ),
                                                                                                        end: None,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(36729..36733),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: index,
                                                                                            span: bytes(36734..36739),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                op: BinOp::AddAssign(
                                                                                    PlusEq,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: consumed_u32,
                                                                                                    span: bytes(36743..36755),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: read_len,
                                                                                                    span: bytes(36769..36777),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::AddAssign(
                                                                                    PlusEq,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: filled_u8,
                                                                                                    span: bytes(36781..36790),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "BlockRngCore",
                                    "u32",
                                ],
                            },
                            ImplItem {
                                impl_num: 3,
                                struct_name: Name {
                                    name: "BlockRng",
                                    complete_name: "rand_core::block::BlockRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "SeedableRng",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "SeedableRng",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(36816..36817),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(36819..36831),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: SeedableRng,
                                                                                    span: bytes(36834..36845),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: SeedableRng,
                                                                span: bytes(36847..36858),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng,
                                                            span: bytes(36863..36871),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(36872..36873),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Seed,
                                                    span: bytes(36886..36890),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: R,
                                                                    span: bytes(36893..36894),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Seed,
                                                                    span: bytes(36896..36900),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "from_seed",
                                            complete_name: "<rand_core::block::BlockRng as rand_core::SeedableRng>::from_seed",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "SeedableRng>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "from_seed",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::from_seed",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(36909..36915),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(36916..36922),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: from_seed,
                                                        span: bytes(36932..36941),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: seed,
                                                                        span: bytes(36942..36946),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(36948..36952),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Seed,
                                                                                    span: bytes(36954..36958),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(36963..36967),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(36978..36982),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(36984..36987),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: R,
                                                                                            span: bytes(36988..36989),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: from_seed,
                                                                                            span: bytes(36991..37000),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: seed,
                                                                                                span: bytes(37001..37005),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "seed_from_u64",
                                            complete_name: "<rand_core::block::BlockRng as rand_core::SeedableRng>::seed_from_u64",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "SeedableRng>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "seed_from_u64",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::seed_from_u64",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(37021..37027),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(37028..37034),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: seed_from_u64,
                                                        span: bytes(37044..37057),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: seed,
                                                                        span: bytes(37058..37062),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(37064..37067),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(37072..37076),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(37087..37091),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(37093..37096),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: R,
                                                                                            span: bytes(37097..37098),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: seed_from_u64,
                                                                                            span: bytes(37100..37113),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: seed,
                                                                                                span: bytes(37114..37118),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "from_rng",
                                            complete_name: "<rand_core::block::BlockRng as rand_core::SeedableRng>::from_rng",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "SeedableRng>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "from_rng",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::from_rng",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(37134..37140),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(37141..37147),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: from_rng,
                                                        span: bytes(37157..37165),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: rng,
                                                                        span: bytes(37166..37169),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::ImplTrait {
                                                                        impl_token: Impl,
                                                                        bounds: [
                                                                            TypeParamBound::Trait(
                                                                                TraitBound {
                                                                                    paren_token: None,
                                                                                    modifier: TraitBoundModifier::None,
                                                                                    lifetimes: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: RngCore,
                                                                                                    span: bytes(37181..37188),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(37193..37197),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(37208..37212),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(37214..37217),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: R,
                                                                                            span: bytes(37218..37219),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: from_rng,
                                                                                            span: bytes(37221..37229),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: rng,
                                                                                                span: bytes(37230..37233),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "try_from_rng",
                                            complete_name: "<rand_core::block::BlockRng as rand_core::SeedableRng>::try_from_rng",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "SeedableRng>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "try_from_rng",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::try_from_rng",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(37249..37255),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(37256..37262),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: try_from_rng,
                                                        span: bytes(37272..37284),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: S,
                                                                        span: bytes(37285..37286),
                                                                    },
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: TryRngCore,
                                                                                                span: bytes(37288..37298),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: rng,
                                                                        span: bytes(37300..37303),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: S,
                                                                                        span: bytes(37310..37311),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(37316..37322),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(37323..37327),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: S,
                                                                                                        span: bytes(37329..37330),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Error,
                                                                                                        span: bytes(37332..37337),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(37349..37350),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: try_from_rng,
                                                                                        span: bytes(37352..37364),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: rng,
                                                                                            span: bytes(37365..37368),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: map,
                                                                    span: bytes(37370..37373),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(37374..37378),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: new,
                                                                                        span: bytes(37380..37383),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "BlockRngCore",
                                    "SeedableRng",
                                    "R",
                                    "Seed",
                                ],
                            },
                            ImplItem {
                                impl_num: 4,
                                struct_name: Name {
                                    name: "BlockRng",
                                    complete_name: "rand_core::block::BlockRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "CryptoRng",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "CryptoRng",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(37399..37400),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: CryptoBlockRng,
                                                                                    span: bytes(37402..37416),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(37419..37431),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::AssocType(
                                                                                            AssocType {
                                                                                                ident: Ident {
                                                                                                    sym: Item,
                                                                                                    span: bytes(37432..37436),
                                                                                                },
                                                                                                generics: None,
                                                                                                eq_token: Eq,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u32,
                                                                                                                    span: bytes(37439..37442),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: CryptoRng,
                                                                span: bytes(37445..37454),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng,
                                                            span: bytes(37459..37467),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(37468..37469),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [],
                                relative_types: [
                                    "BlockRngCore",
                                    "CryptoBlockRng",
                                    "u32",
                                ],
                            },
                            ImplItem {
                                impl_num: 5,
                                struct_name: Name {
                                    name: "BlockRng64",
                                    complete_name: "rand_core::block::BlockRng64",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Debug",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "fmt",
                                            next: Some(
                                                MyPath {
                                                    name: "Debug",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(38930..38931),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(38933..38945),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(38948..38951),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Debug,
                                                                                    span: bytes(38953..38958),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(38960..38963),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Debug,
                                                                span: bytes(38965..38970),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng64,
                                                            span: bytes(38975..38985),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(38986..38987),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<rand_core::block::BlockRng64 as fmt::Debug>::fmt",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64 as fmt",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "Debug>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "fmt",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#5}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(38998..39001),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(39003..39007),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: fmt,
                                                                        span: bytes(39009..39012),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(39019..39022),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(39024..39033),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(39038..39041),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(39043..39049),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: fmt,
                                                                                                        span: bytes(39060..39063),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: debug_struct,
                                                                                        span: bytes(39064..39076),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Str {
                                                                                                token: "BlockRng64",
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: field,
                                                                                    span: bytes(39104..39109),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Str {
                                                                                            token: "core",
                                                                                        },
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: None,
                                                                                        expr: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(39119..39123),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: core,
                                                                                                    span: bytes(39124..39128),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: field,
                                                                                span: bytes(39143..39148),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Str {
                                                                                        token: "result_len",
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Reference {
                                                                                    attrs: [],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(39164..39168),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: results,
                                                                                                        span: bytes(39169..39176),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: as_ref,
                                                                                                span: bytes(39177..39183),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [],
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: len,
                                                                                            span: bytes(39186..39189),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: field,
                                                                            span: bytes(39206..39211),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Str {
                                                                                    token: "index",
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: None,
                                                                                expr: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(39222..39226),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: index,
                                                                                            span: bytes(39227..39232),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: field,
                                                                        span: bytes(39247..39252),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Str {
                                                                                token: "half_used",
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Expr::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: None,
                                                                            expr: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(39267..39271),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: half_used,
                                                                                        span: bytes(39272..39281),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: finish,
                                                                    span: bytes(39296..39302),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "BlockRngCore",
                                    "Debug",
                                    "fmt",
                                ],
                            },
                            ImplItem {
                                impl_num: 6,
                                struct_name: Name {
                                    name: "BlockRng64",
                                    complete_name: "rand_core::block::BlockRng64",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: None,
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(39319..39320),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(39322..39334),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: None,
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng64,
                                                            span: bytes(39336..39346),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(39347..39348),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "new",
                                            complete_name: "rand_core::block::BlockRng64::new",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "new",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#6}::new",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(39488..39494),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: new,
                                                        span: bytes(39507..39510),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: core,
                                                                        span: bytes(39511..39515),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: R,
                                                                                    span: bytes(39517..39518),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: BlockRng64,
                                                                            span: bytes(39523..39533),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: R,
                                                                                                        span: bytes(39534..39535),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: results_empty,
                                                                    span: bytes(39551..39564),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: R,
                                                                                            span: bytes(39567..39568),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Results,
                                                                                            span: bytes(39570..39577),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: default,
                                                                                            span: bytes(39579..39586),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: BlockRng64,
                                                                                span: bytes(39598..39608),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: core,
                                                                                span: bytes(39623..39627),
                                                                            },
                                                                        ),
                                                                        colon_token: None,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: core,
                                                                                            span: bytes(39623..39627),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: index,
                                                                                span: bytes(39641..39646),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: results_empty,
                                                                                                    span: bytes(39648..39661),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: as_ref,
                                                                                    span: bytes(39662..39668),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: len,
                                                                                span: bytes(39671..39674),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: half_used,
                                                                                span: bytes(39690..39699),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Bool {
                                                                                value: false,
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: results,
                                                                                span: bytes(39720..39727),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: results_empty,
                                                                                            span: bytes(39729..39742),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "index",
                                            complete_name: "rand_core::block::BlockRng64::index",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "index",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#6}::index",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(39993..39999),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(40000..40006),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: index,
                                                        span: bytes(40020..40025),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(40027..40031),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(40036..40041),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(40052..40056),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Named(
                                                                    Ident {
                                                                        sym: index,
                                                                        span: bytes(40057..40062),
                                                                    },
                                                                ),
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "reset",
                                            complete_name: "rand_core::block::BlockRng64::reset",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "reset",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#6}::reset",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(40197..40203),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: reset,
                                                        span: bytes(40216..40221),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(40227..40231),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(40243..40247),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: index,
                                                                            span: bytes(40248..40253),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(40256..40260),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: results,
                                                                                    span: bytes(40261..40268),
                                                                                },
                                                                            ),
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: as_ref,
                                                                            span: bytes(40269..40275),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: len,
                                                                        span: bytes(40278..40281),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(40293..40297),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: half_used,
                                                                            span: bytes(40298..40307),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Bool {
                                                                        value: false,
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "generate_and_set",
                                            complete_name: "rand_core::block::BlockRng64::generate_and_set",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "generate_and_set",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#6}::generate_and_set",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(40427..40433),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: generate_and_set,
                                                        span: bytes(40446..40462),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(40468..40472),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: index,
                                                                        span: bytes(40474..40479),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: usize,
                                                                                    span: bytes(40481..40486),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Macro {
                                                            attrs: [],
                                                            mac: Macro {
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: assert,
                                                                                span: bytes(40498..40504),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                bang_token: Not,
                                                                delimiter: MacroDelimiter::Paren(
                                                                    Paren,
                                                                ),
                                                                tokens: TokenStream [
                                                                    Ident {
                                                                        sym: index,
                                                                        span: bytes(40506..40511),
                                                                    },
                                                                    Punct {
                                                                        char: '<',
                                                                        spacing: Alone,
                                                                        span: bytes(40512..40513),
                                                                    },
                                                                    Ident {
                                                                        sym: self,
                                                                        span: bytes(40514..40518),
                                                                    },
                                                                    Punct {
                                                                        char: '.',
                                                                        spacing: Alone,
                                                                        span: bytes(40518..40519),
                                                                    },
                                                                    Ident {
                                                                        sym: results,
                                                                        span: bytes(40519..40526),
                                                                    },
                                                                    Punct {
                                                                        char: '.',
                                                                        spacing: Alone,
                                                                        span: bytes(40526..40527),
                                                                    },
                                                                    Ident {
                                                                        sym: as_ref,
                                                                        span: bytes(40527..40533),
                                                                    },
                                                                    Group {
                                                                        delimiter: Parenthesis,
                                                                        stream: TokenStream [],
                                                                        span: bytes(40533..40535),
                                                                    },
                                                                    Punct {
                                                                        char: '.',
                                                                        spacing: Alone,
                                                                        span: bytes(40535..40536),
                                                                    },
                                                                    Ident {
                                                                        sym: len,
                                                                        span: bytes(40536..40539),
                                                                    },
                                                                    Group {
                                                                        delimiter: Parenthesis,
                                                                        stream: TokenStream [],
                                                                        span: bytes(40539..40541),
                                                                    },
                                                                ],
                                                            },
                                                            semi_token: Some(
                                                                Semi,
                                                            ),
                                                        },
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(40552..40556),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: core,
                                                                            span: bytes(40557..40561),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: generate,
                                                                    span: bytes(40562..40570),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(40576..40580),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: results,
                                                                                    span: bytes(40581..40588),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(40599..40603),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: index,
                                                                            span: bytes(40604..40609),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: index,
                                                                                    span: bytes(40612..40617),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(40627..40631),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: half_used,
                                                                            span: bytes(40632..40641),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Bool {
                                                                        value: false,
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "BlockRngCore",
                                ],
                            },
                            ImplItem {
                                impl_num: 7,
                                struct_name: Name {
                                    name: "BlockRng64",
                                    complete_name: "rand_core::block::BlockRng64",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "RngCore",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "RngCore",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(40665..40666),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(40668..40680),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::AssocType(
                                                                                            AssocType {
                                                                                                ident: Ident {
                                                                                                    sym: Item,
                                                                                                    span: bytes(40681..40685),
                                                                                                },
                                                                                                generics: None,
                                                                                                eq_token: Eq,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u64,
                                                                                                                    span: bytes(40688..40691),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RngCore,
                                                                span: bytes(40694..40701),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng64,
                                                            span: bytes(40706..40716),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(40717..40718),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "next_u32",
                                            complete_name: "<rand_core::block::BlockRng64 as rand_core::RngCore>::next_u32",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64 as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "RngCore>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "next_u32",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#7}::next_u32",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(40728..40734),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next_u32,
                                                        span: bytes(40743..40751),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(40757..40761),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u32,
                                                                            span: bytes(40766..40769),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: index,
                                                                    span: bytes(40788..40793),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(40796..40800),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: index,
                                                                                    span: bytes(40801..40806),
                                                                                },
                                                                            ),
                                                                        },
                                                                        op: BinOp::Sub(
                                                                            Minus,
                                                                        ),
                                                                        right: Expr::Cast {
                                                                            attrs: [],
                                                                            expr: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(40809..40813),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: half_used,
                                                                                        span: bytes(40814..40823),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            as_token: As,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: usize,
                                                                                                span: bytes(40827..40832),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: index,
                                                                                        span: bytes(40845..40850),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Ge(
                                                                        Ge,
                                                                    ),
                                                                    right: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(40854..40858),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: results,
                                                                                        span: bytes(40859..40866),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_ref,
                                                                                span: bytes(40867..40873),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: len,
                                                                            span: bytes(40876..40879),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(40896..40900),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: core,
                                                                                            span: bytes(40901..40905),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: generate,
                                                                                    span: bytes(40906..40914),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: Some(
                                                                                            Mut,
                                                                                        ),
                                                                                        expr: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(40920..40924),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: results,
                                                                                                    span: bytes(40925..40932),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(40947..40951),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: index,
                                                                                            span: bytes(40952..40957),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 0,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: index,
                                                                                                    span: bytes(40975..40980),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 0,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(41055..41059),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: half_used,
                                                                                            span: bytes(41060..41069),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Bool {
                                                                                        value: false,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: None,
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: shift,
                                                                    span: bytes(41102..41107),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 32,
                                                                            },
                                                                        },
                                                                        op: BinOp::Mul(
                                                                            Star,
                                                                        ),
                                                                        right: Expr::Paren {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            expr: Expr::Cast {
                                                                                attrs: [],
                                                                                expr: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(41116..41120),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: half_used,
                                                                                            span: bytes(41121..41130),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                as_token: As,
                                                                                ty: Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: usize,
                                                                                                    span: bytes(41134..41139),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(41151..41155),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: half_used,
                                                                            span: bytes(41156..41165),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Unary {
                                                                    attrs: [],
                                                                    op: UnOp::Not(
                                                                        Not,
                                                                    ),
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(41169..41173),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: half_used,
                                                                                span: bytes(41174..41183),
                                                                            },
                                                                        ),
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(41193..41197),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: index,
                                                                            span: bytes(41198..41203),
                                                                        },
                                                                    ),
                                                                },
                                                                op: BinOp::AddAssign(
                                                                    PlusEq,
                                                                ),
                                                                right: Expr::Cast {
                                                                    attrs: [],
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(41207..41211),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: half_used,
                                                                                span: bytes(41212..41221),
                                                                            },
                                                                        ),
                                                                    },
                                                                    as_token: As,
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: usize,
                                                                                        span: bytes(41225..41230),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Cast {
                                                                attrs: [],
                                                                expr: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Index {
                                                                            attrs: [],
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(41242..41246),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: results,
                                                                                            span: bytes(41247..41254),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: as_ref,
                                                                                    span: bytes(41255..41261),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            bracket_token: Bracket,
                                                                            index: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: index,
                                                                                                span: bytes(41264..41269),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::Shr(
                                                                            Shr,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: shift,
                                                                                            span: bytes(41274..41279),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                as_token: As,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(41284..41287),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "next_u64",
                                            complete_name: "<rand_core::block::BlockRng64 as rand_core::RngCore>::next_u64",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64 as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "RngCore>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "next_u64",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#7}::next_u64",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(41301..41307),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next_u64,
                                                        span: bytes(41316..41324),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(41330..41334),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(41339..41342),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(41356..41360),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: index,
                                                                                span: bytes(41361..41366),
                                                                            },
                                                                        ),
                                                                    },
                                                                    op: BinOp::Ge(
                                                                        Ge,
                                                                    ),
                                                                    right: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(41370..41374),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: results,
                                                                                        span: bytes(41375..41382),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_ref,
                                                                                span: bytes(41383..41389),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: len,
                                                                            span: bytes(41392..41395),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(41412..41416),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: core,
                                                                                            span: bytes(41417..41421),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: generate,
                                                                                    span: bytes(41422..41430),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: Some(
                                                                                            Mut,
                                                                                        ),
                                                                                        expr: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(41436..41440),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: results,
                                                                                                    span: bytes(41441..41448),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Assign {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(41463..41467),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: index,
                                                                                            span: bytes(41468..41473),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                eq_token: Eq,
                                                                                right: Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 0,
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: None,
                                                            },
                                                            None,
                                                        ),
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: value,
                                                                    span: bytes(41502..41507),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Index {
                                                                        attrs: [],
                                                                        expr: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(41510..41514),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: results,
                                                                                        span: bytes(41515..41522),
                                                                                    },
                                                                                ),
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_ref,
                                                                                span: bytes(41523..41529),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        bracket_token: Bracket,
                                                                        index: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(41532..41536),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: index,
                                                                                    span: bytes(41537..41542),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(41553..41557),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: index,
                                                                            span: bytes(41558..41563),
                                                                        },
                                                                    ),
                                                                },
                                                                op: BinOp::AddAssign(
                                                                    PlusEq,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 1,
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(41578..41582),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: half_used,
                                                                            span: bytes(41583..41592),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Bool {
                                                                        value: false,
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: value,
                                                                                span: bytes(41610..41615),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fill_bytes",
                                            complete_name: "<rand_core::block::BlockRng64 as rand_core::RngCore>::fill_bytes",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64 as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "RngCore>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "fill_bytes",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#7}::fill_bytes",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(41629..41635),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fill_bytes,
                                                        span: bytes(41644..41654),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(41660..41664),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: dest,
                                                                        span: bytes(41666..41670),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Slice {
                                                                        bracket_token: Bracket,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u8,
                                                                                            span: bytes(41678..41680),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                ident: Ident {
                                                                    sym: read_len,
                                                                    span: bytes(41701..41709),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 0,
                                                                        },
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Assign {
                                                                attrs: [],
                                                                left: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(41723..41727),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: half_used,
                                                                            span: bytes(41728..41737),
                                                                        },
                                                                    ),
                                                                },
                                                                eq_token: Eq,
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Bool {
                                                                        value: false,
                                                                    },
                                                                },
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::While {
                                                                attrs: [],
                                                                label: None,
                                                                while_token: While,
                                                                cond: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: read_len,
                                                                                        span: bytes(41761..41769),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    op: BinOp::Lt(
                                                                        Lt,
                                                                    ),
                                                                    right: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: dest,
                                                                                            span: bytes(41772..41776),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: len,
                                                                            span: bytes(41777..41780),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(41800..41804),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: index,
                                                                                                span: bytes(41805..41810),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    op: BinOp::Ge(
                                                                                        Ge,
                                                                                    ),
                                                                                    right: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(41814..41818),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: results,
                                                                                                        span: bytes(41819..41826),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: as_ref,
                                                                                                span: bytes(41827..41833),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [],
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: len,
                                                                                            span: bytes(41836..41839),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Field {
                                                                                                    attrs: [],
                                                                                                    base: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: self,
                                                                                                                        span: bytes(41860..41864),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    member: Member::Named(
                                                                                                        Ident {
                                                                                                            sym: core,
                                                                                                            span: bytes(41865..41869),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: generate,
                                                                                                    span: bytes(41870..41878),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Reference {
                                                                                                        attrs: [],
                                                                                                        and_token: And,
                                                                                                        mutability: Some(
                                                                                                            Mut,
                                                                                                        ),
                                                                                                        expr: Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: self,
                                                                                                                                span: bytes(41884..41888),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident {
                                                                                                                    sym: results,
                                                                                                                    span: bytes(41889..41896),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                        Stmt::Expr(
                                                                                            Expr::Assign {
                                                                                                attrs: [],
                                                                                                left: Expr::Field {
                                                                                                    attrs: [],
                                                                                                    base: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: self,
                                                                                                                        span: bytes(41915..41919),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    member: Member::Named(
                                                                                                        Ident {
                                                                                                            sym: index,
                                                                                                            span: bytes(41920..41925),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                                eq_token: Eq,
                                                                                                right: Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 0,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                            None,
                                                                        ),
                                                                        Stmt::Local {
                                                                            attrs: [],
                                                                            let_token: Let,
                                                                            pat: Pat::Tuple {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: consumed_u64,
                                                                                            span: bytes(41963..41975),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    Comma,
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: filled_u8,
                                                                                            span: bytes(41977..41986),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            init: Some(
                                                                                LocalInit {
                                                                                    eq_token: Eq,
                                                                                    expr: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: fill_via_chunks,
                                                                                                            span: bytes(42006..42021),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: None,
                                                                                                expr: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: self,
                                                                                                                                span: bytes(42023..42027),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident {
                                                                                                                    sym: results,
                                                                                                                    span: bytes(42028..42035),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: as_mut,
                                                                                                            span: bytes(42036..42042),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [],
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Range {
                                                                                                        attrs: [],
                                                                                                        start: Some(
                                                                                                            Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(42045..42049),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: index,
                                                                                                                        span: bytes(42050..42055),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                        limits: RangeLimits::HalfOpen(
                                                                                                            DotDot,
                                                                                                        ),
                                                                                                        end: None,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: Some(
                                                                                                    Mut,
                                                                                                ),
                                                                                                expr: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: dest,
                                                                                                                        span: bytes(42065..42069),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Range {
                                                                                                        attrs: [],
                                                                                                        start: Some(
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: read_len,
                                                                                                                                span: bytes(42070..42078),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                        limits: RangeLimits::HalfOpen(
                                                                                                            DotDot,
                                                                                                        ),
                                                                                                        end: None,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    diverge: None,
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(42097..42101),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: index,
                                                                                            span: bytes(42102..42107),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                op: BinOp::AddAssign(
                                                                                    PlusEq,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: consumed_u64,
                                                                                                    span: bytes(42111..42123),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: read_len,
                                                                                                    span: bytes(42137..42145),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                op: BinOp::AddAssign(
                                                                                    PlusEq,
                                                                                ),
                                                                                right: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: filled_u8,
                                                                                                    span: bytes(42149..42158),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "BlockRngCore",
                                    "u64",
                                ],
                            },
                            ImplItem {
                                impl_num: 8,
                                struct_name: Name {
                                    name: "BlockRng64",
                                    complete_name: "rand_core::block::BlockRng64",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "SeedableRng",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "SeedableRng",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(42184..42185),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(42187..42199),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: SeedableRng,
                                                                                    span: bytes(42202..42213),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: SeedableRng,
                                                                span: bytes(42215..42226),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng64,
                                                            span: bytes(42231..42241),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(42242..42243),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Seed,
                                                    span: bytes(42256..42260),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: R,
                                                                    span: bytes(42263..42264),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Seed,
                                                                    span: bytes(42266..42270),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "from_seed",
                                            complete_name: "<rand_core::block::BlockRng64 as rand_core::SeedableRng>::from_seed",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64 as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "SeedableRng>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "from_seed",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#8}::from_seed",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(42279..42285),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(42286..42292),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: from_seed,
                                                        span: bytes(42302..42311),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: seed,
                                                                        span: bytes(42312..42316),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(42318..42322),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Seed,
                                                                                    span: bytes(42324..42328),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(42333..42337),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(42348..42352),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(42354..42357),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: R,
                                                                                            span: bytes(42358..42359),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: from_seed,
                                                                                            span: bytes(42361..42370),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: seed,
                                                                                                span: bytes(42371..42375),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "seed_from_u64",
                                            complete_name: "<rand_core::block::BlockRng64 as rand_core::SeedableRng>::seed_from_u64",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64 as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "SeedableRng>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "seed_from_u64",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#8}::seed_from_u64",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(42391..42397),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(42398..42404),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: seed_from_u64,
                                                        span: bytes(42414..42427),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: seed,
                                                                        span: bytes(42428..42432),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(42434..42437),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(42442..42446),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(42457..42461),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(42463..42466),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: R,
                                                                                            span: bytes(42467..42468),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: seed_from_u64,
                                                                                            span: bytes(42470..42483),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: seed,
                                                                                                span: bytes(42484..42488),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "from_rng",
                                            complete_name: "<rand_core::block::BlockRng64 as rand_core::SeedableRng>::from_rng",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64 as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "SeedableRng>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "from_rng",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#8}::from_rng",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(42504..42510),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(42511..42517),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: from_rng,
                                                        span: bytes(42527..42535),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: rng,
                                                                        span: bytes(42536..42539),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::ImplTrait {
                                                                        impl_token: Impl,
                                                                        bounds: [
                                                                            TypeParamBound::Trait(
                                                                                TraitBound {
                                                                                    paren_token: None,
                                                                                    modifier: TraitBoundModifier::None,
                                                                                    lifetimes: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: RngCore,
                                                                                                    span: bytes(42551..42558),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(42563..42567),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(42578..42582),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(42584..42587),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: R,
                                                                                            span: bytes(42588..42589),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: from_rng,
                                                                                            span: bytes(42591..42599),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: rng,
                                                                                                span: bytes(42600..42603),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "try_from_rng",
                                            complete_name: "<rand_core::block::BlockRng64 as rand_core::SeedableRng>::try_from_rng",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRng64 as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "SeedableRng>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "try_from_rng",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#8}::try_from_rng",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: inline,
                                                                            span: bytes(42619..42625),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: always,
                                                                    span: bytes(42626..42632),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: try_from_rng,
                                                        span: bytes(42642..42654),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: S,
                                                                        span: bytes(42655..42656),
                                                                    },
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    bounds: [
                                                                        TypeParamBound::Trait(
                                                                            TraitBound {
                                                                                paren_token: None,
                                                                                modifier: TraitBoundModifier::None,
                                                                                lifetimes: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: TryRngCore,
                                                                                                span: bytes(42658..42668),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: rng,
                                                                        span: bytes(42670..42673),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: S,
                                                                                        span: bytes(42680..42681),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(42686..42692),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(42693..42697),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: S,
                                                                                                        span: bytes(42699..42700),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Error,
                                                                                                        span: bytes(42702..42707),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(42719..42720),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: try_from_rng,
                                                                                        span: bytes(42722..42734),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: rng,
                                                                                            span: bytes(42735..42738),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: map,
                                                                    span: bytes(42740..42743),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(42744..42748),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: new,
                                                                                        span: bytes(42750..42753),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "BlockRngCore",
                                    "SeedableRng",
                                    "R",
                                    "Seed",
                                ],
                            },
                            ImplItem {
                                impl_num: 9,
                                struct_name: Name {
                                    name: "BlockRng64",
                                    complete_name: "rand_core::block::BlockRng64",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRng64",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "CryptoRng",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "CryptoRng",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: R,
                                                            span: bytes(42769..42770),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: CryptoBlockRng,
                                                                                    span: bytes(42772..42786),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: BlockRngCore,
                                                                                    span: bytes(42789..42801),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::AssocType(
                                                                                            AssocType {
                                                                                                ident: Ident {
                                                                                                    sym: Item,
                                                                                                    span: bytes(42802..42806),
                                                                                                },
                                                                                                generics: None,
                                                                                                eq_token: Eq,
                                                                                                ty: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: u64,
                                                                                                                    span: bytes(42809..42812),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: CryptoRng,
                                                                span: bytes(42815..42824),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BlockRng64,
                                                            span: bytes(42829..42839),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: R,
                                                                                        span: bytes(42840..42841),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [],
                                relative_types: [
                                    "BlockRngCore",
                                    "CryptoBlockRng",
                                    "u64",
                                ],
                            },
                        ],
                        functions: [],
                        traits: [
                            TraitItem {
                                trait_name: Name {
                                    name: "BlockRngCore",
                                    complete_name: "rand_core::block::BlockRngCore",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "BlockRngCore",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemTrait {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: BlockRngCore,
                                            span: bytes(30749..30761),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: None,
                                        supertraits: [],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    TraitTypeItem {
                                        item: Some(
                                            TraitItemType {
                                                attrs: [],
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Item,
                                                    span: bytes(30815..30819),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: None,
                                                bounds: [],
                                                default: None,
                                                semi_token: Semi,
                                            },
                                        ),
                                    },
                                    TraitTypeItem {
                                        item: Some(
                                            TraitItemType {
                                                attrs: [],
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Results,
                                                    span: bytes(30976..30983),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: AsRef,
                                                                            span: bytes(30985..30990),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Slice {
                                                                                        bracket_token: Bracket,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Self,
                                                                                                            span: bytes(30992..30996),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Item,
                                                                                                            span: bytes(30998..31002),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: AsMut,
                                                                            span: bytes(31007..31012),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Slice {
                                                                                        bracket_token: Bracket,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Self,
                                                                                                            span: bytes(31014..31018),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Item,
                                                                                                            span: bytes(31020..31024),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Default,
                                                                            span: bytes(31029..31036),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                default: None,
                                                semi_token: Semi,
                                            },
                                        ),
                                    },
                                ],
                                consts: [],
                                functions: [
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "generate",
                                            complete_name: "<  as rand_core::block::BlockRngCore>::generate",
                                            import_name: MyPath {
                                                name: "<  as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "BlockRngCore>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "generate",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "BlockRngCore::generate",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: generate,
                                                        span: bytes(31087..31095),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(31101..31105),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: results,
                                                                        span: bytes(31107..31114),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(31121..31125),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Results,
                                                                                        span: bytes(31127..31134),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                ],
                                visibility: PubT,
                                relative_types: [],
                            },
                            TraitItem {
                                trait_name: Name {
                                    name: "CryptoBlockRng",
                                    complete_name: "rand_core::block::CryptoBlockRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "CryptoBlockRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemTrait {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: CryptoBlockRng,
                                            span: bytes(31322..31336),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        supertraits: [
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: BlockRngCore,
                                                                    span: bytes(31338..31350),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [],
                                visibility: PubT,
                                relative_types: [
                                    "BlockRngCore",
                                ],
                            },
                        ],
                        use_trees: [
                            UseTree {
                                use_name: "fill_via_chunks",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "impls",
                                            next: Some(
                                                MyPath {
                                                    name: "fill_via_chunks",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "CryptoRng",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "CryptoRng",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "RngCore",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "RngCore",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "SeedableRng",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "SeedableRng",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "TryRngCore",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "TryRngCore",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "fmt",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "fmt",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Deserialize",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "serde",
                                    next: Some(
                                        MyPath {
                                            name: "Deserialize",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Serialize",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "serde",
                                    next: Some(
                                        MyPath {
                                            name: "Serialize",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: [
                        RefCell {
                            value: ModContext {
                             mod_info: Mod(
                                ModModInfo {
                                    mod_name: "test",
                                    mod_tree: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "block",
                                                next: Some(
                                                    MyPath {
                                                        name: "test",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                    file_path: "",
                                    parent_directory_path: "",
                                    mod_file_directory_path: None,
                                    visibility: PubS,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [],
                                trait_aliases: [],
                                uses: [
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(42879..42884),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: block,
                                                                    span: bytes(42886..42891),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Group(
                                                                    UseGroup {
                                                                        brace_token: Brace,
                                                                        items: [
                                                                            UseTree::Name(
                                                                                UseName {
                                                                                    ident: Ident {
                                                                                        sym: BlockRng,
                                                                                        span: bytes(42894..42902),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            Comma,
                                                                            UseTree::Name(
                                                                                UseName {
                                                                                    ident: Ident {
                                                                                        sym: BlockRng64,
                                                                                        span: bytes(42904..42914),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            Comma,
                                                                            UseTree::Name(
                                                                                UseName {
                                                                                    ident: Ident {
                                                                                        sym: BlockRngCore,
                                                                                        span: bytes(42916..42928),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(42939..42944),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Group(
                                                            UseGroup {
                                                                brace_token: Brace,
                                                                items: [
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: RngCore,
                                                                                span: bytes(42947..42954),
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: SeedableRng,
                                                                                span: bytes(42956..42967),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [
                                    StructItem {
                                        struct_name: Name {
                                            name: "DummyRng",
                                            complete_name: "rand_core::block::test::DummyRng",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "test",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "DummyRng",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemStruct {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: derive,
                                                                            span: bytes(42977..42983),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: Debug,
                                                                    span: bytes(42984..42989),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(42989..42990),
                                                                },
                                                                Ident {
                                                                    sym: Clone,
                                                                    span: bytes(42991..42996),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                struct_token: Struct,
                                                ident: Ident {
                                                    sym: DummyRng,
                                                    span: bytes(43010..43018),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                fields: Fields::Named {
                                                    brace_token: Brace,
                                                    named: [
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            mutability: FieldMutability::None,
                                                            ident: Some(
                                                                Ident {
                                                                    sym: counter,
                                                                    span: bytes(43029..43036),
                                                                },
                                                            ),
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u32,
                                                                                span: bytes(43038..43041),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                    ],
                                                },
                                                semi_token: None,
                                            },
                                        ),
                                        visibility: Pri,
                                        relative_types: [
                                            "u32",
                                        ],
                                    },
                                    StructItem {
                                        struct_name: Name {
                                            name: "DummyRng64",
                                            complete_name: "rand_core::block::test::DummyRng64",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "test",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "DummyRng64",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemStruct {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: derive,
                                                                            span: bytes(44591..44597),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: Debug,
                                                                    span: bytes(44598..44603),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(44603..44604),
                                                                },
                                                                Ident {
                                                                    sym: Clone,
                                                                    span: bytes(44605..44610),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                struct_token: Struct,
                                                ident: Ident {
                                                    sym: DummyRng64,
                                                    span: bytes(44624..44634),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                fields: Fields::Named {
                                                    brace_token: Brace,
                                                    named: [
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            mutability: FieldMutability::None,
                                                            ident: Some(
                                                                Ident {
                                                                    sym: counter,
                                                                    span: bytes(44645..44652),
                                                                },
                                                            ),
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u64,
                                                                                span: bytes(44654..44657),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                    ],
                                                },
                                                semi_token: None,
                                            },
                                        ),
                                        visibility: Pri,
                                        relative_types: [
                                            "u64",
                                        ],
                                    },
                                ],
                                enums: [],
                                unions: [],
                                impls: [
                                    ImplItem {
                                        impl_num: 0,
                                        struct_name: Name {
                                            name: "DummyRng",
                                            complete_name: "rand_core::block::test::DummyRng",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "test",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "DummyRng",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "BlockRngCore",
                                                complete_name: "",
                                                import_name: MyPath {
                                                    name: "rand_core",
                                                    next: Some(
                                                        MyPath {
                                                            name: "block",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "BlockRngCore",
                                                                    next: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: BlockRngCore,
                                                                        span: bytes(43059..43071),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: DummyRng,
                                                                    span: bytes(43076..43084),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Item,
                                                            span: bytes(43100..43104),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u32,
                                                                            span: bytes(43107..43110),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Results,
                                                            span: bytes(43125..43132),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Array {
                                                            bracket_token: Bracket,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u32,
                                                                                span: bytes(43136..43139),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            semi_token: Semi,
                                                            len: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 16,
                                                                },
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "generate",
                                                    complete_name: "<rand_core::block::test::DummyRng as rand_core::block::BlockRngCore>::generate",
                                                    import_name: MyPath {
                                                        name: "<rand_core",
                                                        next: Some(
                                                            MyPath {
                                                                name: "block",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "test",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "DummyRng as rand_core",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "block",
                                                                                        next: Some(
                                                                                            MyPath {
                                                                                                name: "BlockRngCore>",
                                                                                                next: Some(
                                                                                                    MyPath {
                                                                                                        name: "generate",
                                                                                                        next: None,
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#0}::generate",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: generate,
                                                                span: bytes(43158..43166),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(43172..43176),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                FnArg::Typed(
                                                                    PatType {
                                                                        attrs: [],
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: results,
                                                                                span: bytes(43178..43185),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        colon_token: Colon,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(43192..43196),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Results,
                                                                                                span: bytes(43198..43205),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Default,
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::ForLoop {
                                                                        attrs: [],
                                                                        label: None,
                                                                        for_token: For,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: r,
                                                                                span: bytes(43225..43226),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        in_token: In,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: results,
                                                                                            span: bytes(43230..43237),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        body: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Unary {
                                                                                            attrs: [],
                                                                                            op: UnOp::Deref(
                                                                                                Star,
                                                                                            ),
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: r,
                                                                                                                span: bytes(43257..43258),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(43261..43265),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: counter,
                                                                                                    span: bytes(43266..43273),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(43291..43295),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: counter,
                                                                                                    span: bytes(43296..43303),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(43306..43310),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: counter,
                                                                                                        span: bytes(43311..43318),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: wrapping_add,
                                                                                                span: bytes(43319..43331),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 3511615421,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: false,
                                            },
                                        ],
                                        relative_types: [
                                            "u32",
                                            "u32",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 1,
                                        struct_name: Name {
                                            name: "DummyRng",
                                            complete_name: "rand_core::block::test::DummyRng",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "test",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "DummyRng",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "SeedableRng",
                                                complete_name: "",
                                                import_name: MyPath {
                                                    name: "rand_core",
                                                    next: Some(
                                                        MyPath {
                                                            name: "SeedableRng",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: SeedableRng,
                                                                        span: bytes(43385..43396),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: DummyRng,
                                                                    span: bytes(43401..43409),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Seed,
                                                            span: bytes(43425..43429),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Array {
                                                            bracket_token: Bracket,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u8,
                                                                                span: bytes(43433..43435),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            semi_token: Semi,
                                                            len: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 4,
                                                                },
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "from_seed",
                                                    complete_name: "<rand_core::block::test::DummyRng as rand_core::SeedableRng>::from_seed",
                                                    import_name: MyPath {
                                                        name: "<rand_core",
                                                        next: Some(
                                                            MyPath {
                                                                name: "block",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "test",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "DummyRng as rand_core",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "SeedableRng>",
                                                                                        next: Some(
                                                                                            MyPath {
                                                                                                name: "from_seed",
                                                                                                next: None,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#1}::from_seed",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: from_seed,
                                                                span: bytes(43453..43462),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Typed(
                                                                    PatType {
                                                                        attrs: [],
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: seed,
                                                                                span: bytes(43463..43467),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        colon_token: Colon,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(43469..43473),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Seed,
                                                                                            span: bytes(43475..43479),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(43484..43488),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Struct {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DummyRng,
                                                                                        span: bytes(43503..43511),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        brace_token: Brace,
                                                                        fields: [
                                                                            FieldValue {
                                                                                attrs: [],
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: counter,
                                                                                        span: bytes(43530..43537),
                                                                                    },
                                                                                ),
                                                                                colon_token: Some(
                                                                                    Colon,
                                                                                ),
                                                                                expr: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u32,
                                                                                                        span: bytes(43539..43542),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: from_le_bytes,
                                                                                                        span: bytes(43544..43557),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: seed,
                                                                                                            span: bytes(43558..43562),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                        ],
                                                                        dot2_token: None,
                                                                        rest: None,
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "u8",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 2,
                                        struct_name: Name {
                                            name: "DummyRng64",
                                            complete_name: "rand_core::block::test::DummyRng64",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "test",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "DummyRng64",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "BlockRngCore",
                                                complete_name: "",
                                                import_name: MyPath {
                                                    name: "rand_core",
                                                    next: Some(
                                                        MyPath {
                                                            name: "block",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "BlockRngCore",
                                                                    next: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: BlockRngCore,
                                                                        span: bytes(44675..44687),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: DummyRng64,
                                                                    span: bytes(44692..44702),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Item,
                                                            span: bytes(44718..44722),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(44725..44728),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Results,
                                                            span: bytes(44743..44750),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Array {
                                                            bracket_token: Bracket,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u64,
                                                                                span: bytes(44754..44757),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            semi_token: Semi,
                                                            len: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 8,
                                                                },
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "generate",
                                                    complete_name: "<rand_core::block::test::DummyRng64 as rand_core::block::BlockRngCore>::generate",
                                                    import_name: MyPath {
                                                        name: "<rand_core",
                                                        next: Some(
                                                            MyPath {
                                                                name: "block",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "test",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "DummyRng64 as rand_core",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "block",
                                                                                        next: Some(
                                                                                            MyPath {
                                                                                                name: "BlockRngCore>",
                                                                                                next: Some(
                                                                                                    MyPath {
                                                                                                        name: "generate",
                                                                                                        next: None,
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#2}::generate",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: generate,
                                                                span: bytes(44775..44783),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(44789..44793),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                FnArg::Typed(
                                                                    PatType {
                                                                        attrs: [],
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: results,
                                                                                span: bytes(44795..44802),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        colon_token: Colon,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(44809..44813),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Results,
                                                                                                span: bytes(44815..44822),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Default,
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::ForLoop {
                                                                        attrs: [],
                                                                        label: None,
                                                                        for_token: For,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: r,
                                                                                span: bytes(44842..44843),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        in_token: In,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: results,
                                                                                            span: bytes(44847..44854),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        body: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Unary {
                                                                                            attrs: [],
                                                                                            op: UnOp::Deref(
                                                                                                Star,
                                                                                            ),
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: r,
                                                                                                                span: bytes(44874..44875),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(44878..44882),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: counter,
                                                                                                    span: bytes(44883..44890),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Assign {
                                                                                        attrs: [],
                                                                                        left: Expr::Field {
                                                                                            attrs: [],
                                                                                            base: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: self,
                                                                                                                span: bytes(44908..44912),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            member: Member::Named(
                                                                                                Ident {
                                                                                                    sym: counter,
                                                                                                    span: bytes(44913..44920),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        eq_token: Eq,
                                                                                        right: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(44923..44927),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: counter,
                                                                                                        span: bytes(44928..44935),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: wrapping_add,
                                                                                                span: bytes(44936..44948),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Int {
                                                                                                        token: 2781463553396133981,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: false,
                                            },
                                        ],
                                        relative_types: [
                                            "u64",
                                            "u64",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 3,
                                        struct_name: Name {
                                            name: "DummyRng64",
                                            complete_name: "rand_core::block::test::DummyRng64",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "block",
                                                        next: Some(
                                                            MyPath {
                                                                name: "test",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "DummyRng64",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "SeedableRng",
                                                complete_name: "",
                                                import_name: MyPath {
                                                    name: "rand_core",
                                                    next: Some(
                                                        MyPath {
                                                            name: "SeedableRng",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: SeedableRng,
                                                                        span: bytes(45011..45022),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: DummyRng64,
                                                                    span: bytes(45027..45037),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Seed,
                                                            span: bytes(45053..45057),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Array {
                                                            bracket_token: Bracket,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u8,
                                                                                span: bytes(45061..45063),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            semi_token: Semi,
                                                            len: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 8,
                                                                },
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "from_seed",
                                                    complete_name: "<rand_core::block::test::DummyRng64 as rand_core::SeedableRng>::from_seed",
                                                    import_name: MyPath {
                                                        name: "<rand_core",
                                                        next: Some(
                                                            MyPath {
                                                                name: "block",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "test",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "DummyRng64 as rand_core",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "SeedableRng>",
                                                                                        next: Some(
                                                                                            MyPath {
                                                                                                name: "from_seed",
                                                                                                next: None,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#3}::from_seed",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: from_seed,
                                                                span: bytes(45081..45090),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Typed(
                                                                    PatType {
                                                                        attrs: [],
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: seed,
                                                                                span: bytes(45091..45095),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        colon_token: Colon,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(45097..45101),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Seed,
                                                                                            span: bytes(45103..45107),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(45112..45116),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Struct {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DummyRng64,
                                                                                        span: bytes(45131..45141),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        brace_token: Brace,
                                                                        fields: [
                                                                            FieldValue {
                                                                                attrs: [],
                                                                                member: Member::Named(
                                                                                    Ident {
                                                                                        sym: counter,
                                                                                        span: bytes(45160..45167),
                                                                                    },
                                                                                ),
                                                                                colon_token: Some(
                                                                                    Colon,
                                                                                ),
                                                                                expr: Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u64,
                                                                                                        span: bytes(45169..45172),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: from_le_bytes,
                                                                                                        span: bytes(45174..45187),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: seed,
                                                                                                            span: bytes(45188..45192),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                        ],
                                                                        dot2_token: None,
                                                                        rest: None,
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "u8",
                                        ],
                                    },
                                ],
                                functions: [],
                                traits: [],
                                use_trees: [
                                    UseTree {
                                        use_name: "BlockRng",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "block",
                                                    next: Some(
                                                        MyPath {
                                                            name: "BlockRng",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "BlockRng64",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "block",
                                                    next: Some(
                                                        MyPath {
                                                            name: "BlockRng64",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "BlockRngCore",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "block",
                                                    next: Some(
                                                        MyPath {
                                                            name: "BlockRngCore",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "RngCore",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "RngCore",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "SeedableRng",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "SeedableRng",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                ],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                    ]
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "impls",
                            mod_tree: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "impls",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src/impls.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src",
                            mod_file_directory_path: None,
                            visibility: PubT,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(47272..47277),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: RngCore,
                                                            span: bytes(47279..47286),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [
                            ModItem {
                                mod_name: "test",
                                file_name: None,
                                item: Some(
                                    ItemMod {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(52322..52325),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: test,
                                                            span: bytes(52326..52330),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Inherited,
                                        unsafety: None,
                                        mod_token: Mod,
                                        ident: Ident {
                                            sym: test,
                                            span: bytes(52337..52341),
                                        },
                                        content: Some(
                                            (
                                                Brace,
                                                [],
                                            ),
                                        ),
                                        semi: None,
                                    },
                                ),
                                inside_items: [
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: super,
                                                    span: bytes(52352..52357),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Glob(
                                                    UseGlob {
                                                        star_token: Star,
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ],
                                visibility: Pri,
                            },
                        ],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Observable",
                                        complete_name: "rand_core::impls::Observable",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "impls",
                                                    next: Some(
                                                        MyPath {
                                                            name: "Observable",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Observable,
                                                                span: bytes(48607..48617),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(48622..48625),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Bytes,
                                                    span: bytes(48637..48642),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Array {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(48646..48648),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    semi_token: Semi,
                                                    len: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 4,
                                                        },
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_le_bytes",
                                            complete_name: "< as rand_core::impls::Observable>::to_le_bytes",
                                            import_name: MyPath {
                                                name: "< as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "impls",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Observable>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_le_bytes",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::to_le_bytes",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_le_bytes,
                                                        span: bytes(48662..48673),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(48674..48678),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(48683..48687),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Bytes,
                                                                            span: bytes(48689..48694),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(48705..48709),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: to_le_bytes,
                                                                                    span: bytes(48711..48722),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(48723..48727),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "u8",
                                ],
                            },
                            ImplItem {
                                impl_num: 1,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Observable",
                                        complete_name: "rand_core::impls::Observable",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "impls",
                                                    next: Some(
                                                        MyPath {
                                                            name: "Observable",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Observable,
                                                                span: bytes(48742..48752),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(48757..48760),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Bytes,
                                                    span: bytes(48772..48777),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Array {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(48781..48783),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    semi_token: Semi,
                                                    len: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Int {
                                                            token: 8,
                                                        },
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_le_bytes",
                                            complete_name: "< as rand_core::impls::Observable>::to_le_bytes",
                                            import_name: MyPath {
                                                name: "< as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "impls",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Observable>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_le_bytes",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::to_le_bytes",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_le_bytes,
                                                        span: bytes(48797..48808),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(48809..48813),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(48818..48822),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Bytes,
                                                                            span: bytes(48824..48829),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(48840..48844),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: to_le_bytes,
                                                                                    span: bytes(48846..48857),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(48858..48862),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "u8",
                                ],
                            },
                        ],
                        functions: [
                            FnItem {
                                fn_name: Name {
                                    name: "next_u64_via_u32",
                                    complete_name: "rand_core::impls::next_u64_via_u32",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "impls",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u64_via_u32",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "next_u64_via_u32",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u64_via_u32,
                                                span: bytes(47358..47374),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: R,
                                                                span: bytes(47375..47376),
                                                            },
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: RngCore,
                                                                                        span: bytes(47378..47385),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Plus,
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::Maybe(
                                                                            Question,
                                                                        ),
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Sized,
                                                                                        span: bytes(47389..47394),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: rng,
                                                                span: bytes(47396..47399),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(47406..47407),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(47412..47415),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: x,
                                                            span: bytes(47491..47492),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(47495..47498),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: from,
                                                                                    span: bytes(47500..47504),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: rng,
                                                                                            span: bytes(47505..47508),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: next_u32,
                                                                            span: bytes(47509..47517),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: y,
                                                            span: bytes(47530..47531),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(47534..47537),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: from,
                                                                                    span: bytes(47539..47543),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: rng,
                                                                                            span: bytes(47544..47547),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: next_u32,
                                                                            span: bytes(47548..47556),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Binary {
                                                        attrs: [],
                                                        left: Expr::Paren {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: y,
                                                                                    span: bytes(47566..47567),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Shl(
                                                                    Shl,
                                                                ),
                                                                right: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 32,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        op: BinOp::BitOr(
                                                            Or,
                                                        ),
                                                        right: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: x,
                                                                            span: bytes(47577..47578),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "fill_bytes_via_next",
                                    complete_name: "rand_core::impls::fill_bytes_via_next",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "impls",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_bytes_via_next",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "fill_bytes_via_next",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fill_bytes_via_next,
                                                span: bytes(47921..47940),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: R,
                                                                span: bytes(47941..47942),
                                                            },
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: RngCore,
                                                                                        span: bytes(47944..47951),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Plus,
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::Maybe(
                                                                            Question,
                                                                        ),
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Sized,
                                                                                        span: bytes(47955..47960),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: rng,
                                                                span: bytes(47962..47965),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(47972..47973),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dest,
                                                                span: bytes(47975..47979),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(47987..47989),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: left,
                                                            span: bytes(48006..48010),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: dest,
                                                                                span: bytes(48013..48017),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::While {
                                                        attrs: [],
                                                        label: None,
                                                        while_token: While,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: left,
                                                                                    span: bytes(48029..48033),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: len,
                                                                    span: bytes(48034..48037),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            op: BinOp::Ge(
                                                                Ge,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 8,
                                                                },
                                                            },
                                                        },
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: l,
                                                                                    span: bytes(48060..48061),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            Comma,
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: r,
                                                                                    span: bytes(48063..48064),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: left,
                                                                                                                    span: bytes(48070..48074),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: split_at_mut,
                                                                                    span: bytes(48077..48089),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 8,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: left,
                                                                                            span: bytes(48102..48106),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: r,
                                                                                            span: bytes(48109..48110),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Type {
                                                                        attrs: [],
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: chunk,
                                                                                span: bytes(48124..48129),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        colon_token: Colon,
                                                                        ty: Type::Array {
                                                                            bracket_token: Bracket,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u8,
                                                                                                span: bytes(48132..48134),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            semi_token: Semi,
                                                                            len: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 8,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: rng,
                                                                                                        span: bytes(48141..48144),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: next_u64,
                                                                                        span: bytes(48145..48153),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: to_le_bytes,
                                                                                    span: bytes(48156..48167),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: l,
                                                                                            span: bytes(48179..48180),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: copy_from_slice,
                                                                            span: bytes(48181..48196),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: None,
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: chunk,
                                                                                                    span: bytes(48198..48203),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: n,
                                                            span: bytes(48220..48221),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: left,
                                                                                    span: bytes(48224..48228),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: len,
                                                                    span: bytes(48229..48232),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Binary {
                                                            attrs: [],
                                                            left: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: n,
                                                                                span: bytes(48243..48244),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            op: BinOp::Gt(
                                                                Gt,
                                                            ),
                                                            right: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Int {
                                                                    token: 4,
                                                                },
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Type {
                                                                        attrs: [],
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: chunk,
                                                                                span: bytes(48263..48268),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        colon_token: Colon,
                                                                        ty: Type::Array {
                                                                            bracket_token: Bracket,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u8,
                                                                                                span: bytes(48271..48273),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            semi_token: Semi,
                                                                            len: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 8,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: rng,
                                                                                                        span: bytes(48280..48283),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: next_u64,
                                                                                        span: bytes(48284..48292),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: to_le_bytes,
                                                                                    span: bytes(48295..48306),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: left,
                                                                                            span: bytes(48318..48322),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: copy_from_slice,
                                                                            span: bytes(48323..48338),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: None,
                                                                                expr: Expr::Index {
                                                                                    attrs: [],
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: chunk,
                                                                                                        span: bytes(48340..48345),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    bracket_token: Bracket,
                                                                                    index: Expr::Range {
                                                                                        attrs: [],
                                                                                        start: None,
                                                                                        limits: RangeLimits::HalfOpen(
                                                                                            DotDot,
                                                                                        ),
                                                                                        end: Some(
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: n,
                                                                                                                span: bytes(48348..48349),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::If {
                                                                    attrs: [],
                                                                    if_token: If,
                                                                    cond: Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: n,
                                                                                            span: bytes(48367..48368),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        op: BinOp::Gt(
                                                                            Gt,
                                                                        ),
                                                                        right: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                    },
                                                                    then_branch: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Local {
                                                                                attrs: [],
                                                                                let_token: Let,
                                                                                pat: Pat::Type {
                                                                                    attrs: [],
                                                                                    pat: Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: chunk,
                                                                                            span: bytes(48387..48392),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    colon_token: Colon,
                                                                                    ty: Type::Array {
                                                                                        bracket_token: Bracket,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(48395..48397),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        semi_token: Semi,
                                                                                        len: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 4,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                },
                                                                                init: Some(
                                                                                    LocalInit {
                                                                                        eq_token: Eq,
                                                                                        expr: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: rng,
                                                                                                                    span: bytes(48404..48407),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: next_u32,
                                                                                                    span: bytes(48408..48416),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: to_le_bytes,
                                                                                                span: bytes(48419..48430),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [],
                                                                                        },
                                                                                        diverge: None,
                                                                                    },
                                                                                ),
                                                                                semi_token: Semi,
                                                                            },
                                                                            Stmt::Expr(
                                                                                Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: left,
                                                                                                        span: bytes(48442..48446),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: copy_from_slice,
                                                                                        span: bytes(48447..48462),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Reference {
                                                                                            attrs: [],
                                                                                            and_token: And,
                                                                                            mutability: None,
                                                                                            expr: Expr::Index {
                                                                                                attrs: [],
                                                                                                expr: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: chunk,
                                                                                                                    span: bytes(48464..48469),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                bracket_token: Bracket,
                                                                                                index: Expr::Range {
                                                                                                    attrs: [],
                                                                                                    start: None,
                                                                                                    limits: RangeLimits::HalfOpen(
                                                                                                        DotDot,
                                                                                                    ),
                                                                                                    end: Some(
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: n,
                                                                                                                            span: bytes(48472..48473),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                        ],
                                                                    },
                                                                    else_branch: None,
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "fill_via_chunks",
                                    complete_name: "rand_core::impls::fill_via_chunks",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "impls",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_via_chunks",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "fill_via_chunks",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Restricted {
                                            pub_token: Pub,
                                            paren_token: Paren,
                                            in_token: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(49049..49054),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fill_via_chunks,
                                                span: bytes(49059..49074),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(49075..49076),
                                                            },
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Observable,
                                                                                        span: bytes(49078..49088),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: src,
                                                                span: bytes(49090..49093),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: T,
                                                                                    span: bytes(49097..49098),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dest,
                                                                span: bytes(49101..49105),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(49113..49115),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(49122..49127),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(49129..49134),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: size,
                                                            span: bytes(49146..49150),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: core,
                                                                                    span: bytes(49153..49157),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: mem,
                                                                                    span: bytes(49159..49162),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: size_of,
                                                                                    span: bytes(49164..49171),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: Some(
                                                                                        PathSep,
                                                                                    ),
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Type(
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: T,
                                                                                                                span: bytes(49174..49175),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: dest,
                                                            span: bytes(49254..49258),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: dest,
                                                                                    span: bytes(49261..49265),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: chunks_exact_mut,
                                                                    span: bytes(49266..49282),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: size,
                                                                                        span: bytes(49283..49287),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: src,
                                                            span: bytes(49302..49305),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: src,
                                                                                    span: bytes(49308..49311),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: iter,
                                                                    span: bytes(49312..49316),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: zipped,
                                                            span: bytes(49329..49335),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: dest,
                                                                                        span: bytes(49338..49342),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: by_ref,
                                                                        span: bytes(49343..49349),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: zip,
                                                                    span: bytes(49352..49355),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: src,
                                                                                            span: bytes(49356..49359),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: by_ref,
                                                                            span: bytes(49360..49366),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: num_chunks,
                                                            span: bytes(49379..49389),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: zipped,
                                                                                    span: bytes(49392..49398),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: len,
                                                                    span: bytes(49399..49402),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: zipped,
                                                                            span: bytes(49410..49416),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: for_each,
                                                            span: bytes(49417..49425),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Closure {
                                                                attrs: [],
                                                                lifetimes: None,
                                                                constness: None,
                                                                movability: None,
                                                                asyncness: None,
                                                                capture: None,
                                                                or1_token: Or,
                                                                inputs: [
                                                                    Pat::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: dest,
                                                                                    span: bytes(49428..49432),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            Comma,
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: src,
                                                                                    span: bytes(49434..49437),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                                or2_token: Or,
                                                                output: ReturnType::Default,
                                                                body: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: dest,
                                                                                        span: bytes(49440..49444),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: copy_from_slice,
                                                                        span: bytes(49445..49460),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: src,
                                                                                                    span: bytes(49461..49464),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: to_le_bytes,
                                                                                    span: bytes(49465..49476),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: as_ref,
                                                                                span: bytes(49479..49485),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: byte_len,
                                                            span: bytes(49500..49508),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Binary {
                                                                attrs: [],
                                                                left: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: num_chunks,
                                                                                    span: bytes(49511..49521),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                op: BinOp::Mul(
                                                                    Star,
                                                                ),
                                                                right: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: size,
                                                                                    span: bytes(49524..49528),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Let {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::TupleStruct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Some,
                                                                                span: bytes(49541..49545),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: src,
                                                                            span: bytes(49546..49549),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                ],
                                                            },
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: src,
                                                                                    span: bytes(49553..49556),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: next,
                                                                    span: bytes(49557..49561),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: dest,
                                                                            span: bytes(49644..49648),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: dest,
                                                                                                    span: bytes(49651..49655),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: into_remainder,
                                                                                    span: bytes(49656..49670),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Local {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: n,
                                                                            span: bytes(49686..49687),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    init: Some(
                                                                        LocalInit {
                                                                            eq_token: Eq,
                                                                            expr: Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: dest,
                                                                                                    span: bytes(49690..49694),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: len,
                                                                                    span: bytes(49695..49698),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            diverge: None,
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                                Stmt::Expr(
                                                                    Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: n,
                                                                                                span: bytes(49713..49714),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            op: BinOp::Gt(
                                                                                Gt,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0,
                                                                                },
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: dest,
                                                                                                            span: bytes(49733..49737),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: copy_from_slice,
                                                                                            span: bytes(49738..49753),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::Reference {
                                                                                                attrs: [],
                                                                                                and_token: And,
                                                                                                mutability: None,
                                                                                                expr: Expr::Index {
                                                                                                    attrs: [],
                                                                                                    expr: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: src,
                                                                                                                                span: bytes(49755..49758),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: to_le_bytes,
                                                                                                                span: bytes(49759..49770),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [],
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: as_ref,
                                                                                                            span: bytes(49773..49779),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [],
                                                                                                    },
                                                                                                    bracket_token: Bracket,
                                                                                                    index: Expr::Range {
                                                                                                        attrs: [],
                                                                                                        start: None,
                                                                                                        limits: RangeLimits::HalfOpen(
                                                                                                            DotDot,
                                                                                                        ),
                                                                                                        end: Some(
                                                                                                            Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: n,
                                                                                                                                span: bytes(49784..49785),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Return {
                                                                                        attrs: [],
                                                                                        return_token: Return,
                                                                                        expr: Some(
                                                                                            Expr::Tuple {
                                                                                                attrs: [],
                                                                                                paren_token: Paren,
                                                                                                elems: [
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: num_chunks,
                                                                                                                            span: bytes(49809..49819),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Comma,
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: byte_len,
                                                                                                                            span: bytes(49825..49833),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::Add(
                                                                                                            Plus,
                                                                                                        ),
                                                                                                        right: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: n,
                                                                                                                            span: bytes(49836..49837),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: None,
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: None,
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: num_chunks,
                                                                                span: bytes(49861..49871),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: byte_len,
                                                                                span: bytes(49873..49881),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubS,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "fill_via_u32_chunks",
                                    complete_name: "rand_core::impls::fill_via_u32_chunks",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "impls",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_via_u32_chunks",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "fill_via_u32_chunks",
                                item: Some(
                                    ItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: deprecated,
                                                                    span: bytes(50960..50970),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: since,
                                                            span: bytes(50971..50976),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(50977..50978),
                                                        },
                                                        Literal {
                                                            lit: "0.9.3",
                                                            span: bytes(50979..50986),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(50986..50987),
                                                        },
                                                        Ident {
                                                            sym: note,
                                                            span: bytes(50988..50992),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(50993..50994),
                                                        },
                                                        Literal {
                                                            lit: "use BlockRng instead",
                                                            span: bytes(50995..51017),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fill_via_u32_chunks,
                                                span: bytes(51027..51046),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: src,
                                                                span: bytes(51047..51050),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(51058..51061),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dest,
                                                                span: bytes(51064..51068),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(51076..51078),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(51085..51090),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(51092..51097),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fill_via_chunks,
                                                                            span: bytes(51105..51120),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: src,
                                                                                span: bytes(51121..51124),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: dest,
                                                                                span: bytes(51126..51130),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "fill_via_u64_chunks",
                                    complete_name: "rand_core::impls::fill_via_u64_chunks",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "impls",
                                                next: Some(
                                                    MyPath {
                                                        name: "fill_via_u64_chunks",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "fill_via_u64_chunks",
                                item: Some(
                                    ItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: deprecated,
                                                                    span: bytes(51705..51715),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: since,
                                                            span: bytes(51716..51721),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(51722..51723),
                                                        },
                                                        Literal {
                                                            lit: "0.9.3",
                                                            span: bytes(51724..51731),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(51731..51732),
                                                        },
                                                        Ident {
                                                            sym: note,
                                                            span: bytes(51733..51737),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(51738..51739),
                                                        },
                                                        Literal {
                                                            lit: "use BlockRng64 instead",
                                                            span: bytes(51740..51764),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: fill_via_u64_chunks,
                                                span: bytes(51774..51793),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: src,
                                                                span: bytes(51794..51797),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(51805..51808),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dest,
                                                                span: bytes(51811..51815),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(51823..51825),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(51832..51837),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(51839..51844),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fill_via_chunks,
                                                                            span: bytes(51852..51867),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: src,
                                                                                span: bytes(51868..51871),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: dest,
                                                                                span: bytes(51873..51877),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "next_u32_via_fill",
                                    complete_name: "rand_core::impls::next_u32_via_fill",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "impls",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u32_via_fill",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "next_u32_via_fill",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u32_via_fill,
                                                span: bytes(51953..51970),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: R,
                                                                span: bytes(51971..51972),
                                                            },
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: RngCore,
                                                                                        span: bytes(51974..51981),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Plus,
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::Maybe(
                                                                            Question,
                                                                        ),
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Sized,
                                                                                        span: bytes(51985..51990),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: rng,
                                                                span: bytes(51992..51995),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(52002..52003),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u32,
                                                                    span: bytes(52008..52011),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: buf,
                                                            span: bytes(52026..52029),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Repeat {
                                                                attrs: [],
                                                                bracket_token: Bracket,
                                                                expr: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                                semi_token: Semi,
                                                                len: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 4,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: rng,
                                                                            span: bytes(52044..52047),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: fill_bytes,
                                                            span: bytes(52048..52058),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Reference {
                                                                attrs: [],
                                                                and_token: And,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: buf,
                                                                                    span: bytes(52064..52067),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u32,
                                                                            span: bytes(52074..52077),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: from_le_bytes,
                                                                            span: bytes(52079..52092),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: buf,
                                                                                span: bytes(52093..52096),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "next_u64_via_fill",
                                    complete_name: "rand_core::impls::next_u64_via_fill",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "impls",
                                                next: Some(
                                                    MyPath {
                                                        name: "next_u64_via_fill",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "next_u64_via_fill",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: next_u64_via_fill,
                                                span: bytes(52172..52189),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: R,
                                                                span: bytes(52190..52191),
                                                            },
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            bounds: [
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::None,
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: RngCore,
                                                                                        span: bytes(52193..52200),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Plus,
                                                                TypeParamBound::Trait(
                                                                    TraitBound {
                                                                        paren_token: None,
                                                                        modifier: TraitBoundModifier::Maybe(
                                                                            Question,
                                                                        ),
                                                                        lifetimes: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Sized,
                                                                                        span: bytes(52204..52209),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: rng,
                                                                span: bytes(52211..52214),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: R,
                                                                                span: bytes(52221..52222),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(52227..52230),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: buf,
                                                            span: bytes(52245..52248),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Repeat {
                                                                attrs: [],
                                                                bracket_token: Bracket,
                                                                expr: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                                semi_token: Semi,
                                                                len: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 8,
                                                                    },
                                                                },
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: rng,
                                                                            span: bytes(52263..52266),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: fill_bytes,
                                                            span: bytes(52267..52277),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Reference {
                                                                attrs: [],
                                                                and_token: And,
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: buf,
                                                                                    span: bytes(52283..52286),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(52293..52296),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: from_le_bytes,
                                                                            span: bytes(52298..52311),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: buf,
                                                                                span: bytes(52312..52315),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                        ],
                        traits: [
                            TraitItem {
                                trait_name: Name {
                                    name: "Observable",
                                    complete_name: "rand_core::impls::Observable",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "impls",
                                                next: Some(
                                                    MyPath {
                                                        name: "Observable",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemTrait {
                                        attrs: [],
                                        vis: Visibility::Restricted {
                                            pub_token: Pub,
                                            paren_token: Paren,
                                            in_token: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(48490..48495),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: Observable,
                                            span: bytes(48503..48513),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        supertraits: [
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Copy,
                                                                    span: bytes(48515..48519),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    TraitTypeItem {
                                        item: Some(
                                            TraitItemType {
                                                attrs: [],
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Bytes,
                                                    span: bytes(48531..48536),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(48538..48543),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: AsRef,
                                                                            span: bytes(48546..48551),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Slice {
                                                                                        bracket_token: Bracket,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: u8,
                                                                                                            span: bytes(48553..48555),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                default: None,
                                                semi_token: Semi,
                                            },
                                        ),
                                    },
                                ],
                                consts: [],
                                functions: [
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "to_le_bytes",
                                            complete_name: "<  as rand_core::impls::Observable>::to_le_bytes",
                                            import_name: MyPath {
                                                name: "<  as rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "impls",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Observable>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_le_bytes",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "Observable::to_le_bytes",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_le_bytes,
                                                        span: bytes(48566..48577),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(48578..48582),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Self,
                                                                            span: bytes(48587..48591),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Bytes,
                                                                            span: bytes(48593..48598),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: true,
                                    },
                                ],
                                visibility: PubS,
                                relative_types: [
                                    "Copy",
                                ],
                            },
                        ],
                        use_trees: [
                            UseTree {
                                use_name: "RngCore",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "RngCore",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: [
                        RefCell {
                            value: ModContext {
                             mod_info: Mod(
                                ModModInfo {
                                    mod_name: "test",
                                    mod_tree: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "impls",
                                                next: Some(
                                                    MyPath {
                                                        name: "test",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                    file_path: "",
                                    parent_directory_path: "",
                                    mod_file_directory_path: None,
                                    visibility: PubS,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [],
                                trait_aliases: [],
                                uses: [
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: super,
                                                            span: bytes(52352..52357),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Glob(
                                                            UseGlob {
                                                                star_token: Star,
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [],
                                enums: [],
                                unions: [],
                                impls: [],
                                functions: [],
                                traits: [],
                                use_trees: [
                                    UseTree {
                                        use_name: "*",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "super",
                                            next: Some(
                                                MyPath {
                                                    name: "*",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                ],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                    ]
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "le",
                            mod_tree: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "le",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src/le.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src",
                            mod_file_directory_path: None,
                            visibility: PubT,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [],
                        functions: [
                            FnItem {
                                fn_name: Name {
                                    name: "read_u32_into",
                                    complete_name: "rand_core::le::read_u32_into",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "le",
                                                next: Some(
                                                    MyPath {
                                                        name: "read_u32_into",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "read_u32_into",
                                item: Some(
                                    ItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(54420..54426),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: track_caller,
                                                                span: bytes(54430..54442),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: read_u32_into,
                                                span: bytes(54451..54464),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: src,
                                                                span: bytes(54465..54468),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(54472..54474),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dst,
                                                                span: bytes(54477..54480),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u32,
                                                                                    span: bytes(54488..54491),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: assert,
                                                                        span: bytes(54500..54506),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: src,
                                                                span: bytes(54508..54511),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(54511..54512),
                                                            },
                                                            Ident {
                                                                sym: len,
                                                                span: bytes(54512..54515),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(54515..54517),
                                                            },
                                                            Punct {
                                                                char: '>',
                                                                spacing: Joint,
                                                                span: bytes(54518..54519),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Alone,
                                                                span: bytes(54519..54520),
                                                            },
                                                            Literal {
                                                                lit: 4,
                                                                span: bytes(54521..54522),
                                                            },
                                                            Punct {
                                                                char: '*',
                                                                spacing: Alone,
                                                                span: bytes(54523..54524),
                                                            },
                                                            Ident {
                                                                sym: dst,
                                                                span: bytes(54525..54528),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(54528..54529),
                                                            },
                                                            Ident {
                                                                sym: len,
                                                                span: bytes(54529..54532),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(54532..54534),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Expr(
                                                    Expr::ForLoop {
                                                        attrs: [],
                                                        label: None,
                                                        for_token: For,
                                                        pat: Pat::Tuple {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: out,
                                                                        span: bytes(54546..54549),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                Comma,
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: chunk,
                                                                        span: bytes(54551..54556),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        in_token: In,
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: dst,
                                                                                    span: bytes(54561..54564),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: iter_mut,
                                                                    span: bytes(54565..54573),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: zip,
                                                                span: bytes(54576..54579),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: src,
                                                                                        span: bytes(54580..54583),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: chunks_exact,
                                                                        span: bytes(54584..54596),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 4,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ],
                                                        },
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: out,
                                                                                                span: bytes(54612..54615),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u32,
                                                                                                span: bytes(54618..54621),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: from_le_bytes,
                                                                                                span: bytes(54623..54636),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: chunk,
                                                                                                            span: bytes(54637..54642),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: try_into,
                                                                                            span: bytes(54643..54651),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: unwrap,
                                                                                        span: bytes(54654..54660),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "read_u64_into",
                                    complete_name: "rand_core::le::read_u64_into",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "le",
                                                next: Some(
                                                    MyPath {
                                                        name: "read_u64_into",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "read_u64_into",
                                item: Some(
                                    ItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(54820..54826),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: track_caller,
                                                                span: bytes(54830..54842),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: read_u64_into,
                                                span: bytes(54851..54864),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: src,
                                                                span: bytes(54865..54868),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u8,
                                                                                    span: bytes(54872..54874),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: dst,
                                                                span: bytes(54877..54880),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Slice {
                                                                bracket_token: Bracket,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(54888..54891),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Macro {
                                                    attrs: [],
                                                    mac: Macro {
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: assert,
                                                                        span: bytes(54900..54906),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        bang_token: Not,
                                                        delimiter: MacroDelimiter::Paren(
                                                            Paren,
                                                        ),
                                                        tokens: TokenStream [
                                                            Ident {
                                                                sym: src,
                                                                span: bytes(54908..54911),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(54911..54912),
                                                            },
                                                            Ident {
                                                                sym: len,
                                                                span: bytes(54912..54915),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(54915..54917),
                                                            },
                                                            Punct {
                                                                char: '>',
                                                                spacing: Joint,
                                                                span: bytes(54918..54919),
                                                            },
                                                            Punct {
                                                                char: '=',
                                                                spacing: Alone,
                                                                span: bytes(54919..54920),
                                                            },
                                                            Literal {
                                                                lit: 8,
                                                                span: bytes(54921..54922),
                                                            },
                                                            Punct {
                                                                char: '*',
                                                                spacing: Alone,
                                                                span: bytes(54923..54924),
                                                            },
                                                            Ident {
                                                                sym: dst,
                                                                span: bytes(54925..54928),
                                                            },
                                                            Punct {
                                                                char: '.',
                                                                spacing: Alone,
                                                                span: bytes(54928..54929),
                                                            },
                                                            Ident {
                                                                sym: len,
                                                                span: bytes(54929..54932),
                                                            },
                                                            Group {
                                                                delimiter: Parenthesis,
                                                                stream: TokenStream [],
                                                                span: bytes(54932..54934),
                                                            },
                                                        ],
                                                    },
                                                    semi_token: Some(
                                                        Semi,
                                                    ),
                                                },
                                                Stmt::Expr(
                                                    Expr::ForLoop {
                                                        attrs: [],
                                                        label: None,
                                                        for_token: For,
                                                        pat: Pat::Tuple {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: out,
                                                                        span: bytes(54946..54949),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                Comma,
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: chunk,
                                                                        span: bytes(54951..54956),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        in_token: In,
                                                        expr: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: dst,
                                                                                    span: bytes(54961..54964),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: iter_mut,
                                                                    span: bytes(54965..54973),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: zip,
                                                                span: bytes(54976..54979),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: src,
                                                                                        span: bytes(54980..54983),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: chunks_exact,
                                                                        span: bytes(54984..54996),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 8,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ],
                                                        },
                                                        body: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Assign {
                                                                        attrs: [],
                                                                        left: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: out,
                                                                                                span: bytes(55012..55015),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        eq_token: Eq,
                                                                        right: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: u64,
                                                                                                span: bytes(55018..55021),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: from_le_bytes,
                                                                                                span: bytes(55023..55036),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: chunk,
                                                                                                            span: bytes(55037..55042),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: try_into,
                                                                                            span: bytes(55043..55051),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: unwrap,
                                                                                        span: bytes(55054..55060),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                        ],
                        traits: [],
                        use_trees: [],
                    },
                     sub_mods: []
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "os",
                            mod_tree: MyPath {
                                name: "rand_core",
                                next: Some(
                                    MyPath {
                                        name: "os",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src/os.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/rand/rand_core/src",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(56246..56251),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TryCryptoRng,
                                                                        span: bytes(56254..56266),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TryRngCore,
                                                                        span: bytes(56268..56278),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [
                            StructItem {
                                struct_name: Name {
                                    name: "OsRng",
                                    complete_name: "rand_core::os::OsRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "os",
                                                next: Some(
                                                    MyPath {
                                                        name: "OsRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: derive,
                                                                    span: bytes(57629..57635),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: Clone,
                                                            span: bytes(57636..57641),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(57641..57642),
                                                        },
                                                        Ident {
                                                            sym: Copy,
                                                            span: bytes(57643..57647),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(57647..57648),
                                                        },
                                                        Ident {
                                                            sym: Debug,
                                                            span: bytes(57649..57654),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(57654..57655),
                                                        },
                                                        Ident {
                                                            sym: Default,
                                                            span: bytes(57656..57663),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: OsRng,
                                            span: bytes(57677..57682),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        fields: Fields::Unit,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                visibility: PubT,
                                relative_types: [],
                            },
                            StructItem {
                                struct_name: Name {
                                    name: "OsError",
                                    complete_name: "rand_core::os::OsError",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "os",
                                                next: Some(
                                                    MyPath {
                                                        name: "OsError",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: derive,
                                                                    span: bytes(57715..57721),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: Clone,
                                                            span: bytes(57722..57727),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(57727..57728),
                                                        },
                                                        Ident {
                                                            sym: Copy,
                                                            span: bytes(57729..57733),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(57733..57734),
                                                        },
                                                        Ident {
                                                            sym: Debug,
                                                            span: bytes(57735..57740),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(57740..57741),
                                                        },
                                                        Ident {
                                                            sym: PartialEq,
                                                            span: bytes(57742..57751),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(57751..57752),
                                                        },
                                                        Ident {
                                                            sym: Eq,
                                                            span: bytes(57753..57755),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: OsError,
                                            span: bytes(57769..57776),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        fields: Fields::Unnamed {
                                            paren_token: Paren,
                                            unnamed: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: None,
                                                    colon_token: None,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: getrandom,
                                                                        span: bytes(57777..57786),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Error,
                                                                        span: bytes(57788..57793),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                visibility: PubT,
                                relative_types: [
                                    "Error",
                                    "getrandom",
                                ],
                            },
                        ],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "OsError",
                                    complete_name: "rand_core::os::OsError",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "os",
                                                next: Some(
                                                    MyPath {
                                                        name: "OsError",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Display",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "core",
                                            next: Some(
                                                MyPath {
                                                    name: "fmt",
                                                    next: Some(
                                                        MyPath {
                                                            name: "Display",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: core,
                                                                span: bytes(57802..57806),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(57808..57811),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Display,
                                                                span: bytes(57813..57820),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: OsError,
                                                            span: bytes(57825..57832),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<rand_core::os::OsError as core::fmt::Display>::fmt",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "os",
                                                        next: Some(
                                                            MyPath {
                                                                name: "OsError as core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "Display>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "fmt",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(57841..57847),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(57856..57859),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(57861..57865),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(57867..57868),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: core,
                                                                                        span: bytes(57875..57879),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(57881..57884),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(57886..57895),
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: None,
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Lifetime(
                                                                                                Lifetime {
                                                                                                    apostrophe: bytes(57896..57897),
                                                                                                    ident: Ident {
                                                                                                        sym: _,
                                                                                                        span: bytes(57897..57898),
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: core,
                                                                            span: bytes(57904..57908),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(57910..57913),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(57915..57921),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(57932..57936),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 0,
                                                                            span: bytes(57937..57938),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: fmt,
                                                                    span: bytes(57939..57942),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(57943..57944),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 1,
                                struct_name: Name {
                                    name: "OsError",
                                    complete_name: "rand_core::os::OsError",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "os",
                                                next: Some(
                                                    MyPath {
                                                        name: "OsError",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Error",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "std",
                                            next: Some(
                                                MyPath {
                                                    name: "error",
                                                    next: Some(
                                                        MyPath {
                                                            name: "Error",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cfg,
                                                                    span: bytes(58016..58019),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: feature,
                                                            span: bytes(58020..58027),
                                                        },
                                                        Punct {
                                                            char: '=',
                                                            spacing: Alone,
                                                            span: bytes(58028..58029),
                                                        },
                                                        Literal {
                                                            lit: "std",
                                                            span: bytes(58030..58035),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: std,
                                                                span: bytes(58043..58046),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: error,
                                                                span: bytes(58048..58053),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Error,
                                                                span: bytes(58055..58060),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: OsError,
                                                            span: bytes(58065..58072),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "source",
                                            complete_name: "<rand_core::os::OsError as std::error::Error>::source",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "os",
                                                        next: Some(
                                                            MyPath {
                                                                name: "OsError as std",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "error",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "Error>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "source",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::source",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(58081..58087),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: source,
                                                        span: bytes(58096..58102),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(58104..58108),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(58113..58119),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Reference {
                                                                                        and_token: And,
                                                                                        lifetime: None,
                                                                                        mutability: None,
                                                                                        elem: Type::Paren {
                                                                                            paren_token: Paren,
                                                                                            elem: Type::TraitObject {
                                                                                                dyn_token: Some(
                                                                                                    Dyn,
                                                                                                ),
                                                                                                bounds: [
                                                                                                    TypeParamBound::Trait(
                                                                                                        TraitBound {
                                                                                                            paren_token: None,
                                                                                                            modifier: TraitBoundModifier::None,
                                                                                                            lifetimes: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: std,
                                                                                                                            span: bytes(58126..58129),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: error,
                                                                                                                            span: bytes(58131..58136),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: Error,
                                                                                                                            span: bytes(58138..58143),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                    Plus,
                                                                                                    TypeParamBound::Lifetime {
                                                                                                        apostrophe: bytes(58146..58147),
                                                                                                        ident: Ident {
                                                                                                            sym: static,
                                                                                                            span: bytes(58147..58153),
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: std,
                                                                                    span: bytes(58166..58169),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: error,
                                                                                    span: bytes(58171..58176),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Error,
                                                                                    span: bytes(58178..58183),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: source,
                                                                                    span: bytes(58185..58191),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(58193..58197),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(58198..58199),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 2,
                                struct_name: Name {
                                    name: "OsError",
                                    complete_name: "rand_core::os::OsError",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "os",
                                                next: Some(
                                                    MyPath {
                                                        name: "OsError",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: None,
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: None,
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: OsError,
                                                            span: bytes(58215..58222),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "raw_os_error",
                                            complete_name: "rand_core::os::OsError::raw_os_error",
                                            import_name: MyPath {
                                                name: "rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "os",
                                                        next: Some(
                                                            MyPath {
                                                                name: "OsError",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "raw_os_error",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::raw_os_error",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(58640..58646),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: raw_os_error,
                                                        span: bytes(58659..58671),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(58672..58676),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(58681..58687),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: i32,
                                                                                                        span: bytes(58688..58691),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(58703..58707),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 0,
                                                                            span: bytes(58708..58709),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: raw_os_error,
                                                                    span: bytes(58710..58722),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 3,
                                struct_name: Name {
                                    name: "OsRng",
                                    complete_name: "rand_core::os::OsRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "os",
                                                next: Some(
                                                    MyPath {
                                                        name: "OsRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "TryRngCore",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "TryRngCore",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: TryRngCore,
                                                                span: bytes(58739..58749),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: OsRng,
                                                            span: bytes(58754..58759),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Error,
                                                    span: bytes(58771..58776),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: OsError,
                                                                    span: bytes(58779..58786),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "try_next_u32",
                                            complete_name: "<rand_core::os::OsRng as rand_core::TryRngCore>::try_next_u32",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "os",
                                                        next: Some(
                                                            MyPath {
                                                                name: "OsRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "TryRngCore>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "try_next_u32",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::try_next_u32",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(58795..58801),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: try_next_u32,
                                                        span: bytes(58810..58822),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(58828..58832),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(58837..58843),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u32,
                                                                                                        span: bytes(58844..58847),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(58849..58853),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Error,
                                                                                                        span: bytes(58855..58860),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: getrandom,
                                                                                        span: bytes(58872..58881),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u32,
                                                                                        span: bytes(58883..58886),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: map_err,
                                                                    span: bytes(58889..58896),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: OsError,
                                                                                        span: bytes(58897..58904),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "try_next_u64",
                                            complete_name: "<rand_core::os::OsRng as rand_core::TryRngCore>::try_next_u64",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "os",
                                                        next: Some(
                                                            MyPath {
                                                                name: "OsRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "TryRngCore>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "try_next_u64",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::try_next_u64",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(58919..58925),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: try_next_u64,
                                                        span: bytes(58934..58946),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(58952..58956),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(58961..58967),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: u64,
                                                                                                        span: bytes(58968..58971),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(58973..58977),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Error,
                                                                                                        span: bytes(58979..58984),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: getrandom,
                                                                                        span: bytes(58996..59005),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u64,
                                                                                        span: bytes(59007..59010),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: map_err,
                                                                    span: bytes(59013..59020),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: OsError,
                                                                                        span: bytes(59021..59028),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "try_fill_bytes",
                                            complete_name: "<rand_core::os::OsRng as rand_core::TryRngCore>::try_fill_bytes",
                                            import_name: MyPath {
                                                name: "<rand_core",
                                                next: Some(
                                                    MyPath {
                                                        name: "os",
                                                        next: Some(
                                                            MyPath {
                                                                name: "OsRng as rand_core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "TryRngCore>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "try_fill_bytes",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::try_fill_bytes",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(59043..59049),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: try_fill_bytes,
                                                        span: bytes(59058..59072),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(59078..59082),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: dest,
                                                                        span: bytes(59084..59088),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Slice {
                                                                        bracket_token: Bracket,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u8,
                                                                                            span: bytes(59096..59098),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(59104..59110),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Tuple {
                                                                                        paren_token: Paren,
                                                                                        elems: [],
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(59115..59119),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Error,
                                                                                                        span: bytes(59121..59126),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: getrandom,
                                                                                        span: bytes(59138..59147),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fill,
                                                                                        span: bytes(59149..59153),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: dest,
                                                                                            span: bytes(59154..59158),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: map_err,
                                                                    span: bytes(59160..59167),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: OsError,
                                                                                        span: bytes(59168..59175),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "OsError",
                                ],
                            },
                            ImplItem {
                                impl_num: 4,
                                struct_name: Name {
                                    name: "OsRng",
                                    complete_name: "rand_core::os::OsRng",
                                    import_name: MyPath {
                                        name: "rand_core",
                                        next: Some(
                                            MyPath {
                                                name: "os",
                                                next: Some(
                                                    MyPath {
                                                        name: "OsRng",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "TryCryptoRng",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "rand_core",
                                            next: Some(
                                                MyPath {
                                                    name: "TryCryptoRng",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: TryCryptoRng,
                                                                span: bytes(59191..59203),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: OsRng,
                                                            span: bytes(59208..59213),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [],
                                relative_types: [],
                            },
                        ],
                        functions: [],
                        traits: [],
                        use_trees: [
                            UseTree {
                                use_name: "TryCryptoRng",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "TryCryptoRng",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "TryRngCore",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "rand_core",
                                    next: Some(
                                        MyPath {
                                            name: "TryRngCore",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: []
                     }
                    ,
                },
            ]
             }
            ,
        },
    ],
}