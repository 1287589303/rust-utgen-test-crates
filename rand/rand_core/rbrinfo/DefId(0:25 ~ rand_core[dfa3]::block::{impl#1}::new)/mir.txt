bb0
  0: StorageLive(_2)
    SourceInfo(rand_core/src/block.rs:149:13-149:26)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:149:29-149:50)
      kind: _2 = <<R as block::BlockRngCore>::Results as core::default::Default>::default() -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(rand_core/src/block.rs:149:13-149:26)
  1: StorageLive(_3)
    SourceInfo(rand_core/src/block.rs:151:13-151:17)
  2: _3 = move _1
    SourceInfo(rand_core/src/block.rs:151:13-151:17)
  3: StorageLive(_4)
    SourceInfo(rand_core/src/block.rs:152:20-152:48)
  4: StorageLive(_5)
    SourceInfo(rand_core/src/block.rs:152:20-152:42)
  5: StorageLive(_6)
    SourceInfo(rand_core/src/block.rs:152:20-152:42)
  6: StorageLive(_7)
    SourceInfo(rand_core/src/block.rs:152:20-152:33)
  7: _7 = &_2
    SourceInfo(rand_core/src/block.rs:152:20-152:33)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:152:20-152:42)
      kind: _6 = <<R as block::BlockRngCore>::Results as core::convert::AsRef<[<R as block::BlockRngCore>::Item]>>::as_ref(move _7) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: _5 = &(*_6)
    SourceInfo(rand_core/src/block.rs:152:20-152:42)
  1: StorageDead(_7)
    SourceInfo(rand_core/src/block.rs:152:41-152:42)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:152:20-152:48)
      kind: _4 = core::slice::<impl [<R as block::BlockRngCore>::Item]>::len(move _5) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_5)
    SourceInfo(rand_core/src/block.rs:152:47-152:48)
  1: StorageLive(_8)
    SourceInfo(rand_core/src/block.rs:153:22-153:35)
  2: _8 = move _2
    SourceInfo(rand_core/src/block.rs:153:22-153:35)
  3: _0 = block::BlockRng::<R> { results: move _8, index: move _4, core: move _3 }
    SourceInfo(rand_core/src/block.rs:150:9-154:10)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:154:9-154:10)
      kind: drop(_8) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_8)
    SourceInfo(rand_core/src/block.rs:154:9-154:10)
  1: StorageDead(_4)
    SourceInfo(rand_core/src/block.rs:154:9-154:10)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:154:9-154:10)
      kind: drop(_3) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_3)
    SourceInfo(rand_core/src/block.rs:154:9-154:10)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:155:5-155:6)
      kind: drop(_2) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_2)
    SourceInfo(rand_core/src/block.rs:155:5-155:6)
  1: StorageDead(_6)
    SourceInfo(rand_core/src/block.rs:155:5-155:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:155:5-155:6)
      kind: drop(_1) -> [return: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:155:6-155:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:154:9-154:10)
      kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:155:5-155:6)
      kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb4, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:155:5-155:6)
      kind: drop(_1) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb0, bb5, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:148:5-155:6)
      kind: resume
  }
  preds [bb6, bb10]
  succs []

