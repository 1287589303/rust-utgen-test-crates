bb0
  0: StorageLive(_3)
    SourceInfo(rand_core/src/block.rs:136:9-139:41)
  1: StorageLive(_4)
    SourceInfo(rand_core/src/block.rs:136:9-139:41)
  2: StorageLive(_5)
    SourceInfo(rand_core/src/block.rs:136:9-138:63)
  3: StorageLive(_6)
    SourceInfo(rand_core/src/block.rs:136:9-138:63)
  4: StorageLive(_7)
    SourceInfo(rand_core/src/block.rs:136:9-137:39)
  5: StorageLive(_8)
    SourceInfo(rand_core/src/block.rs:136:9-137:39)
  6: StorageLive(_9)
    SourceInfo(rand_core/src/block.rs:136:9-136:37)
  7: StorageLive(_10)
    SourceInfo(rand_core/src/block.rs:136:9-136:37)
  8: StorageLive(_11)
    SourceInfo(rand_core/src/block.rs:136:9-136:12)
  9: _11 = &mut (*_2)
    SourceInfo(rand_core/src/block.rs:136:9-136:12)
  10: StorageLive(_12)
    SourceInfo(rand_core/src/block.rs:136:26-136:36)
  11: StorageLive(_13)
    SourceInfo(rand_core/src/block.rs:136:26-136:36)
  12: _13 = const "BlockRng"
    SourceInfo(rand_core/src/block.rs:136:26-136:36)
  13: _12 = &(*_13)
    SourceInfo(rand_core/src/block.rs:136:26-136:36)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:136:9-136:37)
      kind: _10 = core::fmt::Formatter::<'_>::debug_struct(move _11, move _12) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: _9 = &mut _10
    SourceInfo(rand_core/src/block.rs:136:9-136:37)
  1: StorageDead(_12)
    SourceInfo(rand_core/src/block.rs:136:36-136:37)
  2: StorageDead(_11)
    SourceInfo(rand_core/src/block.rs:136:36-136:37)
  3: StorageLive(_14)
    SourceInfo(rand_core/src/block.rs:137:20-137:26)
  4: StorageLive(_15)
    SourceInfo(rand_core/src/block.rs:137:20-137:26)
  5: _15 = const "core"
    SourceInfo(rand_core/src/block.rs:137:20-137:26)
  6: _14 = &(*_15)
    SourceInfo(rand_core/src/block.rs:137:20-137:26)
  7: StorageLive(_16)
    SourceInfo(rand_core/src/block.rs:137:28-137:38)
  8: StorageLive(_17)
    SourceInfo(rand_core/src/block.rs:137:28-137:38)
  9: StorageLive(_18)
    SourceInfo(rand_core/src/block.rs:137:28-137:38)
  10: _18 = &((*_1).2: R)
    SourceInfo(rand_core/src/block.rs:137:28-137:38)
  11: _17 = &(*_18)
    SourceInfo(rand_core/src/block.rs:137:28-137:38)
  12: _16 = move _17 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(rand_core/src/block.rs:137:28-137:38)
  13: StorageDead(_17)
    SourceInfo(rand_core/src/block.rs:137:37-137:38)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:136:9-137:39)
      kind: _8 = core::fmt::DebugStruct::<'_, '_>::field(move _9, move _14, move _16) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: _7 = &mut (*_8)
    SourceInfo(rand_core/src/block.rs:136:9-137:39)
  1: StorageDead(_16)
    SourceInfo(rand_core/src/block.rs:137:38-137:39)
  2: StorageDead(_14)
    SourceInfo(rand_core/src/block.rs:137:38-137:39)
  3: StorageDead(_9)
    SourceInfo(rand_core/src/block.rs:137:38-137:39)
  4: StorageLive(_19)
    SourceInfo(rand_core/src/block.rs:138:20-138:32)
  5: StorageLive(_20)
    SourceInfo(rand_core/src/block.rs:138:20-138:32)
  6: _20 = const "result_len"
    SourceInfo(rand_core/src/block.rs:138:20-138:32)
  7: _19 = &(*_20)
    SourceInfo(rand_core/src/block.rs:138:20-138:32)
  8: StorageLive(_21)
    SourceInfo(rand_core/src/block.rs:138:34-138:62)
  9: StorageLive(_22)
    SourceInfo(rand_core/src/block.rs:138:34-138:62)
  10: StorageLive(_23)
    SourceInfo(rand_core/src/block.rs:138:34-138:62)
  11: StorageLive(_24)
    SourceInfo(rand_core/src/block.rs:138:35-138:62)
  12: StorageLive(_25)
    SourceInfo(rand_core/src/block.rs:138:35-138:56)
  13: StorageLive(_26)
    SourceInfo(rand_core/src/block.rs:138:35-138:56)
  14: StorageLive(_27)
    SourceInfo(rand_core/src/block.rs:138:35-138:47)
  15: _27 = &((*_1).0: <R as block::BlockRngCore>::Results)
    SourceInfo(rand_core/src/block.rs:138:35-138:47)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:138:35-138:56)
      kind: _26 = <<R as block::BlockRngCore>::Results as core::convert::AsRef<[<R as block::BlockRngCore>::Item]>>::as_ref(move _27) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: _25 = &(*_26)
    SourceInfo(rand_core/src/block.rs:138:35-138:56)
  1: StorageDead(_27)
    SourceInfo(rand_core/src/block.rs:138:55-138:56)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:138:35-138:62)
      kind: _24 = core::slice::<impl [<R as block::BlockRngCore>::Item]>::len(move _25) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_25)
    SourceInfo(rand_core/src/block.rs:138:61-138:62)
  1: _23 = &_24
    SourceInfo(rand_core/src/block.rs:138:34-138:62)
  2: _22 = &(*_23)
    SourceInfo(rand_core/src/block.rs:138:34-138:62)
  3: _21 = move _22 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(rand_core/src/block.rs:138:34-138:62)
  4: StorageDead(_22)
    SourceInfo(rand_core/src/block.rs:138:61-138:62)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:136:9-138:63)
      kind: _6 = core::fmt::DebugStruct::<'_, '_>::field(move _7, move _19, move _21) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: _5 = &mut (*_6)
    SourceInfo(rand_core/src/block.rs:136:9-138:63)
  1: StorageDead(_21)
    SourceInfo(rand_core/src/block.rs:138:62-138:63)
  2: StorageDead(_19)
    SourceInfo(rand_core/src/block.rs:138:62-138:63)
  3: StorageDead(_7)
    SourceInfo(rand_core/src/block.rs:138:62-138:63)
  4: StorageLive(_28)
    SourceInfo(rand_core/src/block.rs:139:20-139:27)
  5: StorageLive(_29)
    SourceInfo(rand_core/src/block.rs:139:20-139:27)
  6: _29 = const "index"
    SourceInfo(rand_core/src/block.rs:139:20-139:27)
  7: _28 = &(*_29)
    SourceInfo(rand_core/src/block.rs:139:20-139:27)
  8: StorageLive(_30)
    SourceInfo(rand_core/src/block.rs:139:29-139:40)
  9: StorageLive(_31)
    SourceInfo(rand_core/src/block.rs:139:29-139:40)
  10: StorageLive(_32)
    SourceInfo(rand_core/src/block.rs:139:29-139:40)
  11: _32 = &((*_1).1: usize)
    SourceInfo(rand_core/src/block.rs:139:29-139:40)
  12: _31 = &(*_32)
    SourceInfo(rand_core/src/block.rs:139:29-139:40)
  13: _30 = move _31 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(rand_core/src/block.rs:139:29-139:40)
  14: StorageDead(_31)
    SourceInfo(rand_core/src/block.rs:139:39-139:40)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:136:9-139:41)
      kind: _4 = core::fmt::DebugStruct::<'_, '_>::field(move _5, move _28, move _30) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: _3 = &mut (*_4)
    SourceInfo(rand_core/src/block.rs:136:9-139:41)
  1: StorageDead(_30)
    SourceInfo(rand_core/src/block.rs:139:40-139:41)
  2: StorageDead(_28)
    SourceInfo(rand_core/src/block.rs:139:40-139:41)
  3: StorageDead(_5)
    SourceInfo(rand_core/src/block.rs:139:40-139:41)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:136:9-140:22)
      kind: _0 = core::fmt::DebugStruct::<'_, '_>::finish(move _3) -> [return: bb7, unwind: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_3)
    SourceInfo(rand_core/src/block.rs:140:21-140:22)
  1: StorageDead(_32)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  2: StorageDead(_29)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  3: StorageDead(_26)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  4: StorageDead(_24)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  5: StorageDead(_23)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  6: StorageDead(_20)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  7: StorageDead(_18)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  8: StorageDead(_15)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  9: StorageDead(_13)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  10: StorageDead(_10)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  11: StorageDead(_8)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  12: StorageDead(_6)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  13: StorageDead(_4)
    SourceInfo(rand_core/src/block.rs:141:5-141:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:141:6-141:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:135:5-141:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6]
  succs []

