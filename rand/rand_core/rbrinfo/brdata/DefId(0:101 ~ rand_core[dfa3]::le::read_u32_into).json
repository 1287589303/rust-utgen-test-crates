{
  "name": "rand_core::le::read_u32_into",
  "mod_info": {
    "name": "le",
    "loc": "rand_core/src/lib.rs:45:1:45:12"
  },
  "visible": true,
  "loc": "rand_core/src/le.rs:21:1:26:2",
  "doc": "/// Reads unsigned 32 bit integers from `src` into `dst`.\n///\n/// # Panics\n///\n/// If `dst` has insufficient space (`4*dst.len() < src.len()`).\n",
  "code": [
    "pub fn read_u32_into(src: &[u8], dst: &mut [u32]) {",
    "    assert!(src.len() >= 4 * dst.len());",
    "    for (out, chunk) in dst.iter_mut().zip(src.chunks_exact(4)) {",
    "        *out = u32::from_le_bytes(chunk.try_into().unwrap());",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "src.len() >= 4 * dst.len()",
          "norm": "4 * dst.len() <= src.len()",
          "value": "true",
          "line": 22,
          "bound": "src.len() == 4 * dst.len()"
        },
        {
          "cond": "(out, chunk) in dst.iter_mut().zip(src.chunks_exact(4))",
          "norm": null,
          "value": "true",
          "line": 23,
          "bound": null
        },
        {
          "cond": "(out, chunk) in dst.iter_mut().zip(src.chunks_exact(4))",
          "norm": null,
          "value": "false",
          "line": 23,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        15,
        17,
        18,
        19,
        10,
        11,
        12,
        14,
        16
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "src.len() >= 4 * dst.len()",
          "norm": "4 * dst.len() <= src.len()",
          "value": "true",
          "line": 22,
          "bound": "src.len() == 4 * dst.len()"
        },
        {
          "cond": "(out, chunk) in dst.iter_mut().zip(src.chunks_exact(4))",
          "norm": null,
          "value": "false",
          "line": 23,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        14,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "src.len() >= 4 * dst.len()",
          "norm": "4 * dst.len() <= src.len()",
          "value": "false",
          "line": 22,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        20
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}