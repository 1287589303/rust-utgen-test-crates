{
  "name": "rand_core::impls::fill_bytes_via_next",
  "mod_info": {
    "name": "impls",
    "loc": "rand_core/src/lib.rs:44:1:44:15"
  },
  "visible": true,
  "loc": "rand_core/src/impls.rs:36:1:52:2",
  "doc": "/// Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n///\n/// The fastest way to fill a slice is usually to work as long as possible with\n/// integers. That is why this method mostly uses `next_u64`, and only when\n/// there are 4 or less bytes remaining at the end of the slice it uses\n/// `next_u32` once.\n",
  "code": [
    "pub fn fill_bytes_via_next<R: RngCore + ?Sized>(rng: &mut R, dest: &mut [u8]) {",
    "    let mut left = dest;",
    "    while left.len() >= 8 {",
    "        let (l, r) = { left }.split_at_mut(8);",
    "        left = r;",
    "        let chunk: [u8; 8] = rng.next_u64().to_le_bytes();",
    "        l.copy_from_slice(&chunk);",
    "    }",
    "    let n = left.len();",
    "    if n > 4 {",
    "        let chunk: [u8; 8] = rng.next_u64().to_le_bytes();",
    "        left.copy_from_slice(&chunk[..n]);",
    "    } else if n > 0 {",
    "        let chunk: [u8; 4] = rng.next_u32().to_le_bytes();",
    "        left.copy_from_slice(&chunk[..n]);",
    "    }",
    "}"
  ],
  "size": {
    "chain": 6,
    "contra": 3,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "left.len() >= 8",
          "norm": "8 <= left.len()",
          "value": "true",
          "line": 38,
          "bound": "left.len() == 8"
        },
        {
          "cond": "left.len() >= 8",
          "norm": "8 <= left.len()",
          "value": "false",
          "line": 38,
          "bound": null
        },
        {
          "cond": "n > 4",
          "norm": "4 < n",
          "value": "true",
          "line": 45,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        1,
        2,
        3,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        24
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "left.len() >= 8",
          "norm": "8 <= left.len()",
          "value": "true",
          "line": 38,
          "bound": "left.len() == 8"
        },
        {
          "cond": "left.len() >= 8",
          "norm": "8 <= left.len()",
          "value": "false",
          "line": 38,
          "bound": null
        },
        {
          "cond": "n > 4",
          "norm": "4 < n",
          "value": "false",
          "line": 45,
          "bound": "n == 4"
        },
        {
          "cond": "n > 0",
          "norm": "0 < n",
          "value": "true",
          "line": 48,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        1,
        2,
        3,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        23,
        24
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "left.len() >= 8",
          "norm": "8 <= left.len()",
          "value": "true",
          "line": 38,
          "bound": "left.len() == 8"
        },
        {
          "cond": "left.len() >= 8",
          "norm": "8 <= left.len()",
          "value": "false",
          "line": 38,
          "bound": null
        },
        {
          "cond": "n > 4",
          "norm": "4 < n",
          "value": "false",
          "line": 45,
          "bound": "n == 4"
        },
        {
          "cond": "n > 0",
          "norm": "0 < n",
          "value": "false",
          "line": 48,
          "bound": "n == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        1,
        2,
        3,
        9,
        10,
        16,
        22,
        23,
        24
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "left.len() >= 8",
          "norm": "8 <= left.len()",
          "value": "false",
          "line": 38,
          "bound": null
        },
        {
          "cond": "n > 4",
          "norm": "4 < n",
          "value": "true",
          "line": 45,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "left.len() >= 8",
          "norm": "8 <= left.len()",
          "value": "false",
          "line": 38,
          "bound": null
        },
        {
          "cond": "n > 4",
          "norm": "4 < n",
          "value": "false",
          "line": 45,
          "bound": "n == 4"
        },
        {
          "cond": "n > 0",
          "norm": "0 < n",
          "value": "true",
          "line": 48,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "left.len() >= 8",
          "norm": "8 <= left.len()",
          "value": "false",
          "line": 38,
          "bound": null
        },
        {
          "cond": "n > 4",
          "norm": "4 < n",
          "value": "false",
          "line": 45,
          "bound": "n == 4"
        },
        {
          "cond": "n > 0",
          "norm": "0 < n",
          "value": "false",
          "line": 48,
          "bound": "n == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        9,
        10,
        16,
        22,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}