bb0
  0: StorageLive(_3)
    SourceInfo(rand_core/src/lib.rs:272:9-272:29)
  1: StorageLive(_4)
    SourceInfo(rand_core/src/lib.rs:272:9-272:13)
  2: _4 = &mut (*_1)
    SourceInfo(rand_core/src/lib.rs:272:9-272:13)
  3: StorageLive(_5)
    SourceInfo(rand_core/src/lib.rs:272:25-272:28)
  4: _5 = &mut (*_2)
    SourceInfo(rand_core/src/lib.rs:272:25-272:28)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:272:9-272:29)
      kind: _3 = <R as RngCore>::fill_bytes(move _4, move _5) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(rand_core/src/lib.rs:272:28-272:29)
  1: StorageDead(_4)
    SourceInfo(rand_core/src/lib.rs:272:28-272:29)
  2: StorageDead(_3)
    SourceInfo(rand_core/src/lib.rs:272:29-272:30)
  3: StorageLive(_6)
    SourceInfo(rand_core/src/lib.rs:273:12-273:14)
  4: _6 = ()
    SourceInfo(rand_core/src/lib.rs:273:12-273:14)
  5: _0 = core::result::Result::<(), core::convert::Infallible>::Ok(move _6)
    SourceInfo(rand_core/src/lib.rs:273:9-273:15)
  6: StorageDead(_6)
    SourceInfo(rand_core/src/lib.rs:273:14-273:15)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:274:6-274:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:271:5-274:6)
      kind: resume
  }
  preds [bb0]
  succs []

