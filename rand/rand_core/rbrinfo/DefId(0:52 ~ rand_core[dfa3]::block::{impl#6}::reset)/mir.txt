bb0
  0: StorageLive(_2)
    SourceInfo(rand_core/src/block.rs:333:22-333:49)
  1: StorageLive(_3)
    SourceInfo(rand_core/src/block.rs:333:22-333:43)
  2: StorageLive(_4)
    SourceInfo(rand_core/src/block.rs:333:22-333:43)
  3: StorageLive(_5)
    SourceInfo(rand_core/src/block.rs:333:22-333:34)
  4: _5 = &((*_1).0: <R as block::BlockRngCore>::Results)
    SourceInfo(rand_core/src/block.rs:333:22-333:34)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:333:22-333:43)
      kind: _4 = <<R as block::BlockRngCore>::Results as core::convert::AsRef<[<R as block::BlockRngCore>::Item]>>::as_ref(move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _3 = &(*_4)
    SourceInfo(rand_core/src/block.rs:333:22-333:43)
  1: StorageDead(_5)
    SourceInfo(rand_core/src/block.rs:333:42-333:43)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:333:22-333:49)
      kind: _2 = core::slice::<impl [<R as block::BlockRngCore>::Item]>::len(move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(rand_core/src/block.rs:333:48-333:49)
  1: ((*_1).1: usize) = move _2
    SourceInfo(rand_core/src/block.rs:333:9-333:49)
  2: StorageDead(_2)
    SourceInfo(rand_core/src/block.rs:333:48-333:49)
  3: StorageDead(_4)
    SourceInfo(rand_core/src/block.rs:333:49-333:50)
  4: ((*_1).2: bool) = const false
    SourceInfo(rand_core/src/block.rs:334:9-334:31)
  5: _0 = const ()
    SourceInfo(rand_core/src/block.rs:332:29-335:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:335:6-335:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:332:5-335:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

