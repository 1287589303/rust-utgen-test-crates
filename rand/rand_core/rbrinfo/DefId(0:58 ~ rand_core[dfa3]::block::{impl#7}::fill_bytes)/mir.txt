bb0
  0: StorageLive(_3)
    SourceInfo(rand_core/src/block.rs:383:13-383:25)
  1: _3 = const 0_usize
    SourceInfo(rand_core/src/block.rs:383:28-383:29)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(rand_core/src/block.rs:383:13-383:25)
  3: ((*_1).2: bool) = const false
    SourceInfo(rand_core/src/block.rs:384:9-384:31)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:385:9-396:10)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:385:9-396:10)
      kind: falseUnwind -> [real: bb2, unwind: bb18]
  }
  preds [bb0, bb16]
  succs [bb2, bb18]

bb2
  0: StorageLive(_5)
    SourceInfo(rand_core/src/block.rs:385:15-385:36)
  1: StorageLive(_6)
    SourceInfo(rand_core/src/block.rs:385:15-385:23)
  2: _6 = _3
    SourceInfo(rand_core/src/block.rs:385:15-385:23)
  3: StorageLive(_7)
    SourceInfo(rand_core/src/block.rs:385:26-385:36)
  4: StorageLive(_8)
    SourceInfo(rand_core/src/block.rs:385:26-385:30)
  5: _8 = &(*_2)
    SourceInfo(rand_core/src/block.rs:385:26-385:30)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:385:26-385:36)
      kind: _7 = core::slice::<impl [u8]>::len(move _8) -> [return: bb3, unwind: bb18]
  }
  preds [bb1]
  succs [bb3, bb18]

bb3
  0: StorageDead(_8)
    SourceInfo(rand_core/src/block.rs:385:35-385:36)
  1: _5 = Lt(move _6, move _7)
    SourceInfo(rand_core/src/block.rs:385:15-385:36)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:385:15-385:36)
      kind: switchInt(move _5) -> [0: bb17, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb17]

bb4
  0: StorageDead(_7)
    SourceInfo(rand_core/src/block.rs:385:35-385:36)
  1: StorageDead(_6)
    SourceInfo(rand_core/src/block.rs:385:35-385:36)
  2: StorageLive(_9)
    SourceInfo(rand_core/src/block.rs:386:13-389:14)
  3: StorageLive(_10)
    SourceInfo(rand_core/src/block.rs:386:16-386:57)
  4: StorageLive(_11)
    SourceInfo(rand_core/src/block.rs:386:16-386:26)
  5: _11 = ((*_1).1: usize)
    SourceInfo(rand_core/src/block.rs:386:16-386:26)
  6: StorageLive(_12)
    SourceInfo(rand_core/src/block.rs:386:30-386:57)
  7: StorageLive(_13)
    SourceInfo(rand_core/src/block.rs:386:30-386:51)
  8: StorageLive(_14)
    SourceInfo(rand_core/src/block.rs:386:30-386:51)
  9: StorageLive(_15)
    SourceInfo(rand_core/src/block.rs:386:30-386:42)
  10: _15 = &((*_1).0: <R as block::BlockRngCore>::Results)
    SourceInfo(rand_core/src/block.rs:386:30-386:42)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:386:30-386:51)
      kind: _14 = <<R as block::BlockRngCore>::Results as core::convert::AsRef<[u64]>>::as_ref(move _15) -> [return: bb5, unwind: bb18]
  }
  preds [bb3]
  succs [bb5, bb18]

bb5
  0: _13 = &(*_14)
    SourceInfo(rand_core/src/block.rs:386:30-386:51)
  1: StorageDead(_15)
    SourceInfo(rand_core/src/block.rs:386:50-386:51)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:386:30-386:57)
      kind: _12 = core::slice::<impl [u64]>::len(move _13) -> [return: bb6, unwind: bb18]
  }
  preds [bb4]
  succs [bb6, bb18]

bb6
  0: StorageDead(_13)
    SourceInfo(rand_core/src/block.rs:386:56-386:57)
  1: _10 = Ge(move _11, move _12)
    SourceInfo(rand_core/src/block.rs:386:16-386:57)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:386:16-386:57)
      kind: switchInt(move _10) -> [0: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_14)
    SourceInfo(rand_core/src/block.rs:386:56-386:57)
  1: StorageDead(_12)
    SourceInfo(rand_core/src/block.rs:386:56-386:57)
  2: StorageDead(_11)
    SourceInfo(rand_core/src/block.rs:386:56-386:57)
  3: StorageLive(_16)
    SourceInfo(rand_core/src/block.rs:387:17-387:54)
  4: StorageLive(_17)
    SourceInfo(rand_core/src/block.rs:387:17-387:26)
  5: _17 = &mut ((*_1).3: R)
    SourceInfo(rand_core/src/block.rs:387:17-387:26)
  6: StorageLive(_18)
    SourceInfo(rand_core/src/block.rs:387:36-387:53)
  7: StorageLive(_19)
    SourceInfo(rand_core/src/block.rs:387:36-387:53)
  8: _19 = &mut ((*_1).0: <R as block::BlockRngCore>::Results)
    SourceInfo(rand_core/src/block.rs:387:36-387:53)
  9: _18 = &mut (*_19)
    SourceInfo(rand_core/src/block.rs:387:36-387:53)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:387:17-387:54)
      kind: _16 = <R as block::BlockRngCore>::generate(move _17, move _18) -> [return: bb8, unwind: bb18]
  }
  preds [bb6]
  succs [bb8, bb18]

bb8
  0: StorageDead(_18)
    SourceInfo(rand_core/src/block.rs:387:53-387:54)
  1: StorageDead(_17)
    SourceInfo(rand_core/src/block.rs:387:53-387:54)
  2: StorageDead(_19)
    SourceInfo(rand_core/src/block.rs:387:54-387:55)
  3: StorageDead(_16)
    SourceInfo(rand_core/src/block.rs:387:54-387:55)
  4: ((*_1).1: usize) = const 0_usize
    SourceInfo(rand_core/src/block.rs:388:17-388:31)
  5: _9 = const ()
    SourceInfo(rand_core/src/block.rs:386:58-389:14)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:386:13-389:14)
      kind: goto -> bb10
  }
  preds [bb7]
  succs [bb10]

bb9
  0: StorageDead(_14)
    SourceInfo(rand_core/src/block.rs:386:56-386:57)
  1: StorageDead(_12)
    SourceInfo(rand_core/src/block.rs:386:56-386:57)
  2: StorageDead(_11)
    SourceInfo(rand_core/src/block.rs:386:56-386:57)
  3: _9 = const ()
    SourceInfo(rand_core/src/block.rs:389:14-389:14)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:386:13-389:14)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb10
  0: StorageDead(_10)
    SourceInfo(rand_core/src/block.rs:389:13-389:14)
  1: StorageDead(_9)
    SourceInfo(rand_core/src/block.rs:389:13-389:14)
  2: StorageLive(_22)
    SourceInfo(rand_core/src/block.rs:392:17-392:93)
  3: StorageLive(_23)
    SourceInfo(rand_core/src/block.rs:392:33-392:69)
  4: StorageLive(_24)
    SourceInfo(rand_core/src/block.rs:392:33-392:69)
  5: StorageLive(_25)
    SourceInfo(rand_core/src/block.rs:392:55-392:69)
  6: StorageLive(_26)
    SourceInfo(rand_core/src/block.rs:392:34-392:55)
  7: StorageLive(_27)
    SourceInfo(rand_core/src/block.rs:392:34-392:55)
  8: StorageLive(_28)
    SourceInfo(rand_core/src/block.rs:392:34-392:46)
  9: _28 = &mut ((*_1).0: <R as block::BlockRngCore>::Results)
    SourceInfo(rand_core/src/block.rs:392:34-392:46)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:392:34-392:55)
      kind: _27 = <<R as block::BlockRngCore>::Results as core::convert::AsMut<[u64]>>::as_mut(move _28) -> [return: bb11, unwind: bb18]
  }
  preds [bb8, bb9]
  succs [bb11, bb18]

bb11
  0: _26 = &(*_27)
    SourceInfo(rand_core/src/block.rs:392:34-392:55)
  1: StorageDead(_28)
    SourceInfo(rand_core/src/block.rs:392:54-392:55)
  2: StorageLive(_29)
    SourceInfo(rand_core/src/block.rs:392:56-392:68)
  3: StorageLive(_30)
    SourceInfo(rand_core/src/block.rs:392:56-392:66)
  4: _30 = ((*_1).1: usize)
    SourceInfo(rand_core/src/block.rs:392:56-392:66)
  5: _29 = core::ops::RangeFrom::<usize> { start: move _30 }
    SourceInfo(rand_core/src/block.rs:392:56-392:68)
  6: StorageDead(_30)
    SourceInfo(rand_core/src/block.rs:392:67-392:68)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:392:55-392:69)
      kind: _25 = <[u64] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _26, move _29) -> [return: bb12, unwind: bb18]
  }
  preds [bb10]
  succs [bb12, bb18]

bb12
  0: StorageDead(_29)
    SourceInfo(rand_core/src/block.rs:392:68-392:69)
  1: StorageDead(_26)
    SourceInfo(rand_core/src/block.rs:392:68-392:69)
  2: _24 = &(*_25)
    SourceInfo(rand_core/src/block.rs:392:33-392:69)
  3: _23 = &(*_24)
    SourceInfo(rand_core/src/block.rs:392:33-392:69)
  4: StorageLive(_31)
    SourceInfo(rand_core/src/block.rs:392:71-392:92)
  5: StorageLive(_32)
    SourceInfo(rand_core/src/block.rs:392:71-392:92)
  6: StorageLive(_33)
    SourceInfo(rand_core/src/block.rs:392:80-392:92)
  7: StorageLive(_34)
    SourceInfo(rand_core/src/block.rs:392:76-392:80)
  8: _34 = &mut (*_2)
    SourceInfo(rand_core/src/block.rs:392:76-392:80)
  9: StorageLive(_35)
    SourceInfo(rand_core/src/block.rs:392:81-392:91)
  10: StorageLive(_36)
    SourceInfo(rand_core/src/block.rs:392:81-392:89)
  11: _36 = _3
    SourceInfo(rand_core/src/block.rs:392:81-392:89)
  12: _35 = core::ops::RangeFrom::<usize> { start: move _36 }
    SourceInfo(rand_core/src/block.rs:392:81-392:91)
  13: StorageDead(_36)
    SourceInfo(rand_core/src/block.rs:392:90-392:91)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:392:80-392:92)
      kind: _33 = <[u8] as core::ops::IndexMut<core::ops::RangeFrom<usize>>>::index_mut(move _34, move _35) -> [return: bb13, unwind: bb18]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: StorageDead(_35)
    SourceInfo(rand_core/src/block.rs:392:91-392:92)
  1: StorageDead(_34)
    SourceInfo(rand_core/src/block.rs:392:91-392:92)
  2: _32 = &mut (*_33)
    SourceInfo(rand_core/src/block.rs:392:71-392:92)
  3: _31 = &mut (*_32)
    SourceInfo(rand_core/src/block.rs:392:71-392:92)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:392:17-392:93)
      kind: _22 = impls::fill_via_chunks::<u64>(move _23, move _31) -> [return: bb14, unwind: bb18]
  }
  preds [bb12]
  succs [bb14, bb18]

bb14
  0: StorageDead(_31)
    SourceInfo(rand_core/src/block.rs:392:92-392:93)
  1: StorageDead(_23)
    SourceInfo(rand_core/src/block.rs:392:92-392:93)
  2: PlaceMention(_22)
    SourceInfo(rand_core/src/block.rs:392:17-392:93)
  3: StorageLive(_20)
    SourceInfo(rand_core/src/block.rs:391:18-391:30)
  4: _20 = (_22.0: usize)
    SourceInfo(rand_core/src/block.rs:391:18-391:30)
  5: StorageLive(_21)
    SourceInfo(rand_core/src/block.rs:391:32-391:41)
  6: _21 = (_22.1: usize)
    SourceInfo(rand_core/src/block.rs:391:32-391:41)
  7: StorageDead(_33)
    SourceInfo(rand_core/src/block.rs:392:93-392:94)
  8: StorageDead(_32)
    SourceInfo(rand_core/src/block.rs:392:93-392:94)
  9: StorageDead(_27)
    SourceInfo(rand_core/src/block.rs:392:93-392:94)
  10: StorageDead(_25)
    SourceInfo(rand_core/src/block.rs:392:93-392:94)
  11: StorageDead(_24)
    SourceInfo(rand_core/src/block.rs:392:93-392:94)
  12: StorageDead(_22)
    SourceInfo(rand_core/src/block.rs:392:93-392:94)
  13: StorageLive(_37)
    SourceInfo(rand_core/src/block.rs:394:27-394:39)
  14: _37 = _20
    SourceInfo(rand_core/src/block.rs:394:27-394:39)
  15: _38 = AddWithOverflow(((*_1).1: usize), _37)
    SourceInfo(rand_core/src/block.rs:394:13-394:39)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:394:13-394:39)
      kind: assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).1: usize), move _37) -> [success: bb15, unwind: bb18]
  }
  preds [bb13]
  succs [bb15, bb18]

bb15
  0: ((*_1).1: usize) = move (_38.0: usize)
    SourceInfo(rand_core/src/block.rs:394:13-394:39)
  1: StorageDead(_37)
    SourceInfo(rand_core/src/block.rs:394:38-394:39)
  2: StorageLive(_39)
    SourceInfo(rand_core/src/block.rs:395:25-395:34)
  3: _39 = _21
    SourceInfo(rand_core/src/block.rs:395:25-395:34)
  4: _40 = AddWithOverflow(_3, _39)
    SourceInfo(rand_core/src/block.rs:395:13-395:34)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:395:13-395:34)
      kind: assert(!move (_40.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, move _39) -> [success: bb16, unwind: bb18]
  }
  preds [bb14]
  succs [bb16, bb18]

bb16
  0: _3 = move (_40.0: usize)
    SourceInfo(rand_core/src/block.rs:395:13-395:34)
  1: StorageDead(_39)
    SourceInfo(rand_core/src/block.rs:395:33-395:34)
  2: _4 = const ()
    SourceInfo(rand_core/src/block.rs:385:37-396:10)
  3: StorageDead(_21)
    SourceInfo(rand_core/src/block.rs:396:9-396:10)
  4: StorageDead(_20)
    SourceInfo(rand_core/src/block.rs:396:9-396:10)
  5: StorageDead(_5)
    SourceInfo(rand_core/src/block.rs:396:9-396:10)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:385:9-396:10)
      kind: goto -> bb1
  }
  preds [bb15]
  succs [bb1]

bb17
  0: StorageDead(_7)
    SourceInfo(rand_core/src/block.rs:385:35-385:36)
  1: StorageDead(_6)
    SourceInfo(rand_core/src/block.rs:385:35-385:36)
  2: StorageLive(_42)
    SourceInfo(rand_core/src/block.rs:385:9-396:10)
  3: _0 = const ()
    SourceInfo(rand_core/src/block.rs:385:9-396:10)
  4: StorageDead(_42)
    SourceInfo(rand_core/src/block.rs:396:9-396:10)
  5: StorageDead(_5)
    SourceInfo(rand_core/src/block.rs:396:9-396:10)
  6: StorageDead(_3)
    SourceInfo(rand_core/src/block.rs:397:5-397:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:397:6-397:6)
      kind: return
  }
  preds [bb3]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(rand_core/src/block.rs:382:5-397:6)
      kind: resume
  }
  preds [bb1, bb2, bb4, bb5, bb7, bb10, bb11, bb12, bb13, bb14, bb15]
  succs []

