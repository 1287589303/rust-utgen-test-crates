bb0
  0: StorageLive(_2)
    SourceInfo(rand_core/src/lib.rs:308:9-308:30)
  1: StorageLive(_3)
    SourceInfo(rand_core/src/lib.rs:308:9-308:15)
  2: _3 = &mut ((*_1).0: R)
    SourceInfo(rand_core/src/lib.rs:308:9-308:15)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:308:9-308:30)
      kind: _2 = <R as TryRngCore>::try_next_u64(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(rand_core/src/lib.rs:308:29-308:30)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:308:9-308:39)
      kind: _0 = core::result::Result::<u64, <R as TryRngCore>::Error>::unwrap(move _2) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_2)
    SourceInfo(rand_core/src/lib.rs:308:38-308:39)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:309:6-309:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:308:38-308:39)
      kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:307:5-309:6)
      kind: resume
  }
  preds [bb0, bb3]
  succs []

