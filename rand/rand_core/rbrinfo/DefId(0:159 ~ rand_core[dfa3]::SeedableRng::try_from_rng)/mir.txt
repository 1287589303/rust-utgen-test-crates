bb0
  0: StorageLive(_2)
    SourceInfo(rand_core/src/lib.rs:531:13-531:21)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:531:24-531:45)
      kind: _2 = <<Self as SeedableRng>::Seed as core::default::Default>::default() -> [return: bb1, unwind: bb24]
  }
  preds []
  succs [bb1, bb24]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(rand_core/src/lib.rs:531:13-531:21)
  1: StorageLive(_3)
    SourceInfo(rand_core/src/lib.rs:532:9-532:43)
  2: StorageLive(_4)
    SourceInfo(rand_core/src/lib.rs:532:9-532:43)
  3: StorageLive(_5)
    SourceInfo(rand_core/src/lib.rs:532:9-532:42)
  4: StorageLive(_6)
    SourceInfo(rand_core/src/lib.rs:532:9-532:12)
  5: _6 = &mut (*_1)
    SourceInfo(rand_core/src/lib.rs:532:9-532:12)
  6: StorageLive(_7)
    SourceInfo(rand_core/src/lib.rs:532:28-532:41)
  7: StorageLive(_8)
    SourceInfo(rand_core/src/lib.rs:532:28-532:41)
  8: StorageLive(_9)
    SourceInfo(rand_core/src/lib.rs:532:28-532:32)
  9: _9 = &mut _2
    SourceInfo(rand_core/src/lib.rs:532:28-532:32)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:28-532:41)
      kind: _8 = <<Self as SeedableRng>::Seed as core::convert::AsMut<[u8]>>::as_mut(move _9) -> [return: bb2, unwind: bb23]
  }
  preds [bb0]
  succs [bb2, bb23]

bb2
  0: _7 = &mut (*_8)
    SourceInfo(rand_core/src/lib.rs:532:28-532:41)
  1: StorageDead(_9)
    SourceInfo(rand_core/src/lib.rs:532:40-532:41)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:9-532:42)
      kind: _5 = <R as TryRngCore>::try_fill_bytes(move _6, move _7) -> [return: bb3, unwind: bb23]
  }
  preds [bb1]
  succs [bb3, bb23]

bb3
  0: StorageDead(_7)
    SourceInfo(rand_core/src/lib.rs:532:41-532:42)
  1: StorageDead(_6)
    SourceInfo(rand_core/src/lib.rs:532:41-532:42)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:9-532:43)
      kind: _4 = <core::result::Result<(), <R as TryRngCore>::Error> as core::ops::Try>::branch(move _5) -> [return: bb4, unwind: bb22]
  }
  preds [bb2]
  succs [bb4, bb22]

bb4
  0: StorageDead(_5)
    SourceInfo(rand_core/src/lib.rs:532:42-532:43)
  1: PlaceMention(_4)
    SourceInfo(rand_core/src/lib.rs:532:9-532:43)
  2: _10 = discriminant(_4)
    SourceInfo(rand_core/src/lib.rs:532:9-532:43)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:9-532:43)
      kind: switchInt(move _10) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(rand_core/src/lib.rs:532:9-532:43)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:9-532:43)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:42-532:43)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_14)
    SourceInfo(rand_core/src/lib.rs:532:9-532:43)
  1: _14 = ((_4 as Continue).0: ())
    SourceInfo(rand_core/src/lib.rs:532:9-532:43)
  2: _3 = _14
    SourceInfo(rand_core/src/lib.rs:532:9-532:43)
  3: StorageDead(_14)
    SourceInfo(rand_core/src/lib.rs:532:42-532:43)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:43-532:44)
      kind: drop(_4) -> [return: bb10, unwind: bb23]
  }
  preds [bb4, bb6]
  succs [bb10, bb23]

bb8
  0: StorageLive(_11)
    SourceInfo(rand_core/src/lib.rs:532:42-532:43)
  1: _11 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, <R as TryRngCore>::Error>)
    SourceInfo(rand_core/src/lib.rs:532:42-532:43)
  2: StorageLive(_13)
    SourceInfo(rand_core/src/lib.rs:532:42-532:43)
  3: _13 = move _11
    SourceInfo(rand_core/src/lib.rs:532:42-532:43)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:9-532:43)
      kind: _0 = <core::result::Result<Self, <R as TryRngCore>::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, <R as TryRngCore>::Error>>>::from_residual(move _13) -> [return: bb9, unwind: bb19]
  }
  preds [bb6]
  succs [bb9, bb19]

bb9
  0: StorageDead(_13)
    SourceInfo(rand_core/src/lib.rs:532:42-532:43)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:42-532:43)
      kind: drop(_11) -> [return: bb14, unwind: bb21]
  }
  preds [bb8]
  succs [bb14, bb21]

bb10
  0: StorageDead(_8)
    SourceInfo(rand_core/src/lib.rs:532:43-532:44)
  1: StorageDead(_4)
    SourceInfo(rand_core/src/lib.rs:532:43-532:44)
  2: StorageDead(_3)
    SourceInfo(rand_core/src/lib.rs:532:43-532:44)
  3: StorageLive(_15)
    SourceInfo(rand_core/src/lib.rs:533:12-533:33)
  4: StorageLive(_16)
    SourceInfo(rand_core/src/lib.rs:533:28-533:32)
  5: _16 = move _2
    SourceInfo(rand_core/src/lib.rs:533:28-533:32)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:533:12-533:33)
      kind: _15 = <Self as SeedableRng>::from_seed(move _16) -> [return: bb11, unwind: bb18]
  }
  preds [bb7]
  succs [bb11, bb18]

bb11
  0: StorageDead(_16)
    SourceInfo(rand_core/src/lib.rs:533:32-533:33)
  1: _0 = core::result::Result::<Self, <R as TryRngCore>::Error>::Ok(move _15)
    SourceInfo(rand_core/src/lib.rs:533:9-533:34)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:533:33-533:34)
      kind: drop(_15) -> [return: bb12, unwind: bb23]
  }
  preds [bb10]
  succs [bb12, bb23]

bb12
  0: StorageDead(_15)
    SourceInfo(rand_core/src/lib.rs:533:33-533:34)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:534:5-534:6)
      kind: drop(_2) -> [return: bb13, unwind: bb24]
  }
  preds [bb11]
  succs [bb13, bb24]

bb13
  0: StorageDead(_2)
    SourceInfo(rand_core/src/lib.rs:534:5-534:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:534:6-534:6)
      kind: goto -> bb17
  }
  preds [bb12]
  succs [bb17]

bb14
  0: StorageDead(_11)
    SourceInfo(rand_core/src/lib.rs:532:42-532:43)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:43-532:44)
      kind: drop(_4) -> [return: bb15, unwind: bb23]
  }
  preds [bb9]
  succs [bb15, bb23]

bb15
  0: StorageDead(_8)
    SourceInfo(rand_core/src/lib.rs:532:43-532:44)
  1: StorageDead(_4)
    SourceInfo(rand_core/src/lib.rs:532:43-532:44)
  2: StorageDead(_3)
    SourceInfo(rand_core/src/lib.rs:532:43-532:44)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:534:5-534:6)
      kind: drop(_2) -> [return: bb16, unwind: bb24]
  }
  preds [bb14]
  succs [bb16, bb24]

bb16
  0: StorageDead(_2)
    SourceInfo(rand_core/src/lib.rs:534:5-534:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:534:6-534:6)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:534:6-534:6)
      kind: return
  }
  preds [bb13, bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:533:32-533:33)
      kind: drop(_16) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb23]

bb19
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:42-532:43)
      kind: drop(_13) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:42-532:43)
      kind: drop(_11) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:43-532:44)
      kind: drop(_4) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb9, bb20]
  succs [bb23]

bb22
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:532:42-532:43)
      kind: drop(_5) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:534:5-534:6)
      kind: drop(_2) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb7, bb11, bb14, bb18, bb21, bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:530:5-534:6)
      kind: resume
  }
  preds [bb0, bb12, bb15, bb23]
  succs []

