bb0
  0: StorageLive(_3)
    SourceInfo(rand_core/src/lib.rs:352:9-352:35)
  1: StorageLive(_4)
    SourceInfo(rand_core/src/lib.rs:352:9-352:15)
  2: _4 = &mut (*((*_1).0: &mut R))
    SourceInfo(rand_core/src/lib.rs:352:9-352:15)
  3: StorageLive(_5)
    SourceInfo(rand_core/src/lib.rs:352:31-352:34)
  4: _5 = &mut (*_2)
    SourceInfo(rand_core/src/lib.rs:352:31-352:34)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:352:9-352:35)
      kind: _3 = <R as TryRngCore>::try_fill_bytes(move _4, move _5) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_5)
    SourceInfo(rand_core/src/lib.rs:352:34-352:35)
  1: StorageDead(_4)
    SourceInfo(rand_core/src/lib.rs:352:34-352:35)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:352:9-352:44)
      kind: _0 = core::result::Result::<(), <R as TryRngCore>::Error>::unwrap(move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(rand_core/src/lib.rs:352:43-352:44)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:353:6-353:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:352:43-352:44)
      kind: drop(_3) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:351:5-353:6)
      kind: resume
  }
  preds [bb0, bb3]
  succs []

