bb0
  0: StorageLive(_2)
    SourceInfo(rand_core/src/lib.rs:522:13-522:21)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:522:24-522:45)
      kind: _2 = <<Self as SeedableRng>::Seed as core::default::Default>::default() -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(rand_core/src/lib.rs:522:13-522:21)
  1: StorageLive(_3)
    SourceInfo(rand_core/src/lib.rs:523:9-523:38)
  2: StorageLive(_4)
    SourceInfo(rand_core/src/lib.rs:523:9-523:12)
  3: _4 = &mut (*_1)
    SourceInfo(rand_core/src/lib.rs:523:9-523:12)
  4: StorageLive(_5)
    SourceInfo(rand_core/src/lib.rs:523:24-523:37)
  5: StorageLive(_6)
    SourceInfo(rand_core/src/lib.rs:523:24-523:37)
  6: StorageLive(_7)
    SourceInfo(rand_core/src/lib.rs:523:24-523:28)
  7: _7 = &mut _2
    SourceInfo(rand_core/src/lib.rs:523:24-523:28)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:523:24-523:37)
      kind: _6 = <<Self as SeedableRng>::Seed as core::convert::AsMut<[u8]>>::as_mut(move _7) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: _5 = &mut (*_6)
    SourceInfo(rand_core/src/lib.rs:523:24-523:37)
  1: StorageDead(_7)
    SourceInfo(rand_core/src/lib.rs:523:36-523:37)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:523:9-523:38)
      kind: _3 = <impl RngCore as RngCore>::fill_bytes(move _4, move _5) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_5)
    SourceInfo(rand_core/src/lib.rs:523:37-523:38)
  1: StorageDead(_4)
    SourceInfo(rand_core/src/lib.rs:523:37-523:38)
  2: StorageDead(_6)
    SourceInfo(rand_core/src/lib.rs:523:38-523:39)
  3: StorageDead(_3)
    SourceInfo(rand_core/src/lib.rs:523:38-523:39)
  4: StorageLive(_8)
    SourceInfo(rand_core/src/lib.rs:524:25-524:29)
  5: _8 = move _2
    SourceInfo(rand_core/src/lib.rs:524:25-524:29)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:524:9-524:30)
      kind: _0 = <Self as SeedableRng>::from_seed(move _8) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_8)
    SourceInfo(rand_core/src/lib.rs:524:29-524:30)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:525:5-525:6)
      kind: drop(_2) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_2)
    SourceInfo(rand_core/src/lib.rs:525:5-525:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:525:6-525:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:524:29-524:30)
      kind: drop(_8) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:525:5-525:6)
      kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(rand_core/src/lib.rs:521:5-525:6)
      kind: resume
  }
  preds [bb0, bb4, bb7]
  succs []

