bb0
  0: StorageLive(_3)
    SourceInfo(rand_core/src/impls.rs:37:9-37:17)
  1: _3 = move _2
    SourceInfo(rand_core/src/impls.rs:37:20-37:24)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(rand_core/src/impls.rs:37:9-37:17)
  3: StorageLive(_4)
    SourceInfo(rand_core/src/impls.rs:38:5-43:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:38:5-43:6)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:38:5-43:6)
      kind: falseUnwind -> [real: bb2, unwind: bb25]
  }
  preds [bb0, bb8]
  succs [bb2, bb25]

bb2
  0: StorageLive(_6)
    SourceInfo(rand_core/src/impls.rs:38:11-38:26)
  1: StorageLive(_7)
    SourceInfo(rand_core/src/impls.rs:38:11-38:21)
  2: StorageLive(_8)
    SourceInfo(rand_core/src/impls.rs:38:11-38:15)
  3: _8 = &(*_3)
    SourceInfo(rand_core/src/impls.rs:38:11-38:15)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:38:11-38:21)
      kind: _7 = core::slice::<impl [u8]>::len(move _8) -> [return: bb3, unwind: bb25]
  }
  preds [bb1]
  succs [bb3, bb25]

bb3
  0: StorageDead(_8)
    SourceInfo(rand_core/src/impls.rs:38:20-38:21)
  1: _6 = Ge(move _7, const 8_usize)
    SourceInfo(rand_core/src/impls.rs:38:11-38:26)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:38:11-38:26)
      kind: switchInt(move _6) -> [0: bb9, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_7)
    SourceInfo(rand_core/src/impls.rs:38:25-38:26)
  1: StorageLive(_11)
    SourceInfo(rand_core/src/impls.rs:39:22-39:46)
  2: StorageLive(_12)
    SourceInfo(rand_core/src/impls.rs:39:24-39:28)
  3: StorageLive(_13)
    SourceInfo(rand_core/src/impls.rs:39:24-39:28)
  4: _13 = move _3
    SourceInfo(rand_core/src/impls.rs:39:24-39:28)
  5: _12 = &mut (*_13)
    SourceInfo(rand_core/src/impls.rs:39:24-39:28)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:39:22-39:46)
      kind: _11 = core::slice::<impl [u8]>::split_at_mut(move _12, const 8_usize) -> [return: bb5, unwind: bb25]
  }
  preds [bb3]
  succs [bb5, bb25]

bb5
  0: StorageDead(_12)
    SourceInfo(rand_core/src/impls.rs:39:45-39:46)
  1: PlaceMention(_11)
    SourceInfo(rand_core/src/impls.rs:39:22-39:46)
  2: StorageLive(_9)
    SourceInfo(rand_core/src/impls.rs:39:14-39:15)
  3: _9 = move (_11.0: &mut [u8])
    SourceInfo(rand_core/src/impls.rs:39:14-39:15)
  4: StorageLive(_10)
    SourceInfo(rand_core/src/impls.rs:39:17-39:18)
  5: _10 = move (_11.1: &mut [u8])
    SourceInfo(rand_core/src/impls.rs:39:17-39:18)
  6: StorageDead(_13)
    SourceInfo(rand_core/src/impls.rs:39:46-39:47)
  7: StorageDead(_11)
    SourceInfo(rand_core/src/impls.rs:39:46-39:47)
  8: StorageLive(_14)
    SourceInfo(rand_core/src/impls.rs:40:16-40:17)
  9: _14 = &mut (*_10)
    SourceInfo(rand_core/src/impls.rs:40:16-40:17)
  10: _3 = move _14
    SourceInfo(rand_core/src/impls.rs:40:9-40:17)
  11: StorageDead(_14)
    SourceInfo(rand_core/src/impls.rs:40:16-40:17)
  12: StorageLive(_15)
    SourceInfo(rand_core/src/impls.rs:41:13-41:18)
  13: StorageLive(_16)
    SourceInfo(rand_core/src/impls.rs:41:30-41:44)
  14: StorageLive(_17)
    SourceInfo(rand_core/src/impls.rs:41:30-41:33)
  15: _17 = &mut (*_1)
    SourceInfo(rand_core/src/impls.rs:41:30-41:33)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:41:30-41:44)
      kind: _16 = <R as RngCore>::next_u64(move _17) -> [return: bb6, unwind: bb25]
  }
  preds [bb4]
  succs [bb6, bb25]

bb6
  0: StorageDead(_17)
    SourceInfo(rand_core/src/impls.rs:41:43-41:44)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:41:30-41:58)
      kind: _15 = core::num::<impl u64>::to_le_bytes(move _16) -> [return: bb7, unwind: bb25]
  }
  preds [bb5]
  succs [bb7, bb25]

bb7
  0: StorageDead(_16)
    SourceInfo(rand_core/src/impls.rs:41:57-41:58)
  1: FakeRead(ForLet(None), _15)
    SourceInfo(rand_core/src/impls.rs:41:13-41:18)
  2: AscribeUserType(_15, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(rand_core/src/impls.rs:41:20-41:27)
  3: StorageLive(_18)
    SourceInfo(rand_core/src/impls.rs:42:9-42:34)
  4: StorageLive(_19)
    SourceInfo(rand_core/src/impls.rs:42:9-42:10)
  5: _19 = &mut (*_9)
    SourceInfo(rand_core/src/impls.rs:42:9-42:10)
  6: StorageLive(_20)
    SourceInfo(rand_core/src/impls.rs:42:27-42:33)
  7: StorageLive(_21)
    SourceInfo(rand_core/src/impls.rs:42:27-42:33)
  8: StorageLive(_22)
    SourceInfo(rand_core/src/impls.rs:42:27-42:33)
  9: _22 = &_15
    SourceInfo(rand_core/src/impls.rs:42:27-42:33)
  10: _21 = &(*_22)
    SourceInfo(rand_core/src/impls.rs:42:27-42:33)
  11: _20 = move _21 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(rand_core/src/impls.rs:42:27-42:33)
  12: StorageDead(_21)
    SourceInfo(rand_core/src/impls.rs:42:32-42:33)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:42:9-42:34)
      kind: _18 = core::slice::<impl [u8]>::copy_from_slice(move _19, move _20) -> [return: bb8, unwind: bb25]
  }
  preds [bb6]
  succs [bb8, bb25]

bb8
  0: StorageDead(_20)
    SourceInfo(rand_core/src/impls.rs:42:33-42:34)
  1: StorageDead(_19)
    SourceInfo(rand_core/src/impls.rs:42:33-42:34)
  2: StorageDead(_22)
    SourceInfo(rand_core/src/impls.rs:42:34-42:35)
  3: StorageDead(_18)
    SourceInfo(rand_core/src/impls.rs:42:34-42:35)
  4: _5 = const ()
    SourceInfo(rand_core/src/impls.rs:38:27-43:6)
  5: StorageDead(_15)
    SourceInfo(rand_core/src/impls.rs:43:5-43:6)
  6: StorageDead(_10)
    SourceInfo(rand_core/src/impls.rs:43:5-43:6)
  7: StorageDead(_9)
    SourceInfo(rand_core/src/impls.rs:43:5-43:6)
  8: StorageDead(_6)
    SourceInfo(rand_core/src/impls.rs:43:5-43:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:38:5-43:6)
      kind: goto -> bb1
  }
  preds [bb7]
  succs [bb1]

bb9
  0: StorageDead(_7)
    SourceInfo(rand_core/src/impls.rs:38:25-38:26)
  1: StorageLive(_24)
    SourceInfo(rand_core/src/impls.rs:38:5-43:6)
  2: _4 = const ()
    SourceInfo(rand_core/src/impls.rs:38:5-43:6)
  3: StorageDead(_24)
    SourceInfo(rand_core/src/impls.rs:43:5-43:6)
  4: StorageDead(_6)
    SourceInfo(rand_core/src/impls.rs:43:5-43:6)
  5: StorageDead(_4)
    SourceInfo(rand_core/src/impls.rs:43:5-43:6)
  6: StorageLive(_26)
    SourceInfo(rand_core/src/impls.rs:44:9-44:10)
  7: StorageLive(_27)
    SourceInfo(rand_core/src/impls.rs:44:13-44:17)
  8: _27 = &(*_3)
    SourceInfo(rand_core/src/impls.rs:44:13-44:17)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:44:13-44:23)
      kind: _26 = core::slice::<impl [u8]>::len(move _27) -> [return: bb10, unwind: bb25]
  }
  preds [bb3]
  succs [bb10, bb25]

bb10
  0: StorageDead(_27)
    SourceInfo(rand_core/src/impls.rs:44:22-44:23)
  1: FakeRead(ForLet(None), _26)
    SourceInfo(rand_core/src/impls.rs:44:9-44:10)
  2: StorageLive(_28)
    SourceInfo(rand_core/src/impls.rs:45:8-45:13)
  3: StorageLive(_29)
    SourceInfo(rand_core/src/impls.rs:45:8-45:9)
  4: _29 = _26
    SourceInfo(rand_core/src/impls.rs:45:8-45:9)
  5: _28 = Gt(move _29, const 4_usize)
    SourceInfo(rand_core/src/impls.rs:45:8-45:13)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:45:8-45:13)
      kind: switchInt(move _28) -> [0: bb16, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb16]

bb11
  0: StorageDead(_29)
    SourceInfo(rand_core/src/impls.rs:45:12-45:13)
  1: StorageLive(_30)
    SourceInfo(rand_core/src/impls.rs:46:13-46:18)
  2: StorageLive(_31)
    SourceInfo(rand_core/src/impls.rs:46:30-46:44)
  3: StorageLive(_32)
    SourceInfo(rand_core/src/impls.rs:46:30-46:33)
  4: _32 = &mut (*_1)
    SourceInfo(rand_core/src/impls.rs:46:30-46:33)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:46:30-46:44)
      kind: _31 = <R as RngCore>::next_u64(move _32) -> [return: bb12, unwind: bb25]
  }
  preds [bb10]
  succs [bb12, bb25]

bb12
  0: StorageDead(_32)
    SourceInfo(rand_core/src/impls.rs:46:43-46:44)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:46:30-46:58)
      kind: _30 = core::num::<impl u64>::to_le_bytes(move _31) -> [return: bb13, unwind: bb25]
  }
  preds [bb11]
  succs [bb13, bb25]

bb13
  0: StorageDead(_31)
    SourceInfo(rand_core/src/impls.rs:46:57-46:58)
  1: FakeRead(ForLet(None), _30)
    SourceInfo(rand_core/src/impls.rs:46:13-46:18)
  2: AscribeUserType(_30, o, UserTypeProjection { base: UserType(3), projs: [] })
    SourceInfo(rand_core/src/impls.rs:46:20-46:27)
  3: StorageLive(_33)
    SourceInfo(rand_core/src/impls.rs:47:9-47:42)
  4: StorageLive(_34)
    SourceInfo(rand_core/src/impls.rs:47:9-47:13)
  5: _34 = &mut (*_3)
    SourceInfo(rand_core/src/impls.rs:47:9-47:13)
  6: StorageLive(_35)
    SourceInfo(rand_core/src/impls.rs:47:30-47:41)
  7: StorageLive(_36)
    SourceInfo(rand_core/src/impls.rs:47:30-47:41)
  8: StorageLive(_37)
    SourceInfo(rand_core/src/impls.rs:47:36-47:41)
  9: StorageLive(_38)
    SourceInfo(rand_core/src/impls.rs:47:31-47:36)
  10: _38 = &_30
    SourceInfo(rand_core/src/impls.rs:47:31-47:36)
  11: StorageLive(_39)
    SourceInfo(rand_core/src/impls.rs:47:37-47:40)
  12: StorageLive(_40)
    SourceInfo(rand_core/src/impls.rs:47:39-47:40)
  13: _40 = _26
    SourceInfo(rand_core/src/impls.rs:47:39-47:40)
  14: _39 = core::ops::RangeTo::<usize> { end: move _40 }
    SourceInfo(rand_core/src/impls.rs:47:37-47:40)
  15: StorageDead(_40)
    SourceInfo(rand_core/src/impls.rs:47:39-47:40)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:47:36-47:41)
      kind: _37 = <[u8; 8] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _38, move _39) -> [return: bb14, unwind: bb25]
  }
  preds [bb12]
  succs [bb14, bb25]

bb14
  0: StorageDead(_39)
    SourceInfo(rand_core/src/impls.rs:47:40-47:41)
  1: StorageDead(_38)
    SourceInfo(rand_core/src/impls.rs:47:40-47:41)
  2: _36 = &(*_37)
    SourceInfo(rand_core/src/impls.rs:47:30-47:41)
  3: _35 = &(*_36)
    SourceInfo(rand_core/src/impls.rs:47:30-47:41)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:47:9-47:42)
      kind: _33 = core::slice::<impl [u8]>::copy_from_slice(move _34, move _35) -> [return: bb15, unwind: bb25]
  }
  preds [bb13]
  succs [bb15, bb25]

bb15
  0: StorageDead(_35)
    SourceInfo(rand_core/src/impls.rs:47:41-47:42)
  1: StorageDead(_34)
    SourceInfo(rand_core/src/impls.rs:47:41-47:42)
  2: StorageDead(_37)
    SourceInfo(rand_core/src/impls.rs:47:42-47:43)
  3: StorageDead(_36)
    SourceInfo(rand_core/src/impls.rs:47:42-47:43)
  4: StorageDead(_33)
    SourceInfo(rand_core/src/impls.rs:47:42-47:43)
  5: _0 = const ()
    SourceInfo(rand_core/src/impls.rs:45:14-48:6)
  6: StorageDead(_30)
    SourceInfo(rand_core/src/impls.rs:48:5-48:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:45:5-51:6)
      kind: goto -> bb24
  }
  preds [bb14]
  succs [bb24]

bb16
  0: StorageDead(_29)
    SourceInfo(rand_core/src/impls.rs:45:12-45:13)
  1: StorageLive(_41)
    SourceInfo(rand_core/src/impls.rs:48:15-48:20)
  2: StorageLive(_42)
    SourceInfo(rand_core/src/impls.rs:48:15-48:16)
  3: _42 = _26
    SourceInfo(rand_core/src/impls.rs:48:15-48:16)
  4: _41 = Gt(move _42, const 0_usize)
    SourceInfo(rand_core/src/impls.rs:48:15-48:20)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:48:15-48:20)
      kind: switchInt(move _41) -> [0: bb22, otherwise: bb17]
  }
  preds [bb10]
  succs [bb17, bb22]

bb17
  0: StorageDead(_42)
    SourceInfo(rand_core/src/impls.rs:48:19-48:20)
  1: StorageLive(_43)
    SourceInfo(rand_core/src/impls.rs:49:13-49:18)
  2: StorageLive(_44)
    SourceInfo(rand_core/src/impls.rs:49:30-49:44)
  3: StorageLive(_45)
    SourceInfo(rand_core/src/impls.rs:49:30-49:33)
  4: _45 = &mut (*_1)
    SourceInfo(rand_core/src/impls.rs:49:30-49:33)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:49:30-49:44)
      kind: _44 = <R as RngCore>::next_u32(move _45) -> [return: bb18, unwind: bb25]
  }
  preds [bb16]
  succs [bb18, bb25]

bb18
  0: StorageDead(_45)
    SourceInfo(rand_core/src/impls.rs:49:43-49:44)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:49:30-49:58)
      kind: _43 = core::num::<impl u32>::to_le_bytes(move _44) -> [return: bb19, unwind: bb25]
  }
  preds [bb17]
  succs [bb19, bb25]

bb19
  0: StorageDead(_44)
    SourceInfo(rand_core/src/impls.rs:49:57-49:58)
  1: FakeRead(ForLet(None), _43)
    SourceInfo(rand_core/src/impls.rs:49:13-49:18)
  2: AscribeUserType(_43, o, UserTypeProjection { base: UserType(5), projs: [] })
    SourceInfo(rand_core/src/impls.rs:49:20-49:27)
  3: StorageLive(_46)
    SourceInfo(rand_core/src/impls.rs:50:9-50:42)
  4: StorageLive(_47)
    SourceInfo(rand_core/src/impls.rs:50:9-50:13)
  5: _47 = &mut (*_3)
    SourceInfo(rand_core/src/impls.rs:50:9-50:13)
  6: StorageLive(_48)
    SourceInfo(rand_core/src/impls.rs:50:30-50:41)
  7: StorageLive(_49)
    SourceInfo(rand_core/src/impls.rs:50:30-50:41)
  8: StorageLive(_50)
    SourceInfo(rand_core/src/impls.rs:50:36-50:41)
  9: StorageLive(_51)
    SourceInfo(rand_core/src/impls.rs:50:31-50:36)
  10: _51 = &_43
    SourceInfo(rand_core/src/impls.rs:50:31-50:36)
  11: StorageLive(_52)
    SourceInfo(rand_core/src/impls.rs:50:37-50:40)
  12: StorageLive(_53)
    SourceInfo(rand_core/src/impls.rs:50:39-50:40)
  13: _53 = _26
    SourceInfo(rand_core/src/impls.rs:50:39-50:40)
  14: _52 = core::ops::RangeTo::<usize> { end: move _53 }
    SourceInfo(rand_core/src/impls.rs:50:37-50:40)
  15: StorageDead(_53)
    SourceInfo(rand_core/src/impls.rs:50:39-50:40)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:50:36-50:41)
      kind: _50 = <[u8; 4] as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _51, move _52) -> [return: bb20, unwind: bb25]
  }
  preds [bb18]
  succs [bb20, bb25]

bb20
  0: StorageDead(_52)
    SourceInfo(rand_core/src/impls.rs:50:40-50:41)
  1: StorageDead(_51)
    SourceInfo(rand_core/src/impls.rs:50:40-50:41)
  2: _49 = &(*_50)
    SourceInfo(rand_core/src/impls.rs:50:30-50:41)
  3: _48 = &(*_49)
    SourceInfo(rand_core/src/impls.rs:50:30-50:41)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:50:9-50:42)
      kind: _46 = core::slice::<impl [u8]>::copy_from_slice(move _47, move _48) -> [return: bb21, unwind: bb25]
  }
  preds [bb19]
  succs [bb21, bb25]

bb21
  0: StorageDead(_48)
    SourceInfo(rand_core/src/impls.rs:50:41-50:42)
  1: StorageDead(_47)
    SourceInfo(rand_core/src/impls.rs:50:41-50:42)
  2: StorageDead(_50)
    SourceInfo(rand_core/src/impls.rs:50:42-50:43)
  3: StorageDead(_49)
    SourceInfo(rand_core/src/impls.rs:50:42-50:43)
  4: StorageDead(_46)
    SourceInfo(rand_core/src/impls.rs:50:42-50:43)
  5: _0 = const ()
    SourceInfo(rand_core/src/impls.rs:48:21-51:6)
  6: StorageDead(_43)
    SourceInfo(rand_core/src/impls.rs:51:5-51:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:48:12-51:6)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb22
  0: StorageDead(_42)
    SourceInfo(rand_core/src/impls.rs:48:19-48:20)
  1: _0 = const ()
    SourceInfo(rand_core/src/impls.rs:51:6-51:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:48:12-51:6)
      kind: goto -> bb23
  }
  preds [bb16]
  succs [bb23]

bb23
  0: StorageDead(_41)
    SourceInfo(rand_core/src/impls.rs:51:5-51:6)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:45:5-51:6)
      kind: goto -> bb24
  }
  preds [bb21, bb22]
  succs [bb24]

bb24
  0: StorageDead(_28)
    SourceInfo(rand_core/src/impls.rs:51:5-51:6)
  1: StorageDead(_26)
    SourceInfo(rand_core/src/impls.rs:52:1-52:2)
  2: StorageDead(_3)
    SourceInfo(rand_core/src/impls.rs:52:1-52:2)
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:52:2-52:2)
      kind: return
  }
  preds [bb15, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(rand_core/src/impls.rs:36:1-52:2)
      kind: resume
  }
  preds [bb1, bb2, bb4, bb5, bb6, bb7, bb9, bb11, bb12, bb13, bb14, bb17, bb18, bb19, bb20]
  succs []

