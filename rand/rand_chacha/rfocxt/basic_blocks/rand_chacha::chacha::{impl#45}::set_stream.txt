[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &mut ((((*_1).0: rand_core::block::BlockRng<chacha::ChaCha8Core>).2: chacha::ChaCha8Core).0: guts::ChaCha),
            StorageLive(_5),
            _5 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:233:17: 233:54 (#30),
                    scope: scope[0],
                },
                kind: _3 = guts::ChaCha::set_nonce(move _4, move _5) -> [return: bb1, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &((*_1).0: rand_core::block::BlockRng<chacha::ChaCha8Core>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:234:20: 234:36 (#30),
                    scope: scope[0],
                },
                kind: _7 = rand_core::block::BlockRng::<chacha::ChaCha8Core>::index(move _8) -> [return: bb2, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            _6 = Ne(move _7, const 64_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:234:20: 234:42 (#30),
                    scope: scope[0],
                },
                kind: switchInt(move _6) -> [0: bb6, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:235:30: 235:49 (#30),
                    scope: scope[0],
                },
                kind: _9 = chacha::ChaCha8Rng::get_word_pos(move _10) -> [return: bb4, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            FakeRead(ForLet(None), _9),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &mut (*_1),
            StorageLive(_13),
            _13 = _9,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:236:21: 236:42 (#30),
                    scope: scope[1],
                },
                kind: _11 = chacha::ChaCha8Rng::set_word_pos(move _12, move _13) -> [return: bb5, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
            StorageDead(_11),
            _0 = const (),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:234:17: 237:18 (#30),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:234:17: 237:18 (#30),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:238:14: 238:14 (#30),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:232:13: 238:14 (#30),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:232:54: 232:54 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut chacha::ChaCha8Rng,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:232:31: 232:40 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_chacha/src/chacha.rs:232:50: 232:53 (#30),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/chacha.rs:232:42: 232:48 (#30),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:232:42: 232:48 (#30),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:232:42: 232:48 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:233:17: 233:54 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut guts::ChaCha,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:233:17: 233:36 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:233:47: 233:53 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: rand_chacha/src/chacha.rs:234:17: 237:18 (#30),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:234:20: 234:42 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: rand_chacha/src/chacha.rs:234:17: 237:18 (#30),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:234:20: 234:36 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: rand_chacha/src/chacha.rs:234:17: 237:18 (#30),
                },
            ),
        ),
        ty: &'{erased} rand_core::block::BlockRng<chacha::ChaCha8Core>,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:234:20: 234:28 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/chacha.rs:235:30: 235:49 (#30),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:235:25: 235:27 (#30),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:235:25: 235:27 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} chacha::ChaCha8Rng,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:235:30: 235:34 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:236:21: 236:42 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut chacha::ChaCha8Rng,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:236:21: 236:25 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:236:39: 236:41 (#30),
            scope: scope[0],
        },
    },
]