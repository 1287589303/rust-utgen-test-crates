[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:101:9: 101:51 (#0),
                    scope: scope[0],
                },
                kind: _0 = guts::get_stream_param(move _2, const guts::STREAM_PARAM_NONCE) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:102:6: 102:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:100:5: 102:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:100:32: 100:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} guts::ChaCha,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:100:22: 100:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/guts.rs:101:9: 101:51 (#0),
                },
            ),
        ),
        ty: &'{erased} guts::ChaCha,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:101:26: 101:30 (#0),
            scope: scope[0],
        },
    },
]