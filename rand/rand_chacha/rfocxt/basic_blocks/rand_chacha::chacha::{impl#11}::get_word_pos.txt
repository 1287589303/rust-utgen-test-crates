[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((((*_1).0: rand_core::block::BlockRng<chacha::ChaCha20Core>).2: chacha::ChaCha20Core).0: guts::ChaCha),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:193:41: 193:76 (#8),
                    scope: scope[0],
                },
                kind: _3 = guts::ChaCha::get_block_pos(move _4) -> [return: bb1, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_5),
            _5 = _3,
            StorageLive(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:194:54: 194:71 (#8),
                    scope: scope[2],
                },
                kind: _6 = <u8 as std::convert::Into<u64>>::into(const chacha::BUF_BLOCKS) -> [return: bb2, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:194:21: 194:72 (#8),
                    scope: scope[2],
                },
                kind: _2 = core::num::<impl u64>::wrapping_sub(move _5, move _6) -> [return: bb3, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &((*_1).0: rand_core::block::BlockRng<chacha::ChaCha20Core>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:197:44: 197:60 (#8),
                    scope: scope[1],
                },
                kind: _11 = rand_core::block::BlockRng::<chacha::ChaCha20Core>::index(move _12) -> [return: bb4, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            _10 = move _11 as u64 (IntToInt),
            StorageDead(_11),
            FakeRead(ForLet(None), _10),
            StorageLive(_13),
            StorageLive(_14),
            _14 = _10,
            StorageLive(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:198:58: 198:80 (#8),
                    scope: scope[4],
                },
                kind: _15 = <u64 as std::convert::From<u8>>::from(const chacha::BLOCK_WORDS) -> [return: bb5, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = Eq(_15, const 0_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:198:39: 198:80 (#8),
                    scope: scope[4],
                },
                kind: assert(!move _16, "attempt to divide `{}` by zero", _14) -> [success: bb6, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _13 = Div(move _14, move _15),
            StorageDead(_15),
            StorageDead(_14),
            FakeRead(ForLet(None), _13),
            StorageLive(_17),
            StorageLive(_18),
            _18 = _10,
            StorageLive(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:199:57: 199:79 (#8),
                    scope: scope[5],
                },
                kind: _19 = <u64 as std::convert::From<u8>>::from(const chacha::BLOCK_WORDS) -> [return: bb7, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _20 = Eq(_19, const 0_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:199:38: 199:79 (#8),
                    scope: scope[5],
                },
                kind: assert(!move _20, "attempt to calculate the remainder of `{}` with a divisor of zero", _18) -> [success: bb8, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = Rem(move _18, move _19),
            StorageDead(_19),
            StorageDead(_18),
            FakeRead(ForLet(None), _17),
            StorageLive(_21),
            _21 = _13,
            StorageLive(_22),
            _22 = _17,
            _9 = (move _21, move _22),
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_17),
            StorageDead(_13),
            StorageDead(_10),
            PlaceMention(_9),
            StorageLive(_7),
            _7 = (_9.0: u64),
            StorageLive(_8),
            _8 = (_9.1: u64),
            StorageDead(_9),
            StorageLive(_23),
            StorageLive(_24),
            _24 = _2,
            StorageLive(_25),
            _25 = _7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:202:33: 202:86 (#8),
                    scope: scope[3],
                },
                kind: _23 = core::num::<impl u64>::wrapping_add(move _24, move _25) -> [return: bb9, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageDead(_24),
            FakeRead(ForLet(None), _23),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = _23,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:203:39: 203:60 (#8),
                    scope: scope[7],
                },
                kind: _27 = <u128 as std::convert::From<u64>>::from(move _28) -> [return: bb10, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageLive(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:203:63: 203:86 (#8),
                    scope: scope[7],
                },
                kind: _29 = <u128 as std::convert::From<u8>>::from(const chacha::BLOCK_WORDS) -> [return: bb11, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _30 = MulWithOverflow(_27, _29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:203:39: 203:86 (#8),
                    scope: scope[7],
                },
                kind: assert(!move (_30.1: bool), "attempt to compute `{} * {}`, which would overflow", move _27, move _29) -> [success: bb12, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _26 = move (_30.0: u128),
            StorageDead(_29),
            StorageDead(_27),
            FakeRead(ForLet(None), _26),
            StorageLive(_31),
            _31 = _26,
            StorageLive(_32),
            StorageLive(_33),
            _33 = _8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:204:35: 204:65 (#8),
                    scope: scope[8],
                },
                kind: _32 = <u128 as std::convert::From<u64>>::from(move _33) -> [return: bb13, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            _34 = AddWithOverflow(_31, _32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:204:17: 204:65 (#8),
                    scope: scope[8],
                },
                kind: assert(!move (_34.1: bool), "attempt to compute `{} + {}`, which would overflow", move _31, move _32) -> [success: bb14, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = move (_34.0: u128),
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_26),
            StorageDead(_23),
            StorageDead(_8),
            StorageDead(_7),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:205:14: 205:14 (#8),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:191:13: 205:14 (#8),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:191:43: 191:47 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} chacha::ChaCha20Rng,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:191:33: 191:38 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/chacha.rs:192:39: 195:18 (#8),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:192:21: 192:36 (#8),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:192:21: 192:36 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/chacha.rs:193:41: 193:76 (#8),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:193:25: 193:38 (#8),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:193:25: 193:38 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} guts::ChaCha,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:193:41: 193:60 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:194:21: 194:72 (#8),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:194:39: 194:52 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:194:21: 194:72 (#8),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:194:54: 194:71 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _9,
                                ),
                                rand_chacha/src/chacha.rs:196:63: 201:18 (#8),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:196:21: 196:60 (#8),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:196:22: 196:39 (#8),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _9,
                                ),
                                rand_chacha/src/chacha.rs:196:63: 201:18 (#8),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:196:21: 196:60 (#8),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:196:41: 196:59 (#8),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u64, u64),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:196:63: 201:18 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/chacha.rs:197:44: 197:67 (#8),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:197:25: 197:41 (#8),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:197:25: 197:41 (#8),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:197:44: 197:60 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} rand_core::block::BlockRng<chacha::ChaCha20Core>,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:197:44: 197:52 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/chacha.rs:198:39: 198:80 (#8),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:198:25: 198:36 (#8),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:198:25: 198:36 (#8),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:198:39: 198:55 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:198:58: 198:80 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:198:39: 198:80 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/chacha.rs:199:38: 199:79 (#8),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:199:25: 199:35 (#8),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:199:25: 199:35 (#8),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:199:38: 199:54 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:199:57: 199:79 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:199:38: 199:79 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:200:21: 200:46 (#8),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:200:22: 200:33 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:200:21: 200:46 (#8),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:200:35: 200:45 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/chacha.rs:202:33: 202:86 (#8),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:202:21: 202:30 (#8),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:202:21: 202:30 (#8),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:202:51: 202:66 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:202:68: 202:85 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/chacha.rs:203:39: 203:86 (#8),
                            ),
                        ),
                        pat_span: rand_chacha/src/chacha.rs:203:21: 203:36 (#8),
                    },
                ),
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:203:21: 203:36 (#8),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:203:39: 203:60 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:203:50: 203:59 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:203:63: 203:86 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u128, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:203:39: 203:86 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:204:17: 204:65 (#8),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:204:17: 204:32 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:204:17: 204:65 (#8),
                },
            ),
        ),
        ty: u128,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:204:35: 204:65 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:204:17: 204:65 (#8),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:204:46: 204:64 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u128, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:204:17: 204:65 (#8),
            scope: scope[0],
        },
    },
]