[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &mut (*_1),
            StorageLive(_4),
            _4 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:96:9: 96:58 (#0),
                    scope: scope[0],
                },
                kind: _0 = guts::set_stream_param(move _3, const guts::STREAM_PARAM_NONCE, move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:97:6: 97:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:95:5: 97:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:95:44: 95:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut guts::ChaCha,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:95:22: 95:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_chacha/src/guts.rs:95:40: 95:43 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/guts.rs:95:33: 95:38 (#0),
                            ),
                        ),
                        pat_span: rand_chacha/src/guts.rs:95:33: 95:38 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:95:33: 95:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: rand_chacha/src/guts.rs:96:9: 96:58 (#0),
                },
            ),
        ),
        ty: &'{erased} mut guts::ChaCha,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:96:26: 96:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: rand_chacha/src/guts.rs:96:9: 96:58 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:96:52: 96:57 (#0),
            scope: scope[0],
        },
    },
]