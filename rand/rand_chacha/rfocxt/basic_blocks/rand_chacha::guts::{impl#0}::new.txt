[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &(*_1),
            StorageLive(_4),
            _4 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:75:9: 75:32 (#0),
                    scope: scope[0],
                },
                kind: _0 = guts::init_chacha(move _3, move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:76:6: 76:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:74:5: 76:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: guts::ChaCha,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:74:49: 74:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_chacha/src/guts.rs:74:21: 74:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/guts.rs:74:16: 74:19 (#0),
                            ),
                        ),
                        pat_span: rand_chacha/src/guts.rs:74:16: 74:19 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8; 32_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:74:16: 74:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            rand_chacha/src/guts.rs:74:39: 74:44 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/guts.rs:74:32: 74:37 (#0),
                            ),
                        ),
                        pat_span: rand_chacha/src/guts.rs:74:32: 74:37 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:74:32: 74:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/guts.rs:75:9: 75:32 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8; 32_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:75:21: 75:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/guts.rs:75:9: 75:32 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:75:26: 75:31 (#0),
            scope: scope[0],
        },
    },
]