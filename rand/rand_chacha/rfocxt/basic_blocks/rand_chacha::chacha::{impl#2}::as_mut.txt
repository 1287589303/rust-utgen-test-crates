[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &mut ((*_1).0: [T; 64]),
            _3 = &mut (*_4),
            _2 = move _3 as &mut [T] (PointerCoercion(Unsize)),
            StorageDead(_3),
            _0 = &mut (*_2),
            StorageDead(_4),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:52:6: 52:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [T/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:50:29: 50:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut chacha::Array64<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:50:15: 50:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [T/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:51:9: 51:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:51:9: 51:20 (#0),
                },
            ),
        ),
        ty: &'{erased} mut [T/#0; 64_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:51:9: 51:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:51:9: 51:20 (#0),
                },
            ),
        ),
        ty: &'{erased} mut [T/#0; 64_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:51:9: 51:20 (#0),
            scope: scope[0],
        },
    },
]