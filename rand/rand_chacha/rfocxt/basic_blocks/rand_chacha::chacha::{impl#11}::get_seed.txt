[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &((((*_1).0: rand_core::block::BlockRng<chacha::ChaCha20Core>).2: chacha::ChaCha20Core).0: guts::ChaCha),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:249:17: 249:47 (#8),
                    scope: scope[0],
                },
                kind: _0 = guts::ChaCha::get_seed(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:250:14: 250:14 (#8),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:248:13: 250:14 (#8),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 32_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:248:39: 248:47 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} chacha::ChaCha20Rng,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:248:29: 248:34 (#8),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:249:17: 249:47 (#8),
                },
            ),
        ),
        ty: &'{erased} guts::ChaCha,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:249:17: 249:36 (#8),
            scope: scope[0],
        },
    },
]