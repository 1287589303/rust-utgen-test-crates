[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &mut (_1.0: V),
            StorageLive(_4),
            _4 = (_1.1: V),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:46:5: 46:15 (#0),
                    scope: scope[0],
                },
                kind: _2 = <V as std::ops::AddAssign>::add_assign(move _3, move _4) -> [return: bb1, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
            StorageDead(_2),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = (_1.3: V),
            StorageLive(_8),
            _8 = (_1.0: V),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:47:11: 47:22 (#0),
                    scope: scope[0],
                },
                kind: _6 = <V as std::ops::BitXor>::bitxor(move _7, move _8) -> [return: bb2, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:47:11: 47:49 (#0),
                    scope: scope[0],
                },
                kind: _5 = <V as ppv_lite86::RotateEachWord32>::rotate_each_word_right16(move _6) -> [return: bb3, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            (_1.3: V) = move _5,
            StorageDead(_5),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &mut (_1.2: V),
            StorageLive(_11),
            _11 = (_1.3: V),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:48:5: 48:15 (#0),
                    scope: scope[0],
                },
                kind: _9 = <V as std::ops::AddAssign>::add_assign(move _10, move _11) -> [return: bb4, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_9),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = (_1.1: V),
            StorageLive(_15),
            _15 = (_1.2: V),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:49:11: 49:22 (#0),
                    scope: scope[0],
                },
                kind: _13 = <V as std::ops::BitXor>::bitxor(move _14, move _15) -> [return: bb5, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:49:11: 49:49 (#0),
                    scope: scope[0],
                },
                kind: _12 = <V as ppv_lite86::RotateEachWord32>::rotate_each_word_right20(move _13) -> [return: bb6, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            (_1.1: V) = move _12,
            StorageDead(_12),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &mut (_1.0: V),
            StorageLive(_18),
            _18 = (_1.1: V),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:50:5: 50:15 (#0),
                    scope: scope[0],
                },
                kind: _16 = <V as std::ops::AddAssign>::add_assign(move _17, move _18) -> [return: bb7, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_17),
            StorageDead(_16),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            _21 = (_1.3: V),
            StorageLive(_22),
            _22 = (_1.0: V),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:51:11: 51:22 (#0),
                    scope: scope[0],
                },
                kind: _20 = <V as std::ops::BitXor>::bitxor(move _21, move _22) -> [return: bb8, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:51:11: 51:49 (#0),
                    scope: scope[0],
                },
                kind: _19 = <V as ppv_lite86::RotateEachWord32>::rotate_each_word_right24(move _20) -> [return: bb9, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            (_1.3: V) = move _19,
            StorageDead(_19),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &mut (_1.2: V),
            StorageLive(_25),
            _25 = (_1.3: V),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:52:5: 52:15 (#0),
                    scope: scope[0],
                },
                kind: _23 = <V as std::ops::AddAssign>::add_assign(move _24, move _25) -> [return: bb10, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageDead(_24),
            StorageDead(_23),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = (_1.1: V),
            StorageLive(_29),
            _29 = (_1.2: V),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:53:11: 53:22 (#0),
                    scope: scope[0],
                },
                kind: _27 = <V as std::ops::BitXor>::bitxor(move _28, move _29) -> [return: bb11, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:53:11: 53:49 (#0),
                    scope: scope[0],
                },
                kind: _26 = <V as ppv_lite86::RotateEachWord32>::rotate_each_word_right25(move _27) -> [return: bb12, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            (_1.1: V) = move _26,
            StorageDead(_26),
            _0 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:55:2: 55:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/guts.rs:45:1: 55:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: guts::State<V/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:45:65: 45:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: Some(
                            rand_chacha/src/guts.rs:45:52: 45:60 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                rand_chacha/src/guts.rs:45:45: 45:50 (#0),
                            ),
                        ),
                        pat_span: rand_chacha/src/guts.rs:45:45: 45:50 (#0),
                    },
                ),
            ),
        ),
        ty: guts::State<V/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:45:45: 45:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:46:5: 46:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:46:5: 46:8 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:46:12: 46:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:47:11: 47:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:47:11: 47:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:47:12: 47:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:47:18: 47:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:48:5: 48:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:48:5: 48:8 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:48:12: 48:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:49:11: 49:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:49:11: 49:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:49:12: 49:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:49:18: 49:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:50:5: 50:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:50:5: 50:8 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:50:12: 50:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:51:11: 51:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:51:11: 51:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:51:12: 51:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:51:18: 51:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:52:5: 52:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:52:5: 52:8 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:52:12: 52:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:53:11: 53:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:53:11: 53:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:53:12: 53:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/guts.rs:53:18: 53:21 (#0),
            scope: scope[0],
        },
    },
]