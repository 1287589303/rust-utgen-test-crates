[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &((((*_1).0: rand_core::block::BlockRng<chacha::ChaCha8Core>).2: chacha::ChaCha8Core).0: guts::ChaCha),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:243:17: 243:48 (#30),
                    scope: scope[0],
                },
                kind: _0 = guts::ChaCha::get_nonce(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:244:14: 244:14 (#30),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: rand_chacha/src/chacha.rs:242:13: 244:14 (#30),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:242:41: 242:44 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} chacha::ChaCha8Rng,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:242:31: 242:36 (#30),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: rand_chacha/src/chacha.rs:243:17: 243:48 (#30),
                },
            ),
        ),
        ty: &'{erased} guts::ChaCha,
        user_ty: None,
        source_info: SourceInfo {
            span: rand_chacha/src/chacha.rs:243:17: 243:36 (#30),
            scope: scope[0],
        },
    },
]