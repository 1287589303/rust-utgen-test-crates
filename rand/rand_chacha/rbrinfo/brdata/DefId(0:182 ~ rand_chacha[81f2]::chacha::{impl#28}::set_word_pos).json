{
  "name": "rand_chacha::chacha::{impl#28}::set_word_pos",
  "mod_info": {
    "name": "chacha",
    "loc": "rand_chacha/src/lib.rs:96:1:96:12"
  },
  "visible": true,
  "loc": "rand_chacha/src/chacha.rs:213:13:218:14",
  "doc": "/// Set the offset from the start of the stream, in 32-bit words.\n///\n/// As with `get_word_pos`, we use a 68-bit number. Since the generator\n/// simply cycles at the end of its period (1 ZiB), we ignore the upper\n/// 60 bits.\n",
  "code": [
    "pub fn set_word_pos(&mut self, word_offset: u128) {",
    "    let block = (word_offset / u128::from(BLOCK_WORDS)) as u64;",
    "    self.rng.core.state.set_block_pos(block);",
    "    self.rng",
    "        .generate_and_set((word_offset % u128::from(BLOCK_WORDS)) as usize);",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}