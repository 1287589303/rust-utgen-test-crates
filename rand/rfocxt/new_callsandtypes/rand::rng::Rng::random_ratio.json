{"mod_name":"rng","calls":["core::fmt::rt::Argument::<'_>::new_display::<u32>","distr::bernoulli::Bernoulli::from_ratio","core::panicking::panic_fmt","core::fmt::Arguments::<'_>::new_v1::<3, 2>","<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rng::Rng>::random_ratio","<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","core::fmt::rt::Argument::new_display::<u32>","<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","core::fmt::rt::Argument::<'_>::new_display","<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rng::Rng>::sample","<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","core::fmt::Arguments::new_v1::<3, 2>","<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","core::fmt::Arguments::<'_>::new_v1","<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::core::panicking::panic_fmt","rand::distr::utils::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::core::panicking::panic_fmt","rand::rngs::mock::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rng::Rng>::sample","::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::core::fmt::Arguments::<'_>::new_v1","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::core::fmt::rt::Argument::<'_>::new_display::<u32>","sample_efraimidis_spirakis::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rng::Rng>::random_ratio","rand::distr::other::tests::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::std::test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::core::fmt::Arguments::<'_>::new_v1","rand::distr::bernoulli::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::core::fmt::Arguments::<'_>::new_v1","rand::test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::core::fmt::rt::Argument::<'_>::new_display","rand::distr::distribution::tests::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::core::fmt::rt::Argument::new_display::<u32>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rng::Rng>::random_ratio","rand::seq::index::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::thread::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::core::fmt::rt::Argument::new_display::<u32>","rand::test::rng::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::core::fmt::rt::Argument::<'_>::new_display::<u32>","{impl#7}::size_hint::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rng::Rng>::sample","rand::rngs::thread::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::reseeding::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::rt::Argument::<'_>::new_display","rand::seq::slice::test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::core::fmt::Arguments::<'_>::new_v1","rand::seq::increasing_uniform::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::other::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::core::panicking::panic_fmt","rand::distr::integer::tests::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::core::fmt::rt::Argument::new_display::<u32>","rand::seq::index::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::core::fmt::rt::Argument::<'_>::new_display","rand::distr::uniform::tests::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rng::Rng>::random_ratio","{impl#7}::next::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::other::tests::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::core::fmt::rt::Argument::<'_>::new_display","rand::distr::other::tests::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::distr::bernoulli::Bernoulli::from_ratio","rand::seq::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::distr::bernoulli::Bernoulli::from_ratio","rand::distr::other::tests::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::distr::bernoulli::Bernoulli::from_ratio","rand::distr::float::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::Arguments::<'_>::new_v1","rand::rngs::thread::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::integer::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::reseeding::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rng::Rng>::random_ratio","rand::rngs::xoshiro256plusplus::tests::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::core::fmt::Arguments::<'_>::new_v1","rand::distr::weighted::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::core::fmt::rt::Argument::new_display::<u32>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rng::Rng>::sample","{impl#7}::size_hint::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::std::test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::core::fmt::Arguments::<'_>::new_v1","rand::distr::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::distribution::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::core::fmt::rt::Argument::<'_>::new_display","rand::seq::increasing_uniform::calculate_bound_u32::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rng::Rng>::sample","rand::rngs::small::{impl#0}::from_seed::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::weighted::weighted_index::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::core::fmt::Arguments::<'_>::new_v1","rand::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::xoshiro256plusplus::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::core::fmt::Arguments::<'_>::new_v1","rand::distr::other::{impl#0}::sample::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rng::Rng>::sample","sample_efraimidis_spirakis::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::core::fmt::rt::Argument::new_display::<u32>","rand::distr::other::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::core::fmt::Arguments::new_v1::<3, 2>","rand::test::rng::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::mock::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rng::Rng>::sample","rand::rng::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rng::Rng>::random_ratio","rand::rngs::xoshiro256plusplus::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::distribution::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::core::fmt::Arguments::<'_>::new_v1","rand::distr::other::{impl#0}::sample::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::other::tests::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::xoshiro256plusplus::tests::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::core::panicking::panic_fmt","{impl#2}::eq::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::bernoulli::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::mock::tests::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::mock::tests::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::thread::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::core::fmt::rt::Argument::new_display::<u32>","rand::distr::integer::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::index::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::core::panicking::panic_fmt","rand::distr::uniform::tests::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::core::fmt::rt::Argument::<'_>::new_display::<u32>","tests::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::core::fmt::rt::Argument::<'_>::new_display","rand::seq::iterator::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::core::fmt::rt::Argument::<'_>::new_display","tests::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::core::fmt::Arguments::<'_>::new_v1","rand::seq::slice::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::prelude::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::core::panicking::panic_fmt","rand::test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument::new_display::<u32>","rand::rng::test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::bernoulli::test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::thread::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::core::fmt::rt::Argument::new_display::<u32>","test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::core::panicking::panic_fmt","rand::distr::utils::simd_wmul::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::core::fmt::rt::Argument::new_display::<u32>","::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rng::Rng>::random_ratio","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::core::fmt::rt::Argument::<'_>::new_display::<u32>","sample_efraimidis_spirakis::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::core::panicking::panic_fmt","rand::seq::iterator::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::other::{impl#2}::sample::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::core::fmt::Arguments::<'_>::new_v1","rand::rngs::small::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::core::fmt::rt::Argument::new_display::<u32>","rand::distr::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::core::panicking::panic_fmt","rand::distr::weighted::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::xoshiro128plusplus::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::core::panicking::panic_fmt","rand::seq::slice::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::small::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::bernoulli::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::thread::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::distr::bernoulli::Bernoulli::from_ratio","rand::distr::integer::tests::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::core::panicking::panic_fmt","rand::seq::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::core::panicking::panic_fmt","rand::rngs::mock::tests::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::core::panicking::panic_fmt","rand::test::rng::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::rt::Argument::new_display::<u32>","rand::distr::weighted::weighted_index::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::core::fmt::rt::Argument::new_display::<u32>","rand::distr::weighted::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rng::Rng>::sample","test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::core::fmt::rt::Argument::new_display::<u32>","{impl#2}::eq::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rng::Rng>::sample","{impl#5}::next::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::core::fmt::rt::Argument::<'_>::new_display","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rng::Rng>::random_ratio","rand::distr::core::fmt::rt::Argument::new_display::<u32>","rand::distr::bernoulli::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::utils::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rng::Rng>::sample","rand::distr::other::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::core::fmt::rt::Argument::new_display::<u32>","rand::distr::weighted::weighted_index::test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::reseeding::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::reseeding::test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rng::Rng>::sample","rand::distr::weighted::weighted_index::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::core::fmt::rt::Argument::new_display::<u32>","rand::distr::distribution::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::distr::bernoulli::Bernoulli::from_ratio","rand::distr::other::{impl#3}::sample::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::iterator::test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::mock::tests::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::seq::coin_flipper::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rng::Rng>::random_ratio","rand::seq::slice::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::uniform::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::core::fmt::Arguments::new_v1::<3, 2>","{impl#7}::size_hint::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::other::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::core::fmt::rt::Argument::new_display::<u32>","rand::distr::weighted::weighted_index::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::core::fmt::rt::Argument::<'_>::new_display","rand::distr::other::{impl#0}::sample::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::xoshiro128plusplus::tests::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::distr::bernoulli::Bernoulli::from_ratio","rand::distr::utils::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rng::Rng>::random_ratio","tests::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::float::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::small::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::core::fmt::rt::Argument::new_display::<u32>","rand::distr::other::{impl#0}::sample::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rng::Rng>::sample","{impl#7}::next::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::small::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::reseeding::test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::seq::coin_flipper::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::distr::bernoulli::Bernoulli::from_ratio","rand::distr::distribution::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::core::fmt::Arguments::<'_>::new_v1","rand::distr::distribution::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rng::Rng>::random_ratio","rand::distr::slice::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::std::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rng::Rng>::sample","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rng::Rng>::random_ratio","rand::seq::iterator::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rng::Rng>::sample","rand::distr::hidden_export::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rng::Rng>::sample","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::index::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rng::Rng>::random_ratio","rand::distr::distribution::tests::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::distribution::tests::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rng::Rng>::sample","rand::distr::uniform::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rng::Rng>::random_ratio","{impl#5}::next::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rng::Rng>::random_ratio","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::core::fmt::rt::Argument::<'_>::new_display::<u32>","test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rng::Rng>::random_ratio","rand::distr::distribution::tests::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::increasing_uniform::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rng::Rng>::sample","rand::distr::weighted::weighted_index::test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::core::panicking::panic_fmt","rand::distr::other::{impl#0}::sample::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::core::fmt::rt::Argument::new_display::<u32>","rand::seq::slice::IndexedRandom::choose_weighted::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rng::Rng>::random_ratio","rand::distr::uniform::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rng::Rng>::sample","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::core::panicking::panic_fmt","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument::new_display::<u32>","rand::seq::index::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::std::test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::hidden_export::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::core::fmt::rt::Argument::new_display::<u32>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::core::panicking::panic_fmt","rand::distr::uniform::tests::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rng::Rng>::random_ratio","rand::rngs::small::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::core::panicking::panic_fmt","rand::distr::integer::tests::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::core::fmt::Arguments::<'_>::new_v1","rand::seq::slice::test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::mock::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::core::panicking::panic_fmt","rand::rngs::xoshiro256plusplus::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::distr::bernoulli::Bernoulli::from_ratio","{impl#7}::next::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::panicking::panic_fmt","rand::seq::index::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rng::Rng>::random_ratio","rand::seq::iterator::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::reseeding::test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rng::Rng>::sample","rand::distr::uniform::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rng::Rng>::random_ratio","rand::distr::weighted::weighted_index::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rng::test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rng::Rng>::sample","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::reseeding::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rng::Rng>::random_ratio","rand::rng::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::core::fmt::Arguments::new_v1::<3, 2>","test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rng::Rng>::sample","rand::distr::slice::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::core::fmt::rt::Argument::<'_>::new_display","rand::seq::increasing_uniform::calculate_bound_u32::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rng::Rng>::random_ratio","rand::seq::iterator::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::std::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::small::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::Arguments::<'_>::new_v1","rand::distr::weighted::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::small::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::distr::bernoulli::Bernoulli::from_ratio","rand::prelude::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::core::fmt::Arguments::<'_>::new_v1","rand::rngs::xoshiro256plusplus::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::core::fmt::Arguments::new_v1::<3, 2>","{impl#5}::next::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rng::Rng>::random_ratio","rand::distr::weighted::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::distr::bernoulli::Bernoulli::from_ratio","rand::seq::index::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::uniform::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::core::fmt::Arguments::new_v1::<3, 2>","::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::core::fmt::Arguments::new_v1::<3, 2>","{impl#7}::size_hint::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::std::test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::distr::bernoulli::Bernoulli::from_ratio","rand::seq::slice::test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rng::Rng>::random_ratio","rand::distr::distribution::tests::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rng::Rng>::random_ratio","rand::rngs::mock::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::core::fmt::Arguments::<'_>::new_v1","rand::distr::integer::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::distr::bernoulli::Bernoulli::from_ratio","rand::distr::weighted::weighted_index::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::core::fmt::rt::Argument::<'_>::new_display","rand::distr::slice::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::xoshiro128plusplus::tests::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::mock::tests::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::core::fmt::rt::Argument::new_display::<u32>","::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::core::panicking::panic_fmt","rand::distr::distribution::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::core::fmt::Arguments::new_v1::<3, 2>","{impl#7}::next::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::std::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::weighted::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rng::Rng>::random_ratio","rand::prelude::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rng::Rng>::sample","rand::distr::utils::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::core::panicking::panic_fmt","rand::seq::slice::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::core::fmt::rt::Argument::<'_>::new_display::<u32>","sample_efraimidis_spirakis::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rng::Rng>::random_ratio","test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rng::Rng>::random_ratio","rand::distr::uniform::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::core::fmt::Arguments::<'_>::new_v1","rand::distr::bernoulli::test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rng::Rng>::sample","rand::rngs::reseeding::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::core::fmt::Arguments::<'_>::new_v1","rand::distr::float::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::core::fmt::Arguments::<'_>::new_v1","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::mock::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::mock::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rng::Rng>::sample","rand::rngs::thread::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::core::fmt::rt::Argument::<'_>::new_display","rand::distr::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::core::panicking::panic_fmt","rand::distr::other::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rng::Rng>::random_ratio","rand::distr::weighted::weighted_index::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::reseeding::test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::utils::simd_wmul::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rng::Rng>::random_ratio","rand::rngs::std::test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::bernoulli::test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rng::Rng>::sample","rand::rngs::mock::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::other::tests::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::distr::bernoulli::Bernoulli::from_ratio","tests::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::std::test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::core::fmt::rt::Argument::<'_>::new_display","rand::seq::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::distr::bernoulli::Bernoulli::from_ratio","rand::distr::uniform::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::Bernoulli::from_ratio","{impl#2}::eq::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::core::fmt::rt::Argument::<'_>::new_display","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::coin_flipper::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rng::Rng>::sample","rand::rngs::thread::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::core::fmt::Arguments::<'_>::new_v1","{impl#2}::eq::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::distr::bernoulli::Bernoulli::from_ratio","sample_efraimidis_spirakis::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rng::Rng>::random_ratio","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rng::Rng>::sample","{impl#5}::next::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rng::Rng>::sample","rand::distr::distribution::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::distr::bernoulli::Bernoulli::from_ratio","rand::distr::distribution::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments::<'_>::new_v1","rand::seq::coin_flipper::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::core::fmt::Arguments::<'_>::new_v1","rand::rngs::small::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rng::Rng>::sample","rand::distr::bernoulli::test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::core::fmt::Arguments::<'_>::new_v1","rand::rngs::mock::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::core::fmt::Arguments::<'_>::new_v1","{impl#2}::eq::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::core::fmt::rt::Argument::<'_>::new_display::<u32>","{impl#7}::size_hint::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::core::fmt::rt::Argument::new_display::<u32>","rand::distr::weighted::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::core::fmt::rt::Argument::new_display::<u32>","rand::distr::utils::simd_wmul::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rng::Rng>::random_ratio","{impl#7}::next::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::distribution::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::mock::tests::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::mock::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::core::fmt::Arguments::<'_>::new_v1","::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::core::panicking::panic_fmt","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rng::test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::core::fmt::rt::Argument::new_display::<u32>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::core::fmt::Arguments::<'_>::new_v1","rand::distr::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::core::fmt::rt::Argument::new_display::<u32>","rand::distr::slice::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::panicking::panic_fmt","tests::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::slice::test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::core::fmt::rt::Argument::new_display::<u32>","::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::reseeding::test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::core::fmt::rt::Argument::new_display::<u32>","rand::distr::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::core::panicking::panic_fmt","rand::distr::integer::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::core::panicking::panic_fmt","rand::distr::float::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rng::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::float::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::core::fmt::rt::Argument::new_display::<u32>","rand::rng::test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::core::panicking::panic_fmt","rand::seq::slice::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::core::fmt::rt::Argument::<'_>::new_display","rand::distr::other::{impl#0}::sample::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::core::panicking::panic_fmt","rand::seq::coin_flipper::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::core::fmt::Arguments::<'_>::new_v1","rand::distr::integer::tests::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::core::fmt::rt::Argument::<'_>::new_display","rand::distr::weighted::weighted_index::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::core::fmt::Arguments::<'_>::new_v1::<3, 2>","{impl#7}::next::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::test::rng::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rng::Rng>::random_ratio","rand::rngs::mock::tests::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::core::fmt::rt::Argument::new_display::<u32>","rand::distr::slice::test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rng::Rng>::random_ratio","rand::distr::uniform::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::distr::bernoulli::Bernoulli::from_ratio","rand::distr::weighted::weighted_index::test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::utils::simd_wmul::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::bernoulli::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument::<'_>::new_display","{impl#7}::next::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::core::fmt::rt::Argument::new_display::<u32>","{impl#7}::size_hint::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::distr::bernoulli::Bernoulli::from_ratio","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rng::test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::small::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rng::Rng>::random_ratio","rand::seq::iterator::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::reseeding::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument::<'_>::new_display","rand::distr::distribution::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::prelude::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::mock::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::reseeding::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::core::panicking::panic_fmt","::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::mock::tests::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::core::panicking::panic_fmt","rand::distr::integer::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::mock::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments::<'_>::new_v1","rand::rngs::small::{impl#0}::from_seed::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::core::panicking::panic_fmt","tests::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::core::panicking::panic_fmt","rand::rngs::thread::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::core::fmt::Arguments::<'_>::new_v1","rand::distr::slice::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::mock::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rng::Rng>::sample","rand::distr::distribution::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::core::panicking::panic_fmt","rand::distr::integer::tests::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rng::Rng>::sample","rand::distr::hidden_export::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::slice::test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rng::Rng>::random_ratio","rand::distr::utils::simd_wmul::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::core::panicking::panic_fmt","rand::distr::integer::tests::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::core::fmt::Arguments::<'_>::new_v1","rand::rngs::thread::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::reseeding::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::test::rng::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::hidden_export::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::rt::Argument::new_display::<u32>","rand::distr::utils::simd_wmul::<  as rand::rng::Rng>::random_ratio","rand::rngs::reseeding::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::weighted::weighted_index::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::hidden_export::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::core::fmt::rt::Argument::new_display::<u32>","rand::seq::iterator::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::distr::bernoulli::Bernoulli::from_ratio","test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rng::Rng>::sample","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::core::fmt::Arguments::<'_>::new_v1","rand::rngs::mock::tests::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::core::fmt::rt::Argument::<'_>::new_display","rand::test::rng::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::core::fmt::rt::Argument::<'_>::new_display","{impl#5}::next::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rng::Rng>::random_ratio","rand::seq::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::core::fmt::Arguments::new_v1::<3, 2>","rand::rng::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::core::fmt::rt::Argument::new_display::<u32>","rand::distr::integer::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::distr::bernoulli::Bernoulli::from_ratio","rand::distr::other::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rng::Rng>::random_ratio","rand::seq::coin_flipper::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rng::Rng>::sample","rand::distr::integer::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::core::fmt::Arguments::<'_>::new_v1","rand::rngs::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rng::test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::core::fmt::Arguments::<'_>::new_v1","rand::distr::weighted::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rng::Rng>::random_ratio","rand::rngs::xoshiro128plusplus::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rng::Rng>::sample","rand::rngs::mock::tests::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::weighted::weighted_index::<Self as rng::Rng>::sample","rand::seq::iterator::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::iterator::test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::distr::bernoulli::Bernoulli::from_ratio","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::distr::bernoulli::Bernoulli::from_ratio","rand::distr::bernoulli::test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rng::Rng>::random_ratio","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::distr::bernoulli::Bernoulli::from_ratio","rand::distr::uniform::tests::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::xoshiro256plusplus::tests::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::core::fmt::Arguments::<'_>::new_v1","rand::distr::float::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::core::fmt::Arguments::<'_>::new_v1","{impl#5}::next::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::core::fmt::rt::Argument::new_display::<u32>","{impl#7}::size_hint::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::slice::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::xoshiro256plusplus::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::integer::tests::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rng::Rng>::random_ratio","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::core::panicking::panic_fmt","{impl#7}::size_hint::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::reseeding::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rng::Rng>::sample","{impl#7}::next::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::core::fmt::rt::Argument::<'_>::new_display","rand::seq::slice::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rng::Rng>::sample","rand::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::core::fmt::rt::Argument::<'_>::new_display::<u32>","{impl#2}::eq::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::core::fmt::Arguments::<'_>::new_v1","rand::test::rng::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::core::fmt::rt::Argument::<'_>::new_display","::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::core::fmt::rt::Argument::new_display::<u32>","{impl#5}::next::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::core::fmt::Arguments::<'_>::new_v1","rand::rngs::reseeding::test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::core::fmt::Arguments::<'_>::new_v1","rand::rngs::xoshiro256plusplus::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::distr::bernoulli::Bernoulli::from_ratio","rand::prelude::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::distr::bernoulli::Bernoulli::from_ratio","rand::distr::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::core::fmt::rt::Argument::<'_>::new_display","rand::distr::weighted::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::core::fmt::Arguments::<'_>::new_v1::<3, 2>","{impl#2}::eq::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::core::panicking::panic_fmt","rand::distr::utils::simd_wmul::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::core::fmt::rt::Argument::<'_>::new_display","rand::seq::slice::test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::core::fmt::Arguments::<'_>::new_v1","rand::distr::utils::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::weighted::weighted_index::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rng::Rng>::sample","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::core::fmt::rt::Argument::<'_>::new_display","rand::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rng::Rng>::random_ratio","rand::distr::weighted::weighted_index::test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rng::Rng>::sample","rand::rngs::reseeding::test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::core::fmt::Arguments::<'_>::new_v1","rand::seq::index::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::slice::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::prelude::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::distribution::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rng::Rng>::random_ratio","rand::distr::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rng::Rng>::sample","rand::rngs::std::test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::distr::bernoulli::Bernoulli::from_ratio","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::core::panicking::panic_fmt","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rng::Rng>::random_ratio","rand::distr::weighted::weighted_index::test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::core::fmt::rt::Argument::<'_>::new_display","rand::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rng::Rng>::random_ratio","rand::distr::weighted::weighted_index::test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::increasing_uniform::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::core::fmt::rt::Argument::<'_>::new_display","rand::distr::other::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::bernoulli::test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::seq::index::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::integer::tests::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::core::fmt::Arguments::<'_>::new_v1","rand::seq::slice::core::fmt::Arguments::<'_>::new_v1","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::core::fmt::rt::Argument::<'_>::new_display","rand::rng::test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::core::fmt::rt::Argument::new_display::<u32>","rand::test::rng::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::thread::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::mock::tests::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::core::panicking::panic_fmt","rand::rngs::xoshiro128plusplus::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::core::fmt::Arguments::<'_>::new_v1","rand::seq::increasing_uniform::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::integer::tests::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::core::panicking::panic_fmt","rand::distr::integer::tests::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::increasing_uniform::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::core::panicking::panic_fmt","{impl#7}::next::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rng::Rng>::sample","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::distr::bernoulli::Bernoulli::from_ratio","rand::seq::coin_flipper::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::mock::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::bernoulli::test::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::distribution::core::fmt::Arguments::<'_>::new_v1","rand::distr::bernoulli::test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::core::fmt::Arguments::<'_>::new_v1::<3, 2>","sample_efraimidis_spirakis::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::core::fmt::Arguments::<'_>::new_v1","rand::seq::slice::test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rng::Rng>::sample","rand::rngs::xoshiro256plusplus::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::core::panicking::panic_fmt","rand::rngs::reseeding::test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::core::panicking::panic_fmt","rand::distr::uniform::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::utils::simd_wmul::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::coin_flipper::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::reseeding::test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rng::Rng>::sample","rand::rngs::std::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::mock::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::core::fmt::rt::Argument::<'_>::new_display","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::core::fmt::Arguments::<'_>::new_v1","rand::rngs::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rng::Rng>::random_ratio","rand::distr::bernoulli::test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::distr::bernoulli::Bernoulli::from_ratio","tests::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rng::Rng>::random_ratio","rand::prelude::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::core::panicking::panic_fmt","test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::other::{impl#0}::sample::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rng::Rng>::sample","{impl#2}::eq::<  as rand::rng::Rng>::random_ratio","rand::seq::iterator::test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::distr::bernoulli::Bernoulli::from_ratio","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::core::fmt::rt::Argument::new_display::<u32>","rand::seq::index::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::core::fmt::rt::Argument::<'_>::new_display::<u32>","sample_efraimidis_spirakis::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::small::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::other::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::core::panicking::panic_fmt","sample_efraimidis_spirakis::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::core::fmt::Arguments::<'_>::new_v1","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::slice::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::core::fmt::rt::Argument::new_display::<u32>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::distr::bernoulli::Bernoulli::from_ratio","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rng::Rng>::random_ratio","{impl#7}::size_hint::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::core::fmt::Arguments::<'_>::new_v1::<3, 2>","tests::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::core::fmt::rt::Argument::new_display::<u32>","rand::prelude::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::seq::iterator::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rng::Rng>::sample","rand::distr::other::{impl#3}::sample::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::Arguments::<'_>::new_v1","{impl#7}::size_hint::<  as rand::rng::Rng>::random_ratio","{impl#2}::eq::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rng::Rng>::random_ratio","test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::distr::bernoulli::Bernoulli::from_ratio","{impl#2}::eq::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::core::panicking::panic_fmt","rand::distr::weighted::weighted_index::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rng::Rng>::random_ratio","rand::rngs::small::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::core::panicking::panic_fmt","rand::rngs::xoshiro256plusplus::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::core::fmt::Arguments::<'_>::new_v1","rand::rngs::std::test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::core::fmt::rt::Argument::new_display::<u32>","rand::seq::slice::test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::Arguments::<'_>::new_v1","rand::distr::slice::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::thread::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::distr::bernoulli::Bernoulli::from_ratio","rand::distr::weighted::weighted_index::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::core::fmt::rt::Argument::<'_>::new_display","rand::distr::slice::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::xoshiro128plusplus::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rng::Rng>::random_ratio","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rng::Rng>::random_ratio","rand::distr::weighted::weighted_index::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rng::Rng>::sample","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::weighted::weighted_index::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::core::fmt::Arguments::<'_>::new_v1","::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::slice::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::core::fmt::rt::Argument::<'_>::new_display","rand::seq::iterator::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::distr::bernoulli::Bernoulli::from_ratio","rand::seq::iterator::test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::reseeding::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::core::fmt::rt::Argument::<'_>::new_display","{impl#7}::size_hint::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::core::panicking::panic_fmt","rand::distr::slice::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::core::fmt::Arguments::<'_>::new_v1","rand::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::core::fmt::rt::Argument::new_display::<u32>","rand::distr::distribution::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rng::Rng>::random_ratio","rand::seq::iterator::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::distr::bernoulli::Bernoulli::from_ratio","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rng::Rng>::sample","rand::distr::weighted::weighted_index::test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rng::Rng>::random_ratio","rand::seq::index::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::thread::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::core::panicking::panic_fmt","rand::rngs::reseeding::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rng::Rng>::random_ratio","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::core::fmt::Arguments::new_v1::<3, 2>","sample_efraimidis_spirakis::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rng::Rng>::sample","rand::seq::iterator::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::core::panicking::panic_fmt","rand::rngs::xoshiro256plusplus::tests::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::seq::increasing_uniform::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::distr::bernoulli::Bernoulli::from_ratio","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::bernoulli::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rng::Rng>::sample","rand::seq::coin_flipper::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rng::Rng>::sample","rand::seq::slice::test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rng::Rng>::random_ratio","{impl#7}::next::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::core::fmt::rt::Argument::<'_>::new_display::<u32>","::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::core::fmt::Arguments::<'_>::new_v1::<3, 2>","{impl#7}::size_hint::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rng::Rng>::sample","rand::distr::distribution::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::core::fmt::Arguments::<'_>::new_v1","rand::rng::test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::core::fmt::Arguments::<'_>::new_v1","rand::seq::index::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rng::Rng>::sample","{impl#7}::size_hint::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rng::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rng::Rng>::sample","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::distr::bernoulli::Bernoulli::from_ratio","rand::distr::other::{impl#2}::sample::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rng::Rng>::sample","rand::distr::distribution::tests::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::core::fmt::Arguments::<'_>::new_v1","rand::rngs::small::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::distr::bernoulli::Bernoulli::from_ratio","rand::seq::increasing_uniform::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::core::panicking::panic_fmt","rand::distr::utils::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::small::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::small::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::core::fmt::Arguments::new_v1::<3, 2>","rand::seq::increasing_uniform::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::core::fmt::rt::Argument::new_display::<u32>","{impl#7}::next::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::core::fmt::Arguments::<'_>::new_v1","test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::core::fmt::Arguments::<'_>::new_v1","rand::distr::utils::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rng::Rng>::sample","rand::prelude::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::core::fmt::Arguments::<'_>::new_v1","rand::distr::bernoulli::test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rng::Rng>::random_ratio","rand::seq::slice::test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::core::fmt::Arguments::new_v1::<3, 2>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rng::Rng>::sample","rand::distr::uniform::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::distr::bernoulli::Bernoulli::from_ratio","rand::distr::utils::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::core::fmt::rt::Argument::new_display::<u32>","rand::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rng::Rng>::sample","sample_efraimidis_spirakis::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::core::panicking::panic_fmt","{impl#7}::next::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rng::Rng>::random_ratio","rand::seq::iterator::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::core::fmt::Arguments::new_v1::<3, 2>","rand::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::core::fmt::Arguments::<'_>::new_v1","{impl#2}::eq::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::distr::bernoulli::Bernoulli::from_ratio","rand::seq::slice::test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::core::fmt::rt::Argument::<'_>::new_display","rand::test::core::panicking::panic_fmt","rand::rng::test::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::core::panicking::panic_fmt","rand::distr::other::tests::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::small::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::seq::slice::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::core::panicking::panic_fmt","test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::prelude::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::uniform::tests::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rng::Rng>::sample","rand::distr::uniform::tests::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rng::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::core::fmt::Arguments::<'_>::new_v1","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rng::Rng>::sample","rand::rngs::reseeding::test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::core::fmt::Arguments::<'_>::new_v1","rand::rngs::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::distr::bernoulli::Bernoulli::from_ratio","rand::distr::integer::tests::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::core::panicking::panic_fmt","{impl#7}::next::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::core::panicking::panic_fmt","::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rng::Rng>::random_ratio","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::float::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rng::Rng>::sample","rand::rngs::std::test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::core::fmt::Arguments::<'_>::new_v1","rand::distr::utils::simd_wmul::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::core::fmt::rt::Argument::new_display::<u32>","rand::distr::utils::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::core::fmt::Arguments::new_v1::<3, 2>","::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::xoshiro128plusplus::tests::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::core::fmt::rt::Argument::<'_>::new_display","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::seq::slice::test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::core::fmt::rt::Argument::<'_>::new_display","rand::seq::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::core::fmt::rt::Argument::<'_>::new_display::<u32>","::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::core::panicking::panic_fmt","rand::distr::bernoulli::test::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::core::panicking::panic_fmt","rand::rngs::thread::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::core::fmt::rt::Argument::new_display::<u32>","rand::distr::other::{impl#0}::sample::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::panicking::panic_fmt","rand::distr::float::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::core::fmt::Arguments::new_v1::<3, 2>","rand::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::xoshiro128plusplus::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::distr::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rng::Rng>::random_ratio","::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rng::Rng>::sample","rand::rngs::xoshiro256plusplus::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::core::fmt::rt::Argument::<'_>::new_display","rand::rngs::mock::tests::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::core::fmt::rt::Argument::new_display::<u32>","rand::rngs::std::test::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::core::panicking::panic_fmt","rand::seq::iterator::test::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::core::panicking::panic_fmt","rand::rngs::std::test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::core::fmt::rt::Argument::<'_>::new_display","rand::seq::coin_flipper::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rng::Rng>::sample","rand::rngs::std::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::core::panicking::panic_fmt","rand::rngs::xoshiro256plusplus::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::core::fmt::rt::Argument::new_display::<u32>","rand::distr::distribution::tests::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::core::panicking::panic_fmt","rand::distr::bernoulli::test::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::core::fmt::rt::Argument::<'_>::new_display","rand::distr::utils::simd_wmul::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::core::fmt::rt::Argument::new_display::<u32>","rand::distr::other::{impl#2}::sample::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::distr::bernoulli::Bernoulli::from_ratio","rand::distr::integer::tests::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::rng::Rng>::random_ratio","{impl#7}::next::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::rt::Argument::<'_>::new_display","rand::distr::distribution::tests::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::reseeding::test::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::core::fmt::rt::Argument::<'_>::new_display","rand::rng::test::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as rand::rng::Rng>::random_ratio","rand::test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::seq::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::seq::slice::IndexedRandom::choose_weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rng::Rng>::sample","rand::distr::weighted::weighted_index::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::rngs::std::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::reseeding::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<{impl#7}::size_hint::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::core::fmt::rt::Argument::<'_>::new_display","rand::distr::other::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<  as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::core::panicking::panic_fmt","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::core::fmt::rt::Argument::new_display::<u32>","rand::distr::weighted::weighted_index::distr::bernoulli::Bernoulli::from_ratio","rand::prelude::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::distr::uniform::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::core::fmt::rt::Argument::<'_>::new_display::<u32>","tests::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::rngs::mock::tests::<rand::rngs::reseeding::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::distr::bernoulli::Bernoulli::from_ratio","rand::prelude::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rng::Rng>::sample","rand::distr::other::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::xoshiro128plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::distr::bernoulli::Bernoulli::from_ratio","{impl#5}::next::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rng::Rng>::sample","rand::rngs::small::{impl#0}::from_seed::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rng::Rng>::sample","rand::distr::utils::simd_wmul::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<rand::rngs::xoshiro128plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::core::fmt::Arguments::<'_>::new_v1","rand::prelude::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::distr::uniform::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::other::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::distr::other::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::distr::other::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::rngs::small::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::xoshiro128plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::core::fmt::Arguments::<'_>::new_v1","rand::rngs::mock::tests::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::distr::bernoulli::Bernoulli::from_ratio","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::small::{impl#0}::from_seed::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::test::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::distr::bernoulli::Bernoulli::from_ratio","rand::rngs::reseeding::test::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::other::{impl#3}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::distr::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::hidden_export::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::other::{impl#0}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<Self as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::seq::iterator::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::increasing_uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<{impl#7}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::reseeding::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<Self as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::core::fmt::rt::Argument::<'_>::new_display","{impl#7}::next::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::distribution::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::rngs::xoshiro128plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<  as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::small::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::std::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::rngs::mock::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::seq::iterator::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::mock::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::core::fmt::Arguments::<'_>::new_v1::<3, 2>","rand::distr::weighted::weighted_index::{impl#4}::weight::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<rand::distr::other::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::distr::float::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<Self as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<rand::seq::slice::IndexedRandom::choose_weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<sample_efraimidis_spirakis::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::rt::Argument::<'_>::new_display::<u32>","rand::seq::iterator::test::<  as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::rng::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<rand::distr::distribution::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::thread::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<rand::seq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::weighted::weighted_index::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::tests::<  as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<  as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<rand::rngs::reseeding::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::distr::bernoulli::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<  as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::seq::iterator::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<Self as rand::distr::weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::utils::simd_wmul::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::seq::iterator::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::distr::bernoulli::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::rngs::std::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::{impl#2}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::rng::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<  as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::seq::index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<rand::prelude::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as {impl#7}::size_hint::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::weighted::weighted_index::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<Self as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::seq::coin_flipper::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::other::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<  as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<  as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::integer::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<Self as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::rngs::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::distr::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::<  as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<  as ::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<  as rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<  as rand::distr::distribution::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<Self as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<Self as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<  as rand::test::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<Self as rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::rng::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","test::<  as rand::rng::Rng>::random_ratio","rand::distr::float::<rand::distr::utils::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::coin_flipper::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<rand::distr::bernoulli::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::weighted::weighted_index::{impl#4}::weight::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<rand::rngs::xoshiro256plusplus::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<  as rand::distr::bernoulli::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<{impl#2}::eq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::calculate_bound_u32::<rand::rngs::xoshiro128plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::increasing_uniform::calculate_bound_u32::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<  as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::rngs::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::rngs::std::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::<rand::distr::integer::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::distr::bernoulli::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::core::panicking::panic_fmt","rand::rngs::std::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","test::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<rand::distr::utils::simd_wmul::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::seq::iterator::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::tests::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<Self as rand::seq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<{impl#7}::size_hint::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<{impl#2}::eq::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::tests::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<rand::distr::distribution::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as {impl#7}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::distr::weighted::weighted_index::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::core::fmt::Arguments::new_v1::<3, 2>","rand::prelude::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::distr::float::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::<  as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::reseeding::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::<rand::distr::other::{impl#2}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::test::rng::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::tests::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::integer::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::<test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as rand::distr::weighted::weighted_index::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::distr::integer::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::distr::utils::simd_wmul::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::integer::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<  as rand::distr::uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::prelude::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<  as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedRandom::choose_weighted::<Self as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::distr::distribution::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::rngs::mock::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::std::test::<Self as rand::distr::bernoulli::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::<  as rand::rngs::xoshiro128plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<{impl#7}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<Self as rand::rngs::small::{impl#0}::from_seed::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::utils::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::test::<Self as rand::rngs::xoshiro256plusplus::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<  as rand::rng::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::test::<rand::distr::weighted::weighted_index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<Self as {impl#2}::eq::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","::<rand::seq::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::distr::weighted::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::<rand::seq::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::<Self as rand::distr::other::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<  as rand::distr::integer::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::float::<rand::rngs::xoshiro256plusplus::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::<rand::distr::slice::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<rand::rngs::mock::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::uniform::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::small::{impl#0}::from_seed::<Self as rand::rngs::mock::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<rand::rngs::small::{impl#0}::from_seed::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::<rand::rngs::std::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::<  as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::{impl#3}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::thread::<Self as rand::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::<  as test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::slice::test::<rand::distr::distribution::tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::<Self as rand::rngs::reseeding::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<sample_efraimidis_spirakis::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<Self as rand::distr::hidden_export::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::<rand::rngs::small::{impl#0}::from_seed::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::mock::<tests::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::distribution::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::<rand::seq::slice::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#5}::next::<rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::seq::index::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<rand::distr::float::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<rand::rng::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<  as rand::seq::slice::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<  as rand::seq::increasing_uniform::calculate_bound_u32::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<{impl#5}::next::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<rand::distr::slice::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<rand::seq::increasing_uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::index::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::uniform::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","tests::<  as rand::distr::other::{impl#3}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::rngs::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::test::core::fmt::Arguments::new_v1::<3, 2>","rand::distr::hidden_export::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::iterator::test::<Self as rand::rngs::mock::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::prelude::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<rand::rngs::xoshiro256plusplus::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::distr::hidden_export::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::seq::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","sample_efraimidis_spirakis::<Self as rand::seq::slice::IndexedRandom::choose_weighted::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::<Self as rand::distr::slice::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#3}::sample::<Self as rand::seq::increasing_uniform::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as rand::distr::other::{impl#2}::sample::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::integer::<rand::distr::weighted::weighted_index::{impl#4}::weight::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<  as rand::distr::weighted::weighted_index::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::reseeding::<rand::distr::weighted::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::increasing_uniform::<rand::rngs::thread::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<rand::seq::iterator::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::hidden_export::<  as tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::next::<rand::seq::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#0}::sample::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","tests::<Self as rand::rngs::xoshiro256plusplus::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::test::rng::<rand::rngs::xoshiro256plusplus::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<  as rand::distr::uniform::tests::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#7}::size_hint::<rand::seq::increasing_uniform::calculate_bound_u32::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::tests::<Self as rand::rngs::std::test::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as rand::seq::coin_flipper::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<rand::distr::other::{impl#0}::sample::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::weighted::weighted_index::{impl#4}::weight::<  as {impl#5}::next::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::<rand::distr::distribution::tests::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<  as rand::distr::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::bernoulli::<Self as rand::prelude::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","{impl#2}::eq::<Self as rand::rngs::small::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::other::{impl#2}::sample::<Self as rand::distr::utils::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro128plusplus::tests::<rand::distr::other::{impl#0}::sample::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::utils::simd_wmul::<rand::seq::slice::test::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::coin_flipper::<rand::distr::Self as >::sample::<bool, distr::bernoulli::Bernoulli>","rand::seq::slice::test::<rand::test::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rngs::xoshiro256plusplus::tests::<rand::rngs::thread::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::distr::uniform::<{impl#5}::next::Self as rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>","rand::rng::<Self as sample_efraimidis_spirakis::rng::Rng>::sample::<bool, distr::bernoulli::Bernoulli>"],"types":["Self","bool","u32","core::fmt::Arguments<'_>","[core::fmt::rt::Argument<'_>; 2]","!","distr::bernoulli::Bernoulli","distr::bernoulli::BernoulliError","core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","str","core::fmt::rt::Argument<'_>","isize","[&str; 3]","rand::rng::Rng","[core::fmt::rt::Argument; 2]","core::fmt::Arguments","core::fmt::rt::Argument","core::result::Result","rand::seq::slice::IndexedRandom::choose_weighted::[core::fmt::rt::Argument<'_>; 2]","rand::seq::coin_flipper::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rng::u32","{impl#5}::next::[core::fmt::rt::Argument<'_>; 2]","{impl#5}::next::!","rand::distr::integer::core::fmt::Arguments","rand::test::core::fmt::Arguments","rand::seq::coin_flipper::core::fmt::Arguments<'_>","{impl#2}::eq::distr::bernoulli::Bernoulli","rand::distr::distribution::isize","rand::rngs::reseeding::isize","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::rt::Argument","rand::seq::slice::test::rand::rng::Rng","rand::distr::other::tests::[core::fmt::rt::Argument<'_>; 2]","rand::distr::distribution::tests::core::result::Result","rand::seq::index::[core::fmt::rt::Argument<'_>; 2]","rand::rng::test::str","test::core::fmt::Arguments","rand::distr::slice::distr::bernoulli::BernoulliError","rand::rngs::std::core::fmt::rt::Argument","rand::rngs::xoshiro128plusplus::core::fmt::rt::Argument<'_>","rand::seq::core::fmt::Arguments<'_>","rand::distr::utils::distr::bernoulli::Bernoulli","rand::bool","rand::distr::hidden_export::!","rand::distr::other::{impl#3}::sample::distr::bernoulli::Bernoulli","rand::seq::index::distr::bernoulli::BernoulliError","rand::rngs::xoshiro256plusplus::core::fmt::Arguments<'_>","rand::distr::rand::rng::Rng","{impl#7}::next::distr::bernoulli::BernoulliError","rand::distr::other::{impl#0}::sample::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::[&str; 3]","rand::rngs::std::!","rand::distr::distribution::tests::distr::bernoulli::Bernoulli","rand::distr::float::[&str; 3]","tests::[core::fmt::rt::Argument; 2]","rand::distr::other::{impl#0}::sample::isize","rand::prelude::Self","rand::distr::utils::simd_wmul::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::str","rand::seq::slice::test::core::fmt::Arguments<'_>","rand::distr::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::distribution::tests::rand::rng::Rng","rand::distr::u32","rand::seq::increasing_uniform::calculate_bound_u32::[&str; 3]","rand::distr::slice::test::rand::rng::Rng","::core::fmt::Arguments<'_>","rand::seq::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::integer::tests::core::fmt::rt::Argument<'_>","rand::rngs::mock::tests::rand::rng::Rng","rand::rngs::reseeding::test::[core::fmt::rt::Argument; 2]","rand::distr::core::fmt::Arguments<'_>","rand::rng::test::u32","rand::rngs::std::test::[core::fmt::rt::Argument<'_>; 2]","rand::distr::uniform::tests::distr::bernoulli::BernoulliError","rand::seq::core::fmt::rt::Argument<'_>","rand::distr::hidden_export::core::fmt::rt::Argument<'_>","rand::seq::iterator::test::bool","rand::distr::distr::bernoulli::Bernoulli","rand::distr::other::{impl#0}::sample::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::weighted::[core::fmt::rt::Argument<'_>; 2]","sample_efraimidis_spirakis::isize","rand::distr::bernoulli::core::fmt::Arguments","rand::distr::integer::tests::distr::bernoulli::Bernoulli","rand::seq::iterator::isize","rand::distr::integer::tests::rand::rng::Rng","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::[core::fmt::rt::Argument<'_>; 2]","rand::distr::other::{impl#2}::sample::!","rand::distr::bernoulli::test::rand::rng::Rng","rand::seq::iterator::[core::fmt::rt::Argument<'_>; 2]","rand::distr::weighted::weighted_index::{impl#4}::weight::[&str; 3]","rand::seq::increasing_uniform::[core::fmt::rt::Argument; 2]","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::str","rand::seq::coin_flipper::bool","::[core::fmt::rt::Argument; 2]","{impl#5}::next::[&str; 3]","rand::distr::other::tests::Self","rand::distr::uniform::tests::core::fmt::rt::Argument<'_>","rand::distr::slice::test::bool","rand::distr::integer::core::fmt::rt::Argument<'_>","rand::distr::other::{impl#3}::sample::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::xoshiro128plusplus::[&str; 3]","rand::prelude::core::fmt::Arguments","rand::seq::slice::IndexedRandom::choose_weighted::u32","rand::distr::uniform::tests::[core::fmt::rt::Argument<'_>; 2]","rand::distr::distribution::tests::core::fmt::rt::Argument","rand::test::rng::[core::fmt::rt::Argument; 2]","rand::seq::iterator::test::distr::bernoulli::Bernoulli","rand::rngs::xoshiro256plusplus::Self","rand::distr::weighted::weighted_index::[core::fmt::rt::Argument; 2]","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::isize","rand::rngs::thread::Self","rand::test::rng::core::fmt::Arguments<'_>","rand::distr::other::{impl#3}::sample::distr::bernoulli::BernoulliError","rand::distr::weighted::weighted_index::{impl#4}::weight::distr::bernoulli::BernoulliError","rand::distr::uniform::tests::[&str; 3]","rand::seq::slice::IndexedRandom::choose_weighted::isize","::core::fmt::rt::Argument","rand::distr::hidden_export::bool","rand::seq::slice::test::distr::bernoulli::Bernoulli","{impl#5}::next::core::fmt::rt::Argument<'_>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::result::Result","rand::rngs::mock::tests::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::reseeding::u32","rand::distr::bernoulli::test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::weighted::bool","rand::seq::!","{impl#2}::eq::core::result::Result","rand::rngs::mock::tests::Self","rand::rngs::xoshiro128plusplus::tests::bool","rand::distr::hidden_export::isize","{impl#2}::eq::[&str; 3]","rand::distr::distribution::tests::Self","rand::distr::weighted::weighted_index::bool","rand::distr::slice::test::Self","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::[&str; 3]","rand::distr::utils::distr::bernoulli::BernoulliError","rand::distr::weighted::weighted_index::test::[&str; 3]","sample_efraimidis_spirakis::core::fmt::Arguments<'_>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument","rand::distr::other::[core::fmt::rt::Argument; 2]","rand::distr::bernoulli::core::fmt::rt::Argument","tests::bool","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument","rand::rngs::reseeding::test::[core::fmt::rt::Argument<'_>; 2]","rand::seq::slice::IndexedRandom::choose_weighted::Self","rand::distr::bernoulli::str","{impl#2}::eq::rand::rng::Rng","rand::rngs::reseeding::core::fmt::Arguments<'_>","rand::rngs::small::{impl#0}::from_seed::isize","rand::distr::other::tests::core::fmt::rt::Argument<'_>","rand::rng::core::fmt::rt::Argument","sample_efraimidis_spirakis::u32","rand::rngs::std::distr::bernoulli::BernoulliError","rand::distr::other::core::fmt::Arguments<'_>","rand::distr::distribution::tests::!","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::utils::str","rand::seq::iterator::rand::rng::Rng","rand::distr::integer::Self","rand::rngs::mock::!","rand::seq::slice::IndexedRandom::choose_weighted::[&str; 3]","rand::distr::integer::!","rand::distr::bool","rand::prelude::distr::bernoulli::BernoulliError","rand::test::[&str; 3]","tests::core::fmt::rt::Argument","rand::distr::float::bool","rand::rng::test::[core::fmt::rt::Argument; 2]","rand::rngs::thread::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::small::{impl#0}::from_seed::rand::rng::Rng","rand::seq::coin_flipper::Self","{impl#2}::eq::bool","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::rt::Argument<'_>","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::Arguments<'_>","rand::prelude::!","rand::seq::coin_flipper::core::fmt::Arguments","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::result::Result","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::Arguments<'_>","test::[core::fmt::rt::Argument; 2]","rand::distr::hidden_export::distr::bernoulli::BernoulliError","rand::prelude::bool","rand::prelude::core::fmt::rt::Argument","rand::distr::weighted::weighted_index::test::Self","rand::seq::slice::bool","{impl#5}::next::Self","rand::rngs::thread::[core::fmt::rt::Argument; 2]","{impl#2}::eq::core::fmt::Arguments<'_>","rand::test::!","rand::rngs::reseeding::test::u32","rand::distr::uniform::[&str; 3]","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::Self","rand::rngs::std::[core::fmt::rt::Argument<'_>; 2]","rand::distr::distribution::tests::[core::fmt::rt::Argument<'_>; 2]","rand::seq::increasing_uniform::core::result::Result","rand::distr::uniform::rand::rng::Rng","rand::rngs::xoshiro128plusplus::core::fmt::rt::Argument","rand::distr::integer::distr::bernoulli::BernoulliError","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::distr::bernoulli::BernoulliError","rand::rngs::xoshiro256plusplus::distr::bernoulli::BernoulliError","rand::rng::bool","rand::distr::other::{impl#0}::sample::Self","{impl#7}::next::str","rand::rngs::std::distr::bernoulli::Bernoulli","rand::distr::integer::tests::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::other::{impl#3}::sample::[&str; 3]","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::rt::Argument<'_>","rand::distr::distribution::core::fmt::Arguments<'_>","rand::seq::index::!","::distr::bernoulli::Bernoulli","rand::distr::utils::simd_wmul::!","rand::distr::bernoulli::test::str","rand::distr::slice::test::isize","rand::distr::float::!","rand::rngs::xoshiro256plusplus::tests::core::fmt::rt::Argument","test::bool","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::u32","rand::distr::slice::test::core::fmt::Arguments<'_>","rand::distr::utils::simd_wmul::distr::bernoulli::Bernoulli","rand::seq::slice::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","{impl#2}::eq::distr::bernoulli::BernoulliError","rand::rngs::mock::core::fmt::Arguments","rand::rngs::small::core::fmt::rt::Argument<'_>","rand::distr::other::{impl#0}::sample::distr::bernoulli::BernoulliError","rand::prelude::[core::fmt::rt::Argument; 2]","rand::distr::weighted::weighted_index::core::fmt::rt::Argument<'_>","rand::seq::iterator::test::core::fmt::rt::Argument","rand::seq::increasing_uniform::calculate_bound_u32::rand::rng::Rng","{impl#7}::next::core::fmt::Arguments<'_>","rand::distr::other::core::fmt::rt::Argument<'_>","rand::seq::coin_flipper::[core::fmt::rt::Argument<'_>; 2]","rand::distr::weighted::weighted_index::test::core::fmt::rt::Argument","tests::distr::bernoulli::BernoulliError","rand::core::fmt::Arguments","rand::test::str","rand::seq::slice::test::str","rand::distr::slice::test::distr::bernoulli::Bernoulli","test::core::fmt::rt::Argument","rand::rngs::mock::rand::rng::Rng","rand::rng::core::fmt::Arguments","test::[&str; 3]","rand::distr::Self","rand::test::rng::core::fmt::Arguments","::core::result::Result","rand::rngs::small::{impl#0}::from_seed::str","rand::isize","rand::distr::weighted::core::fmt::Arguments<'_>","rand::distr::weighted::weighted_index::test::str","rand::seq::index::[core::fmt::rt::Argument; 2]","tests::[core::fmt::rt::Argument<'_>; 2]","rand::prelude::rand::rng::Rng","rand::distr::core::fmt::Arguments","rand::rngs::small::core::fmt::Arguments","rand::rngs::mock::tests::!","rand::rngs::mock::tests::str","rand::distr::float::[core::fmt::rt::Argument<'_>; 2]","rand::rng::[core::fmt::rt::Argument<'_>; 2]","rand::distr::distribution::tests::core::fmt::rt::Argument<'_>","rand::seq::increasing_uniform::str","rand::distr::weighted::weighted_index::test::u32","rand::prelude::isize","rand::rngs::std::test::rand::rng::Rng","{impl#7}::next::!","rand::distr::slice::[core::fmt::rt::Argument; 2]","rand::distr::float::str","rand::seq::increasing_uniform::calculate_bound_u32::[core::fmt::rt::Argument<'_>; 2]","rand::rng::test::bool","rand::rngs::small::{impl#0}::from_seed::bool","rand::test::rng::[core::fmt::rt::Argument<'_>; 2]","rand::distr::other::!","rand::seq::increasing_uniform::bool","rand::distr::other::isize","rand::seq::slice::test::[core::fmt::rt::Argument<'_>; 2]","{impl#7}::size_hint::isize","rand::distr::bernoulli::[core::fmt::rt::Argument; 2]","tests::core::fmt::Arguments","rand::distr::weighted::weighted_index::[core::fmt::rt::Argument<'_>; 2]","rand::seq::index::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::weighted::isize","rand::rngs::std::test::!","rand::distr::utils::isize","tests::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rng::test::rand::rng::Rng","rand::seq::iterator::distr::bernoulli::BernoulliError","sample_efraimidis_spirakis::rand::rng::Rng","rand::distr::weighted::weighted_index::{impl#4}::weight::distr::bernoulli::Bernoulli","rand::rngs::xoshiro256plusplus::distr::bernoulli::Bernoulli","rand::distr::utils::simd_wmul::u32","rand::rngs::u32","rand::rng::test::isize","rand::distr::integer::distr::bernoulli::Bernoulli","rand::rngs::xoshiro128plusplus::tests::[core::fmt::rt::Argument; 2]","rand::distr::distribution::tests::isize","rand::rngs::std::test::[core::fmt::rt::Argument; 2]","rand::test::Self","sample_efraimidis_spirakis::core::fmt::rt::Argument<'_>","rand::rngs::std::test::isize","rand::distr::slice::str","rand::seq::coin_flipper::core::fmt::rt::Argument","rand::seq::slice::core::fmt::Arguments","{impl#7}::next::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::xoshiro128plusplus::tests::!","rand::distr::distribution::core::fmt::Arguments","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::Arguments","rand::distr::distribution::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::core::fmt::rt::Argument<'_>","rand::distr::weighted::weighted_index::test::[core::fmt::rt::Argument<'_>; 2]","rand::seq::iterator::core::fmt::Arguments<'_>","rand::seq::coin_flipper::isize","rand::seq::increasing_uniform::calculate_bound_u32::[core::fmt::rt::Argument; 2]","{impl#7}::size_hint::distr::bernoulli::Bernoulli","rand::distr::slice::core::fmt::rt::Argument<'_>","rand::rngs::small::{impl#0}::from_seed::distr::bernoulli::BernoulliError","rand::rngs::xoshiro128plusplus::tests::u32","rand::seq::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::xoshiro256plusplus::tests::u32","{impl#7}::next::core::fmt::rt::Argument<'_>","test::distr::bernoulli::Bernoulli","rand::rngs::xoshiro128plusplus::core::fmt::Arguments<'_>","rand::distr::slice::test::core::fmt::rt::Argument","rand::distr::[&str; 3]","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::Arguments","{impl#7}::size_hint::[core::fmt::rt::Argument<'_>; 2]","rand::distr::uniform::core::fmt::Arguments","tests::[&str; 3]","rand::distr::weighted::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::integer::[core::fmt::rt::Argument; 2]","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::rand::rng::Rng","rand::test::rng::core::fmt::rt::Argument<'_>","rand::distr::bernoulli::Self","rand::test::rng::rand::rng::Rng","rand::rng::test::core::result::Result","rand::distr::slice::Self","rand::distr::hidden_export::core::result::Result","rand::distr::uniform::distr::bernoulli::Bernoulli","tests::isize","rand::rngs::core::fmt::Arguments","rand::rng::distr::bernoulli::Bernoulli","rand::rng::test::core::fmt::Arguments<'_>","rand::rngs::xoshiro256plusplus::core::fmt::rt::Argument<'_>","{impl#5}::next::bool","rand::test::rng::str","{impl#7}::next::rand::rng::Rng","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::u32","rand::rngs::std::test::core::fmt::rt::Argument<'_>","rand::distr::other::tests::rand::rng::Rng","rand::rngs::small::{impl#0}::from_seed::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::reseeding::str","rand::distr::bernoulli::test::core::fmt::Arguments<'_>","rand::rngs::std::bool","rand::rngs::thread::core::fmt::Arguments<'_>","rand::seq::increasing_uniform::distr::bernoulli::BernoulliError","rand::seq::iterator::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::xoshiro256plusplus::tests::Self","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments","rand::distr::other::{impl#3}::sample::core::fmt::Arguments","rand::distr::other::core::fmt::Arguments","rand::seq::iterator::test::core::fmt::Arguments","rand::rngs::small::{impl#0}::from_seed::u32","rand::rngs::thread::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument<'_>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::rt::Argument<'_>","rand::seq::increasing_uniform::calculate_bound_u32::Self","rand::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","test::isize","{impl#2}::eq::core::fmt::rt::Argument","rand::rngs::std::test::str","rand::seq::slice::core::fmt::rt::Argument","rand::rngs::reseeding::[&str; 3]","rand::distr::core::result::Result","rand::distr::other::{impl#2}::sample::distr::bernoulli::BernoulliError","rand::seq::iterator::test::[&str; 3]","rand::rngs::xoshiro256plusplus::tests::core::result::Result","rand::rngs::xoshiro256plusplus::tests::distr::bernoulli::BernoulliError","{impl#5}::next::[core::fmt::rt::Argument; 2]","rand::rngs::reseeding::test::rand::rng::Rng","rand::distr::weighted::weighted_index::isize","rand::distr::weighted::weighted_index::test::distr::bernoulli::Bernoulli","rand::rngs::reseeding::test::isize","rand::seq::increasing_uniform::calculate_bound_u32::distr::bernoulli::BernoulliError","rand::test::distr::bernoulli::Bernoulli","test::core::fmt::rt::Argument<'_>","rand::distr::other::{impl#2}::sample::core::fmt::Arguments<'_>","sample_efraimidis_spirakis::core::fmt::Arguments","rand::distr::bernoulli::BernoulliError","rand::distr::weighted::weighted_index::Self","rand::rngs::xoshiro256plusplus::!","rand::distr::other::{impl#3}::sample::[core::fmt::rt::Argument; 2]","rand::rngs::xoshiro256plusplus::core::fmt::rt::Argument","rand::distr::other::core::fmt::rt::Argument","rand::seq::increasing_uniform::core::fmt::rt::Argument","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::rt::Argument","rand::seq::iterator::test::!","rand::test::rng::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::std::rand::rng::Rng","rand::seq::iterator::test::core::fmt::rt::Argument<'_>","rand::distr::str","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::fmt::Arguments<'_>","rand::seq::slice::core::fmt::rt::Argument<'_>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::result::Result","rand::distr::utils::core::fmt::rt::Argument<'_>","rand::rngs::small::[&str; 3]","rand::seq::increasing_uniform::calculate_bound_u32::distr::bernoulli::Bernoulli","{impl#5}::next::isize","sample_efraimidis_spirakis::core::result::Result","rand::rngs::small::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::index::bool","rand::seq::iterator::test::str","rand::distr::utils::simd_wmul::rand::rng::Rng","rand::rngs::xoshiro128plusplus::distr::bernoulli::BernoulliError","rand::distr::bernoulli::test::core::result::Result","rand::distr::other::{impl#0}::sample::u32","rand::distr::hidden_export::distr::bernoulli::Bernoulli","::core::fmt::Arguments","rand::rngs::xoshiro256plusplus::tests::[&str; 3]","rand::seq::increasing_uniform::calculate_bound_u32::core::result::Result","rand::rngs::reseeding::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::slice::IndexedRandom::choose_weighted::str","rand::distr::other::{impl#3}::sample::isize","rand::distr::integer::tests::u32","rand::rngs::reseeding::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::small::str","rand::rngs::reseeding::distr::bernoulli::Bernoulli","rand::test::bool","rand::seq::slice::test::core::fmt::rt::Argument<'_>","rand::distr::uniform::tests::[core::fmt::rt::Argument; 2]","rand::distr::other::tests::bool","rand::distr::other::{impl#0}::sample::[core::fmt::rt::Argument; 2]","rand::distr::distribution::bool","rand::distr::float::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::other::{impl#0}::sample::!","rand::distr::other::{impl#3}::sample::rand::rng::Rng","rand::rngs::xoshiro256plusplus::core::fmt::Arguments","rand::distr::bernoulli::distr::bernoulli::BernoulliError","::distr::bernoulli::BernoulliError","rand::rng::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::thread::!","rand::distr::float::core::fmt::rt::Argument<'_>","rand::rng::test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::increasing_uniform::rand::rng::Rng","rand::rngs::xoshiro256plusplus::[&str; 3]","rand::distr::distribution::[&str; 3]","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments","rand::rngs::mock::isize","rand::distr::other::str","rand::distr::bernoulli::test::core::fmt::Arguments","rand::seq::slice::test::[core::fmt::rt::Argument; 2]","rand::rngs::mock::tests::[core::fmt::rt::Argument; 2]","rand::distr::distribution::rand::rng::Rng","tests::core::result::Result","rand::seq::iterator::test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","test::rand::rng::Rng","rand::distr::hidden_export::u32","rand::distr::isize","rand::distr::weighted::weighted_index::{impl#4}::weight::u32","rand::distr::uniform::tests::bool","rand::rngs::small::isize","rand::test::rng::core::result::Result","rand::rngs::reseeding::[core::fmt::rt::Argument; 2]","rand::distr::other::{impl#3}::sample::bool","rand::rngs::std::core::result::Result","rand::distr::uniform::tests::u32","rand::distr::weighted::core::fmt::Arguments","rand::rngs::std::test::core::result::Result","rand::seq::iterator::test::u32","rand::rngs::xoshiro256plusplus::tests::core::fmt::rt::Argument<'_>","rand::rngs::xoshiro128plusplus::tests::core::fmt::Arguments<'_>","rand::seq::slice::IndexedRandom::choose_weighted::!","rand::rng::test::Self","rand::distr::hidden_export::[&str; 3]","rand::distr::uniform::tests::str","rand::rngs::xoshiro256plusplus::tests::!","rand::distr::other::tests::[&str; 3]","rand::distr::uniform::tests::Self","rand::distr::integer::tests::!","rand::distr::bernoulli::test::!","rand::rngs::small::{impl#0}::from_seed::[core::fmt::rt::Argument<'_>; 2]","rand::prelude::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::iterator::test::Self","rand::seq::Self","tests::core::fmt::rt::Argument<'_>","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::[core::fmt::rt::Argument; 2]","rand::distr::other::{impl#2}::sample::isize","rand::rngs::xoshiro128plusplus::tests::isize","rand::distr::hidden_export::Self","rand::distr::weighted::weighted_index::{impl#4}::weight::str","rand::rngs::core::fmt::rt::Argument","rand::distr::integer::tests::bool","rand::distr::utils::core::result::Result","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::u32","rand::distr::other::distr::bernoulli::BernoulliError","rand::seq::u32","rand::distr::utils::core::fmt::Arguments<'_>","{impl#2}::eq::core::fmt::Arguments","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments<'_>","rand::distr::integer::bool","rand::distr::other::{impl#0}::sample::core::fmt::rt::Argument","rand::distr::weighted::core::fmt::rt::Argument","rand::seq::[&str; 3]","rand::rngs::reseeding::Self","rand::distr::bernoulli::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::mock::tests::distr::bernoulli::Bernoulli","rand::u32","rand::rngs::xoshiro128plusplus::distr::bernoulli::Bernoulli","rand::seq::increasing_uniform::calculate_bound_u32::str","rand::distr::distribution::Self","rand::rngs::small::rand::rng::Rng","rand::distr::slice::test::u32","rand::distr::bernoulli::isize","{impl#7}::size_hint::core::fmt::rt::Argument","rand::distr::other::{impl#2}::sample::[&str; 3]","rand::seq::distr::bernoulli::BernoulliError","rand::distr::bernoulli::test::distr::bernoulli::Bernoulli","rand::rngs::reseeding::test::Self","rand::rngs::reseeding::test::distr::bernoulli::BernoulliError","rand::distr::utils::simd_wmul::core::fmt::rt::Argument","rand::seq::increasing_uniform::calculate_bound_u32::u32","rand::distr::bernoulli::test::isize","rand::distr::weighted::weighted_index::test::distr::bernoulli::BernoulliError","rand::distr::uniform::tests::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","test::str","rand::rngs::reseeding::rand::rng::Rng","rand::rngs::mock::[core::fmt::rt::Argument; 2]","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::Arguments<'_>","rand::seq::increasing_uniform::core::fmt::rt::Argument<'_>","rand::seq::iterator::test::[core::fmt::rt::Argument; 2]","rand::distr::weighted::distr::bernoulli::Bernoulli","rand::seq::index::core::fmt::Arguments<'_>","test::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::distr::bernoulli::Bernoulli","rand::test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","{impl#7}::size_hint::str","tests::core::fmt::Arguments<'_>","rand::seq::slice::rand::rng::Rng","rand::rngs::reseeding::core::fmt::Arguments","rand::distr::utils::!","rand::rngs::reseeding::test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::weighted::str","{impl#7}::size_hint::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::other::tests::str","rand::rngs::std::core::fmt::Arguments","rand::distr::bernoulli::test::[core::fmt::rt::Argument; 2]","rand::rngs::!","rand::seq::str","rand::distr::utils::core::fmt::Arguments","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::Arguments","rand::distr::weighted::weighted_index::test::rand::rng::Rng","rand::seq::coin_flipper::core::result::Result","rand::rngs::mock::tests::core::fmt::rt::Argument<'_>","rand::rngs::xoshiro128plusplus::tests::core::fmt::rt::Argument","rand::seq::index::core::fmt::rt::Argument","rand::distr::float::isize","rand::distr::utils::simd_wmul::[&str; 3]","rand::distr::other::{impl#2}::sample::core::result::Result","rand::distr::integer::u32","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::bool","{impl#2}::eq::u32","rand::distr::other::{impl#0}::sample::core::fmt::Arguments<'_>","rand::distr::bernoulli::distr::bernoulli::Bernoulli","rand::distr::weighted::weighted_index::test::core::result::Result","rand::seq::slice::test::core::fmt::rt::Argument","tests::u32","rand::distr::other::{impl#0}::sample::core::fmt::Arguments","rand::distr::slice::test::[core::fmt::rt::Argument; 2]","rand::rngs::Self","rand::distr::distribution::core::fmt::rt::Argument","rand::seq::slice::test::u32","rand::distr::other::{impl#2}::sample::[core::fmt::rt::Argument; 2]","rand::distr::bernoulli::test::Self","rand::distr::uniform::!","rand::distr::utils::simd_wmul::core::fmt::rt::Argument<'_>","rand::seq::iterator::test::isize","rand::distr::hidden_export::str","rand::rngs::mock::tests::u32","sample_efraimidis_spirakis::core::fmt::rt::Argument","rand::distr::other::u32","rand::distr::other::rand::rng::Rng","{impl#5}::next::distr::bernoulli::Bernoulli","rand::seq::slice::test::core::fmt::Arguments","rand::distr::bernoulli::test::u32","rand::distr::weighted::distr::bernoulli::BernoulliError","rand::distr::weighted::weighted_index::test::isize","rand::distr::other::{impl#0}::sample::bool","rand::distr::float::core::fmt::Arguments<'_>","rand::distr::utils::core::fmt::rt::Argument","rand::distr::weighted::weighted_index::{impl#4}::weight::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::thread::core::fmt::Arguments","{impl#7}::size_hint::core::fmt::Arguments","rand::seq::slice::isize","rand::rngs::xoshiro128plusplus::bool","rand::distr::other::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::[&str; 3]","rand::rngs::mock::tests::isize","::Self","rand::test::rng::u32","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::distr::bernoulli::Bernoulli","rand::distr::other::{impl#3}::sample::str","rand::seq::slice::IndexedRandom::choose_weighted::bool","rand::rngs::std::isize","rand::rngs::xoshiro256plusplus::tests::rand::rng::Rng","rand::distr::weighted::weighted_index::core::fmt::Arguments","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::str","rand::rngs::[core::fmt::rt::Argument; 2]","rand::distr::uniform::tests::core::fmt::Arguments","rand::seq::iterator::core::fmt::rt::Argument<'_>","rand::distr::integer::tests::Self","rand::prelude::core::fmt::Arguments<'_>","sample_efraimidis_spirakis::distr::bernoulli::BernoulliError","rand::distr::slice::test::core::fmt::rt::Argument<'_>","rand::test::core::fmt::rt::Argument","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::rand::rng::Rng","rand::distr::slice::core::fmt::rt::Argument","rand::rngs::reseeding::test::core::result::Result","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::distr::bernoulli::Bernoulli","rand::rngs::thread::core::fmt::rt::Argument<'_>","rand::distr::weighted::weighted_index::test::[core::fmt::rt::Argument; 2]","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::!","rand::distr::uniform::tests::core::fmt::rt::Argument","rand::seq::slice::test::bool","rand::distr::float::[core::fmt::rt::Argument; 2]","rand::distr::distribution::tests::[core::fmt::rt::Argument; 2]","rand::distr::float::core::fmt::Arguments","rand::seq::iterator::test::distr::bernoulli::BernoulliError","rand::distr::slice::rand::rng::Rng","rand::distr::weighted::weighted_index::u32","rand::distr::utils::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","sample_efraimidis_spirakis::[&str; 3]","rand::test::core::fmt::Arguments<'_>","rand::distr::other::{impl#0}::sample::[&str; 3]","rand::[core::fmt::rt::Argument; 2]","rand::distr::uniform::u32","rand::distr::other::{impl#3}::sample::core::fmt::rt::Argument<'_>","rand::seq::iterator::[core::fmt::rt::Argument; 2]","rand::rngs::std::str","rand::distr::other::{impl#3}::sample::core::result::Result","rand::distr::other::tests::!","rand::seq::increasing_uniform::calculate_bound_u32::bool","rand::rng::test::!","rand::distr::slice::test::core::result::Result","rand::rngs::reseeding::test::str","rand::distr::slice::distr::bernoulli::Bernoulli","rand::distr::weighted::weighted_index::[&str; 3]","rand::rngs::small::distr::bernoulli::Bernoulli","rand::rngs::reseeding::test::core::fmt::Arguments","rand::rngs::xoshiro256plusplus::bool","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::rand::rng::Rng","rand::distr::slice::core::fmt::Arguments","rand::rngs::std::test::[&str; 3]","rand::distr::other::tests::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::slice::core::result::Result","rand::distr::utils::u32","rand::distr::weighted::weighted_index::test::bool","rand::prelude::[core::fmt::rt::Argument<'_>; 2]","test::!","rand::distr::float::distr::bernoulli::BernoulliError","rand::seq::slice::str","rand::seq::index::core::fmt::Arguments","rand::distr::weighted::[&str; 3]","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::isize","rand::distr::integer::[&str; 3]","rand::rngs::mock::tests::core::fmt::Arguments","rand::seq::core::fmt::Arguments","rand::distr::float::rand::rng::Rng","rand::rng::core::fmt::Arguments<'_>","rand::distr::integer::tests::[core::fmt::rt::Argument<'_>; 2]","rand::distr::uniform::tests::isize","rand::distr::uniform::bool","rand::distr::weighted::weighted_index::!","rand::seq::slice::IndexedRandom::choose_weighted::distr::bernoulli::Bernoulli","rand::rngs::xoshiro256plusplus::tests::isize","rand::distr::weighted::weighted_index::core::result::Result","{impl#2}::eq::Self","rand::rngs::small::{impl#0}::from_seed::core::fmt::Arguments<'_>","rand::test::rand::rng::Rng","rand::seq::slice::test::distr::bernoulli::BernoulliError","rand::seq::index::core::result::Result","rand::test::rng::isize","rand::rngs::small::{impl#0}::from_seed::[core::fmt::rt::Argument; 2]","rand::rngs::reseeding::test::bool","rand::distr::weighted::rand::rng::Rng","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::Self","rand::rngs::small::[core::fmt::rt::Argument<'_>; 2]","rand::distr::slice::test::core::fmt::Arguments","rand::test::rng::[&str; 3]","rand::rngs::mock::core::result::Result","::!","rand::distr::float::distr::bernoulli::Bernoulli","rand::rng::str","rand::rngs::xoshiro256plusplus::tests::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::slice::test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::slice::test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::uniform::tests::rand::rng::Rng","rand::test::rng::core::fmt::rt::Argument","{impl#2}::eq::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::std::test::Self","rand::distr::utils::simd_wmul::core::fmt::Arguments<'_>","rand::seq::increasing_uniform::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::reseeding::test::!","{impl#5}::next::core::fmt::rt::Argument","rand::rngs::mock::tests::[&str; 3]","rand::seq::increasing_uniform::!","sample_efraimidis_spirakis::[core::fmt::rt::Argument<'_>; 2]","::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::other::[&str; 3]","rand::rng::test::core::fmt::rt::Argument","rand::seq::index::u32","rand::seq::increasing_uniform::distr::bernoulli::Bernoulli","rand::core::fmt::Arguments<'_>","rand::distr::other::{impl#3}::sample::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::xoshiro128plusplus::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::std::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::mock::Self","rand::rngs::thread::str","rand::rngs::xoshiro128plusplus::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::slice::!","{impl#5}::next::core::result::Result","rand::rngs::small::{impl#0}::from_seed::core::fmt::rt::Argument","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::!","tests::Self","rand::distr::uniform::str","rand::seq::slice::[&str; 3]","rand::seq::iterator::test::core::fmt::Arguments<'_>","rand::rngs::small::{impl#0}::from_seed::core::fmt::rt::Argument<'_>","rand::rngs::small::core::fmt::Arguments<'_>","rand::distr::utils::simd_wmul::bool","{impl#2}::eq::[core::fmt::rt::Argument; 2]","{impl#7}::next::core::result::Result","rand::rngs::std::test::distr::bernoulli::BernoulliError","{impl#7}::size_hint::Self","rand::distr::weighted::weighted_index::test::!","rand::distr::integer::str","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::rt::Argument","test::core::fmt::Arguments<'_>","rand::distr::other::{impl#3}::sample::Self","rand::distr::other::{impl#2}::sample::Self","tests::rand::rng::Rng","rand::seq::core::result::Result","rand::seq::slice::IndexedRandom::choose_weighted::core::result::Result","rand::distr::weighted::!","rand::distr::uniform::core::fmt::rt::Argument","rand::prelude::distr::bernoulli::Bernoulli","rand::rngs::small::Self","rand::seq::increasing_uniform::isize","rand::distr::weighted::weighted_index::{impl#4}::weight::bool","rand::distr::other::tests::core::fmt::rt::Argument","rand::distr::bernoulli::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::bernoulli::test::[core::fmt::rt::Argument<'_>; 2]","rand::distr::slice::[core::fmt::rt::Argument<'_>; 2]","{impl#7}::size_hint::bool","rand::distr::uniform::distr::bernoulli::BernoulliError","rand::distr::float::core::result::Result","rand::distr::utils::simd_wmul::str","rand::rngs::thread::bool","rand::rngs::mock::distr::bernoulli::BernoulliError","rand::distr::utils::Self","rand::rng::core::fmt::rt::Argument<'_>","rand::rngs::small::[core::fmt::rt::Argument; 2]","rand::rngs::mock::[core::fmt::rt::Argument<'_>; 2]","rand::distr::other::tests::distr::bernoulli::BernoulliError","rand::distr::other::{impl#2}::sample::str","{impl#7}::size_hint::core::fmt::rt::Argument<'_>","rand::core::fmt::rt::Argument<'_>","rand::distr::distr::bernoulli::BernoulliError","rand::distr::weighted::weighted_index::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::core::result::Result","rand::distr::distribution::u32","rand::rngs::std::test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::increasing_uniform::u32","rand::distr::bernoulli::core::fmt::Arguments<'_>","sample_efraimidis_spirakis::str","rand::str","sample_efraimidis_spirakis::[core::fmt::rt::Argument; 2]","rand::distr::other::distr::bernoulli::Bernoulli","rand::rngs::xoshiro256plusplus::rand::rng::Rng","rand::test::[core::fmt::rt::Argument; 2]","rand::distr::weighted::weighted_index::rand::rng::Rng","rand::distr::other::{impl#0}::sample::rand::rng::Rng","rand::core::fmt::rt::Argument","rand::distr::hidden_export::core::fmt::rt::Argument","rand::rngs::std::Self","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::[core::fmt::rt::Argument<'_>; 2]","rand::rng::test::distr::bernoulli::Bernoulli","rand::rngs::mock::core::fmt::Arguments<'_>","rand::rng::test::[&str; 3]","rand::distr::slice::test::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::[core::fmt::rt::Argument<'_>; 2]","rand::distr::uniform::tests::!","rand::seq::slice::core::fmt::Arguments<'_>","rand::distr::distribution::tests::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::weighted::weighted_index::test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::slice::IndexedRandom::choose_weighted::rand::rng::Rng","rand::distr::hidden_export::core::fmt::Arguments","rand::prelude::[&str; 3]","rand::rngs::reseeding::test::core::fmt::Arguments<'_>","rand::rngs::mock::tests::core::fmt::rt::Argument","rand::rngs::xoshiro256plusplus::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::other::{impl#3}::sample::!","rand::seq::increasing_uniform::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::mock::str","rand::rngs::xoshiro128plusplus::tests::distr::bernoulli::Bernoulli","rand::distr::bernoulli::bool","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::bool","rand::rngs::xoshiro128plusplus::tests::distr::bernoulli::BernoulliError","rand::distr::bernoulli::test::distr::bernoulli::BernoulliError","rand::rngs::small::bool","rand::distr::other::{impl#2}::sample::[core::fmt::rt::Argument<'_>; 2]","rand::seq::slice::[core::fmt::rt::Argument<'_>; 2]","rand::seq::coin_flipper::core::fmt::rt::Argument<'_>","rand::seq::rand::rng::Rng","rand::seq::coin_flipper::[core::fmt::rt::Argument; 2]","rand::distr::bernoulli::!","rand::seq::slice::Self","rand::distr::other::{impl#2}::sample::bool","rand::rngs::std::test::bool","rand::rngs::xoshiro128plusplus::core::result::Result","rand::distr::other::tests::isize","rand::rngs::std::core::fmt::rt::Argument<'_>","rand::prelude::str","rand::distr::integer::core::fmt::Arguments<'_>","rand::rngs::std::test::core::fmt::Arguments<'_>","rand::seq::core::fmt::rt::Argument","rand::distr::core::fmt::rt::Argument","rand::rngs::small::core::result::Result","rand::seq::coin_flipper::rand::rng::Rng","rand::distr::slice::core::fmt::Arguments<'_>","rand::distr::utils::[&str; 3]","rand::rngs::distr::bernoulli::Bernoulli","rand::distr::other::Self","rand::distr::other::{impl#2}::sample::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::uniform::isize","rand::distr::utils::simd_wmul::core::fmt::Arguments","rand::rngs::xoshiro128plusplus::core::fmt::Arguments","{impl#2}::eq::isize","rand::seq::iterator::!","rand::seq::iterator::bool","rand::distr::integer::isize","rand::distr::uniform::Self","rand::rngs::small::u32","rand::rngs::mock::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::xoshiro128plusplus::isize","rand::distr::utils::simd_wmul::[core::fmt::rt::Argument; 2]","rand::distr::uniform::tests::distr::bernoulli::Bernoulli","rand::seq::iterator::core::result::Result","tests::!","rand::distr::bernoulli::rand::rng::Rng","rand::distr::bernoulli::test::core::fmt::rt::Argument","rand::[core::fmt::rt::Argument<'_>; 2]","rand::distr::other::tests::[core::fmt::rt::Argument; 2]","rand::distr::integer::tests::str","rand::seq::coin_flipper::u32","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::!","rand::rngs::reseeding::core::fmt::rt::Argument<'_>","rand::distr::weighted::core::fmt::rt::Argument<'_>","rand::seq::increasing_uniform::calculate_bound_u32::core::fmt::rt::Argument<'_>","{impl#7}::size_hint::[&str; 3]","rand::distr::utils::bool","tests::distr::bernoulli::Bernoulli","rand::rng::test::distr::bernoulli::BernoulliError","rand::distr::integer::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","{impl#7}::size_hint::!","rand::seq::iterator::u32","::str","rand::rngs::xoshiro256plusplus::[core::fmt::rt::Argument; 2]","rand::seq::increasing_uniform::core::fmt::Arguments","rand::distr::bernoulli::core::result::Result","rand::distr::float::core::fmt::rt::Argument","rand::distr::other::{impl#3}::sample::core::fmt::Arguments<'_>","rand::test::u32","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::distr::bernoulli::BernoulliError","rand::test::core::fmt::rt::Argument<'_>","rand::distr::weighted::weighted_index::{impl#4}::weight::core::fmt::Arguments","rand::rngs::std::test::distr::bernoulli::Bernoulli","rand::prelude::core::fmt::rt::Argument<'_>","rand::distr::other::{impl#2}::sample::distr::bernoulli::Bernoulli","rand::rngs::std::core::fmt::Arguments<'_>","rand::distr::uniform::core::fmt::Arguments<'_>","rand::rngs::[core::fmt::rt::Argument<'_>; 2]","rand::seq::coin_flipper::distr::bernoulli::BernoulliError","rand::rngs::reseeding::test::core::fmt::rt::Argument<'_>","rand::distr::slice::test::!","{impl#2}::eq::str","test::Self","rand::rngs::std::[&str; 3]","rand::rngs::distr::bernoulli::BernoulliError","rand::distr::other::{impl#0}::sample::core::fmt::rt::Argument<'_>","rand::distr::distribution::tests::[&str; 3]","rand::rngs::reseeding::core::result::Result","rand::rngs::thread::rand::rng::Rng","rand::distr::uniform::core::fmt::rt::Argument<'_>","rand::distr::core::fmt::rt::Argument<'_>","{impl#7}::next::Self","sample_efraimidis_spirakis::bool","rand::rngs::small::{impl#0}::from_seed::Self","rand::test::rng::distr::bernoulli::Bernoulli","rand::distr::bernoulli::u32","rand::distr::integer::rand::rng::Rng","{impl#7}::size_hint::rand::rng::Rng","rand::distr::utils::simd_wmul::core::result::Result","rand::rngs::xoshiro256plusplus::tests::bool","rand::rngs::xoshiro256plusplus::isize","rand::distr::weighted::u32","rand::test::distr::bernoulli::BernoulliError","rand::rngs::xoshiro128plusplus::str","rand::rngs::small::core::fmt::rt::Argument","test::core::result::Result","rand::seq::slice::test::core::result::Result","rand::rngs::mock::distr::bernoulli::Bernoulli","rand::rngs::thread::distr::bernoulli::BernoulliError","test::distr::bernoulli::BernoulliError","rand::rngs::xoshiro128plusplus::tests::[&str; 3]","{impl#7}::next::isize","rand::seq::slice::u32","rand::rng::!","rand::distr::integer::tests::isize","rand::rng::test::core::fmt::Arguments","rand::rngs::xoshiro128plusplus::tests::Self","rand::rngs::xoshiro256plusplus::tests::distr::bernoulli::Bernoulli","rand::distr::weighted::weighted_index::test::core::fmt::Arguments","rand::distr::distribution::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","{impl#7}::size_hint::distr::bernoulli::BernoulliError","rand::rng::Self","rand::rngs::thread::isize","rand::rngs::std::[core::fmt::rt::Argument; 2]","rand::distr::distribution::core::result::Result","{impl#5}::next::u32","rand::distr::bernoulli::[&str; 3]","rand::rngs::xoshiro128plusplus::tests::rand::rng::Rng","rand::rng::core::result::Result","rand::distr::other::bool","rand::rngs::thread::core::fmt::rt::Argument","{impl#7}::next::u32","rand::distr::other::{impl#2}::sample::core::fmt::rt::Argument","rand::rngs::mock::core::fmt::rt::Argument","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::[&str; 3]","rand::rngs::small::{impl#0}::from_seed::[&str; 3]","rand::rngs::thread::core::result::Result","rand::distr::other::[core::fmt::rt::Argument<'_>; 2]","rand::distr::distribution::tests::core::fmt::Arguments","{impl#5}::next::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::slice::core::result::Result","rand::distr::bernoulli::test::core::fmt::rt::Argument<'_>","rand::seq::slice::[core::fmt::rt::Argument; 2]","rand::rngs::xoshiro128plusplus::[core::fmt::rt::Argument; 2]","rand::distr::utils::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::mock::tests::distr::bernoulli::BernoulliError","rand::rngs::xoshiro128plusplus::rand::rng::Rng","rand::rngs::reseeding::distr::bernoulli::BernoulliError","{impl#7}::next::[core::fmt::rt::Argument; 2]","rand::seq::increasing_uniform::core::fmt::Arguments<'_>","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::[&str; 3]","{impl#2}::eq::!","rand::seq::index::[&str; 3]","rand::distr::distribution::tests::bool","rand::distr::distribution::distr::bernoulli::BernoulliError","rand::distr::integer::tests::core::fmt::Arguments<'_>","rand::distr::other::tests::u32","rand::distr::float::u32","sample_efraimidis_spirakis::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::slice::IndexedRandom::choose_weighted::[core::fmt::rt::Argument; 2]","rand::seq::iterator::core::fmt::rt::Argument","rand::seq::slice::test::Self","rand::seq::index::Self","rand::distr::slice::bool","rand::distr::hidden_export::rand::rng::Rng","rand::rngs::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::prelude::u32","rand::seq::isize","rand::distr::other::{impl#3}::sample::core::fmt::rt::Argument","::[&str; 3]","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::isize","rand::rngs::reseeding::!","rand::distr::slice::u32","rand::rngs::mock::tests::bool","rand::rngs::std::test::u32","::isize","rand::rngs::xoshiro256plusplus::[core::fmt::rt::Argument<'_>; 2]","rand::distr::weighted::weighted_index::{impl#4}::weight::rand::rng::Rng","rand::distr::slice::test::str","rand::distr::integer::tests::core::result::Result","{impl#7}::next::core::fmt::Arguments","rand::distr::integer::core::fmt::rt::Argument","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::slice::test::[&str; 3]","rand::rngs::mock::u32","{impl#5}::next::str","rand::seq::coin_flipper::[&str; 3]","rand::rngs::xoshiro128plusplus::!","rand::distr::weighted::weighted_index::distr::bernoulli::BernoulliError","rand::distr::integer::tests::[core::fmt::rt::Argument; 2]","{impl#7}::next::core::fmt::rt::Argument","rand::rngs::xoshiro256plusplus::tests::core::fmt::Arguments<'_>","rand::seq::iterator::test::[core::fmt::rt::Argument<'_>; 2]","rand::test::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::bool","rand::rngs::reseeding::test::core::fmt::rt::Argument","{impl#7}::next::[&str; 3]","rand::rngs::small::{impl#0}::from_seed::core::fmt::Arguments","rand::distr::slice::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::weighted::weighted_index::core::fmt::rt::Argument","rand::rngs::xoshiro128plusplus::tests::core::result::Result","rand::rngs::xoshiro256plusplus::core::result::Result","rand::distr::integer::tests::[&str; 3]","rand::seq::slice::distr::bernoulli::BernoulliError","rand::distr::other::tests::core::result::Result","rand::!","{impl#7}::next::bool","rand::seq::slice::distr::bernoulli::Bernoulli","rand::rngs::xoshiro128plusplus::tests::str","rand::rng::isize","rand::distr::bernoulli::Bernoulli","rand::seq::increasing_uniform::calculate_bound_u32::isize","rand::seq::distr::bernoulli::Bernoulli","rand::seq::slice::test::!","rand::test::isize","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::[core::fmt::rt::Argument; 2]","rand::distr::distribution::tests::distr::bernoulli::BernoulliError","rand::distr::weighted::core::result::Result","rand::rngs::mock::bool","rand::test::rng::!","rand::rng::rand::rng::Rng","rand::seq::index::distr::bernoulli::Bernoulli","rand::seq::coin_flipper::distr::bernoulli::Bernoulli","rand::rngs::thread::distr::bernoulli::Bernoulli","rand::distr::weighted::weighted_index::{impl#4}::weight::isize","rand::rngs::small::{impl#0}::from_seed::distr::bernoulli::Bernoulli","rand::distr::float::Self","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::bool","rand::distr::distribution::tests::core::fmt::Arguments<'_>","rand::distr::weighted::weighted_index::str","::u32","rand::seq::slice::IndexedRandom::choose_weighted::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::slice::isize","rand::distr::utils::simd_wmul::Self","rand::rngs::thread::u32","rand::distr::other::tests::core::fmt::Arguments","rand::distr::bernoulli::test::bool","sample_efraimidis_spirakis::Self","rand::rngs::small::{impl#0}::from_seed::!","{impl#5}::next::core::fmt::Arguments<'_>","rand::rngs::mock::tests::core::fmt::Arguments<'_>","rand::rngs::xoshiro256plusplus::str","rand::test::rng::distr::bernoulli::BernoulliError","rand::distr::other::tests::distr::bernoulli::Bernoulli","rand::distr::[core::fmt::rt::Argument; 2]","rand::distr::uniform::tests::core::result::Result","rand::distr::slice::test::[&str; 3]","rand::rngs::xoshiro128plusplus::Self","rand::seq::slice::IndexedRandom::choose_weighted::distr::bernoulli::BernoulliError","test::u32","rand::distr::uniform::[core::fmt::rt::Argument; 2]","rand::rngs::core::fmt::Arguments<'_>","rand::seq::slice::!","rand::distr::other::{impl#2}::sample::core::fmt::Arguments","rand::distr::other::{impl#2}::sample::u32","rand::rngs::xoshiro256plusplus::tests::core::fmt::Arguments","rand::distr::distribution::distr::bernoulli::Bernoulli","rand::seq::iterator::[&str; 3]","rand::distr::!","rand::rngs::std::test::core::fmt::rt::Argument","rand::distr::hidden_export::[core::fmt::rt::Argument<'_>; 2]","rand::test::core::result::Result","rand::distr::distribution::[core::fmt::rt::Argument; 2]","rand::distr::other::{impl#2}::sample::rand::rng::Rng","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::[core::fmt::rt::Argument; 2]","rand::seq::[core::fmt::rt::Argument; 2]","rand::seq::bool","rand::distr::weighted::Self","rand::seq::iterator::str","rand::distr::utils::simd_wmul::distr::bernoulli::BernoulliError","rand::rngs::rand::rng::Rng","rand::distr::weighted::weighted_index::test::core::fmt::Arguments<'_>","{impl#7}::size_hint::core::fmt::Arguments<'_>","rand::distr::utils::rand::rng::Rng","{impl#7}::size_hint::[core::fmt::rt::Argument; 2]","rand::rngs::mock::tests::core::result::Result","rand::distr::integer::core::result::Result","rand::rngs::std::u32","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::fmt::Arguments<'_>","rand::rngs::mock::[&str; 3]","rand::seq::index::isize","rand::test::rng::bool","rand::distr::uniform::tests::core::fmt::Arguments<'_>","rand::seq::iterator::Self","rand::distr::distribution::tests::u32","rand::distr::other::{impl#0}::sample::str","rand::rngs::xoshiro256plusplus::tests::[core::fmt::rt::Argument; 2]","rand::prelude::core::result::Result","rand::distr::weighted::weighted_index::{impl#4}::weight::core::result::Result","::core::fmt::rt::Argument<'_>","rand::rngs::mock::core::fmt::rt::Argument<'_>","rand::seq::index::str","rand::rng::test::[core::fmt::rt::Argument<'_>; 2]","tests::str","rand::seq::iterator::core::fmt::Arguments","rand::distr::other::{impl#3}::sample::u32","rand::distr::distribution::tests::str","rand::seq::iterator::test::rand::rng::Rng","rand::distr::weighted::weighted_index::{impl#4}::weight::[core::fmt::rt::Argument<'_>; 2]","rand::distr::uniform::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::small::!","rand::distr::uniform::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","{impl#7}::next::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","{impl#2}::eq::[core::fmt::rt::Argument<'_>; 2]","rand::distr::distribution::core::fmt::rt::Argument<'_>","test::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::slice::[&str; 3]","rand::distr::integer::tests::core::fmt::rt::Argument","rand::seq::increasing_uniform::calculate_bound_u32::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::hidden_export::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::distr::hidden_export::core::fmt::Arguments<'_>","{impl#7}::size_hint::core::result::Result","rand::rngs::xoshiro256plusplus::tests::str","rand::distr::uniform::core::result::Result","{impl#5}::next::distr::bernoulli::BernoulliError","rand::rngs::small::{impl#0}::from_seed::core::result::Result","::bool","rand::distr::distribution::!","rand::rngs::mock::tests::[core::fmt::rt::Argument<'_>; 2]","rand::rng::[&str; 3]","rand::distr::weighted::weighted_index::distr::bernoulli::Bernoulli","::rand::rng::Rng","rand::distr::integer::tests::distr::bernoulli::BernoulliError","rand::distr::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::small::distr::bernoulli::BernoulliError","{impl#7}::next::distr::bernoulli::Bernoulli","rand::rand::rng::Rng","rand::rngs::reseeding::test::[&str; 3]","rand::distr::other::core::result::Result","rand::core::result::Result","rand::distr::bernoulli::test::[&str; 3]","rand::seq::index::rand::rng::Rng","rand::rng::[core::fmt::rt::Argument; 2]","rand::distr::other::{impl#0}::sample::core::result::Result","{impl#7}::size_hint::u32","rand::seq::iterator::distr::bernoulli::Bernoulli","rand::rngs::str","rand::distr::weighted::weighted_index::{impl#4}::weight::Self","rand::rngs::thread::[&str; 3]","rand::seq::increasing_uniform::Self","rand::distr::weighted::weighted_index::test::core::fmt::rt::Argument<'_>","rand::distr::utils::[core::fmt::rt::Argument; 2]","rand::seq::increasing_uniform::calculate_bound_u32::!","rand::distr::hidden_export::[core::fmt::rt::Argument; 2]","rand::distr::slice::test::distr::bernoulli::BernoulliError","rand::distr::utils::simd_wmul::isize","rand::distr::other::{impl#0}::sample::distr::bernoulli::Bernoulli","rand::rngs::reseeding::test::distr::bernoulli::Bernoulli","rand::rngs::reseeding::bool","rand::distr::utils::simd_wmul::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::xoshiro128plusplus::tests::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::rngs::isize","rand::rngs::xoshiro128plusplus::tests::core::fmt::rt::Argument<'_>","{impl#5}::next::core::fmt::Arguments","rand::seq::coin_flipper::!","rand::seq::iterator::test::core::result::Result","rand::distr::integer::[core::fmt::rt::Argument<'_>; 2]","rand::distr::weighted::weighted_index::core::fmt::Arguments<'_>","rand::rngs::std::test::core::fmt::Arguments","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::Self","rand::distr::bernoulli::core::fmt::rt::Argument<'_>","rand::rng::distr::bernoulli::BernoulliError","rand::rngs::xoshiro128plusplus::u32","rand::distr::other::tests::core::fmt::Arguments<'_>","rand::Self","rand::seq::slice::IndexedMutRandom::choose_weighted_mut::distr::bernoulli::BernoulliError","rand::test::rng::Self","rand::distr::other::{impl#2}::sample::core::fmt::rt::Argument<'_>","rand::seq::slice::test::isize","{impl#2}::eq::core::fmt::rt::Argument<'_>","rand::distr::weighted::weighted_index::{impl#4}::weight::!","rand::seq::index::core::fmt::rt::Argument<'_>","rand::seq::increasing_uniform::[&str; 3]","{impl#5}::next::rand::rng::Rng","rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64::core::fmt::rt::Argument<'_>","sample_efraimidis_spirakis::distr::bernoulli::Bernoulli","rand::rngs::xoshiro128plusplus::tests::[core::fmt::rt::Argument<'_>; 2]","rand::rngs::xoshiro128plusplus::tests::core::fmt::Arguments","rand::distr::distribution::str","rand::rngs::reseeding::core::fmt::rt::Argument","rand::distr::weighted::[core::fmt::rt::Argument; 2]","rand::distr::weighted::weighted_index::{impl#4}::weight::[core::fmt::rt::Argument; 2]","rand::rng::test::core::fmt::rt::Argument<'_>","rand::rngs::xoshiro256plusplus::tests::[core::fmt::rt::Argument<'_>; 2]","sample_efraimidis_spirakis::!","rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64::core::result::Result<distr::bernoulli::Bernoulli, distr::bernoulli::BernoulliError>","rand::seq::slice::IndexedRandom::choose_weighted::core::fmt::rt::Argument","rand::rngs::xoshiro256plusplus::u32","rand::distr::integer::tests::core::fmt::Arguments","::[core::fmt::rt::Argument<'_>; 2]","rand::seq::coin_flipper::str"]}