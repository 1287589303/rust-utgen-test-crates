[
    "::UInt::as_usize",
    "::UInt::one",
    "::UInt::zero",
    "::char_to_comp_u32",
    "::sample",
    "::sample_efraimidis_spirakis",
    "::sample_floyd",
    "::sample_inplace",
    "::sample_rejection",
    "::sample_weighted",
    "::{impl#0}::index",
    "::{impl#0}::into_vec",
    "::{impl#0}::is_empty",
    "::{impl#0}::iter",
    "::{impl#0}::len",
    "::{impl#10}::as_usize",
    "::{impl#10}::one",
    "::{impl#10}::zero",
    "::{impl#1}::into_iter",
    "::{impl#1}::new",
    "::{impl#1}::new",
    "::{impl#1}::new_inclusive",
    "::{impl#1}::new_inclusive",
    "::{impl#1}::sample",
    "::{impl#1}::sample",
    "::{impl#1}::sample_single",
    "::{impl#1}::sample_single_inclusive",
    "::{impl#2}::append_string",
    "::{impl#2}::eq",
    "::{impl#3}::from",
    "::{impl#4}::from",
    "::{impl#4}::new",
    "::{impl#4}::new_inclusive",
    "::{impl#4}::sample",
    "::{impl#5}::next",
    "::{impl#5}::size_hint",
    "::{impl#7}::next",
    "::{impl#7}::size_hint",
    "::{impl#9}::as_usize",
    "::{impl#9}::one",
    "::{impl#9}::zero",
    "rand::distr::bernoulli::{impl#0}::fmt",
    "rand::distr::bernoulli::{impl#2}::from_ratio",
    "rand::distr::bernoulli::{impl#2}::new",
    "rand::distr::bernoulli::{impl#2}::p",
    "rand::distr::bernoulli::{impl#3}::sample",
    "rand::distr::distribution::Distribution::map",
    "rand::distr::distribution::Distribution::sample",
    "rand::distr::distribution::Distribution::sample_iter",
    "rand::distr::distribution::SampleString::append_string",
    "rand::distr::distribution::SampleString::sample_string",
    "rand::distr::distribution::{impl#0}::sample",
    "rand::distr::distribution::{impl#1}::next",
    "rand::distr::distribution::{impl#1}::size_hint",
    "rand::distr::distribution::{impl#3}::sample",
    "rand::distr::float::IntoFloat::into_float_with_exponent",
    "rand::distr::integer::{impl#0}::sample",
    "rand::distr::integer::{impl#1}::sample",
    "rand::distr::integer::{impl#2}::sample",
    "rand::distr::integer::{impl#3}::sample",
    "rand::distr::integer::{impl#4}::sample",
    "rand::distr::other::{impl#0}::sample",
    "rand::distr::other::{impl#1}::append_string",
    "rand::distr::other::{impl#2}::sample",
    "rand::distr::other::{impl#3}::sample",
    "rand::distr::other::{impl#4}::append_string",
    "rand::distr::other::{impl#5}::append_string",
    "rand::distr::other::{impl#6}::sample",
    "rand::distr::other::{impl#7}::sample",
    "rand::distr::other::{impl#8}::sample",
    "rand::distr::other::{impl#9}::sample",
    "rand::distr::slice::{impl#0}::new",
    "rand::distr::slice::{impl#0}::num_choices",
    "rand::distr::slice::{impl#1}::sample",
    "rand::distr::slice::{impl#2}::fmt",
    "rand::distr::slice::{impl#4}::append_string",
    "rand::distr::uniform::SampleBorrow::borrow",
    "rand::distr::uniform::SampleRange::is_empty",
    "rand::distr::uniform::SampleRange::sample_single",
    "rand::distr::uniform::UniformSampler::new",
    "rand::distr::uniform::UniformSampler::new_inclusive",
    "rand::distr::uniform::UniformSampler::sample",
    "rand::distr::uniform::UniformSampler::sample_single",
    "rand::distr::uniform::UniformSampler::sample_single_inclusive",
    "rand::distr::uniform::{impl#0}::fmt",
    "rand::distr::uniform::{impl#2}::new",
    "rand::distr::uniform::{impl#2}::new_inclusive",
    "rand::distr::uniform::{impl#3}::sample",
    "rand::distr::uniform::{impl#4}::try_from",
    "rand::distr::uniform::{impl#5}::try_from",
    "rand::distr::uniform::{impl#6}::borrow",
    "rand::distr::uniform::{impl#7}::borrow",
    "rand::distr::uniform::{impl#8}::is_empty",
    "rand::distr::uniform::{impl#8}::sample_single",
    "rand::distr::uniform::{impl#9}::is_empty",
    "rand::distr::uniform::{impl#9}::sample_single",
    "rand::distr::utils::BoolAsSIMD::any",
    "rand::distr::utils::FloatAsSIMD::splat",
    "rand::distr::utils::FloatSIMDScalarUtils::extract_lane",
    "rand::distr::utils::FloatSIMDScalarUtils::replace",
    "rand::distr::utils::FloatSIMDUtils::all_finite",
    "rand::distr::utils::FloatSIMDUtils::all_le",
    "rand::distr::utils::FloatSIMDUtils::all_lt",
    "rand::distr::utils::FloatSIMDUtils::cast_from_int",
    "rand::distr::utils::FloatSIMDUtils::decrease_masked",
    "rand::distr::utils::FloatSIMDUtils::gt_mask",
    "rand::distr::utils::IntAsSIMD::splat",
    "rand::distr::utils::WideningMultiply::wmul",
    "rand::distr::utils::{impl#2}::any",
    "rand::distr::weighted::Weight::checked_add_assign",
    "rand::distr::weighted::weighted_index::{impl#0}::new",
    "rand::distr::weighted::weighted_index::{impl#0}::update_weights",
    "rand::distr::weighted::weighted_index::{impl#1}::fmt",
    "rand::distr::weighted::weighted_index::{impl#2}::clone",
    "rand::distr::weighted::weighted_index::{impl#3}::next",
    "rand::distr::weighted::weighted_index::{impl#4}::total_weight",
    "rand::distr::weighted::weighted_index::{impl#4}::weight",
    "rand::distr::weighted::weighted_index::{impl#4}::weights",
    "rand::distr::weighted::weighted_index::{impl#5}::sample",
    "rand::distr::weighted::{impl#1}::fmt",
    "rand::fill",
    "rand::random",
    "rand::random_bool",
    "rand::random_iter",
    "rand::random_range",
    "rand::random_ratio",
    "rand::rng::Fill::fill",
    "rand::rng::Rng::fill",
    "rand::rng::Rng::gen_bool",
    "rand::rng::Rng::gen_range",
    "rand::rng::Rng::gen_ratio",
    "rand::rng::Rng::r#gen",
    "rand::rng::Rng::random",
    "rand::rng::Rng::random_bool",
    "rand::rng::Rng::random_iter",
    "rand::rng::Rng::random_range",
    "rand::rng::Rng::random_ratio",
    "rand::rng::Rng::sample",
    "rand::rng::Rng::sample_iter",
    "rand::rng::{impl#1}::fill",
    "rand::rng::{impl#2}::fill",
    "rand::rngs::mock::{impl#0}::new",
    "rand::rngs::mock::{impl#1}::fill_bytes",
    "rand::rngs::mock::{impl#1}::next_u32",
    "rand::rngs::mock::{impl#1}::next_u64",
    "rand::rngs::reseeding::{impl#0}::new",
    "rand::rngs::reseeding::{impl#0}::reseed",
    "rand::rngs::reseeding::{impl#1}::fill_bytes",
    "rand::rngs::reseeding::{impl#1}::next_u32",
    "rand::rngs::reseeding::{impl#1}::next_u64",
    "rand::rngs::reseeding::{impl#2}::clone",
    "rand::rngs::reseeding::{impl#4}::generate",
    "rand::rngs::reseeding::{impl#5}::new",
    "rand::rngs::reseeding::{impl#5}::reseed",
    "rand::rngs::reseeding::{impl#5}::reseed_and_generate",
    "rand::rngs::reseeding::{impl#6}::clone",
    "rand::rngs::small::{impl#0}::from_seed",
    "rand::rngs::small::{impl#0}::seed_from_u64",
    "rand::rngs::small::{impl#1}::fill_bytes",
    "rand::rngs::small::{impl#1}::next_u32",
    "rand::rngs::small::{impl#1}::next_u64",
    "rand::rngs::std::{impl#0}::fill_bytes",
    "rand::rngs::std::{impl#0}::next_u32",
    "rand::rngs::std::{impl#0}::next_u64",
    "rand::rngs::std::{impl#1}::from_seed",
    "rand::rngs::thread::rng",
    "rand::rngs::thread::{impl#0}::reseed",
    "rand::rngs::thread::{impl#1}::fmt",
    "rand::rngs::thread::{impl#2}::default",
    "rand::rngs::thread::{impl#3}::fill_bytes",
    "rand::rngs::thread::{impl#3}::next_u32",
    "rand::rngs::thread::{impl#3}::next_u64",
    "rand::rngs::xoshiro128plusplus::{impl#0}::from_seed",
    "rand::rngs::xoshiro128plusplus::{impl#0}::seed_from_u64",
    "rand::rngs::xoshiro128plusplus::{impl#1}::fill_bytes",
    "rand::rngs::xoshiro128plusplus::{impl#1}::next_u32",
    "rand::rngs::xoshiro128plusplus::{impl#1}::next_u64",
    "rand::rngs::xoshiro256plusplus::{impl#0}::from_seed",
    "rand::rngs::xoshiro256plusplus::{impl#0}::seed_from_u64",
    "rand::rngs::xoshiro256plusplus::{impl#1}::fill_bytes",
    "rand::rngs::xoshiro256plusplus::{impl#1}::next_u32",
    "rand::rngs::xoshiro256plusplus::{impl#1}::next_u64",
    "rand::seq::coin_flipper::{impl#0}::flip_c_heads",
    "rand::seq::coin_flipper::{impl#0}::new",
    "rand::seq::coin_flipper::{impl#0}::random_ratio",
    "rand::seq::coin_flipper::{impl#0}::random_ratio_one_over",
    "rand::seq::increasing_uniform::calculate_bound_u32",
    "rand::seq::increasing_uniform::calculate_bound_u32::inner",
    "rand::seq::increasing_uniform::{impl#0}::new",
    "rand::seq::increasing_uniform::{impl#0}::next_index",
    "rand::seq::index::sample_array",
    "rand::seq::iterator::IteratorRandom::choose",
    "rand::seq::iterator::IteratorRandom::choose_multiple",
    "rand::seq::iterator::IteratorRandom::choose_multiple_fill",
    "rand::seq::iterator::IteratorRandom::choose_stable",
    "rand::seq::iterator::test::{impl#0}::next",
    "rand::seq::iterator::test::{impl#1}::next",
    "rand::seq::iterator::test::{impl#1}::size_hint",
    "rand::seq::iterator::test::{impl#2}::next",
    "rand::seq::iterator::test::{impl#2}::size_hint",
    "rand::seq::slice::IndexedMutRandom::choose_mut",
    "rand::seq::slice::IndexedMutRandom::choose_weighted_mut",
    "rand::seq::slice::IndexedRandom::choose",
    "rand::seq::slice::IndexedRandom::choose_multiple",
    "rand::seq::slice::IndexedRandom::choose_multiple_array",
    "rand::seq::slice::IndexedRandom::choose_multiple_weighted",
    "rand::seq::slice::IndexedRandom::choose_weighted",
    "rand::seq::slice::IndexedRandom::is_empty",
    "rand::seq::slice::IndexedRandom::len",
    "rand::seq::slice::SliceRandom::partial_shuffle",
    "rand::seq::slice::SliceRandom::shuffle",
    "rand::seq::slice::{impl#0}::len",
    "rand::seq::slice::{impl#2}::partial_shuffle",
    "rand::seq::slice::{impl#2}::shuffle",
    "rand::seq::slice::{impl#3}::next",
    "rand::seq::slice::{impl#3}::size_hint",
    "rand::seq::slice::{impl#4}::len",
    "rand::test::rng",
    "rand::thread_rng",
    "sample_efraimidis_spirakis::{impl#0}::partial_cmp",
    "sample_efraimidis_spirakis::{impl#1}::cmp",
    "sample_efraimidis_spirakis::{impl#2}::eq",
]