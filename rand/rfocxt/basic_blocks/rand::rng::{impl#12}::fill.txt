[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:414:20: 414:30 (#293),
                    scope: scope[0],
                },
                kind: _4 = core::slice::<impl [core::num::Wrapping<u64>]>::len(move _5) -> [return: bb1, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = Gt(move _4, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:414:20: 414:34 (#293),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb14, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &mut (*_2),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:415:36: 415:55 (#293),
                    scope: scope[0],
                },
                kind: _9 = <[core::num::Wrapping<u64>] as zerocopy::IntoBytes>::as_mut_bytes(move _10) -> [return: bb3, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = &mut (*_9),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:415:21: 415:56 (#293),
                    scope: scope[0],
                },
                kind: _6 = <R as rand_core::RngCore>::fill_bytes(move _7, move _8) -> [return: bb4, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageDead(_9),
            StorageDead(_6),
            StorageLive(_11),
            StorageLive(_12),
            _12 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:416:30: 416:34 (#808),
                    scope: scope[0],
                },
                kind: _11 = <&mut [core::num::Wrapping<u64>] as core::iter::IntoIterator>::into_iter(move _12) -> [return: bb5, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            PlaceMention(_11),
            StorageLive(_13),
            _13 = move _11,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:416:21: 418:22 (#807),
                    scope: scope[1],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:416:21: 418:22 (#807),
                    scope: scope[1],
                },
                kind: falseUnwind -> [real: bb7, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &mut _13,
            _17 = &mut (*_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:416:30: 416:34 (#808),
                    scope: scope[1],
                },
                kind: _16 = <core::slice::IterMut<'_, core::num::Wrapping<u64>> as core::iter::Iterator>::next(move _17) -> [return: bb8, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            PlaceMention(_16),
            _19 = discriminant(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:416:30: 416:34 (#808),
                    scope: scope[1],
                },
                kind: switchInt(move _19) -> [0: bb10, 1: bb11, otherwise: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:416:30: 416:34 (#808),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:416:21: 418:22 (#807),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_21),
            _21 = move ((_16 as Some).0: &mut core::num::Wrapping<u64>),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = ((*_21).0: u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:417:35: 417:46 (#293),
                    scope: scope[2],
                },
                kind: _23 = core::num::<impl u64>::to_le(move _24) -> [return: bb13, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_13),
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:414:17: 419:18 (#293),
                    scope: scope[0],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            _22 = core::num::Wrapping::<u64>(move _23),
            StorageDead(_23),
            (*_21) = move _22,
            StorageDead(_22),
            _15 = const (),
            StorageDead(_21),
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_15),
            _14 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:416:21: 418:22 (#807),
                    scope: scope[1],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:414:17: 419:18 (#293),
                    scope: scope[0],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:420:14: 420:14 (#293),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:413:13: 420:14 (#293),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:413:61: 413:61 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut [core::num::Wrapping<u64>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:413:38: 413:47 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/rng.rs:413:54: 413:60 (#293),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/rng.rs:413:49: 413:52 (#293),
                            ),
                        ),
                        pat_span: src/rng.rs:413:49: 413:52 (#293),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:413:49: 413:52 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/rng.rs:414:17: 419:18 (#293),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:414:20: 414:34 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/rng.rs:414:17: 419:18 (#293),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:414:20: 414:30 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/rng.rs:414:17: 419:18 (#293),
                },
            ),
        ),
        ty: &'{erased} [core::num::Wrapping<u64>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:414:20: 414:24 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:415:21: 415:56 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:415:21: 415:24 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:415:36: 415:55 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:415:36: 415:55 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::num::Wrapping<u64>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:415:36: 415:40 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/rng.rs:416:21: 418:22 (#807),
                },
            ),
        ),
        ty: core::slice::IterMut<'{erased}, core::num::Wrapping<u64>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:30: 416:34 (#808),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/rng.rs:416:21: 418:22 (#807),
                },
            ),
        ),
        ty: &'{erased} mut [core::num::Wrapping<u64>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:30: 416:34 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _11,
                                ),
                                src/rng.rs:416:30: 416:34 (#808),
                            ),
                        ),
                        pat_span: src/rng.rs:416:30: 416:34 (#808),
                    },
                ),
            ),
        ),
        ty: core::slice::IterMut<'{erased}, core::num::Wrapping<u64>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:30: 416:34 (#808),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:413:13: 420:14 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:30: 416:34 (#808),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} mut core::num::Wrapping<u64>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:30: 416:34 (#808),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::IterMut<'{erased}, core::num::Wrapping<u64>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:30: 416:34 (#808),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::IterMut<'{erased}, core::num::Wrapping<u64>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:30: 416:34 (#808),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:21: 418:22 (#807),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:21: 418:22 (#807),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _16,
                                ),
                                src/rng.rs:416:30: 416:34 (#808),
                            ),
                        ),
                        pat_span: src/rng.rs:416:25: 416:26 (#809),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::num::Wrapping<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:416:25: 416:26 (#293),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::num::Wrapping<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:417:26: 417:47 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:417:35: 417:46 (#293),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:417:35: 417:38 (#293),
            scope: scope[0],
        },
    },
]