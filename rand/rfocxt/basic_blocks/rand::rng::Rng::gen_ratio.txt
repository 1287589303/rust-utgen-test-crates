[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &mut (*_1),
            StorageLive(_5),
            _5 = _2,
            StorageLive(_6),
            _6 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:353:9: 353:50 (#0),
                    scope: scope[0],
                },
                kind: _0 = <Self as rng::Rng>::random_ratio(move _4, move _5, move _6) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:354:6: 354:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:352:5: 354:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:352:66: 352:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:352:18: 352:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/rng.rs:352:40: 352:43 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/rng.rs:352:29: 352:38 (#0),
                            ),
                        ),
                        pat_span: src/rng.rs:352:29: 352:38 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:352:29: 352:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/rng.rs:352:58: 352:61 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/rng.rs:352:45: 352:56 (#0),
                            ),
                        ),
                        pat_span: src/rng.rs:352:45: 352:56 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:352:45: 352:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rng.rs:353:9: 353:50 (#0),
                },
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:353:9: 353:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rng.rs:353:9: 353:50 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:353:27: 353:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rng.rs:353:9: 353:50 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:353:38: 353:49 (#0),
            scope: scope[0],
        },
    },
]