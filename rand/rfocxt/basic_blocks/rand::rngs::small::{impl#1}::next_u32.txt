[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &mut ((*_1).0: rngs::xoshiro256plusplus::Xoshiro256PlusPlus),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/small.rs:108:9: 108:26 (#0),
                    scope: scope[0],
                },
                kind: _0 = <rngs::xoshiro256plusplus::Xoshiro256PlusPlus as rand_core::RngCore>::next_u32(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/small.rs:109:6: 109:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/small.rs:107:5: 109:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/small.rs:107:31: 107:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut rngs::small::SmallRng,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/small.rs:107:17: 107:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rngs/small.rs:108:9: 108:26 (#0),
                },
            ),
        ),
        ty: &'{erased} mut rngs::xoshiro256plusplus::Xoshiro256PlusPlus,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/small.rs:108:9: 108:15 (#0),
            scope: scope[0],
        },
    },
]