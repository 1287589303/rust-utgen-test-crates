[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &((*_1).2: seq::index_::IndexVecIntoIter),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/slice.rs:451:9: 451:27 (#0),
                    scope: scope[0],
                },
                kind: _0 = <seq::index_::IndexVecIntoIter as core::iter::ExactSizeIterator>::len(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/slice.rs:452:6: 452:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/slice.rs:450:5: 452:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/slice.rs:450:22: 450:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} seq::slice::SliceChooseIter<'{erased}, S/#1, T/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/slice.rs:450:12: 450:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/slice.rs:451:9: 451:27 (#0),
                },
            ),
        ),
        ty: &'{erased} seq::index_::IndexVecIntoIter,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/slice.rs:451:9: 451:21 (#0),
            scope: scope[0],
        },
    },
]