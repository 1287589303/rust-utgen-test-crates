[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:62:37: 62:51 (#0),
                    scope: scope[0],
                },
                kind: _5 = <B1 as distr::uniform::SampleBorrow<char>>::borrow(move _6) -> [return: bb1, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            _4 = (*_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:62:19: 62:52 (#0),
                    scope: scope[0],
                },
                kind: _3 = distr::uniform::other::char_to_comp_u32(move _4) -> [return: bb2, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageDead(_5),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &_2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:63:38: 63:53 (#0),
                    scope: scope[1],
                },
                kind: _9 = <B2 as distr::uniform::SampleBorrow<char>>::borrow(move _10) -> [return: bb3, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            _8 = (*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:63:20: 63:54 (#0),
                    scope: scope[1],
                },
                kind: _7 = distr::uniform::other::char_to_comp_u32(move _8) -> [return: bb4, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            FakeRead(ForLet(None), _7),
            StorageDead(_9),
            StorageLive(_11),
            StorageLive(_12),
            _12 = _3,
            StorageLive(_13),
            _13 = _7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:64:23: 64:56 (#0),
                    scope: scope[2],
                },
                kind: _11 = <distr::uniform::int::UniformInt<u32> as distr::uniform::UniformSampler>::new::<u32, u32>(move _12, move _13) -> [return: bb5, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
            FakeRead(ForLet(None), _11),
            StorageLive(_14),
            _14 = _11,
            StorageLive(_15),
            _15 = {closure@src/distr/uniform_other.rs:65:21: 65:30},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:65:9: 65:55 (#0),
                    scope: scope[3],
                },
                kind: _0 = core::result::Result::<distr::uniform::int::UniformInt<u32>, distr::uniform::Error>::map::<distr::uniform::other::UniformChar, {closure@src/distr/uniform_other.rs:65:21: 65:30}>(move _14, move _15) -> [return: bb6, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_14),
            StorageDead(_11),
            StorageDead(_7),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:66:5: 66:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb7, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:66:5: 66:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb8, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:66:6: 66:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:66:5: 66:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:66:5: 66:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:57:5: 66:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<distr::uniform::other::UniformChar, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:57:46: 57:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_other.rs:57:27: 57:29 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:57:20: 57:25 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:57:20: 57:25 (#0),
                    },
                ),
            ),
        ),
        ty: B1/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:57:20: 57:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_other.rs:57:39: 57:41 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:57:31: 57:37 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:57:31: 57:37 (#0),
                    },
                ),
            ),
        ),
        ty: B2/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:57:31: 57:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:62:19: 62:52 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:62:13: 62:16 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:62:13: 62:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:62:36: 62:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:62:37: 62:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} B1/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:62:37: 62:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:63:20: 63:54 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:63:13: 63:17 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:63:13: 63:17 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:63:37: 63:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:63:38: 63:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} B2/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:63:38: 63:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:64:23: 64:56 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:64:13: 64:20 (#0),
                    },
                ),
            ),
        ),
        ty: core::result::Result<distr::uniform::int::UniformInt<u32>, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:64:13: 64:20 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:64:46: 64:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:64:51: 64:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_other.rs:65:9: 65:55 (#0),
                },
            ),
        ),
        ty: core::result::Result<distr::uniform::int::UniformInt<u32>, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:65:9: 65:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_other.rs:65:9: 65:55 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:303 ~ rand[eea3]::distr::uniform::other::{impl#1}::new::{closure#0}),
            [
                B1/#0,
                B2/#1,
                i32,
                Binder { value: extern "RustCall" fn((distr::uniform::int::UniformInt<u32>,)) -> distr::uniform::other::UniformChar, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:65:21: 65:54 (#0),
            scope: scope[0],
        },
    },
]