[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:98:28: 98:42 (#183),
                    scope: scope[0],
                },
                kind: _4 = <B1 as distr::uniform::SampleBorrow<i16>>::borrow(move _5) -> [return: bb1, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = (*_4),
            FakeRead(ForLet(None), _3),
            StorageDead(_4),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &_2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:99:29: 99:44 (#183),
                    scope: scope[1],
                },
                kind: _7 = <B2 as distr::uniform::SampleBorrow<i16>>::borrow(move _8) -> [return: bb2, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            _6 = (*_7),
            FakeRead(ForLet(None), _6),
            StorageDead(_7),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = _3,
            StorageLive(_12),
            _12 = _6,
            _10 = Lt(move _11, move _12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:100:21: 100:33 (#183),
                    scope: scope[2],
                },
                kind: switchInt(move _10) -> [0: bb4, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            _9 = const (),
            StorageDead(_10),
            StorageDead(_9),
            StorageLive(_15),
            _15 = _3,
            StorageLive(_16),
            StorageLive(_17),
            _17 = _6,
            _18 = SubWithOverflow(_17, const 1_i16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:103:52: 103:60 (#183),
                    scope: scope[2],
                },
                kind: assert(!move (_18.1: bool), "attempt to compute `{} - {}`, which would overflow", move _17, const 1_i16) -> [success: bb5, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageLive(_14),
            _14 = distr::uniform::Error::EmptyRange,
            _0 = core::result::Result::<distr::uniform::int::UniformInt<i16>, distr::uniform::Error>::Err(move _14),
            StorageDead(_14),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_6),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:104:13: 104:14 (#183),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb8, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = move (_18.0: i16),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:103:17: 103:61 (#183),
                    scope: scope[2],
                },
                kind: _0 = <distr::uniform::int::UniformInt<i16> as distr::uniform::UniformSampler>::new_inclusive::<i16, i16>(move _15, move _16) -> [return: bb6, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_6),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:104:13: 104:14 (#183),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb7, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:104:13: 104:14 (#183),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb9, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:104:13: 104:14 (#183),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb9, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:104:14: 104:14 (#183),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:104:13: 104:14 (#183),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:104:13: 104:14 (#183),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb12, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:93:13: 104:14 (#183),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<distr::uniform::int::UniformInt<i16>, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:93:54: 93:73 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_int.rs:93:35: 93:37 (#183),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_int.rs:93:28: 93:33 (#183),
                            ),
                        ),
                        pat_span: src/distr/uniform_int.rs:93:28: 93:33 (#183),
                    },
                ),
            ),
        ),
        ty: B1/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:93:28: 93:33 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_int.rs:93:47: 93:49 (#183),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_int.rs:93:39: 93:45 (#183),
                            ),
                        ),
                        pat_span: src/distr/uniform_int.rs:93:39: 93:45 (#183),
                    },
                ),
            ),
        ),
        ty: B2/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:93:39: 93:45 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_int.rs:98:27: 98:42 (#183),
                            ),
                        ),
                        pat_span: src/distr/uniform_int.rs:98:21: 98:24 (#183),
                    },
                ),
            ),
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:98:21: 98:24 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:98:28: 98:42 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} B1/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:98:28: 98:33 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_int.rs:99:28: 99:44 (#183),
                            ),
                        ),
                        pat_span: src/distr/uniform_int.rs:99:21: 99:25 (#183),
                    },
                ),
            ),
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:99:21: 99:25 (#183),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:99:29: 99:44 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} B2/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:99:29: 99:35 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:100:17: 102:18 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:100:21: 100:33 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:100:22: 100:25 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:100:28: 100:32 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:100:34: 102:18 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::uniform::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:101:32: 101:49 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_int.rs:103:17: 103:61 (#183),
                },
            ),
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:103:47: 103:50 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_int.rs:103:17: 103:61 (#183),
                },
            ),
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:103:52: 103:60 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_int.rs:103:17: 103:61 (#183),
                },
            ),
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:103:52: 103:56 (#183),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (i16, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:103:52: 103:60 (#183),
            scope: scope[0],
        },
    },
]