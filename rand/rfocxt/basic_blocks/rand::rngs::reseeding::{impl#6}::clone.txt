[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &((*_1).0: R),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/reseeding.rs:238:20: 238:38 (#0),
                    scope: scope[0],
                },
                kind: _2 = <R as core::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &((*_1).1: Rsdr),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/reseeding.rs:239:23: 239:44 (#0),
                    scope: scope[0],
                },
                kind: _4 = <Rsdr as core::clone::Clone>::clone(move _5) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_6),
            _6 = ((*_1).2: i64),
            _0 = rngs::reseeding::ReseedingCore::<R, Rsdr> { inner: move _2, reseeder: move _4, threshold: move _6, bytes_until_reseed: const 0_i64 },
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/reseeding.rs:242:9: 242:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/reseeding.rs:242:9: 242:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/reseeding.rs:243:6: 243:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/reseeding.rs:242:9: 242:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/reseeding.rs:236:5: 243:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: rngs::reseeding::ReseedingCore<R/#0, Rsdr/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/reseeding.rs:236:24: 236:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} rngs::reseeding::ReseedingCore<R/#0, Rsdr/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/reseeding.rs:236:14: 236:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/reseeding.rs:238:20: 238:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rngs/reseeding.rs:237:9: 242:10 (#0),
                },
            ),
        ),
        ty: &'{erased} R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/reseeding.rs:238:20: 238:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: Rsdr/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/reseeding.rs:239:23: 239:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rngs/reseeding.rs:237:9: 242:10 (#0),
                },
            ),
        ),
        ty: &'{erased} Rsdr/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/reseeding.rs:239:23: 239:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/reseeding.rs:240:24: 240:38 (#0),
            scope: scope[0],
        },
    },
]