[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:73:19: 73:34 (#0),
                    scope: scope[0],
                },
                kind: _2 = <rngs::xoshiro256plusplus::Xoshiro256PlusPlus as rand_core::RngCore>::next_u64(move _3) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_4),
            StorageLive(_5),
            _5 = _2,
            _6 = const 32_i32 as u32 (IntToInt),
            _7 = Lt(move _6, const 64_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:74:9: 74:20 (#0),
                    scope: scope[1],
                },
                kind: assert(move _7, "attempt to shift right by `{}`, which would overflow", const 32_i32) -> [success: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = Shr(move _5, const 32_i32),
            StorageDead(_5),
            _0 = move _4 as u32 (IntToInt),
            StorageDead(_4),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:75:6: 75:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:70:5: 75:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:70:31: 70:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut rngs::xoshiro256plusplus::Xoshiro256PlusPlus,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:70:17: 70:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/rngs/xoshiro256plusplus.rs:73:19: 73:34 (#0),
                            ),
                        ),
                        pat_span: src/rngs/xoshiro256plusplus.rs:73:13: 73:16 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:73:13: 73:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut rngs::xoshiro256plusplus::Xoshiro256PlusPlus,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:73:19: 73:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rngs/xoshiro256plusplus.rs:74:9: 74:27 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:74:9: 74:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rngs/xoshiro256plusplus.rs:74:9: 74:27 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:74:10: 74:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:74:9: 74:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:74:9: 74:20 (#0),
            scope: scope[0],
        },
    },
]