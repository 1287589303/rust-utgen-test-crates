[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:384:32: 384:41 (#0),
                    scope: scope[0],
                },
                kind: _2 = core::ops::RangeInclusive::<X>::start(move _3) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:384:43: 384:50 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::ops::RangeInclusive::<X>::end(move _5) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:384:9: 384:51 (#0),
                    scope: scope[0],
                },
                kind: _0 = distr::uniform::Uniform::<X>::new_inclusive::<&X, &X>(move _2, move _4) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:385:5: 385:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:385:6: 385:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:385:5: 385:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:383:5: 385:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<distr::uniform::Uniform<X/#0>, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:383:55: 383:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform.rs:383:20: 383:50 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform.rs:383:17: 383:18 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform.rs:383:17: 383:18 (#0),
                    },
                ),
            ),
        ),
        ty: core::ops::RangeInclusive<X/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:383:17: 383:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:384:9: 384:51 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:384:32: 384:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:384:9: 384:51 (#0),
                },
            ),
        ),
        ty: &'{erased} core::ops::RangeInclusive<X/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:384:32: 384:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:384:9: 384:51 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:384:43: 384:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:384:9: 384:51 (#0),
                },
            ),
        ),
        ty: &'{erased} core::ops::RangeInclusive<X/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:384:43: 384:44 (#0),
            scope: scope[0],
        },
    },
]