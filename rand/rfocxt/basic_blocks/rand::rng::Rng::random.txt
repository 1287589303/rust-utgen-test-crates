[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = distr::StandardUniform,
            _2 = &_3,
            StorageLive(_4),
            _4 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:99:9: 99:37 (#0),
                    scope: scope[0],
                },
                kind: _0 = <distr::StandardUniform as distr::distribution::Distribution<T>>::sample::<Self>(move _2, move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_2),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:100:6: 100:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rng.rs:95:5: 100:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: T/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:95:32: 95:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:95:18: 95:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rng.rs:99:9: 99:37 (#0),
                },
            ),
        ),
        ty: &'{erased} distr::StandardUniform,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:99:9: 99:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rng.rs:99:9: 99:37 (#0),
                },
            ),
        ),
        ty: distr::StandardUniform,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:99:9: 99:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rng.rs:99:9: 99:37 (#0),
                },
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rng.rs:99:32: 99:36 (#0),
            scope: scope[0],
        },
    },
]