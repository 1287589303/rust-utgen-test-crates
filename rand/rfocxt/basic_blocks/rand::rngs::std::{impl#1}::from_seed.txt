[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/std.rs:95:16: 95:36 (#0),
                    scope: scope[0],
                },
                kind: _2 = <rand_chacha::ChaCha12Rng as rand_core::SeedableRng>::from_seed(move _3) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            _0 = rngs::std::StdRng(move _2),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/std.rs:96:6: 96:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/std.rs:94:5: 96:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: rngs::std::StdRng,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/std.rs:94:39: 94:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/rngs/std.rs:94:24: 94:34 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/rngs/std.rs:94:18: 94:22 (#0),
                            ),
                        ),
                        pat_span: src/rngs/std.rs:94:18: 94:22 (#0),
                    },
                ),
            ),
        ),
        ty: [u8; 32_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/std.rs:94:18: 94:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: rand_chacha::ChaCha12Rng,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/std.rs:95:16: 95:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/rngs/std.rs:95:9: 95:37 (#0),
                },
            ),
        ),
        ty: [u8; 32_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/std.rs:95:31: 95:35 (#0),
            scope: scope[0],
        },
    },
]