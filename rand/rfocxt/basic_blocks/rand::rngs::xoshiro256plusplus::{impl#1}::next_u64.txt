[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = const 0_usize,
            _7 = Len(((*_1).0: [u64; 4])),
            _8 = Lt(_6, _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:79:19: 79:28 (#0),
                    scope: scope[0],
                },
                kind: assert(move _8, "index out of bounds: the length is {} but the index is {}", move _7, _6) -> [success: bb1, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = ((*_1).0: [u64; 4])[_6],
            StorageLive(_9),
            StorageLive(_10),
            _10 = const 3_usize,
            _11 = Len(((*_1).0: [u64; 4])),
            _12 = Lt(_10, _11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:80:27: 80:36 (#0),
                    scope: scope[0],
                },
                kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _10) -> [success: bb2, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = ((*_1).0: [u64; 4])[_10],
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:79:19: 80:37 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::num::<impl u64>::wrapping_add(move _5, move _9) -> [return: bb3, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:79:19: 81:29 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::num::<impl u64>::rotate_left(move _4, const 23_u32) -> [return: bb4, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_13),
            StorageLive(_14),
            _14 = const 0_usize,
            _15 = Len(((*_1).0: [u64; 4])),
            _16 = Lt(_14, _15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:82:27: 82:36 (#0),
                    scope: scope[0],
                },
                kind: assert(move _16, "index out of bounds: the length is {} but the index is {}", move _15, _14) -> [success: bb5, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _13 = ((*_1).0: [u64; 4])[_14],
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:79:19: 82:37 (#0),
                    scope: scope[0],
                },
                kind: _2 = core::num::<impl u64>::wrapping_add(move _3, move _13) -> [return: bb6, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageDead(_14),
            StorageDead(_10),
            StorageDead(_6),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            _19 = const 1_usize,
            _20 = Len(((*_1).0: [u64; 4])),
            _21 = Lt(_19, _20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:84:17: 84:26 (#0),
                    scope: scope[1],
                },
                kind: assert(move _21, "index out of bounds: the length is {} but the index is {}", move _20, _19) -> [success: bb7, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _18 = ((*_1).0: [u64; 4])[_19],
            _22 = const 17_i32 as u32 (IntToInt),
            _23 = Lt(move _22, const 64_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:84:17: 84:32 (#0),
                    scope: scope[1],
                },
                kind: assert(move _23, "attempt to shift left by `{}`, which would overflow", const 17_i32) -> [success: bb8, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = Shl(move _18, const 17_i32),
            StorageDead(_18),
            FakeRead(ForLet(None), _17),
            StorageDead(_19),
            StorageLive(_24),
            StorageLive(_25),
            _25 = const 0_usize,
            _26 = Len(((*_1).0: [u64; 4])),
            _27 = Lt(_25, _26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:86:22: 86:31 (#0),
                    scope: scope[2],
                },
                kind: assert(move _27, "index out of bounds: the length is {} but the index is {}", move _26, _25) -> [success: bb9, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _24 = ((*_1).0: [u64; 4])[_25],
            StorageLive(_28),
            _28 = const 2_usize,
            _29 = Len(((*_1).0: [u64; 4])),
            _30 = Lt(_28, _29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:86:9: 86:18 (#0),
                    scope: scope[2],
                },
                kind: assert(move _30, "index out of bounds: the length is {} but the index is {}", move _29, _28) -> [success: bb10, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).0: [u64; 4])[_28] = BitXor(((*_1).0: [u64; 4])[_28], move _24),
            StorageDead(_24),
            StorageDead(_28),
            StorageDead(_25),
            StorageLive(_31),
            StorageLive(_32),
            _32 = const 1_usize,
            _33 = Len(((*_1).0: [u64; 4])),
            _34 = Lt(_32, _33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:87:22: 87:31 (#0),
                    scope: scope[2],
                },
                kind: assert(move _34, "index out of bounds: the length is {} but the index is {}", move _33, _32) -> [success: bb11, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _31 = ((*_1).0: [u64; 4])[_32],
            StorageLive(_35),
            _35 = const 3_usize,
            _36 = Len(((*_1).0: [u64; 4])),
            _37 = Lt(_35, _36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:87:9: 87:18 (#0),
                    scope: scope[2],
                },
                kind: assert(move _37, "index out of bounds: the length is {} but the index is {}", move _36, _35) -> [success: bb12, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).0: [u64; 4])[_35] = BitXor(((*_1).0: [u64; 4])[_35], move _31),
            StorageDead(_31),
            StorageDead(_35),
            StorageDead(_32),
            StorageLive(_38),
            StorageLive(_39),
            _39 = const 2_usize,
            _40 = Len(((*_1).0: [u64; 4])),
            _41 = Lt(_39, _40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:88:22: 88:31 (#0),
                    scope: scope[2],
                },
                kind: assert(move _41, "index out of bounds: the length is {} but the index is {}", move _40, _39) -> [success: bb13, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _38 = ((*_1).0: [u64; 4])[_39],
            StorageLive(_42),
            _42 = const 1_usize,
            _43 = Len(((*_1).0: [u64; 4])),
            _44 = Lt(_42, _43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:88:9: 88:18 (#0),
                    scope: scope[2],
                },
                kind: assert(move _44, "index out of bounds: the length is {} but the index is {}", move _43, _42) -> [success: bb14, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).0: [u64; 4])[_42] = BitXor(((*_1).0: [u64; 4])[_42], move _38),
            StorageDead(_38),
            StorageDead(_42),
            StorageDead(_39),
            StorageLive(_45),
            StorageLive(_46),
            _46 = const 3_usize,
            _47 = Len(((*_1).0: [u64; 4])),
            _48 = Lt(_46, _47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:89:22: 89:31 (#0),
                    scope: scope[2],
                },
                kind: assert(move _48, "index out of bounds: the length is {} but the index is {}", move _47, _46) -> [success: bb15, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _45 = ((*_1).0: [u64; 4])[_46],
            StorageLive(_49),
            _49 = const 0_usize,
            _50 = Len(((*_1).0: [u64; 4])),
            _51 = Lt(_49, _50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:89:9: 89:18 (#0),
                    scope: scope[2],
                },
                kind: assert(move _51, "index out of bounds: the length is {} but the index is {}", move _50, _49) -> [success: bb16, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).0: [u64; 4])[_49] = BitXor(((*_1).0: [u64; 4])[_49], move _45),
            StorageDead(_45),
            StorageDead(_49),
            StorageDead(_46),
            StorageLive(_52),
            _52 = _17,
            StorageLive(_53),
            _53 = const 2_usize,
            _54 = Len(((*_1).0: [u64; 4])),
            _55 = Lt(_53, _54),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:91:9: 91:18 (#0),
                    scope: scope[2],
                },
                kind: assert(move _55, "index out of bounds: the length is {} but the index is {}", move _54, _53) -> [success: bb17, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).0: [u64; 4])[_53] = BitXor(((*_1).0: [u64; 4])[_53], move _52),
            StorageDead(_52),
            StorageDead(_53),
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            _58 = const 3_usize,
            _59 = Len(((*_1).0: [u64; 4])),
            _60 = Lt(_58, _59),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:93:21: 93:30 (#0),
                    scope: scope[2],
                },
                kind: assert(move _60, "index out of bounds: the length is {} but the index is {}", move _59, _58) -> [success: bb18, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _57 = ((*_1).0: [u64; 4])[_58],
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:93:21: 93:46 (#0),
                    scope: scope[2],
                },
                kind: _56 = core::num::<impl u64>::rotate_left(move _57, const 45_u32) -> [return: bb19, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_57),
            StorageLive(_61),
            _61 = const 3_usize,
            _62 = Len(((*_1).0: [u64; 4])),
            _63 = Lt(_61, _62),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:93:9: 93:18 (#0),
                    scope: scope[2],
                },
                kind: assert(move _63, "index out of bounds: the length is {} but the index is {}", move _62, _61) -> [success: bb20, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).0: [u64; 4])[_61] = move _56,
            StorageDead(_56),
            StorageDead(_61),
            StorageDead(_58),
            _0 = _2,
            StorageDead(_17),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:96:6: 96:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:78:5: 96:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:78:31: 78:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut rngs::xoshiro256plusplus::Xoshiro256PlusPlus,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:78:17: 78:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/rngs/xoshiro256plusplus.rs:79:19: 82:37 (#0),
                            ),
                        ),
                        pat_span: src/rngs/xoshiro256plusplus.rs:79:13: 79:16 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:79:13: 79:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:79:19: 81:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:79:19: 80:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:79:19: 79:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:79:26: 79:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:79:19: 79:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:79:19: 79:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:80:27: 80:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:80:34: 80:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:80:27: 80:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:80:27: 80:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:82:27: 82:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:82:34: 82:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:82:27: 82:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:82:27: 82:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/rngs/xoshiro256plusplus.rs:84:17: 84:32 (#0),
                            ),
                        ),
                        pat_span: src/rngs/xoshiro256plusplus.rs:84:13: 84:14 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:84:13: 84:14 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:84:17: 84:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:84:24: 84:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:84:17: 84:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:84:17: 84:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:84:17: 84:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:84:17: 84:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:86:22: 86:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:86:29: 86:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:86:22: 86:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:86:22: 86:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:86:16: 86:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:86:9: 86:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:86:9: 86:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:87:22: 87:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:87:29: 87:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:87:22: 87:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:87:22: 87:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:87:16: 87:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:87:9: 87:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:87:9: 87:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:88:22: 88:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:88:29: 88:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:88:22: 88:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:88:22: 88:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:88:16: 88:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:88:9: 88:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:88:9: 88:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:89:22: 89:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:89:29: 89:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:89:22: 89:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:89:22: 89:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:89:16: 89:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:89:9: 89:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:89:9: 89:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:91:22: 91:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:91:16: 91:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:91:9: 91:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:91:9: 91:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:93:21: 93:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:93:21: 93:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:93:28: 93:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:93:21: 93:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:93:21: 93:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:93:16: 93:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:93:9: 93:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:93:9: 93:18 (#0),
            scope: scope[0],
        },
    },
]