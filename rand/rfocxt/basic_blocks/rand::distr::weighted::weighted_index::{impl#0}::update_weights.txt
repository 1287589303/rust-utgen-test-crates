[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:166:12: 166:34 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::slice::<impl [(usize, &X)]>::is_empty(move _5) -> [return: bb1, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:166:12: 166:34 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_7),
            _7 = (),
            _0 = core::result::Result::<(), distr::weighted::Error>::Ok(move _7),
            StorageDead(_7),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb101,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = const (),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:170:20: 170:45 (#0),
                    scope: scope[0],
                },
                kind: _8 = <X as core::default::Default>::default() -> [return: bb4, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &((*_1).1: X),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:172:32: 172:57 (#0),
                    scope: scope[1],
                },
                kind: _9 = <X as core::clone::Clone>::clone(move _10) -> [return: bb5, unwind: bb110],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            FakeRead(ForLet(None), _9),
            StorageLive(_11),
            _11 = core::option::Option::<usize>::None,
            FakeRead(ForLet(None), _11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
                    scope: scope[3],
                },
                kind: _13 = <&[(usize, &X)] as core::iter::IntoIterator>::into_iter(move _14) -> [return: bb6, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            PlaceMention(_13),
            StorageLive(_15),
            _15 = move _13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:177:9: 202:10 (#469),
                    scope: scope[4],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:177:9: 202:10 (#469),
                    scope: scope[4],
                },
                kind: falseUnwind -> [real: bb8, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &mut _15,
            _19 = &mut (*_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
                    scope: scope[4],
                },
                kind: _18 = <core::slice::Iter<'_, (usize, &X)> as core::iter::Iterator>::next(move _19) -> [return: bb9, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            PlaceMention(_18),
            _21 = discriminant(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
                    scope: scope[4],
                },
                kind: switchInt(move _21) -> [0: bb11, 1: bb12, otherwise: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
                    scope: scope[4],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:177:9: 202:10 (#469),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb13, imaginary: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_23),
            _23 = ((*((_18 as Some).0: &(usize, &X))).0: usize),
            StorageLive(_24),
            _24 = ((*((_18 as Some).0: &(usize, &X))).1: &X),
            StorageLive(_25),
            PlaceMention(_11),
            _26 = discriminant(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:178:20: 178:31 (#0),
                    scope: scope[6],
                },
                kind: switchInt(move _26) -> [1: bb14, otherwise: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = const (),
            StorageDead(_20),
            StorageDead(_18),
            StorageDead(_17),
            StorageDead(_15),
            StorageDead(_13),
            StorageDead(_12),
            StorageLive(_77),
            StorageLive(_78),
            StorageLive(_79),
            _79 = &_9,
            StorageLive(_80),
            _80 = &_8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:203:12: 203:32 (#0),
                    scope: scope[3],
                },
                kind: _78 = <X as core::cmp::PartialOrd>::le(move _79, move _80) -> [return: bb42, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:178:20: 178:31 (#0),
                    scope: scope[6],
                },
                kind: falseEdge -> [real: bb15, imaginary: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_27),
            _27 = ((_11 as Some).0: usize),
            StorageLive(_28),
            StorageLive(_29),
            _29 = _27,
            StorageLive(_30),
            _30 = _23,
            _28 = Ge(move _29, move _30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:179:20: 179:30 (#0),
                    scope: scope[6],
                },
                kind: switchInt(move _28) -> [0: bb17, otherwise: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_29),
            StorageLive(_32),
            _32 = distr::weighted::Error::InvalidInput,
            _0 = core::result::Result::<(), distr::weighted::Error>::Err(move _32),
            StorageDead(_32),
            StorageDead(_28),
            StorageDead(_27),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[5],
                },
                kind: goto -> bb97,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_29),
            _25 = const (),
            StorageDead(_28),
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:178:13: 182:14 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb19,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _25 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:178:13: 182:14 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb19,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            _35 = &(*_24),
            StorageLive(_36),
            _36 = &_8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:183:17: 183:29 (#0),
                    scope: scope[5],
                },
                kind: _34 = <X as core::cmp::PartialOrd>::ge(move _35, move _36) -> [return: bb20, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:183:17: 183:29 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _34) -> [0: bb22, otherwise: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_35),
            _33 = const (),
            StorageDead(_34),
            StorageDead(_33),
            StorageLive(_39),
            StorageLive(_40),
            StorageLive(_41),
            _41 = _23,
            StorageLive(_42),
            StorageLive(_43),
            _43 = &((*_1).0: alloc::vec::Vec<X>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:186:20: 186:49 (#0),
                    scope: scope[5],
                },
                kind: _42 = alloc::vec::Vec::<X>::len(move _43) -> [return: bb23, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_35),
            StorageLive(_38),
            _38 = distr::weighted::Error::InvalidWeight,
            _0 = core::result::Result::<(), distr::weighted::Error>::Err(move _38),
            StorageDead(_38),
            StorageDead(_34),
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[5],
                },
                kind: goto -> bb97,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            _40 = Gt(move _41, move _42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:186:16: 186:49 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _40) -> [0: bb25, otherwise: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_41),
            StorageLive(_45),
            _45 = distr::weighted::Error::InvalidInput,
            _0 = core::result::Result::<(), distr::weighted::Error>::Err(move _45),
            StorageDead(_45),
            StorageDead(_40),
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[5],
                },
                kind: goto -> bb97,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_41),
            _39 = const (),
            StorageDead(_40),
            StorageDead(_39),
            StorageLive(_46),
            StorageLive(_47),
            StorageLive(_48),
            _48 = _23,
            StorageLive(_49),
            StorageLive(_50),
            _50 = &((*_1).0: alloc::vec::Vec<X>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:190:36: 190:65 (#0),
                    scope: scope[5],
                },
                kind: _49 = alloc::vec::Vec::<X>::len(move _50) -> [return: bb26, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
            _47 = Lt(move _48, move _49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:190:32: 190:65 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _47) -> [0: bb30, otherwise: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_48),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            _53 = &((*_1).0: alloc::vec::Vec<X>),
            StorageLive(_54),
            _54 = _23,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:191:40: 191:43 (#0),
                    scope: scope[5],
                },
                kind: _52 = <alloc::vec::Vec<X> as core::ops::Index<usize>>::index(move _53, move _54) -> [return: bb28, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _51 = &(*_52),
            StorageDead(_54),
            StorageDead(_53),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:191:17: 191:51 (#0),
                    scope: scope[5],
                },
                kind: _46 = <X as core::clone::Clone>::clone(move _51) -> [return: bb29, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_51),
            StorageDead(_52),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:190:29: 194:14 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb32,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_48),
            StorageLive(_55),
            _55 = &((*_1).1: X),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:193:17: 193:42 (#0),
                    scope: scope[5],
                },
                kind: _46 = <X as core::clone::Clone>::clone(move _55) -> [return: bb31, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:190:29: 194:14 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb32,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
            FakeRead(ForLet(None), _46),
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            _58 = _23,
            _57 = Gt(move _58, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:195:16: 195:21 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _57) -> [0: bb37, otherwise: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_58),
            StorageLive(_59),
            StorageLive(_60),
            _60 = &mut _46,
            StorageLive(_61),
            StorageLive(_62),
            StorageLive(_63),
            StorageLive(_64),
            _64 = &((*_1).0: alloc::vec::Vec<X>),
            StorageLive(_65),
            StorageLive(_66),
            _66 = _23,
            _67 = SubWithOverflow(_66, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:196:51: 196:56 (#0),
                    scope: scope[7],
                },
                kind: assert(!move (_67.1: bool), "attempt to compute `{} - {}`, which would overflow", move _66, const 1_usize) -> [success: bb34, unwind: bb108],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _65 = move (_67.0: usize),
            StorageDead(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:196:50: 196:57 (#0),
                    scope: scope[7],
                },
                kind: _63 = <alloc::vec::Vec<X> as core::ops::Index<usize>>::index(move _64, move _65) -> [return: bb35, unwind: bb108],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_65),
            StorageDead(_64),
            _62 = &(*_63),
            _61 = &(*_62),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:196:17: 196:57 (#0),
                    scope: scope[7],
                },
                kind: _59 = <X as core::ops::SubAssign<&X>>::sub_assign(move _60, move _61) -> [return: bb36, unwind: bb108],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            StorageDead(_60),
            StorageDead(_63),
            StorageDead(_62),
            StorageDead(_59),
            _56 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:195:13: 197:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_58),
            _56 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:195:13: 197:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_57),
            StorageDead(_56),
            StorageLive(_68),
            StorageLive(_69),
            _69 = &mut _9,
            StorageLive(_70),
            StorageLive(_71),
            _71 = &_46,
            _70 = &(*_71),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:199:13: 199:35 (#0),
                    scope: scope[7],
                },
                kind: _68 = <X as core::ops::SubAssign<&X>>::sub_assign(move _69, move _70) -> [return: bb39, unwind: bb108],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_70),
            StorageDead(_69),
            StorageDead(_71),
            StorageDead(_68),
            StorageLive(_72),
            StorageLive(_73),
            _73 = &mut _9,
            StorageLive(_74),
            _74 = &(*_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:200:13: 200:30 (#0),
                    scope: scope[7],
                },
                kind: _72 = <X as core::ops::AddAssign<&X>>::add_assign(move _73, move _74) -> [return: bb40, unwind: bb108],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_74),
            StorageDead(_73),
            StorageDead(_72),
            StorageLive(_75),
            StorageLive(_76),
            _76 = _23,
            _75 = core::option::Option::<usize>::Some(move _76),
            StorageDead(_76),
            _11 = move _75,
            StorageDead(_75),
            _17 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:202:9: 202:10 (#0),
                    scope: scope[5],
                },
                kind: drop(_46) -> [return: bb41, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_20),
            StorageDead(_18),
            StorageDead(_17),
            _16 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:177:9: 202:10 (#469),
                    scope: scope[4],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:203:12: 203:32 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _78) -> [0: bb44, otherwise: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_80),
            StorageDead(_79),
            StorageLive(_82),
            _82 = distr::weighted::Error::InsufficientNonZero,
            _0 = core::result::Result::<(), distr::weighted::Error>::Err(move _82),
            StorageDead(_82),
            StorageDead(_78),
            StorageDead(_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb98,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_80),
            StorageDead(_79),
            _77 = const (),
            StorageDead(_78),
            StorageDead(_77),
            StorageLive(_83),
            StorageLive(_84),
            _84 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:209:24: 209:42 (#0),
                    scope: scope[3],
                },
                kind: _83 = core::slice::<impl [(usize, &X)]>::iter(move _84) -> [return: bb45, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            FakeRead(ForLet(None), _83),
            StorageLive(_85),
            StorageLive(_86),
            _86 = &_8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:211:31: 211:43 (#0),
                    scope: scope[8],
                },
                kind: _85 = <X as core::clone::Clone>::clone(move _86) -> [return: bb46, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            FakeRead(ForLet(None), _85),
            StorageLive(_87),
            StorageLive(_88),
            _88 = &mut _83,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:212:35: 212:46 (#0),
                    scope: scope[9],
                },
                kind: _87 = <core::slice::Iter<'_, (usize, &X)> as core::iter::Iterator>::next(move _88) -> [return: bb47, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_88),
            FakeRead(ForLet(None), _87),
            StorageLive(_90),
            StorageLive(_91),
            _91 = _87,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:213:37: 213:61 (#0),
                    scope: scope[10],
                },
                kind: _90 = core::option::Option::<&(usize, &X)>::unwrap(move _91) -> [return: bb48, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_91),
            PlaceMention(_90),
            StorageLive(_89),
            _89 = ((*_90).0: usize),
            StorageDead(_90),
            StorageLive(_92),
            StorageLive(_93),
            StorageLive(_94),
            _94 = _89,
            _93 = Gt(move _94, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:214:40: 214:59 (#0),
                    scope: scope[11],
                },
                kind: switchInt(move _93) -> [0: bb53, otherwise: bb49],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_94),
            StorageLive(_95),
            StorageLive(_96),
            StorageLive(_97),
            _97 = &((*_1).0: alloc::vec::Vec<X>),
            StorageLive(_98),
            StorageLive(_99),
            _99 = _89,
            _100 = SubWithOverflow(_99, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:215:37: 215:56 (#0),
                    scope: scope[11],
                },
                kind: assert(!move (_100.1: bool), "attempt to compute `{} - {}`, which would overflow", move _99, const 1_usize) -> [success: bb50, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _98 = move (_100.0: usize),
            StorageDead(_99),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:215:36: 215:57 (#0),
                    scope: scope[11],
                },
                kind: _96 = <alloc::vec::Vec<X> as core::ops::Index<usize>>::index(move _97, move _98) -> [return: bb51, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _95 = &(*_96),
            StorageDead(_98),
            StorageDead(_97),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:215:13: 215:65 (#0),
                    scope: scope[11],
                },
                kind: _92 = <X as core::clone::Clone>::clone(move _95) -> [return: bb52, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            StorageDead(_96),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:214:37: 218:10 (#0),
                    scope: scope[11],
                },
                kind: goto -> bb55,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_94),
            StorageLive(_101),
            _101 = &_8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:217:13: 217:25 (#0),
                    scope: scope[11],
                },
                kind: _92 = <X as core::clone::Clone>::clone(move _101) -> [return: bb54, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_101),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:214:37: 218:10 (#0),
                    scope: scope[11],
                },
                kind: goto -> bb55,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_93),
            FakeRead(ForLet(None), _92),
            StorageLive(_102),
            StorageLive(_103),
            StorageLive(_104),
            StorageLive(_105),
            _105 = _89,
            StorageLive(_106),
            StorageLive(_107),
            _107 = &((*_1).0: alloc::vec::Vec<X>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:219:35: 219:64 (#0),
                    scope: scope[12],
                },
                kind: _106 = alloc::vec::Vec::<X>::len(move _107) -> [return: bb56, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_107),
            _104 = core::ops::Range::<usize> { start: move _105, end: move _106 },
            StorageDead(_106),
            StorageDead(_105),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
                    scope: scope[12],
                },
                kind: _103 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _104) -> [return: bb57, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_104),
            PlaceMention(_103),
            StorageLive(_108),
            _108 = move _103,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:219:9: 233:10 (#479),
                    scope: scope[13],
                },
                kind: goto -> bb58,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:219:9: 233:10 (#479),
                    scope: scope[13],
                },
                kind: falseUnwind -> [real: bb59, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_109),
            StorageLive(_110),
            StorageLive(_111),
            StorageLive(_112),
            _112 = &mut _108,
            _111 = &mut (*_112),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
                    scope: scope[13],
                },
                kind: _110 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _111) -> [return: bb60, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_111),
            PlaceMention(_110),
            _113 = discriminant(_110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
                    scope: scope[13],
                },
                kind: switchInt(move _113) -> [0: bb62, 1: bb63, otherwise: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
                    scope: scope[13],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:219:9: 233:10 (#479),
                    scope: scope[13],
                },
                kind: falseEdge -> [real: bb64, imaginary: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_115),
            _115 = ((_110 as Some).0: usize),
            StorageLive(_116),
            PlaceMention(_87),
            _119 = discriminant(_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:220:13: 220:34 (#0),
                    scope: scope[14],
                },
                kind: switchInt(move _119) -> [1: bb66, otherwise: bb65],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _102 = const (),
            StorageDead(_112),
            StorageDead(_110),
            StorageDead(_109),
            StorageDead(_108),
            StorageDead(_103),
            StorageDead(_102),
            StorageLive(_155),
            _155 = move _9,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:235:9: 235:26 (#0),
                    scope: scope[12],
                },
                kind: drop(((*_1).1: X)) -> [return: bb84, unwind: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_132),
            StorageLive(_133),
            StorageLive(_134),
            StorageLive(_135),
            _135 = &((*_1).0: alloc::vec::Vec<X>),
            StorageLive(_136),
            _136 = _115,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:226:58: 226:61 (#0),
                    scope: scope[14],
                },
                kind: _134 = <alloc::vec::Vec<X> as core::ops::Index<usize>>::index(move _135, move _136) -> [return: bb72, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:221:17: 221:30 (#0),
                    scope: scope[14],
                },
                kind: falseEdge -> [real: bb67, imaginary: bb65],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_121),
            _121 = &((*((_87 as Some).0: &(usize, &X))).0: usize),
            StorageLive(_123),
            _123 = &((*((_87 as Some).0: &(usize, &X))).1: &X),
            _117 = &fake shallow ((_87 as Some).0: &(usize, &X)),
            _118 = &fake shallow _87,
            StorageLive(_124),
            StorageLive(_125),
            _125 = _115,
            StorageLive(_126),
            _126 = (*_121),
            _124 = Eq(move _125, move _126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:221:34: 221:40 (#0),
                    scope: scope[14],
                },
                kind: switchInt(move _124) -> [0: bb69, otherwise: bb68],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_126),
            StorageDead(_125),
            StorageDead(_124),
            FakeRead(ForMatchGuard, _117),
            FakeRead(ForMatchGuard, _118),
            FakeRead(ForGuardBinding, _121),
            FakeRead(ForGuardBinding, _123),
            StorageLive(_120),
            _120 = ((*((_87 as Some).0: &(usize, &X))).0: usize),
            StorageLive(_122),
            _122 = ((*((_87 as Some).0: &(usize, &X))).1: &X),
            StorageLive(_127),
            StorageLive(_128),
            _128 = &mut _92,
            StorageLive(_129),
            _129 = &(*_122),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:222:21: 222:43 (#0),
                    scope: scope[15],
                },
                kind: _127 = <X as core::ops::AddAssign<&X>>::add_assign(move _128, move _129) -> [return: bb70, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_126),
            StorageDead(_125),
            StorageDead(_124),
            StorageDead(_123),
            StorageDead(_121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:221:34: 221:40 (#0),
                    scope: scope[14],
                },
                kind: falseEdge -> [real: bb65, imaginary: bb65],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_129),
            StorageDead(_128),
            StorageDead(_127),
            StorageLive(_130),
            StorageLive(_131),
            _131 = &mut _83,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:223:39: 223:50 (#0),
                    scope: scope[15],
                },
                kind: _130 = <core::slice::Iter<'_, (usize, &X)> as core::iter::Iterator>::next(move _131) -> [return: bb71, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_131),
            _87 = move _130,
            StorageDead(_130),
            _116 = const (),
            StorageDead(_122),
            StorageDead(_120),
            StorageDead(_123),
            StorageDead(_121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:224:17: 224:18 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb77,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _133 = &(*_134),
            StorageDead(_136),
            StorageDead(_135),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:226:35: 226:69 (#0),
                    scope: scope[14],
                },
                kind: _132 = <X as core::clone::Clone>::clone(move _133) -> [return: bb73, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            FakeRead(ForLet(None), _132),
            StorageDead(_134),
            StorageLive(_137),
            StorageLive(_138),
            _138 = &mut _132,
            StorageLive(_139),
            StorageLive(_140),
            _140 = &_85,
            _139 = &(*_140),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:227:21: 227:40 (#0),
                    scope: scope[16],
                },
                kind: _137 = <X as core::ops::SubAssign<&X>>::sub_assign(move _138, move _139) -> [return: bb74, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_139),
            StorageDead(_138),
            StorageDead(_140),
            StorageDead(_137),
            StorageLive(_141),
            StorageLive(_142),
            _142 = &mut _92,
            StorageLive(_143),
            StorageLive(_144),
            _144 = &_132,
            _143 = &(*_144),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:228:21: 228:46 (#0),
                    scope: scope[16],
                },
                kind: _141 = <X as core::ops::AddAssign<&X>>::add_assign(move _142, move _143) -> [return: bb75, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_143),
            StorageDead(_142),
            StorageDead(_144),
            StorageDead(_141),
            _116 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:229:17: 229:18 (#0),
                    scope: scope[14],
                },
                kind: drop(_132) -> [return: bb76, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_132),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:229:17: 229:18 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb77,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_116),
            StorageLive(_145),
            StorageLive(_146),
            _146 = &_92,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:231:27: 231:52 (#0),
                    scope: scope[14],
                },
                kind: _145 = <X as core::clone::Clone>::clone(move _146) -> [return: bb78, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_146),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:231:13: 231:24 (#0),
                    scope: scope[14],
                },
                kind: drop(_85) -> [return: bb79, unwind: bb80],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _85 = move _145,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:231:51: 231:52 (#0),
                    scope: scope[14],
                },
                kind: drop(_145) -> [return: bb81, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _85 = move _145,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:231:51: 231:52 (#0),
                    scope: scope[14],
                },
                kind: drop(_145) -> [return: bb106, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [
            StorageDead(_145),
            StorageLive(_147),
            StorageLive(_148),
            StorageLive(_149),
            _149 = &mut _85,
            _148 = &mut (*_149),
            StorageLive(_150),
            StorageLive(_151),
            StorageLive(_152),
            StorageLive(_153),
            _153 = &mut ((*_1).0: alloc::vec::Vec<X>),
            StorageLive(_154),
            _154 = _115,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:232:75: 232:78 (#0),
                    scope: scope[14],
                },
                kind: _152 = <alloc::vec::Vec<X> as core::ops::IndexMut<usize>>::index_mut(move _153, move _154) -> [return: bb82, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_154),
            StorageDead(_153),
            _151 = &mut (*_152),
            _150 = &mut (*_151),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:232:13: 232:79 (#0),
                    scope: scope[14],
                },
                kind: _147 = core::mem::swap::<X>(move _148, move _150) -> [return: bb83, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_150),
            StorageDead(_148),
            StorageDead(_152),
            StorageDead(_151),
            StorageDead(_149),
            StorageDead(_147),
            _109 = const (),
            StorageDead(_115),
            StorageDead(_112),
            StorageDead(_110),
            StorageDead(_109),
            _16 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:219:9: 233:10 (#479),
                    scope: scope[13],
                },
                kind: goto -> bb58,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).1: X) = move _155,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:235:40: 235:41 (#0),
                    scope: scope[12],
                },
                kind: drop(_155) -> [return: bb86, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).1: X) = move _155,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:235:40: 235:41 (#0),
                    scope: scope[12],
                },
                kind: drop(_155) -> [return: bb106, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [
            StorageDead(_155),
            StorageLive(_156),
            StorageLive(_157),
            StorageLive(_158),
            _158 = move _8,
            StorageLive(_159),
            StorageLive(_160),
            _160 = &((*_1).1: X),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:236:58: 236:83 (#0),
                    scope: scope[12],
                },
                kind: _159 = <X as core::clone::Clone>::clone(move _160) -> [return: bb87, unwind: bb104],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_160),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:236:36: 236:84 (#0),
                    scope: scope[12],
                },
                kind: _157 = <<X as distr::uniform::SampleUniform>::Sampler as distr::uniform::UniformSampler>::new::<X, X>(move _158, move _159) -> [return: bb88, unwind: bb103],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_159),
            StorageDead(_158),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:236:36: 236:93 (#0),
                    scope: scope[12],
                },
                kind: _156 = core::result::Result::<<X as distr::uniform::SampleUniform>::Sampler, distr::uniform::Error>::unwrap(move _157) -> [return: bb89, unwind: bb102],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_157),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:236:9: 236:33 (#0),
                    scope: scope[12],
                },
                kind: drop(((*_1).2: <X as distr::uniform::SampleUniform>::Sampler)) -> [return: bb90, unwind: bb91],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).2: <X as distr::uniform::SampleUniform>::Sampler) = move _156,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:236:92: 236:93 (#0),
                    scope: scope[12],
                },
                kind: drop(_156) -> [return: bb92, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).2: <X as distr::uniform::SampleUniform>::Sampler) = move _156,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:236:92: 236:93 (#0),
                    scope: scope[12],
                },
                kind: drop(_156) -> [return: bb106, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [
            StorageDead(_156),
            StorageLive(_161),
            _161 = (),
            _0 = core::result::Result::<(), distr::weighted::Error>::Ok(move _161),
            StorageDead(_161),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_92) -> [return: bb93, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_92),
            StorageDead(_89),
            StorageDead(_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_85) -> [return: bb94, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_85),
            StorageDead(_83),
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb95, unwind: bb110],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb96, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:6: 239:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb101,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_20),
            StorageDead(_18),
            StorageDead(_17),
            StorageDead(_15),
            StorageDead(_13),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb98,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb99, unwind: bb110],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb100, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb101,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:6: 239:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:236:92: 236:93 (#0),
                    scope: scope[12],
                },
                kind: drop(_157) -> [return: bb106, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:236:83: 236:84 (#0),
                    scope: scope[12],
                },
                kind: drop(_159) -> [return: bb104, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:236:83: 236:84 (#0),
                    scope: scope[12],
                },
                kind: drop(_158) -> [return: bb106, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:229:17: 229:18 (#0),
                    scope: scope[14],
                },
                kind: drop(_132) -> [return: bb106, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_92) -> [return: bb107, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_85) -> [return: bb109, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:202:9: 202:10 (#0),
                    scope: scope[5],
                },
                kind: drop(_46) -> [return: bb109, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb110, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:239:5: 239:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb111, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:159:5: 239:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), distr::weighted::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:159:70: 159:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut distr::weighted::weighted_index::WeightedIndex<X/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:159:27: 159:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/weighted/weighted_index.rs:159:51: 159:65 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:159:38: 159:49 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:159:38: 159:49 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [(usize, &'{erased} X/#0)],
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:159:38: 159:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:166:9: 168:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:166:12: 166:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [(usize, &'{erased} X/#0)],
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:166:12: 166:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:166:35: 168:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:167:23: 167:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:170:20: 170:45 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:170:13: 170:17 (#0),
                    },
                ),
            ),
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:170:13: 170:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:172:32: 172:57 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:172:13: 172:29 (#0),
                    },
                ),
            ),
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:172:13: 172:29 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:172:32: 172:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:176:26: 176:30 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:176:13: 176:23 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:176:13: 176:23 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:9: 202:10 (#469),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [(usize, &'{erased} X/#0)],
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _13,
                                ),
                                src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:159:5: 239:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:9: 202:10 (#469),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:9: 202:10 (#469),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _18,
                                ),
                                src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:177:13: 177:20 (#471),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:15: 177:16 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _18,
                                ),
                                src/distr/weighted/weighted_index.rs:177:24: 177:35 (#470),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:177:13: 177:20 (#471),
                    },
                ),
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:177:18: 177:19 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:178:13: 182:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:178:20: 178:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _11,
                                ),
                                src/distr/weighted/weighted_index.rs:178:34: 178:40 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:178:20: 178:31 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:178:25: 178:30 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:179:17: 181:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:179:20: 179:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:179:17: 181:18 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:179:20: 179:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:179:17: 181:18 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:179:29: 179:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:179:17: 181:18 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:179:31: 181:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::weighted::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:180:32: 180:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:183:13: 185:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:183:17: 183:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:183:18: 183:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:183:24: 183:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:183:30: 185:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::weighted::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:184:28: 184:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:186:13: 188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:186:16: 186:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:186:16: 186:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:186:20: 186:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:186:20: 186:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:186:50: 188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::weighted::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:187:28: 187:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:190:29: 194:14 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:190:17: 190:26 (#0),
                    },
                ),
            ),
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:190:17: 190:26 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:190:32: 190:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:190:32: 190:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:190:36: 190:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:190:36: 190:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:191:17: 191:51 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:191:17: 191:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:191:17: 191:51 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:191:40: 191:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:191:17: 191:51 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:191:17: 191:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:191:17: 191:51 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:191:41: 191:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:193:17: 193:42 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:193:17: 193:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:195:13: 197:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:195:16: 195:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:195:16: 195:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:196:17: 196:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:196:17: 196:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:196:26: 196:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:196:26: 196:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:196:50: 196:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:196:27: 196:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:196:51: 196:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:196:51: 196:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:196:51: 196:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:199:13: 199:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:199:13: 199:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:199:29: 199:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:199:29: 199:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:200:13: 200:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:200:13: 200:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:200:29: 200:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:201:22: 201:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:201:27: 201:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:203:9: 205:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:203:12: 203:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:203:12: 203:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:203:28: 203:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:203:33: 205:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::weighted::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:204:24: 204:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:209:24: 209:42 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:209:13: 209:21 (#0),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:209:13: 209:21 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [(usize, &'{erased} X/#0)],
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:209:24: 209:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:211:31: 211:43 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:211:13: 211:28 (#0),
                    },
                ),
            ),
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:211:13: 211:28 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:211:31: 211:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:212:35: 212:46 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:212:13: 212:32 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<&'{erased} (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:212:13: 212:32 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:212:35: 212:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _90,
                                ),
                                src/distr/weighted/weighted_index.rs:213:37: 213:61 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:213:13: 213:34 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:213:15: 213:30 (#0),
            scope: scope[10],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} (usize, &'{erased} X/#0),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:213:37: 213:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:213:37: 213:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:214:37: 218:10 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:214:13: 214:34 (#0),
                    },
                ),
            ),
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:214:13: 214:34 (#0),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:214:40: 214:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:214:40: 214:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:215:13: 215:65 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:215:13: 215:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:215:13: 215:65 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:215:36: 215:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:215:13: 215:65 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:215:13: 215:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:215:13: 215:65 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:215:37: 215:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:215:13: 215:65 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:215:37: 215:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:215:37: 215:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/weighted/weighted_index.rs:217:13: 217:25 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:217:13: 217:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:9: 233:10 (#479),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:18: 219:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:35: 219:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:35: 219:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _103,
                                ),
                                src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
                    },
                ),
            ),
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:9: 233:10 (#479),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:9: 233:10 (#479),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _110,
                                ),
                                src/distr/weighted/weighted_index.rs:219:18: 219:64 (#480),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:219:13: 219:14 (#481),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:219:13: 219:14 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:220:13: 230:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            FakeBorrow,
        ),
        ty: &'{erased} &'{erased} (usize, &'{erased} X/#0),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:220:19: 220:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            FakeBorrow,
        ),
        ty: &'{erased} core::option::Option<&'{erased} (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:220:19: 220:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:221:17: 221:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _87,
                                ),
                                src/distr/weighted/weighted_index.rs:220:19: 220:34 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:221:17: 221:30 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:221:24: 221:25 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                RefForGuard,
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:221:24: 221:25 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _87,
                                ),
                                src/distr/weighted/weighted_index.rs:220:19: 220:34 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:221:17: 221:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:221:27: 221:28 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                RefForGuard,
            ),
        ),
        ty: &'{erased} &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:221:27: 221:28 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:221:34: 221:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:221:34: 221:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:221:39: 221:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:222:21: 222:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:222:21: 222:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:222:42: 222:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:223:39: 223:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, (usize, &'{erased} X/#0)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:223:39: 223:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:226:35: 226:69 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:226:25: 226:32 (#0),
                    },
                ),
            ),
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:226:25: 226:32 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:226:35: 226:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:226:58: 226:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:226:35: 226:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:226:59: 226:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:227:21: 227:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:227:21: 227:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:227:28: 227:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:227:28: 227:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:228:21: 228:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:228:21: 228:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:228:42: 228:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:228:42: 228:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:231:27: 231:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:231:27: 231:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:232:13: 232:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:232:29: 232:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:232:29: 232:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:232:47: 232:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:232:47: 232:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:232:75: 232:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:232:52: 232:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:232:76: 232:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:235:29: 235:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    X/#0,
                ],
                def_id: DefId(0:355 ~ rand[eea3]::distr::uniform::SampleUniform::Sampler),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:236:36: 236:93 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [X/#0], def_id: DefId(0:355 ~ rand[eea3]::distr::uniform::SampleUniform::Sampler) }), distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:236:36: 236:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:236:52: 236:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:236:58: 236:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:236:58: 236:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:238:12: 238:14 (#0),
            scope: scope[0],
        },
    },
]