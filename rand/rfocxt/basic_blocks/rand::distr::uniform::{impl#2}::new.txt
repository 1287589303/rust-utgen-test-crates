[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = move _1,
            StorageLive(_5),
            _5 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:238:9: 238:35 (#0),
                    scope: scope[0],
                },
                kind: _3 = <<X as distr::uniform::SampleUniform>::Sampler as distr::uniform::UniformSampler>::new::<B1, B2>(move _4, move _5) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:238:9: 238:48 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::result::Result::<<X as distr::uniform::SampleUniform>::Sampler, distr::uniform::Error>::map::<distr::uniform::Uniform<X>, fn(<X as distr::uniform::SampleUniform>::Sampler) -> distr::uniform::Uniform<X> {distr::uniform::Uniform::<X>}>(move _3, distr::uniform::Uniform::<X>) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:239:5: 239:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb3, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:239:5: 239:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:239:6: 239:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:238:47: 238:48 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:238:34: 238:35 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:238:34: 238:35 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:239:5: 239:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb9, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:239:5: 239:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb10, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:233:5: 239:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<distr::uniform::Uniform<X/#0>, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:233:46: 233:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform.rs:233:29: 233:31 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform.rs:233:24: 233:27 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform.rs:233:24: 233:27 (#0),
                    },
                ),
            ),
        ),
        ty: B1/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:233:24: 233:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform.rs:233:39: 233:41 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform.rs:233:33: 233:37 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform.rs:233:33: 233:37 (#0),
                    },
                ),
            ),
        ),
        ty: B2/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:233:33: 233:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:238:9: 238:48 (#0),
                },
            ),
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [X/#0], def_id: DefId(0:355 ~ rand[eea3]::distr::uniform::SampleUniform::Sampler) }), distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:238:9: 238:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:238:9: 238:48 (#0),
                },
            ),
        ),
        ty: B1/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:238:25: 238:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:238:9: 238:48 (#0),
                },
            ),
        ),
        ty: B2/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:238:30: 238:34 (#0),
            scope: scope[0],
        },
    },
]