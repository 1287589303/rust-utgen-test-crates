[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:450:11: 450:23 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::ops::RangeInclusive::<T>::start(move _5) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &_4,
            StorageDead(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:450:27: 450:37 (#0),
                    scope: scope[0],
                },
                kind: _8 = core::ops::RangeInclusive::<T>::end(move _9) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = &(*_8),
            _6 = &_7,
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:450:10: 450:38 (#0),
                    scope: scope[0],
                },
                kind: _2 = <&T as core::cmp::PartialOrd>::le(move _3, move _6) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_3),
            _0 = Not(move _2),
            StorageDead(_2),
            StorageDead(_8),
            StorageDead(_7),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:451:6: 451:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:449:5: 451:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:449:27: 449:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} core::ops::RangeInclusive<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:449:17: 449:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:450:9: 450:38 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:450:10: 450:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:450:9: 450:38 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:450:11: 450:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:450:9: 450:38 (#0),
                },
            ),
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:450:11: 450:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:450:9: 450:38 (#0),
                },
            ),
        ),
        ty: &'{erased} core::ops::RangeInclusive<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:450:11: 450:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:450:9: 450:38 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:450:27: 450:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:450:9: 450:38 (#0),
                },
            ),
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:450:27: 450:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:450:9: 450:38 (#0),
                },
            ),
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:450:27: 450:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:450:9: 450:38 (#0),
                },
            ),
        ),
        ty: &'{erased} core::ops::RangeInclusive<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:450:27: 450:31 (#0),
            scope: scope[0],
        },
    },
]