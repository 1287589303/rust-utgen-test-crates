[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _2 = discriminant((*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:197:9: 197:19 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:197:15: 197:19 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:198:13: 198:19 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb4, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            _7 = &mut (((*_1) as U64).0: alloc::vec::IntoIter<u64>),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &mut (*_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:200:23: 200:31 (#0),
                    scope: scope[2],
                },
                kind: _8 = <alloc::vec::IntoIter<u64> as core::iter::Iterator>::next(move _9) -> [return: bb7, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &mut (((*_1) as U32).0: alloc::vec::IntoIter<u32>),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &mut (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:198:23: 198:31 (#0),
                    scope: scope[1],
                },
                kind: _4 = <alloc::vec::IntoIter<u32> as core::iter::Iterator>::next(move _5) -> [return: bb5, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_6),
            _6 = {closure@src/seq/index.rs:198:36: 198:39},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:198:23: 198:51 (#0),
                    scope: scope[1],
                },
                kind: _0 = core::option::Option::<u32>::map::<usize, {closure@src/seq/index.rs:198:36: 198:39}>(move _4, move _6) -> [return: bb6, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:198:50: 198:51 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb9,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageLive(_10),
            _10 = {closure@src/seq/index.rs:200:36: 200:39},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:200:23: 200:51 (#0),
                    scope: scope[2],
                },
                kind: _0 = core::option::Option::<u64>::map::<usize, {closure@src/seq/index.rs:200:36: 200:39}>(move _8, move _10) -> [return: bb8, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_8),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:200:50: 200:51 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb9,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:202:6: 202:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:195:5: 202:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:195:27: 195:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut seq::index_::IndexVecIntoIter,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:195:13: 195:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:198:13: 198:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/seq/index.rs:197:15: 197:19 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:198:13: 198:19 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut alloc::vec::IntoIter<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:198:17: 198:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:197:9: 201:10 (#0),
                },
            ),
        ),
        ty: core::option::Option<u32>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:198:23: 198:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:197:9: 201:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut alloc::vec::IntoIter<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:198:23: 198:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:197:9: 201:10 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:868 ~ rand[eea3]::seq::index_::{impl#7}::next::{closure#0}),
            [
                i32,
                Binder { value: extern "RustCall" fn((u32,)) -> usize, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:198:36: 198:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/seq/index.rs:197:15: 197:19 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:200:13: 200:19 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut alloc::vec::IntoIter<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:200:17: 200:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:197:9: 201:10 (#0),
                },
            ),
        ),
        ty: core::option::Option<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:200:23: 200:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:197:9: 201:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut alloc::vec::IntoIter<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:200:23: 200:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:197:9: 201:10 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:869 ~ rand[eea3]::seq::index_::{impl#7}::next::{closure#1}),
            [
                i32,
                Binder { value: extern "RustCall" fn((u64,)) -> usize, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:200:36: 200:50 (#0),
            scope: scope[0],
        },
    },
]