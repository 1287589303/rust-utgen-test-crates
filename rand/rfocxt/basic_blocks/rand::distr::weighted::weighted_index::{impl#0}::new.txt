[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:105:24: 105:43 (#0),
                    scope: scope[0],
                },
                kind: _2 = <I as core::iter::IntoIterator>::into_iter(move _3) -> [return: bb1, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &mut _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:35: 106:46 (#0),
                    scope: scope[1],
                },
                kind: _11 = <<I as core::iter::IntoIterator>::IntoIter as core::iter::Iterator>::next(move _12) -> [return: bb2, unwind: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageLive(_13),
            _13 = distr::weighted::Error::InvalidInput,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:35: 106:73 (#0),
                    scope: scope[1],
                },
                kind: _10 = core::option::Option::<<I as core::iter::IntoIterator>::Item>::ok_or::<distr::weighted::Error>(move _11, move _13) -> [return: bb3, unwind: bb92],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:35: 106:74 (#460),
                    scope: scope[1],
                },
                kind: _9 = <core::result::Result<<I as core::iter::IntoIterator>::Item, distr::weighted::Error> as core::ops::Try>::branch(move _10) -> [return: bb4, unwind: bb91],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            PlaceMention(_9),
            _14 = discriminant(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:35: 106:74 (#460),
                    scope: scope[1],
                },
                kind: switchInt(move _14) -> [0: bb7, 1: bb6, otherwise: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:35: 106:74 (#460),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:73: 106:74 (#461),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb8, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_18),
            _18 = move ((_9 as Continue).0: <I as core::iter::IntoIterator>::Item),
            _8 = move _18,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:73: 106:74 (#0),
                    scope: scope[1],
                },
                kind: drop(_18) -> [return: bb10, unwind: bb90],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            _15 = ((_9 as Break).0: core::result::Result<core::convert::Infallible, distr::weighted::Error>),
            StorageLive(_17),
            _17 = _15,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:35: 106:74 (#460),
                    scope: scope[4],
                },
                kind: _0 = <core::result::Result<distr::weighted::weighted_index::WeightedIndex<X>, distr::weighted::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, distr::weighted::Error>>>::from_residual(move _17) -> [return: bb9, unwind: bb90],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_15),
            StorageDead(_7),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:91: 106:92 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb68, unwind: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            _7 = &_8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:35: 106:83 (#0),
                    scope: scope[1],
                },
                kind: _6 = <<I as core::iter::IntoIterator>::Item as distr::uniform::SampleBorrow<X>>::borrow(move _7) -> [return: bb11, unwind: bb89],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = &(*_6),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:35: 106:91 (#0),
                    scope: scope[1],
                },
                kind: _4 = <X as core::clone::Clone>::clone(move _5) -> [return: bb12, unwind: bb89],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            AscribeUserType(_4, o, UserTypeProjection { base: UserType(1), projs: [] }),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:91: 106:92 (#0),
                    scope: scope[1],
                },
                kind: drop(_8) -> [return: bb13, unwind: bb87],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:91: 106:92 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb14, unwind: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_6),
            StorageLive(_19),
            _19 = const <X as distr::weighted::Weight>::ZERO,
            FakeRead(ForLet(None), _19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &_4,
            StorageLive(_23),
            _23 = &_19,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:109:13: 109:35 (#0),
                    scope: scope[7],
                },
                kind: _21 = <X as core::cmp::PartialOrd>::ge(move _22, move _23) -> [return: bb15, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:109:13: 109:35 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _21) -> [0: bb17, otherwise: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            StorageDead(_22),
            _20 = const (),
            StorageDead(_21),
            StorageDead(_20),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &_2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:113:51: 113:67 (#0),
                    scope: scope[7],
                },
                kind: _28 = <<I as core::iter::IntoIterator>::IntoIter as core::iter::Iterator>::size_hint(move _29) -> [return: bb18, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            StorageDead(_22),
            StorageLive(_25),
            _25 = distr::weighted::Error::InvalidWeight,
            _0 = core::result::Result::<distr::weighted::weighted_index::WeightedIndex<X>, distr::weighted::Error>::Err(move _25),
            StorageDead(_25),
            StorageDead(_21),
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb66,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            _27 = (_28.0: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:113:27: 113:70 (#0),
                    scope: scope[7],
                },
                kind: _26 = alloc::vec::Vec::<X>::with_capacity(move _27) -> [return: bb19, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            FakeRead(ForLet(None), _26),
            StorageDead(_28),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            _32 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
                    scope: scope[8],
                },
                kind: _31 = <<I as core::iter::IntoIterator>::IntoIter as core::iter::IntoIterator>::into_iter(move _32) -> [return: bb20, unwind: bb84],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            PlaceMention(_31),
            StorageLive(_33),
            _33 = move _31,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:114:9: 125:10 (#463),
                    scope: scope[9],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:114:9: 125:10 (#463),
                    scope: scope[9],
                },
                kind: falseUnwind -> [real: bb22, unwind: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            _38 = &mut _33,
            _37 = &mut (*_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
                    scope: scope[9],
                },
                kind: _36 = <<I as core::iter::IntoIterator>::IntoIter as core::iter::Iterator>::next(move _37) -> [return: bb23, unwind: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            PlaceMention(_36),
            _39 = discriminant(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
                    scope: scope[9],
                },
                kind: switchInt(move _39) -> [0: bb25, 1: bb26, otherwise: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
                    scope: scope[9],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:114:9: 125:10 (#463),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb27, imaginary: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_41),
            _41 = move ((_36 as Some).0: <I as core::iter::IntoIterator>::Item),
            StorageLive(_42),
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            _46 = &_41,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:117:18: 117:28 (#0),
                    scope: scope[10],
                },
                kind: _45 = <<I as core::iter::IntoIterator>::Item as distr::uniform::SampleBorrow<X>>::borrow(move _46) -> [return: bb28, unwind: bb80],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _30 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[9],
                },
                kind: drop(_36) -> [return: bb41, unwind: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _44 = &_45,
            StorageDead(_46),
            StorageLive(_47),
            StorageLive(_48),
            StorageLive(_49),
            _49 = &_19,
            _48 = &(*_49),
            _47 = &_48,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:117:17: 117:38 (#0),
                    scope: scope[10],
                },
                kind: _43 = <&X as core::cmp::PartialOrd>::ge(move _44, move _47) -> [return: bb29, unwind: bb80],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:117:17: 117:38 (#0),
                    scope: scope[10],
                },
                kind: switchInt(move _43) -> [0: bb31, otherwise: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
            StorageDead(_44),
            StorageDead(_49),
            StorageDead(_48),
            StorageDead(_45),
            _42 = const (),
            StorageDead(_43),
            StorageDead(_42),
            StorageLive(_52),
            StorageLive(_53),
            _53 = &mut _26,
            StorageLive(_54),
            StorageLive(_55),
            _55 = &_4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:120:26: 120:46 (#0),
                    scope: scope[10],
                },
                kind: _54 = <X as core::clone::Clone>::clone(move _55) -> [return: bb32, unwind: bb80],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
            StorageDead(_44),
            StorageDead(_49),
            StorageDead(_48),
            StorageDead(_45),
            StorageLive(_51),
            _51 = distr::weighted::Error::InvalidWeight,
            _0 = core::result::Result::<distr::weighted::weighted_index::WeightedIndex<X>, distr::weighted::Error>::Err(move _51),
            StorageDead(_51),
            StorageDead(_43),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[10],
                },
                kind: goto -> bb59,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:120:13: 120:47 (#0),
                    scope: scope[10],
                },
                kind: _52 = alloc::vec::Vec::<X>::push(move _53, move _54) -> [return: bb33, unwind: bb79],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            StorageDead(_53),
            StorageDead(_52),
            StorageLive(_56),
            StorageLive(_57),
            _57 = &mut _4,
            StorageLive(_58),
            StorageLive(_59),
            StorageLive(_60),
            _60 = &_41,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:122:62: 122:72 (#0),
                    scope: scope[11],
                },
                kind: _59 = <<I as core::iter::IntoIterator>::Item as distr::uniform::SampleBorrow<X>>::borrow(move _60) -> [return: bb34, unwind: bb80],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _58 = &(*_59),
            StorageDead(_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:122:30: 122:73 (#0),
                    scope: scope[11],
                },
                kind: _56 = <X as distr::weighted::Weight>::checked_add_assign(move _57, move _58) -> [return: bb35, unwind: bb80],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_58),
            StorageDead(_57),
            PlaceMention(_56),
            _61 = discriminant(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:122:20: 122:27 (#0),
                    scope: scope[11],
                },
                kind: switchInt(move _61) -> [1: bb36, otherwise: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:122:20: 122:27 (#0),
                    scope: scope[11],
                },
                kind: falseEdge -> [real: bb37, imaginary: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_63),
            _63 = distr::weighted::Error::Overflow,
            _0 = core::result::Result::<distr::weighted::weighted_index::WeightedIndex<X>, distr::weighted::Error>::Err(move _63),
            StorageDead(_63),
            StorageDead(_59),
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[9],
                },
                kind: goto -> bb59,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _35 = const (),
            StorageDead(_59),
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#0),
                    scope: scope[9],
                },
                kind: drop(_41) -> [return: bb39, unwind: bb81],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[9],
                },
                kind: drop(_36) -> [return: bb40, unwind: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_36),
            StorageDead(_35),
            _34 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:114:9: 125:10 (#463),
                    scope: scope[9],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_36),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[8],
                },
                kind: drop(_33) -> [return: bb42, unwind: bb83],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[8],
                },
                kind: drop(_31) -> [return: bb43, unwind: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
            StorageLive(_64),
            StorageLive(_65),
            StorageLive(_66),
            _66 = &_4,
            StorageLive(_67),
            _67 = &_19,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:127:12: 127:32 (#0),
                    scope: scope[8],
                },
                kind: _65 = <X as core::cmp::PartialEq>::eq(move _66, move _67) -> [return: bb44, unwind: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:127:12: 127:32 (#0),
                    scope: scope[8],
                },
                kind: switchInt(move _65) -> [0: bb46, otherwise: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            StorageDead(_66),
            StorageLive(_69),
            _69 = distr::weighted::Error::InsufficientNonZero,
            _0 = core::result::Result::<distr::weighted::weighted_index::WeightedIndex<X>, distr::weighted::Error>::Err(move _69),
            StorageDead(_69),
            StorageDead(_65),
            StorageDead(_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[8],
                },
                kind: goto -> bb64,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            StorageDead(_66),
            _64 = const (),
            StorageDead(_65),
            StorageDead(_64),
            StorageLive(_70),
            StorageLive(_71),
            StorageLive(_72),
            _72 = move _19,
            StorageLive(_73),
            StorageLive(_74),
            _74 = &_4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:130:43: 130:63 (#0),
                    scope: scope[8],
                },
                kind: _73 = <X as core::clone::Clone>::clone(move _74) -> [return: bb47, unwind: bb78],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:130:21: 130:64 (#0),
                    scope: scope[8],
                },
                kind: _71 = <<X as distr::uniform::SampleUniform>::Sampler as distr::uniform::UniformSampler>::new::<X, X>(move _72, move _73) -> [return: bb48, unwind: bb77],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
            StorageDead(_72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:130:21: 130:73 (#0),
                    scope: scope[8],
                },
                kind: _70 = core::result::Result::<<X as distr::uniform::SampleUniform>::Sampler, distr::uniform::Error>::unwrap(move _71) -> [return: bb49, unwind: bb76],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_71),
            FakeRead(ForLet(None), _70),
            StorageLive(_75),
            StorageLive(_76),
            _76 = move _26,
            StorageLive(_77),
            _77 = move _4,
            StorageLive(_78),
            _78 = move _70,
            _75 = distr::weighted::weighted_index::WeightedIndex::<X> { cumulative_weights: move _76, total_weight: move _77, weight_distribution: move _78 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:136:9: 136:10 (#0),
                    scope: scope[12],
                },
                kind: drop(_78) -> [return: bb50, unwind: bb72],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:136:9: 136:10 (#0),
                    scope: scope[12],
                },
                kind: drop(_77) -> [return: bb51, unwind: bb73],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:136:9: 136:10 (#0),
                    scope: scope[12],
                },
                kind: drop(_76) -> [return: bb52, unwind: bb74],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_76),
            _0 = core::result::Result::<distr::weighted::weighted_index::WeightedIndex<X>, distr::weighted::Error>::Ok(move _75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:136:10: 136:11 (#0),
                    scope: scope[12],
                },
                kind: drop(_75) -> [return: bb53, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_70) -> [return: bb54, unwind: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_70),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_26) -> [return: bb55, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_19) -> [return: bb56, unwind: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_4) -> [return: bb57, unwind: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb58, unwind: bb95],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb71, unwind: bb96],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#0),
                    scope: scope[9],
                },
                kind: drop(_41) -> [return: bb60, unwind: bb81],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[9],
                },
                kind: drop(_36) -> [return: bb61, unwind: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_36),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[8],
                },
                kind: drop(_33) -> [return: bb62, unwind: bb83],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[8],
                },
                kind: drop(_31) -> [return: bb63, unwind: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[8],
                },
                kind: goto -> bb64,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_26) -> [return: bb65, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb66,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_19) -> [return: bb67, unwind: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_4) -> [return: bb69, unwind: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb69,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb70, unwind: bb95],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb71, unwind: bb96],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:6: 137:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:136:9: 136:10 (#0),
                    scope: scope[12],
                },
                kind: drop(_77) -> [return: bb73, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:136:9: 136:10 (#0),
                    scope: scope[12],
                },
                kind: drop(_76) -> [return: bb74, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:136:10: 136:11 (#0),
                    scope: scope[12],
                },
                kind: drop(_75) -> [return: bb75, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_70) -> [return: bb85, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:130:72: 130:73 (#0),
                    scope: scope[8],
                },
                kind: drop(_71) -> [return: bb85, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:130:63: 130:64 (#0),
                    scope: scope[8],
                },
                kind: drop(_73) -> [return: bb78, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:130:63: 130:64 (#0),
                    scope: scope[8],
                },
                kind: drop(_72) -> [return: bb85, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:120:46: 120:47 (#0),
                    scope: scope[10],
                },
                kind: drop(_54) -> [return: bb80, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#0),
                    scope: scope[9],
                },
                kind: drop(_41) -> [return: bb81, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[9],
                },
                kind: drop(_36) -> [return: bb82, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[8],
                },
                kind: drop(_33) -> [return: bb83, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:125:9: 125:10 (#463),
                    scope: scope[8],
                },
                kind: drop(_31) -> [return: bb85, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:114:21: 114:22 (#464),
                    scope: scope[8],
                },
                kind: drop(_32) -> [return: bb85, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_26) -> [return: bb86, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_19) -> [return: bb88, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:91: 106:92 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb88, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_4) -> [return: bb93, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:91: 106:92 (#0),
                    scope: scope[1],
                },
                kind: drop(_8) -> [return: bb90, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:91: 106:92 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb93, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:73: 106:74 (#460),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb93, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:106:72: 106:73 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb93, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb95, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:105:42: 105:43 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb95, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:137:5: 137:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb96, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/weighted/weighted_index.rs:99:5: 137:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<distr::weighted::weighted_index::WeightedIndex<X/#0>, distr::weighted::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:99:34: 99:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/weighted/weighted_index.rs:99:28: 99:29 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:99:19: 99:26 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:99:19: 99:26 (#0),
                    },
                ),
            ),
        ),
        ty: I/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:99:19: 99:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:105:24: 105:43 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:105:13: 105:21 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#1,
                ],
                def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:105:13: 105:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: I/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:105:24: 105:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:106:35: 106:91 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:106:13: 106:29 (#0),
                    },
                ),
            ),
        ),
        ty: X/#0,
        user_ty: Some(
            UserTypeProjections {
                contents: [
                    (
                        UserTypeProjection {
                            base: UserType(0),
                            projs: [],
                        },
                        src/distr/weighted/weighted_index.rs:106:31: 106:32 (#0),
                    ),
                ],
            },
        ),
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:13: 106:29 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:35: 106:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:35: 106:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:35: 106:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#1,
                ],
                def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:35: 106:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, distr::weighted::Error>, Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:35: 106:74 (#460),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item) }), distr::weighted::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:35: 106:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:35: 106:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:35: 106:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: distr::weighted::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:53: 106:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:73: 106:74 (#461),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _9,
                                ),
                                src/distr/weighted/weighted_index.rs:106:35: 106:74 (#460),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:106:73: 106:74 (#461),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, distr::weighted::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:73: 106:74 (#461),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:73: 106:74 (#461),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, distr::weighted::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:73: 106:74 (#461),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _9,
                                ),
                                src/distr/weighted/weighted_index.rs:106:35: 106:74 (#460),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:106:35: 106:74 (#460),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#1,
                ],
                def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:106:35: 106:74 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:108:20: 108:27 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:108:13: 108:17 (#0),
                    },
                ),
            ),
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:108:13: 108:17 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:109:9: 111:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:109:13: 109:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:109:14: 109:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:109:30: 109:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:109:36: 111:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::weighted::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:110:24: 110:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:113:27: 113:70 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:113:13: 113:24 (#0),
                    },
                ),
            ),
        ),
        ty: alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:113:13: 113:24 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:113:51: 113:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, core::option::Option<usize>),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:113:51: 113:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:113:51: 113:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:9: 125:10 (#463),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#1,
                ],
                def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#1,
                ],
                def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _31,
                                ),
                                src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#1,
                ],
                def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:99:5: 137:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:9: 125:10 (#463),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:9: 125:10 (#463),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _36,
                                ),
                                src/distr/weighted/weighted_index.rs:114:18: 114:22 (#464),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:114:13: 114:14 (#465),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#1,
                ],
                def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:114:13: 114:14 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:117:13: 119:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:117:17: 117:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:117:18: 117:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:117:18: 117:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:117:18: 117:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:117:32: 117:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:117:32: 117:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:117:32: 117:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:117:39: 119:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::weighted::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:118:28: 118:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:120:13: 120:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:120:13: 120:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:120:26: 120:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:120:26: 120:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:122:13: 124:14 (#0),
                },
            ),
        ),
        ty: core::result::Result<(), ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:122:30: 122:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:122:13: 124:14 (#0),
                },
            ),
        ),
        ty: &'{erased} mut X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:122:30: 122:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:122:13: 124:14 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:122:62: 122:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:122:13: 124:14 (#0),
                },
            ),
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:122:62: 122:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:122:13: 124:14 (#0),
                },
            ),
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(1:8326 ~ core[a245]::iter::traits::collect::IntoIterator::Item) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:122:62: 122:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:122:20: 122:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/weighted/weighted_index.rs:122:13: 124:14 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:122:74: 124:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::weighted::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:123:28: 123:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:127:9: 129:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:127:12: 127:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:127:12: 127:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:127:28: 127:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:127:33: 129:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::weighted::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:128:24: 128:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/weighted/weighted_index.rs:130:21: 130:73 (#0),
                            ),
                        ),
                        pat_span: src/distr/weighted/weighted_index.rs:130:13: 130:18 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    X/#0,
                ],
                def_id: DefId(0:355 ~ rand[eea3]::distr::uniform::SampleUniform::Sampler),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:130:13: 130:18 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [X/#0], def_id: DefId(0:355 ~ rand[eea3]::distr::uniform::SampleUniform::Sampler) }), distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:130:21: 130:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:130:37: 130:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:130:43: 130:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:130:43: 130:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::weighted::weighted_index::WeightedIndex<X/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:132:12: 136:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: alloc::vec::Vec<X/#0, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:133:33: 133:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: X/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:134:13: 134:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    X/#0,
                ],
                def_id: DefId(0:355 ~ rand[eea3]::distr::uniform::SampleUniform::Sampler),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/weighted/weighted_index.rs:135:34: 135:39 (#0),
            scope: scope[0],
        },
    },
]