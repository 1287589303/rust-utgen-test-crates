[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = ((*_1).0: u64),
            _4 = Eq(move _5, const distr::bernoulli::ALWAYS_TRUE),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/bernoulli.rs:157:12: 157:37 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb2, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _0 = const true,
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/bernoulli.rs:162:6: 162:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = const (),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/bernoulli.rs:160:22: 160:34 (#0),
                    scope: scope[0],
                },
                kind: _7 = <R as rng::Rng>::random::<u64>(move _8) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            FakeRead(ForLet(None), _7),
            AscribeUserType(_7, o, UserTypeProjection { base: UserType(1), projs: [] }),
            StorageLive(_9),
            _9 = _7,
            StorageLive(_10),
            _10 = ((*_1).0: u64),
            _0 = Lt(move _9, move _10),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/bernoulli.rs:162:6: 162:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/bernoulli.rs:162:6: 162:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/bernoulli.rs:155:5: 162:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:155:55: 155:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} distr::bernoulli::Bernoulli,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:155:32: 155:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/bernoulli.rs:155:44: 155:50 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/bernoulli.rs:155:39: 155:42 (#0),
                            ),
                        ),
                        pat_span: src/distr/bernoulli.rs:155:39: 155:42 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:155:39: 155:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:157:9: 159:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:157:12: 157:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:157:12: 157:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:157:38: 159:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/bernoulli.rs:160:22: 160:34 (#0),
                            ),
                        ),
                        pat_span: src/distr/bernoulli.rs:160:13: 160:14 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: Some(
            UserTypeProjections {
                contents: [
                    (
                        UserTypeProjection {
                            base: UserType(0),
                            projs: [],
                        },
                        src/distr/bernoulli.rs:160:16: 160:19 (#0),
                    ),
                ],
            },
        ),
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:160:13: 160:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:160:22: 160:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/bernoulli.rs:161:9: 161:23 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:161:9: 161:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/bernoulli.rs:161:9: 161:23 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/bernoulli.rs:161:13: 161:23 (#0),
            scope: scope[0],
        },
    },
]