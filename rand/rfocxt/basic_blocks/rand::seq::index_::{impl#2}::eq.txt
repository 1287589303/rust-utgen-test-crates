[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
            StorageLive(_5),
            _5 = _2,
            _3 = (move _4, move _5),
            StorageDead(_5),
            StorageDead(_4),
            PlaceMention(_3),
            _8 = discriminant((*(_3.0: &seq::index_::IndexVec))),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:115:9: 115:28 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _8) -> [0: bb2, 1: bb5, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:115:15: 115:28 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = discriminant((*(_3.1: &seq::index_::IndexVec))),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:115:9: 115:28 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _6) -> [0: bb3, 1: bb4, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:116:13: 116:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb8, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:120:13: 120:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = discriminant((*(_3.1: &seq::index_::IndexVec))),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:115:9: 115:28 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _7) -> [0: bb7, 1: bb6, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:118:13: 118:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_35),
            _35 = &(((*(_3.0: &seq::index_::IndexVec)) as U64).0: alloc::vec::Vec<u64>),
            StorageLive(_36),
            _36 = &(((*(_3.1: &seq::index_::IndexVec)) as U32).0: alloc::vec::Vec<u32>),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &(*_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:18: 125:26 (#0),
                    scope: scope[4],
                },
                kind: _38 = alloc::vec::Vec::<u64>::len(move _39) -> [return: bb24, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            _9 = &(((*(_3.0: &seq::index_::IndexVec)) as U32).0: alloc::vec::Vec<u32>),
            StorageLive(_10),
            _10 = &(((*(_3.1: &seq::index_::IndexVec)) as U32).0: alloc::vec::Vec<u32>),
            StorageLive(_11),
            _11 = &_9,
            StorageLive(_12),
            _12 = &_10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:116:35: 116:43 (#0),
                    scope: scope[1],
                },
                kind: _0 = <&alloc::vec::Vec<u32> as core::cmp::PartialEq>::eq(move _11, move _12) -> [return: bb9, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:116:42: 116:43 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_13),
            _13 = &(((*(_3.0: &seq::index_::IndexVec)) as U64).0: alloc::vec::Vec<u64>),
            StorageLive(_14),
            _14 = &(((*(_3.1: &seq::index_::IndexVec)) as U64).0: alloc::vec::Vec<u64>),
            StorageLive(_15),
            _15 = &_13,
            StorageLive(_16),
            _16 = &_14,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:118:35: 118:43 (#0),
                    scope: scope[2],
                },
                kind: _0 = <&alloc::vec::Vec<u64> as core::cmp::PartialEq>::eq(move _15, move _16) -> [return: bb11, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_14),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:118:42: 118:43 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            _17 = &(((*(_3.0: &seq::index_::IndexVec)) as U32).0: alloc::vec::Vec<u32>),
            StorageLive(_18),
            _18 = &(((*(_3.1: &seq::index_::IndexVec)) as U64).0: alloc::vec::Vec<u64>),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            _21 = &(*_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:18: 121:26 (#0),
                    scope: scope[3],
                },
                kind: _20 = alloc::vec::Vec::<u32>::len(move _21) -> [return: bb13, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &(*_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:30: 121:38 (#0),
                    scope: scope[3],
                },
                kind: _22 = alloc::vec::Vec::<u64>::len(move _23) -> [return: bb14, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            _19 = Eq(move _20, move _22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:17: 121:39 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _19) -> [0: bb16, otherwise: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_20),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &(*_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:44: 121:53 (#0),
                    scope: scope[3],
                },
                kind: _28 = <alloc::vec::Vec<u32> as core::ops::Deref>::deref(move _29) -> [return: bb17, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_20),
            _0 = const false,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _27 = &(*_28),
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:44: 121:53 (#0),
                    scope: scope[3],
                },
                kind: _26 = core::slice::<impl [u32]>::iter(move _27) -> [return: bb18, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &(*_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:58: 121:67 (#0),
                    scope: scope[3],
                },
                kind: _32 = <alloc::vec::Vec<u64> as core::ops::Deref>::deref(move _33) -> [return: bb19, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _31 = &(*_32),
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:58: 121:67 (#0),
                    scope: scope[3],
                },
                kind: _30 = core::slice::<impl [u64]>::iter(move _31) -> [return: bb20, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:44: 121:68 (#0),
                    scope: scope[3],
                },
                kind: _25 = <core::slice::Iter<'_, u32> as core::iter::Iterator>::zip::<core::slice::Iter<'_, u64>>(move _26, move _30) -> [return: bb21, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _24 = &mut _25,
            StorageDead(_30),
            StorageDead(_26),
            StorageLive(_34),
            _34 = {closure@src/seq/index.rs:121:73: 121:81},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:43: 121:99 (#0),
                    scope: scope[3],
                },
                kind: _0 = <core::iter::Zip<core::slice::Iter<'_, u32>, core::slice::Iter<'_, u64>> as core::iter::Iterator>::all::<{closure@src/seq/index.rs:121:73: 121:81}>(move _24, move _34) -> [return: bb22, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_32),
            StorageDead(_28),
            StorageDead(_25),
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageDead(_18),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:122:13: 122:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageLive(_40),
            StorageLive(_41),
            _41 = &(*_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:30: 125:38 (#0),
                    scope: scope[4],
                },
                kind: _40 = alloc::vec::Vec::<u32>::len(move _41) -> [return: bb25, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            _37 = Eq(move _38, move _40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:17: 125:39 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _37) -> [0: bb27, otherwise: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            StorageDead(_38),
            StorageLive(_42),
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            _47 = &(*_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:44: 125:53 (#0),
                    scope: scope[4],
                },
                kind: _46 = <alloc::vec::Vec<u64> as core::ops::Deref>::deref(move _47) -> [return: bb28, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            StorageDead(_38),
            _0 = const false,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb34,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _45 = &(*_46),
            StorageDead(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:44: 125:53 (#0),
                    scope: scope[4],
                },
                kind: _44 = core::slice::<impl [u64]>::iter(move _45) -> [return: bb29, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
            StorageLive(_48),
            StorageLive(_49),
            StorageLive(_50),
            StorageLive(_51),
            _51 = &(*_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:58: 125:67 (#0),
                    scope: scope[4],
                },
                kind: _50 = <alloc::vec::Vec<u32> as core::ops::Deref>::deref(move _51) -> [return: bb30, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _49 = &(*_50),
            StorageDead(_51),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:58: 125:67 (#0),
                    scope: scope[4],
                },
                kind: _48 = core::slice::<impl [u32]>::iter(move _49) -> [return: bb31, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:44: 125:68 (#0),
                    scope: scope[4],
                },
                kind: _43 = <core::slice::Iter<'_, u64> as core::iter::Iterator>::zip::<core::slice::Iter<'_, u32>>(move _44, move _48) -> [return: bb32, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _42 = &mut _43,
            StorageDead(_48),
            StorageDead(_44),
            StorageLive(_52),
            _52 = {closure@src/seq/index.rs:125:73: 125:81},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:43: 125:99 (#0),
                    scope: scope[4],
                },
                kind: _0 = <core::iter::Zip<core::slice::Iter<'_, u64>, core::slice::Iter<'_, u32>> as core::iter::Iterator>::all::<{closure@src/seq/index.rs:125:73: 125:81}>(move _42, move _52) -> [return: bb33, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            StorageDead(_50),
            StorageDead(_46),
            StorageDead(_43),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb34,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            StorageDead(_36),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:126:13: 126:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:128:6: 128:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:113:5: 128:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:113:39: 113:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} seq::index_::IndexVec,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:113:11: 113:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/seq/index.rs:113:25: 113:34 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/seq/index.rs:113:18: 113:23 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:113:18: 113:23 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} seq::index_::IndexVec,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:113:18: 113:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:115:9: 127:10 (#0),
                },
            ),
        ),
        ty: (&'{erased} seq::index_::IndexVec, &'{erased} seq::index_::IndexVec),
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:115:15: 115:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:115:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} seq::index_::IndexVec,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:115:16: 115:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:115:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} seq::index_::IndexVec,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:115:22: 115:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:116:23: 116:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:118:23: 118:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:116:14: 116:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/seq/index.rs:115:15: 115:28 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:116:13: 116:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:116:18: 116:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/seq/index.rs:115:15: 115:28 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:116:13: 116:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:116:27: 116:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:115:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:116:35: 116:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:115:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:116:41: 116:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/seq/index.rs:115:15: 115:28 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:118:13: 118:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:118:18: 118:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/seq/index.rs:115:15: 115:28 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:118:13: 118:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:118:27: 118:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:115:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:118:35: 118:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:115:9: 127:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:118:41: 118:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/seq/index.rs:115:15: 115:28 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:120:13: 120:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:120:18: 120:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/seq/index.rs:115:15: 115:28 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:120:13: 120:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:120:27: 120:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:17: 121:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:18: 121:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:18: 121:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:30: 121:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:30: 121:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::iter::Zip<core::slice::Iter<'{erased}, u32>, core::slice::Iter<'{erased}, u64>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:44: 121:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: core::iter::Zip<core::slice::Iter<'{erased}, u32>, core::slice::Iter<'{erased}, u64>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:44: 121:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u32>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:44: 121:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u32],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:44: 121:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u32],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:44: 121:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:44: 121:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:58: 121:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u64],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:58: 121:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u64],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:58: 121:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:58: 121:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:121:17: 121:99 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:850 ~ rand[eea3]::seq::index_::{impl#2}::eq::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn(((&'{erased} u32, &'{erased} u64),)) -> bool, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:121:73: 121:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/seq/index.rs:115:15: 115:28 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:124:13: 124:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:124:18: 124:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/seq/index.rs:115:15: 115:28 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:124:13: 124:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:124:27: 124:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:17: 125:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:18: 125:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:18: 125:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:30: 125:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:30: 125:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::iter::Zip<core::slice::Iter<'{erased}, u64>, core::slice::Iter<'{erased}, u32>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:44: 125:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: core::iter::Zip<core::slice::Iter<'{erased}, u64>, core::slice::Iter<'{erased}, u32>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:44: 125:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:44: 125:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u64],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:44: 125:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u64],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:44: 125:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:44: 125:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u32>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:58: 125:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u32],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:58: 125:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: &'{erased} [u32],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:58: 125:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:58: 125:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:125:17: 125:99 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:851 ~ rand[eea3]::seq::index_::{impl#2}::eq::{closure#1}),
            [
                i16,
                Binder { value: extern "RustCall" fn(((&'{erased} u64, &'{erased} u32),)) -> bool, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:125:73: 125:97 (#0),
            scope: scope[0],
        },
    },
]