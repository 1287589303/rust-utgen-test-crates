[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:445:45: 445:57 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::ops::RangeInclusive::<T>::start(move _4) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:445:59: 445:69 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::ops::RangeInclusive::<T>::end(move _6) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_7),
            _7 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:445:9: 445:75 (#0),
                    scope: scope[0],
                },
                kind: _0 = <<T as distr::uniform::SampleUniform>::Sampler as distr::uniform::UniformSampler>::sample_single_inclusive::<R, &T, &T>(move _3, move _5, move _7) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_5),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:446:5: 446:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:446:6: 446:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:446:5: 446:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform.rs:444:5: 446:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<T/#0, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:444:65: 444:81 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: core::ops::RangeInclusive<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:444:43: 444:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform.rs:444:54: 444:60 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform.rs:444:49: 444:52 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform.rs:444:49: 444:52 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:444:49: 444:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:445:9: 445:75 (#0),
                },
            ),
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:445:45: 445:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:445:9: 445:75 (#0),
                },
            ),
        ),
        ty: &'{erased} core::ops::RangeInclusive<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:445:45: 445:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:445:9: 445:75 (#0),
                },
            ),
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:445:59: 445:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:445:9: 445:75 (#0),
                },
            ),
        ),
        ty: &'{erased} core::ops::RangeInclusive<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:445:59: 445:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform.rs:445:9: 445:75 (#0),
                },
            ),
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform.rs:445:71: 445:74 (#0),
            scope: scope[0],
        },
    },
]