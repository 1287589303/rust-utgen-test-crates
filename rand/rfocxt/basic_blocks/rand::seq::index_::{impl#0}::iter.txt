[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _2 = discriminant((*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:89:9: 89:19 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:89:15: 89:19 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:90:13: 90:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb4, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_8),
            _8 = &(((*_1) as U64).0: alloc::vec::Vec<u64>),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &(*_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:92:51: 92:59 (#0),
                    scope: scope[2],
                },
                kind: _11 = <alloc::vec::Vec<u64> as core::ops::Deref>::deref(move _12) -> [return: bb7, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &(((*_1) as U32).0: alloc::vec::Vec<u32>),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:90:51: 90:59 (#0),
                    scope: scope[1],
                },
                kind: _6 = <alloc::vec::Vec<u32> as core::ops::Deref>::deref(move _7) -> [return: bb5, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = &(*_6),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:90:51: 90:59 (#0),
                    scope: scope[1],
                },
                kind: _4 = core::slice::<impl [u32]>::iter(move _5) -> [return: bb6, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _0 = seq::index_::IndexVecIter::<'_>::U32(move _4),
            StorageDead(_4),
            StorageDead(_6),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:90:59: 90:60 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb9,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = &(*_11),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:92:51: 92:59 (#0),
                    scope: scope[2],
                },
                kind: _9 = core::slice::<impl [u64]>::iter(move _10) -> [return: bb8, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            _0 = seq::index_::IndexVecIter::<'_>::U64(move _9),
            StorageDead(_9),
            StorageDead(_11),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:92:59: 92:60 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb9,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:94:6: 94:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/index.rs:88:5: 94:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: seq::index_::IndexVecIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:88:27: 88:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} seq::index_::IndexVec,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:88:17: 88:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:90:13: 90:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/seq/index.rs:89:15: 89:19 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:90:13: 90:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:90:27: 90:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::slice::Iter<'{erased}, u32>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:90:51: 90:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:89:9: 93:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [u32],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:90:51: 90:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:89:9: 93:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [u32],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:90:51: 90:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:89:9: 93:10 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:90:51: 90:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/seq/index.rs:89:15: 89:19 (#0),
                            ),
                        ),
                        pat_span: src/seq/index.rs:92:13: 92:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:92:27: 92:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::slice::Iter<'{erased}, u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:92:51: 92:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:89:9: 93:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [u64],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:92:51: 92:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:89:9: 93:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [u64],
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:92:51: 92:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/seq/index.rs:89:9: 93:10 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u64, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/index.rs:92:51: 92:52 (#0),
            scope: scope[0],
        },
    },
]