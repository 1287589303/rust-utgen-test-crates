[
    BasicBlockData {
        statements: [
            PlaceMention(((*_1).0: distr::uniform::other::UniformDurationMode)),
            _3 = discriminant(((*_1).0: distr::uniform::other::UniformDurationMode)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:217:9: 217:24 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), ((*_1).0: distr::uniform::other::UniformDurationMode)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:217:15: 217:24 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:218:13: 218:55 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:222:13: 222:50 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb8, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_22),
            _22 = ((((*_1).0: distr::uniform::other::UniformDurationMode) as Large).0: u64),
            StorageLive(_23),
            _23 = ((((*_1).0: distr::uniform::other::UniformDurationMode) as Large).1: u32),
            StorageLive(_24),
            _24 = ((((*_1).0: distr::uniform::other::UniformDurationMode) as Large).2: distr::uniform::Uniform<u64>),
            StorageLive(_25),
            StorageLive(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:232:34: 232:64 (#0),
                    scope: scope[5],
                },
                kind: _26 = distr::uniform::Uniform::<u32>::new::<u32, u32>(const 0_u32, const 1000000000_u32) -> [return: bb13, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = ((((*_1).0: distr::uniform::other::UniformDurationMode) as Small).0: u64),
            StorageLive(_5),
            _5 = ((((*_1).0: distr::uniform::other::UniformDurationMode) as Small).1: distr::uniform::Uniform<u32>),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &_5,
            StorageLive(_8),
            _8 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:219:25: 219:42 (#0),
                    scope: scope[1],
                },
                kind: _6 = <distr::uniform::Uniform<u32> as distr::distribution::Distribution<u32>>::sample::<R>(move _7, move _8) -> [return: bb6, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            FakeRead(ForLet(None), _6),
            StorageLive(_9),
            _9 = _4,
            StorageLive(_10),
            _10 = _6,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:220:17: 220:39 (#0),
                    scope: scope[2],
                },
                kind: _0 = core::time::Duration::new(move _9, move _10) -> [return: bb7, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:221:13: 221:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_11),
            _11 = ((((*_1).0: distr::uniform::other::UniformDurationMode) as Medium).0: distr::uniform::Uniform<u64>),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &_11,
            StorageLive(_14),
            _14 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:223:29: 223:46 (#0),
                    scope: scope[3],
                },
                kind: _12 = <distr::uniform::Uniform<u64> as distr::distribution::Distribution<u64>>::sample::<R>(move _13, move _14) -> [return: bb9, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_13),
            FakeRead(ForLet(None), _12),
            StorageLive(_15),
            StorageLive(_16),
            _16 = _12,
            _17 = Eq(const 1000000000_u64, const 0_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:224:31: 224:52 (#0),
                    scope: scope[4],
                },
                kind: assert(!move _17, "attempt to divide `{}` by zero", _16) -> [success: bb10, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _15 = Div(move _16, const 1000000000_u64),
            StorageDead(_16),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = _12,
            _21 = Eq(const 1000000000_u64, const 0_u64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:224:54: 224:77 (#0),
                    scope: scope[4],
                },
                kind: assert(!move _21, "attempt to calculate the remainder of `{}` with a divisor of zero", _20) -> [success: bb11, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = Rem(move _20, const 1000000000_u64),
            StorageDead(_20),
            _18 = move _19 as u32 (IntToInt),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:224:17: 224:85 (#0),
                    scope: scope[4],
                },
                kind: _0 = core::time::Duration::new(move _15, move _18) -> [return: bb12, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_15),
            StorageDead(_12),
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:225:13: 225:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:232:34: 232:73 (#0),
                    scope: scope[5],
                },
                kind: _25 = core::result::Result::<distr::uniform::Uniform<u32>, distr::uniform::Error>::unwrap(move _26) -> [return: bb14, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            FakeRead(ForLet(None), _25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:233:17: 240:18 (#0),
                    scope: scope[6],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:233:17: 240:18 (#0),
                    scope: scope[6],
                },
                kind: falseUnwind -> [real: bb16, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_28),
            StorageLive(_29),
            _29 = &_24,
            StorageLive(_30),
            _30 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:234:29: 234:45 (#0),
                    scope: scope[6],
                },
                kind: _28 = <distr::uniform::Uniform<u64> as distr::distribution::Distribution<u64>>::sample::<R>(move _29, move _30) -> [return: bb17, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_29),
            FakeRead(ForLet(None), _28),
            StorageLive(_31),
            StorageLive(_32),
            _32 = &_25,
            StorageLive(_33),
            _33 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:235:29: 235:51 (#0),
                    scope: scope[7],
                },
                kind: _31 = <distr::uniform::Uniform<u32> as distr::distribution::Distribution<u32>>::sample::<R>(move _32, move _33) -> [return: bb18, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            StorageDead(_32),
            FakeRead(ForLet(None), _31),
            StorageLive(_34),
            StorageLive(_35),
            _35 = _28,
            StorageLive(_36),
            _36 = _22,
            _34 = Eq(move _35, move _36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:236:26: 236:39 (#0),
                    scope: scope[8],
                },
                kind: switchInt(move _34) -> [0: bb22, otherwise: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_35),
            StorageLive(_37),
            StorageLive(_38),
            _38 = _31,
            StorageLive(_39),
            _39 = _23,
            _37 = Gt(move _38, move _39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:236:43: 236:56 (#0),
                    scope: scope[8],
                },
                kind: switchInt(move _37) -> [0: bb21, otherwise: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_38),
            _27 = const (),
            StorageDead(_37),
            StorageDead(_34),
            StorageDead(_31),
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:233:17: 240:18 (#0),
                    scope: scope[6],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[8],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[8],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_41),
            StorageLive(_42),
            _42 = _31,
            StorageLive(_43),
            _43 = ((*_1).1: u32),
            _44 = AddWithOverflow(_42, _43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:237:35: 237:50 (#0),
                    scope: scope[8],
                },
                kind: assert(!move (_44.1: bool), "attempt to compute `{} + {}`, which would overflow", move _42, move _43) -> [success: bb24, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _41 = move (_44.0: u32),
            StorageDead(_43),
            StorageDead(_42),
            FakeRead(ForLet(None), _41),
            StorageLive(_45),
            _45 = _28,
            StorageLive(_46),
            _46 = _41,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:238:31: 238:52 (#0),
                    scope: scope[9],
                },
                kind: _0 = core::time::Duration::new(move _45, move _46) -> [return: bb25, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_45),
            StorageDead(_41),
            StorageDead(_37),
            StorageDead(_34),
            StorageDead(_31),
            StorageDead(_28),
            StorageDead(_25),
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:241:13: 241:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:243:6: 243:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_other.rs:216:5: 243:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::time::Duration,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:216:55: 216:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} distr::uniform::other::UniformDuration,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:216:32: 216:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_other.rs:216:44: 216:50 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:216:39: 216:42 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:216:39: 216:42 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:216:39: 216:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:218:13: 218:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: distr::uniform::other::UniformDurationMode),
                                ),
                                src/distr/uniform_other.rs:217:15: 217:24 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:218:13: 218:55 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:218:42: 218:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: distr::uniform::other::UniformDurationMode),
                                ),
                                src/distr/uniform_other.rs:217:15: 217:24 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:218:13: 218:55 (#0),
                    },
                ),
            ),
        ),
        ty: distr::uniform::Uniform<u32>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:218:48: 218:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:219:25: 219:42 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:219:21: 219:22 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:219:21: 219:22 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} distr::uniform::Uniform<u32>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:219:25: 219:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:219:38: 219:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_other.rs:220:17: 220:39 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:220:31: 220:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_other.rs:220:17: 220:39 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:220:37: 220:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: distr::uniform::other::UniformDurationMode),
                                ),
                                src/distr/uniform_other.rs:217:15: 217:24 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:222:13: 222:50 (#0),
                    },
                ),
            ),
        ),
        ty: distr::uniform::Uniform<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:222:43: 222:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:223:29: 223:46 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:223:21: 223:26 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:223:21: 223:26 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} distr::uniform::Uniform<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:223:29: 223:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:223:42: 223:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_other.rs:224:17: 224:85 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:224:31: 224:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_other.rs:224:17: 224:85 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:224:31: 224:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:224:31: 224:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_other.rs:224:17: 224:85 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:224:54: 224:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_other.rs:224:17: 224:85 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:224:54: 224:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_other.rs:224:17: 224:85 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:224:55: 224:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:224:54: 224:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: distr::uniform::other::UniformDurationMode),
                                ),
                                src/distr/uniform_other.rs:217:15: 217:24 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:226:13: 230:14 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:227:17: 227:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: distr::uniform::other::UniformDurationMode),
                                ),
                                src/distr/uniform_other.rs:217:15: 217:24 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:226:13: 230:14 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:228:17: 228:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: distr::uniform::other::UniformDurationMode),
                                ),
                                src/distr/uniform_other.rs:217:15: 217:24 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:226:13: 230:14 (#0),
                    },
                ),
            ),
        ),
        ty: distr::uniform::Uniform<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:229:17: 229:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:232:34: 232:73 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:232:21: 232:31 (#0),
                    },
                ),
            ),
        ),
        ty: distr::uniform::Uniform<u32>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:232:21: 232:31 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<distr::uniform::Uniform<u32>, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:232:34: 232:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:216:5: 243:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:234:29: 234:45 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:234:25: 234:26 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:234:25: 234:26 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} distr::uniform::Uniform<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:234:29: 234:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:234:41: 234:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:235:29: 235:51 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:235:25: 235:26 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:235:25: 235:26 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} distr::uniform::Uniform<u32>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:235:29: 235:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:235:47: 235:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/uniform_other.rs:236:21: 239:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:236:26: 236:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/uniform_other.rs:236:21: 239:22 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:236:26: 236:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/uniform_other.rs:236:21: 239:22 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:236:31: 236:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/uniform_other.rs:236:21: 239:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:236:43: 236:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/uniform_other.rs:236:21: 239:22 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:236:43: 236:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/uniform_other.rs:236:21: 239:22 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:236:47: 236:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/distr/uniform_other.rs:236:21: 239:22 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:236:58: 239:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_other.rs:237:35: 237:50 (#0),
                            ),
                        ),
                        pat_span: src/distr/uniform_other.rs:237:29: 237:32 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:237:29: 237:32 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:237:35: 237:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:237:39: 237:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u32, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:237:35: 237:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:238:45: 238:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_other.rs:238:48: 238:51 (#0),
            scope: scope[0],
        },
    },
]