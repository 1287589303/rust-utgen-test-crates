[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = move _1,
            StorageLive(_5),
            _5 = move _2,
            StorageLive(_6),
            _6 = &mut (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_float.rs:161:17: 161:66 (#167),
                    scope: scope[0],
                },
                kind: _0 = <distr::uniform::float::UniformFloat<f32> as distr::uniform::UniformSampler>::sample_single_inclusive::<R, B1, B2>(move _4, move _5, move _6) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_float.rs:162:13: 162:14 (#167),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb2, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_float.rs:162:13: 162:14 (#167),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_float.rs:162:14: 162:14 (#167),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_float.rs:161:65: 161:66 (#167),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_float.rs:161:65: 161:66 (#167),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_float.rs:162:13: 162:14 (#167),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_float.rs:162:13: 162:14 (#167),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_float.rs:156:13: 162:14 (#167),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<f32, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_float.rs:156:94: 156:116 (#167),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_float.rs:156:62: 156:64 (#167),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_float.rs:156:55: 156:60 (#167),
                            ),
                        ),
                        pat_span: src/distr/uniform_float.rs:156:55: 156:60 (#167),
                    },
                ),
            ),
        ),
        ty: B1/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_float.rs:156:55: 156:60 (#167),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_float.rs:156:74: 156:76 (#167),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_float.rs:156:66: 156:72 (#167),
                            ),
                        ),
                        pat_span: src/distr/uniform_float.rs:156:66: 156:72 (#167),
                    },
                ),
            ),
        ),
        ty: B2/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_float.rs:156:66: 156:72 (#167),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_float.rs:156:83: 156:89 (#167),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_float.rs:156:78: 156:81 (#167),
                            ),
                        ),
                        pat_span: src/distr/uniform_float.rs:156:78: 156:81 (#167),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_float.rs:156:78: 156:81 (#167),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_float.rs:161:17: 161:66 (#167),
                },
            ),
        ),
        ty: B1/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_float.rs:161:47: 161:52 (#167),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_float.rs:161:17: 161:66 (#167),
                },
            ),
        ),
        ty: B2/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_float.rs:161:54: 161:60 (#167),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_float.rs:161:17: 161:66 (#167),
                },
            ),
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_float.rs:161:62: 161:65 (#167),
            scope: scope[0],
        },
    },
]