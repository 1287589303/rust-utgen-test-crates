[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = [const 0_u64; 4],
            FakeRead(ForLet(None), _2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &_1,
            _5 = &(*_6),
            _4 = move _5 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_5),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &mut _2,
            _8 = &mut (*_9),
            _7 = move _8 as &mut [u64] (PointerCoercion(Unsize)),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:37:9: 37:41 (#0),
                    scope: scope[1],
                },
                kind: _3 = rand_core::le::read_u64_into(move _4, move _7) -> [return: bb1, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_4),
            StorageDead(_9),
            StorageDead(_6),
            StorageDead(_3),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &_2,
            _14 = move _15 as &[u64] (PointerCoercion(Unsize)),
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:40:12: 40:24 (#0),
                    scope: scope[1],
                },
                kind: _13 = core::slice::<impl [u64]>::iter(move _14) -> [return: bb2, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = &mut _13,
            StorageDead(_14),
            StorageLive(_16),
            _16 = {closure@src/rngs/xoshiro256plusplus.rs:40:29: 40:33},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:40:12: 40:41 (#0),
                    scope: scope[1],
                },
                kind: _11 = <core::slice::Iter<'_, u64> as core::iter::Iterator>::all::<{closure@src/rngs/xoshiro256plusplus.rs:40:29: 40:33}>(move _12, move _16) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:40:12: 40:41 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _11) -> [0: bb5, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_13),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:41:20: 41:42 (#0),
                    scope: scope[1],
                },
                kind: _0 = <rngs::xoshiro256plusplus::Xoshiro256PlusPlus as rand_core::SeedableRng>::seed_from_u64(const 0_u64) -> [return: bb6, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_13),
            StorageDead(_12),
            _10 = const (),
            StorageDead(_11),
            StorageDead(_10),
            StorageLive(_18),
            _18 = _2,
            _0 = rngs::xoshiro256plusplus::Xoshiro256PlusPlus { s: move _18 },
            StorageDead(_18),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:44:6: 44:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:44:6: 44:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:44:6: 44:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/rngs/xoshiro256plusplus.rs:35:5: 44:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: rngs::xoshiro256plusplus::Xoshiro256PlusPlus,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:35:37: 35:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/rngs/xoshiro256plusplus.rs:35:24: 35:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/rngs/xoshiro256plusplus.rs:35:18: 35:22 (#0),
                            ),
                        ),
                        pat_span: src/rngs/xoshiro256plusplus.rs:35:18: 35:22 (#0),
                    },
                ),
            ),
        ),
        ty: [u8; 32_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:35:18: 35:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/rngs/xoshiro256plusplus.rs:36:25: 36:31 (#0),
                            ),
                        ),
                        pat_span: src/rngs/xoshiro256plusplus.rs:36:13: 36:22 (#0),
                    },
                ),
            ),
        ),
        ty: [u64; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:36:13: 36:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:37:9: 37:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:37:23: 37:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 32_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:37:23: 37:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 32_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:37:23: 37:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u64],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:37:30: 37:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u64; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:37:30: 37:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [u64; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:37:30: 37:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:40:9: 42:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:40:12: 40:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:40:12: 40:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:40:12: 40:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u64],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:40:12: 40:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u64; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:40:12: 40:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:639 ~ rand[eea3]::rngs::xoshiro256plusplus::{impl#0}::from_seed::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'{erased} u64,)) -> bool, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:40:29: 40:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:40:42: 42:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: [u64; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/rngs/xoshiro256plusplus.rs:43:33: 43:38 (#0),
            scope: scope[0],
        },
    },
]