[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = _2,
            _4 = Eq(move _5, const 0_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/increasing_uniform.rs:27:34: 27:40 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb2, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = const 1_u8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/increasing_uniform.rs:27:31: 27:57 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb3,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = const 0_u8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/increasing_uniform.rs:27:31: 27:57 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb3,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_6),
            _6 = move _1,
            StorageLive(_7),
            _7 = _2,
            StorageLive(_8),
            _8 = _3,
            _0 = seq::increasing_uniform::IncreasingUniform::<R> { rng: move _6, n: move _7, chunk: const 0_u32, chunk_remaining: move _8 },
            StorageDead(_8),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/increasing_uniform.rs:33:9: 33:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_6) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/increasing_uniform.rs:34:5: 34:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb5, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/increasing_uniform.rs:34:6: 34:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/increasing_uniform.rs:34:5: 34:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/seq/increasing_uniform.rs:24:5: 34:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: seq::increasing_uniform::IncreasingUniform<R/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/increasing_uniform.rs:24:35: 24:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/seq/increasing_uniform.rs:24:21: 24:22 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/seq/increasing_uniform.rs:24:16: 24:19 (#0),
                            ),
                        ),
                        pat_span: src/seq/increasing_uniform.rs:24:16: 24:19 (#0),
                    },
                ),
            ),
        ),
        ty: R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/increasing_uniform.rs:24:16: 24:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/seq/increasing_uniform.rs:24:27: 24:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/seq/increasing_uniform.rs:24:24: 24:25 (#0),
                            ),
                        ),
                        pat_span: src/seq/increasing_uniform.rs:24:24: 24:25 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/increasing_uniform.rs:24:24: 24:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/seq/increasing_uniform.rs:27:31: 27:57 (#0),
                            ),
                        ),
                        pat_span: src/seq/increasing_uniform.rs:27:13: 27:28 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/increasing_uniform.rs:27:13: 27:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/increasing_uniform.rs:27:34: 27:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/increasing_uniform.rs:27:34: 27:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/increasing_uniform.rs:29:13: 29:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/increasing_uniform.rs:30:13: 30:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/seq/increasing_uniform.rs:32:13: 32:28 (#0),
            scope: scope[0],
        },
    },
]