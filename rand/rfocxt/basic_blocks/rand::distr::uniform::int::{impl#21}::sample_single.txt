[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &_1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:162:28: 162:42 (#188),
                    scope: scope[0],
                },
                kind: _5 = <B1 as distr::uniform::SampleBorrow<u16>>::borrow(move _6) -> [return: bb1, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            _4 = (*_5),
            FakeRead(ForLet(None), _4),
            StorageDead(_5),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &_2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:163:29: 163:44 (#188),
                    scope: scope[1],
                },
                kind: _8 = <B2 as distr::uniform::SampleBorrow<u16>>::borrow(move _9) -> [return: bb2, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            _7 = (*_8),
            FakeRead(ForLet(None), _7),
            StorageDead(_8),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = _4,
            StorageLive(_13),
            _13 = _7,
            _11 = Lt(move _12, move _13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:164:21: 164:33 (#188),
                    scope: scope[2],
                },
                kind: switchInt(move _11) -> [0: bb4, otherwise: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
            _10 = const (),
            StorageDead(_11),
            StorageDead(_10),
            StorageLive(_16),
            _16 = _4,
            StorageLive(_17),
            StorageLive(_18),
            _18 = _7,
            _19 = SubWithOverflow(_18, const 1_u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:167:52: 167:60 (#188),
                    scope: scope[2],
                },
                kind: assert(!move (_19.1: bool), "attempt to compute `{} - {}`, which would overflow", move _18, const 1_u16) -> [success: bb5, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
            StorageLive(_15),
            _15 = distr::uniform::Error::EmptyRange,
            _0 = core::result::Result::<u16, distr::uniform::Error>::Err(move _15),
            StorageDead(_15),
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_7),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:168:13: 168:14 (#188),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb8, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = move (_19.0: u16),
            StorageDead(_18),
            StorageLive(_20),
            _20 = &mut (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:167:17: 167:66 (#188),
                    scope: scope[2],
                },
                kind: _0 = <distr::uniform::int::UniformInt<u16> as distr::uniform::UniformSampler>::sample_single_inclusive::<R, u16, u16>(move _16, move _17, move _20) -> [return: bb6, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_7),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:168:13: 168:14 (#188),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb7, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:168:13: 168:14 (#188),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb9, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:168:13: 168:14 (#188),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb9, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:168:14: 168:14 (#188),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:168:13: 168:14 (#188),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:168:13: 168:14 (#188),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb12, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/distr/uniform_int.rs:153:13: 168:14 (#188),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u16, distr::uniform::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:157:18: 157:40 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_int.rs:154:24: 154:26 (#188),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_int.rs:154:17: 154:22 (#188),
                            ),
                        ),
                        pat_span: src/distr/uniform_int.rs:154:17: 154:22 (#188),
                    },
                ),
            ),
        ),
        ty: B1/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:154:17: 154:22 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_int.rs:155:25: 155:27 (#188),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_int.rs:155:17: 155:23 (#188),
                            ),
                        ),
                        pat_span: src/distr/uniform_int.rs:155:17: 155:23 (#188),
                    },
                ),
            ),
        ),
        ty: B2/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:155:17: 155:23 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/distr/uniform_int.rs:156:22: 156:28 (#188),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_int.rs:156:17: 156:20 (#188),
                            ),
                        ),
                        pat_span: src/distr/uniform_int.rs:156:17: 156:20 (#188),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:156:17: 156:20 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_int.rs:162:27: 162:42 (#188),
                            ),
                        ),
                        pat_span: src/distr/uniform_int.rs:162:21: 162:24 (#188),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:162:21: 162:24 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:162:28: 162:42 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} B1/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:162:28: 162:33 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/distr/uniform_int.rs:163:28: 163:44 (#188),
                            ),
                        ),
                        pat_span: src/distr/uniform_int.rs:163:21: 163:25 (#188),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:163:21: 163:25 (#188),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:163:29: 163:44 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} B2/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:163:29: 163:35 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:164:17: 166:18 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:164:21: 164:33 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:164:22: 164:25 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:164:28: 164:32 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:164:34: 166:18 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: distr::uniform::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:165:32: 165:49 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_int.rs:167:17: 167:66 (#188),
                },
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:167:47: 167:50 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_int.rs:167:17: 167:66 (#188),
                },
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:167:52: 167:60 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_int.rs:167:17: 167:66 (#188),
                },
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:167:52: 167:56 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u16, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:167:52: 167:60 (#188),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/distr/uniform_int.rs:167:17: 167:66 (#188),
                },
            ),
        ),
        ty: &'{erased} mut R/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/distr/uniform_int.rs:167:62: 167:65 (#188),
            scope: scope[0],
        },
    },
]