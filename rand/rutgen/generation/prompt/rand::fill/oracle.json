{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// src/lib.rs\n// crate name is rand\npub use rand_core;\npub use rand_core::{CryptoRng, RngCore, SeedableRng, TryCryptoRng, TryRngCore};\n#[cfg(feature = \"thread_rng\")]\npub use crate::rngs::thread::rng;\npub use rng::{Fill, Rng};\n#[cfg(feature = \"thread_rng\")]\nuse crate::distr::{Distribution, StandardUniform};\n#[derive(Clone)]\npub struct ThreadRng {\n    rng: Rc<UnsafeCell<ReseedingRng<Core, OsRng>>>,\n}\n#[cfg(feature = \"thread_rng\")]\n#[inline]\n#[track_caller]\npub fn fill<T: Fill + ?Sized>(dest: &mut T) {\n    dest.fill(&mut rng())\n}\npub fn rng() -> ThreadRng {\n    let rng = THREAD_RNG_KEY.with(|t| t.clone());\n    ThreadRng { rng }\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Fill any type implementing [`Fill`] with random data\n///\n/// This function is shorthand for\n/// <code>[rng()].[fill](Rng::fill)(<var>dest</var>)</code>.\n///\n/// # Example\n///\n/// ```\n/// let mut arr = [0i8; 20];\n/// rand::fill(&mut arr[..]);\n/// ```\n///\n/// Note that you can instead use [`random()`] to generate an array of random\n/// data, though this is slower for small elements (smaller than the RNG word\n/// size).\n295 pub fn fill<T: Fill + ?Sized>(dest: &mut T) {\n296     dest.fill(&mut rng())\n297 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}