{
  "name": "rand::distr::utils::{impl#2}::any",
  "mod_info": {
    "name": "distr::utils",
    "loc": "src/distr/mod.rs:94:1:94:11"
  },
  "visible": true,
  "loc": "src/distr/utils.rs:269:5:271:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: self\n"
      ],
      "input_infer": "self: true, false\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input: bool = true;",
                "    let result = input.any();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, true);",
                "    let input: bool = false;",
                "    let result = input.any();",
                "    assert_eq!(result, false);",
                "    let input: bool = true;",
                "    let result = input.any();",
                "    assert_eq!(result, true);"
              ],
              "code": [
                "{",
                "    let input: bool = true;",
                "    let result = input.any();",
                "    assert_eq!(result, true);",
                "    let input: bool = false;",
                "    let result = input.any();",
                "    assert_eq!(result, false);",
                "    let input: bool = true;",
                "    let result = input.any();",
                "    assert_eq!(result, true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input: bool = false;",
                "    let result = input.any();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, false);",
                "    let input: bool = true;",
                "    let result = input.any();",
                "    assert_eq!(result, true);",
                "    let input: bool = false;",
                "    assert!(input.any() == false);",
                "    let input: bool = true;",
                "    assert!(input.any() == true);"
              ],
              "code": [
                "{",
                "    let input: bool = false;",
                "    let result = input.any();",
                "    assert_eq!(result, false);",
                "    let input: bool = true;",
                "    let result = input.any();",
                "    assert_eq!(result, true);",
                "    let input: bool = false;",
                "    assert!(input.any() == false);",
                "    let input: bool = true;",
                "    assert!(input.any() == true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}