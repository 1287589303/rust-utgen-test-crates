[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let empty = Empty;",
          "    let mut output = String::new();",
          "    let _ = empty.fmt(&mut output);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(output, \"Tried to create a `rand::distr::slice::Choose` with an empty slice\");"
        ],
        "code": [
          "{",
          "    let empty = Empty;",
          "    let mut output = String::new();",
          "    let _ = empty.fmt(&mut output);",
          "    assert_eq!(output, \"Tried to create a `rand::distr::slice::Choose` with an empty slice\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let non_empty = Empty;",
          "    let mut output = String::new();",
          "    let _ = non_empty.fmt(&mut output);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(output, \"Tried to create a `rand::distr::slice::Choose` with an empty slice\");"
        ],
        "code": [
          "{",
          "    let non_empty = Empty;",
          "    let mut output = String::new();",
          "    let _ = non_empty.fmt(&mut output);",
          "    assert_eq!(output, \"Tried to create a `rand::distr::slice::Choose` with an empty slice\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]