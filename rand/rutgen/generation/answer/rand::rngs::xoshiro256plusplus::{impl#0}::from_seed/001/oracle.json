[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let seed: [u8; 32] = [0; 32];",
          "    let rng = Xoshiro256PlusPlus::from_seed(seed);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(rng.s, Xoshiro256PlusPlus::seed_from_u64(0).s);"
        ],
        "code": [
          "{",
          "    let seed: [u8; 32] = [0; 32];",
          "    let rng = Xoshiro256PlusPlus::from_seed(seed);",
          "    assert_eq!(rng.s, Xoshiro256PlusPlus::seed_from_u64(0).s);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let seed: [u8; 32] = [1; 32];",
          "    let rng = Xoshiro256PlusPlus::from_seed(seed);",
          "}"
        ],
        "oracle": [
          "    Xoshiro256PlusPlus::from_seed([0; 32]) == Xoshiro256PlusPlus::seed_from_u64(0)",
          "    Xoshiro256PlusPlus::from_seed([1; 32]).s != [0; 4]",
          "    Xoshiro256PlusPlus::from_seed([0; 32]).s == Xoshiro256PlusPlus::seed_from_u64(0).s",
          "    Xoshiro256PlusPlus::from_seed([100; 32]).s != Xoshiro256PlusPlus::from_seed([200; 32]).s"
        ],
        "code": [
          "{",
          "    let seed: [u8; 32] = [1; 32];",
          "    let rng = Xoshiro256PlusPlus::from_seed(seed);",
          "    Xoshiro256PlusPlus::from_seed([0; 32]) == Xoshiro256PlusPlus::seed_from_u64(0)",
          "    Xoshiro256PlusPlus::from_seed([1; 32]).s != [0; 4]",
          "    Xoshiro256PlusPlus::from_seed([0; 32]).s == Xoshiro256PlusPlus::seed_from_u64(0).s",
          "    Xoshiro256PlusPlus::from_seed([100; 32]).s != Xoshiro256PlusPlus::from_seed([200; 32]).s",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let seed: [u8; 32] = [0; 31].iter().chain([1u8]).copied().collect::<Vec<u8>>().try_into().unwrap();",
          "    let rng = Xoshiro256PlusPlus::from_seed(seed);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(rng, Xoshiro256PlusPlus::seed_from_u64(0));"
        ],
        "code": [
          "{",
          "    let seed: [u8; 32] = [0; 31].iter().chain([1u8]).copied().collect::<Vec<u8>>().try_into().unwrap();",
          "    let rng = Xoshiro256PlusPlus::from_seed(seed);",
          "    assert_eq!(rng, Xoshiro256PlusPlus::seed_from_u64(0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let seed_all_max: [u8; 32] = [255; 32];",
          "    let rng = Xoshiro256PlusPlus::from_seed(seed_all_max);",
          "",
          "    let seed_half_zero: [u8; 32] = [0; 16].iter().chain([1; 16]).copied().collect::<Vec<u8>>().try_into().unwrap();",
          "    let rng_half_zero = Xoshiro256PlusPlus::from_seed(seed_half_zero);",
          "    ",
          "    let seed_one_zero: [u8; 32] = [0; 31].iter().chain([1u8]).copied().collect::<Vec<u8>>().try_into().unwrap();",
          "    let rng_one_zero = Xoshiro256PlusPlus::from_seed(seed_one_zero);",
          "}"
        ],
        "oracle": [
          "    Xoshiro256PlusPlus::from_seed([0; 32]) == Xoshiro256PlusPlus::seed_from_u64(0)",
          "    ",
          "    Xoshiro256PlusPlus::from_seed([255; 32]).s != [0; 4]",
          "    ",
          "    Xoshiro256PlusPlus::from_seed([0; 16].iter().chain([1; 16]).copied().collect::<Vec<u8>>().try_into().unwrap()).s != [0; 4]",
          "    ",
          "    Xoshiro256PlusPlus::from_seed([0; 31].iter().chain([1u8]).copied().collect::<Vec<u8>>().try_into().unwrap()).s != [0; 4]"
        ],
        "code": [
          "{",
          "    let seed_all_max: [u8; 32] = [255; 32];",
          "    let rng = Xoshiro256PlusPlus::from_seed(seed_all_max);",
          "",
          "    let seed_half_zero: [u8; 32] = [0; 16].iter().chain([1; 16]).copied().collect::<Vec<u8>>().try_into().unwrap();",
          "    let rng_half_zero = Xoshiro256PlusPlus::from_seed(seed_half_zero);",
          "    ",
          "    let seed_one_zero: [u8; 32] = [0; 31].iter().chain([1u8]).copied().collect::<Vec<u8>>().try_into().unwrap();",
          "    let rng_one_zero = Xoshiro256PlusPlus::from_seed(seed_one_zero);",
          "    Xoshiro256PlusPlus::from_seed([0; 32]) == Xoshiro256PlusPlus::seed_from_u64(0)",
          "    ",
          "    Xoshiro256PlusPlus::from_seed([255; 32]).s != [0; 4]",
          "    ",
          "    Xoshiro256PlusPlus::from_seed([0; 16].iter().chain([1; 16]).copied().collect::<Vec<u8>>().try_into().unwrap()).s != [0; 4]",
          "    ",
          "    Xoshiro256PlusPlus::from_seed([0; 31].iter().chain([1u8]).copied().collect::<Vec<u8>>().try_into().unwrap()).s != [0; 4]",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]