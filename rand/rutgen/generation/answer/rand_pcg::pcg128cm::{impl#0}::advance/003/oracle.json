[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(0, 0);",
          "    rng.advance(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(rng.state, 0);"
        ],
        "code": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(0, 0);",
          "    rng.advance(0);",
          "    assert_eq!(rng.state, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(u128::MAX, 0);",
          "    rng.advance(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(rng.state, u128::MAX + 1);"
        ],
        "code": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(u128::MAX, 0);",
          "    rng.advance(0);",
          "    assert_eq!(rng.state, u128::MAX + 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(0, 1);",
          "    rng.advance(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(rng.state, 1);"
        ],
        "code": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(0, 1);",
          "    rng.advance(0);",
          "    assert_eq!(rng.state, 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(0, u128::MAX);",
          "    rng.advance(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(rng.state, initial_state);"
        ],
        "code": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(0, u128::MAX);",
          "    rng.advance(0);",
          "    assert_eq!(rng.state, initial_state);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(12345678901234567890, 98765432109876543210);",
          "    rng.advance(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(rng.state, 12345678901234567890);"
        ],
        "code": [
          "{",
          "    let mut rng = Lcg128CmDxsm64::new(12345678901234567890, 98765432109876543210);",
          "    rng.advance(0);",
          "    assert_eq!(rng.state, 12345678901234567890);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]