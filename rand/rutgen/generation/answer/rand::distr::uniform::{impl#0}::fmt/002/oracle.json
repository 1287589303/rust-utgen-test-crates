[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error_variant = Error::EmptyRange;",
          "    let mut buffer = String::new();",
          "    let formatter = &mut fmt::Formatter::new(&mut buffer);",
          "    let _ = error_variant.fmt(formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buffer, \"low > high (or equal if exclusive) in uniform distribution\");"
        ],
        "code": [
          "{",
          "    let error_variant = Error::EmptyRange;",
          "    let mut buffer = String::new();",
          "    let formatter = &mut fmt::Formatter::new(&mut buffer);",
          "    let _ = error_variant.fmt(formatter);",
          "    assert_eq!(buffer, \"low > high (or equal if exclusive) in uniform distribution\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let error_variant = Error::EmptyRange;",
          "    let result = error_variant.fmt(&mut fmt::Formatter::new(&mut String::new()));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.is_err(), true);",
          "    assert_eq!(result.unwrap_err().to_string(), \"low > high (or equal if exclusive) in uniform distribution\");",
          "    assert!(format!(\"{}\", error_variant).contains(\"low > high (or equal if exclusive) in uniform distribution\"));",
          "    assert!(format!(\"{}\", Error::NonFinite).contains(\"Non-finite range in uniform distribution\");"
        ],
        "code": [
          "{",
          "    let error_variant = Error::EmptyRange;",
          "    let result = error_variant.fmt(&mut fmt::Formatter::new(&mut String::new()));",
          "    assert_eq!(result.is_err(), true);",
          "    assert_eq!(result.unwrap_err().to_string(), \"low > high (or equal if exclusive) in uniform distribution\");",
          "    assert!(format!(\"{}\", error_variant).contains(\"low > high (or equal if exclusive) in uniform distribution\"));",
          "    assert!(format!(\"{}\", Error::NonFinite).contains(\"Non-finite range in uniform distribution\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]