{
  "name": "base64::decode::{impl#2}::fmt",
  "mod_info": {
    "name": "decode",
    "loc": "src/lib.rs:293:1:293:12"
  },
  "visible": true,
  "loc": "src/decode.rs:60:5:65:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let error = DecodeSliceError::DecodeError(DecodeError::InvalidByte(5, b'x'));",
                "    let mut output = String::new();",
                "    let result = write!(&mut output, \"{}\", error);",
                "    assert!(result.is_ok());",
                "    assert_eq!(output, \"DecodeError: InvalidByte(5, 'x')\\n\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let error = DecodeSliceError::OutputSliceTooSmall;",
                "    let mut output = String::new();",
                "    let result = write!(&mut output, \"{}\", error);",
                "    assert!(result.is_ok());",
                "    assert_eq!(output, \"Output slice too small\\n\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}