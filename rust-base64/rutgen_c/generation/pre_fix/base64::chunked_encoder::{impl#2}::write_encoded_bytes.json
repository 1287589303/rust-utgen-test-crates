{
  "name": "base64::chunked_encoder::{impl#2}::write_encoded_bytes",
  "mod_info": {
    "name": "chunked_encoder",
    "loc": "src/lib.rs:274:1:274:21"
  },
  "visible": true,
  "loc": "src/chunked_encoder.rs:66:5:70:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let mut output = String::new();",
                "    let mut sink = StringSink { string: &mut output };",
                "",
                "    let data = b\"Hello, World!\";",
                "    let result = sink.write_encoded_bytes(data);",
                "",
                "    assert!(result.is_ok());",
                "    assert_eq!(output, \"Hello, World!\");",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [
                "#[should_panic]"
              ],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let mut output = String::new();",
                "    let mut sink = StringSink { string: &mut output };",
                "",
                "    let data = &[0xFF, 0xFF, 0xFF]; // Invalid UTF-8 sequence",
                "    let _ = sink.write_encoded_bytes(data); // This should panic",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}