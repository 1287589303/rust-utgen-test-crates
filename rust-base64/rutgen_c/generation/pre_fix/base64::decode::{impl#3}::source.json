{
  "name": "base64::decode::{impl#3}::source",
  "mod_info": {
    "name": "decode",
    "loc": "src/lib.rs:293:1:293:12"
  },
  "visible": true,
  "loc": "src/decode.rs:70:5:75:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    struct TestDecodeError;",
                "    ",
                "    impl fmt::Debug for TestDecodeError {",
                "        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {",
                "            write!(f, \"TestDecodeError\")",
                "        }",
                "    }",
                "    ",
                "    impl error::Error for TestDecodeError {}",
                "    ",
                "    let error_variant = DecodeSliceError::DecodeError(TestDecodeError);",
                "    assert_eq!(error_variant.source(), Some(&TestDecodeError));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let error_variant = DecodeSliceError::OutputSliceTooSmall;",
                "    assert_eq!(error_variant.source(), None);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}