{
  "name": "base64::engine::general_purpose::{impl#2}::with_encode_padding",
  "mod_info": {
    "name": "engine::general_purpose",
    "loc": "src/engine/mod.rs:14:1:14:25"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/mod.rs:281:5:286:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = GeneralPurposeConfig::new();",
                "    let updated_config = config.with_encode_padding(true);",
                "    assert!(updated_config.encode_padding);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = GeneralPurposeConfig::new();",
                "    let updated_config = config.with_encode_padding(false);",
                "    assert!(!updated_config.encode_padding);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = GeneralPurposeConfig::new().with_encode_padding(false);",
                "    let updated_config = config.with_encode_padding(false);",
                "    assert_eq!(updated_config.encode_padding, config.encode_padding);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = GeneralPurposeConfig::new()",
                "        .with_encode_padding(true)",
                "        .with_decode_allow_trailing_bits(true);",
                "    let updated_config = config.with_encode_padding(false);",
                "    assert!(config.encode_padding);",
                "    assert!(!updated_config.encode_padding);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}