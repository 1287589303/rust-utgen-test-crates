{
  "name": "base64::engine::general_purpose::{impl#4}::encode_padding",
  "mod_info": {
    "name": "engine::general_purpose",
    "loc": "src/engine/mod.rs:14:1:14:25"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/mod.rs:333:5:335:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = GeneralPurposeConfig {",
                "        encode_padding: true,",
                "        decode_allow_trailing_bits: false,",
                "        decode_padding_mode: DecodePaddingMode::RequireCanonical,",
                "    };",
                "    assert_eq!(config.encode_padding(), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = GeneralPurposeConfig {",
                "        encode_padding: false,",
                "        decode_allow_trailing_bits: false,",
                "        decode_padding_mode: DecodePaddingMode::RequireNone,",
                "    };",
                "    assert_eq!(config.encode_padding(), false);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = GeneralPurposeConfig {",
                "        encode_padding: true,",
                "        decode_allow_trailing_bits: false,",
                "        decode_padding_mode: DecodePaddingMode::Indifferent,",
                "    };",
                "    assert_eq!(config.encode_padding(), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}