{
  "name": "base64::engine::general_purpose::{impl#2}::with_decode_allow_trailing_bits",
  "mod_info": {
    "name": "engine::general_purpose",
    "loc": "src/engine/mod.rs:14:1:14:25"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/mod.rs:296:5:301:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: Self {\n            decode_allow_trailing_bits: allow,\n            ..self\n        }\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [
            "#[derive(Debug, PartialEq)]",
            "struct Config {",
            "    decode_allow_trailing_bits: bool,",
            "}",
            "",
            "impl Config {",
            "    pub const fn new(decode_allow_trailing_bits: bool) -> Self {",
            "        Self {",
            "            decode_allow_trailing_bits,",
            "        }",
            "    }",
            "",
            "    pub const fn with_decode_allow_trailing_bits(self, allow: bool) -> Self {",
            "        Self {",
            "            decode_allow_trailing_bits: allow,",
            "            ..self",
            "        }",
            "    }",
            "}"
          ],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = Config::new(false);",
                "    let updated_config = config.with_decode_allow_trailing_bits(true);",
                "    assert_eq!(updated_config, Config::new(true));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = Config::new(true);",
                "    let updated_config = config.with_decode_allow_trailing_bits(false);",
                "    assert_eq!(updated_config, Config::new(false));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = Config::new(false);",
                "    let updated_config = config.with_decode_allow_trailing_bits(false);",
                "    assert_eq!(updated_config, Config::new(false));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}