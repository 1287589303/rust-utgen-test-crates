{
  "name": "base64::encode::{impl#0}::fmt",
  "mod_info": {
    "name": "encode",
    "loc": "src/lib.rs:286:1:286:12"
  },
  "visible": true,
  "loc": "src/encode.rs:153:5:157:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    struct TestStruct;",
                "",
                "    impl std::fmt::Display for TestStruct {",
                "        fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {",
                "            write!(f, \"Output slice too small\")",
                "        }",
                "    }",
                "    ",
                "    let test_value = TestStruct;",
                "    let mut output = String::new();",
                "    let result = write!(&mut output, \"{}\", test_value);",
                "    ",
                "    assert!(result.is_ok());",
                "    assert_eq!(output, \"Output slice too small\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}