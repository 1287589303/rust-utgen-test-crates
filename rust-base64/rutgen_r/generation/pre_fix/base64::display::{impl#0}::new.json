{
  "name": "base64::display::{impl#0}::new",
  "mod_info": {
    "name": "display",
    "loc": "src/lib.rs:275:1:275:17"
  },
  "visible": true,
  "loc": "src/display.rs:25:5:30:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: Base64Display {\n            bytes,\n            chunked_encoder: ChunkedEncoder::new(engine),\n        }\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    struct DummyEngine;",
                "",
                "    struct ChunkedEncoder<'e> {",
                "        engine: &'e DummyEngine,",
                "    }",
                "",
                "    impl<'e> ChunkedEncoder<'e> {",
                "        fn new(engine: &'e DummyEngine) -> Self {",
                "            ChunkedEncoder { engine }",
                "        }",
                "    }",
                "",
                "    struct Base64Display<'a, 'e, E> {",
                "        bytes: &'a [u8],",
                "        chunked_encoder: ChunkedEncoder<'e>,",
                "    }",
                "",
                "    fn new<'a, 'e, E>(bytes: &'a [u8], engine: &'e E) -> Base64Display<'a, 'e, E> {",
                "        Base64Display {",
                "            bytes,",
                "            chunked_encoder: ChunkedEncoder::new(engine),",
                "        }",
                "    }",
                "",
                "    let bytes: &[u8] = b\"example\";",
                "    let engine = DummyEngine;",
                "",
                "    let display = new(bytes, &engine);",
                "",
                "    assert_eq!(display.bytes, bytes);",
                "    assert_eq!(display.chunked_encoder.engine, &engine);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}