{
  "name": "base64::engine::general_purpose::decode::{impl#1}::decoded_len_estimate",
  "mod_info": {
    "name": "engine::general_purpose::decode",
    "loc": "src/engine/general_purpose/mod.rs:12:1:12:23"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/decode.rs:24:5:26:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: self.conservative_decoded_len\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [
            "#[derive(Debug)]",
            "struct Decoder {",
            "    conservative_decoded_len: usize,",
            "}",
            "",
            "impl Decoder {",
            "    fn new(conservative_decoded_len: usize) -> Self {",
            "        Decoder { conservative_decoded_len }",
            "    }",
            "",
            "    fn decoded_len_estimate(&self) -> usize {",
            "        self.conservative_decoded_len",
            "    }",
            "}"
          ],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let decoder = Decoder::new(0);",
                "    assert_eq!(decoder.decoded_len_estimate(), 0);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let decoder = Decoder::new(10);",
                "    assert_eq!(decoder.decoded_len_estimate(), 10);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let decoder = Decoder::new(1000);",
                "    assert_eq!(decoder.decoded_len_estimate(), 1000);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let decoder = Decoder::new(usize::MAX);",
                "    assert_eq!(decoder.decoded_len_estimate(), usize::MAX);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}