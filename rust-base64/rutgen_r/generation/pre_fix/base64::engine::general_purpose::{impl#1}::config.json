{
  "name": "base64::engine::general_purpose::{impl#1}::config",
  "mod_info": {
    "name": "engine::general_purpose",
    "loc": "src/engine/mod.rs:14:1:14:25"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/mod.rs:190:5:192:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: &self.config\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [
            "#[derive(Debug)]",
            "struct Config {",
            "    value: String,",
            "}",
            "",
            "struct SampleStruct {",
            "    config: Config,",
            "}",
            "",
            "impl SampleStruct {",
            "    fn config(&self) -> &Config {",
            "        &self.config",
            "    }",
            "}"
          ],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let sample = SampleStruct {",
                "        config: Config {",
                "            value: String::from(\"test_value\"),",
                "        },",
                "    };",
                "    let config_reference = sample.config();",
                "    assert_eq!(config_reference.value, \"test_value\");",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let sample = SampleStruct {",
                "        config: Config {",
                "            value: String::from(\"\"),",
                "        },",
                "    };",
                "    let config_reference = sample.config();",
                "    assert_eq!(config_reference.value, \"\");",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let sample = SampleStruct {",
                "        config: Config {",
                "            value: String::from(\"!@#$%^&*()\"),",
                "        },",
                "    };",
                "    let config_reference = sample.config();",
                "    assert_eq!(config_reference.value, \"!@#$%^&*()\");",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}