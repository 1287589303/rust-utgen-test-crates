{
  "name": "base64::decode::{impl#4}::from",
  "mod_info": {
    "name": "decode",
    "loc": "src/lib.rs:293:1:293:12"
  },
  "visible": true,
  "loc": "src/decode.rs:79:5:81:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [
            "#[derive(Debug)]",
            "struct DecodeSliceError {",
            "    error: DecodeError,",
            "}",
            "",
            "#[derive(Debug)]",
            "struct DecodeError {",
            "    message: String,",
            "}",
            "",
            "impl From<DecodeError> for DecodeSliceError {",
            "    fn from(e: DecodeError) -> Self {",
            "        DecodeSliceError::DecodeError(e)",
            "    }",
            "}"
          ],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let decode_error = DecodeError {",
                "        message: String::from(\"Invalid base64 string\"),",
                "    };",
                "",
                "    let decode_slice_error: DecodeSliceError = DecodeSliceError::from(decode_error);",
                "",
                "    assert_eq!(decode_slice_error.error.message, \"Invalid base64 string\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}