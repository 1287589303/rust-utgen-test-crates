{
  "name": "base64::engine::general_purpose::encode_table",
  "mod_info": {
    "name": "engine::general_purpose",
    "loc": "src/engine/mod.rs:14:1:14:25"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/mod.rs:196:1:209:2",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    struct Alphabet {",
                "        symbols: [u8; 64],",
                "    }",
                "",
                "    let alphabet = Alphabet {",
                "        symbols: *b\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",",
                "    };",
                "",
                "    let result = encode_table(&alphabet);",
                "",
                "    let expected: [u8; 64] = *b\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";",
                "    assert_eq!(result, expected);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    struct Alphabet {",
                "        symbols: [u8; 64],",
                "    }",
                "",
                "    let alphabet = Alphabet {",
                "        symbols: [0; 64],",
                "    };",
                "",
                "    let result = encode_table(&alphabet);",
                "",
                "    let expected: [u8; 64] = [0; 64];",
                "    assert_eq!(result, expected);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}