{
  "name": "base64::decode::{impl#3}::source",
  "mod_info": {
    "name": "decode",
    "loc": "src/lib.rs:293:1:293:12"
  },
  "visible": true,
  "loc": "src/decode.rs:70:5:75:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [
            "#[derive(Debug)]",
            "enum DecodeSliceError {",
            "    DecodeError(Box<dyn std::error::Error>),",
            "    OutputSliceTooSmall,",
            "}"
          ],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let error: Box<dyn std::error::Error> = Box::new(std::io::Error::new(std::io::ErrorKind::Other, \"decode error\"));",
                "    let decode_error = DecodeSliceError::DecodeError(error);",
                "    assert!(decode_error.source().is_some());",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let output_too_small = DecodeSliceError::OutputSliceTooSmall;",
                "    assert!(output_too_small.source().is_none());",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}