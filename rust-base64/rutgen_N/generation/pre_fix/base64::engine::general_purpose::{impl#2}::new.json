{
  "name": "base64::engine::general_purpose::{impl#2}::new",
  "mod_info": {
    "name": "engine::general_purpose",
    "loc": "src/engine/mod.rs:14:1:14:25"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/mod.rs:261:5:268:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [
            "#[derive(Debug)]",
            "struct DecodePaddingMode {",
            "    mode: String,",
            "}",
            "",
            "impl DecodePaddingMode {",
            "    const RequireCanonical: Self = DecodePaddingMode {",
            "        mode: String::from(\"RequireCanonical\"),",
            "    };",
            "}",
            "",
            "struct Config {",
            "    encode_padding: bool,",
            "    decode_allow_trailing_bits: bool,",
            "    decode_padding_mode: DecodePaddingMode,",
            "}",
            "",
            "impl Config {",
            "    pub const fn new() -> Self {",
            "        Self {",
            "            encode_padding: true,",
            "            decode_allow_trailing_bits: false,",
            "            decode_padding_mode: DecodePaddingMode::RequireCanonical,",
            "        }",
            "    }",
            "}"
          ],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    let config = Config::new();",
                "    assert_eq!(config.encode_padding, true);",
                "    assert_eq!(config.decode_allow_trailing_bits, false);",
                "    assert_eq!(config.decode_padding_mode.mode, \"RequireCanonical\");",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}