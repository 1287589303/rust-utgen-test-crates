{
  "name": "base64::write::encoder_string_writer::{impl#5}::flush",
  "mod_info": {
    "name": "write::encoder_string_writer",
    "loc": "src/write/mod.rs:3:1:3:27"
  },
  "visible": true,
  "loc": "src/write/encoder_string_writer.rs:130:5:133:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    struct DummyWriter;",
                "",
                "    impl DummyWriter {",
                "        fn new() -> Self {",
                "            DummyWriter",
                "        }",
                "    }",
                "",
                "    impl std::io::Write for DummyWriter {",
                "        fn write(&mut self, _buf: &[u8]) -> std::io::Result<usize> {",
                "            Ok(buf.len())",
                "        }",
                "",
                "        fn flush(&mut self) -> std::io::Result<()> {",
                "            // no op for the purpose of this test",
                "            Ok(())",
                "        }",
                "    }",
                "",
                "    let mut writer = DummyWriter::new();",
                "    let result = writer.flush();",
                "    assert!(result.is_ok());",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}