{"mod_name":"engine::general_purpose::decode_suffix","calls":["<[u8] as std::ops::Index<std::ops::RangeFrom<usize>>>::index","<u32 as std::convert::From<u8>>::from","core::panicking::panic","<std::iter::Enumerate<std::slice::Iter<'_, u8>> as std::iter::Iterator>::next","<decode::DecodeError as std::convert::Into<decode::DecodeSliceError>>::into","<std::ops::Range<usize> as std::iter::IntoIterator>::into_iter","core::slice::<impl [u8]>::iter","<std::result::Result<engine::DecodeMetadata, decode::DecodeSliceError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, decode::DecodeSliceError>>>::from_residual","engine::DecodeMetadata::new","<std::result::Result<&mut u8, decode::DecodeSliceError> as std::ops::Try>::branch","core::slice::<impl [u8]>::len","core::slice::<impl [u8]>::is_empty","<std::slice::Iter<'_, u8> as std::iter::Iterator>::enumerate","core::slice::<impl [u8]>::get_mut::<usize>","std::option::Option::<&mut u8>::ok_or::<decode::DecodeSliceError>","<std::ops::Range<usize> as std::iter::Iterator>::next","<std::iter::Enumerate<std::slice::Iter<'_, u8>> as std::iter::IntoIterator>::into_iter"],"types":["engine::DecodeMetadata","std::convert::Infallible","bool","std::result::Result<engine::DecodeMetadata, decode::DecodeSliceError>","(usize, &u8)","str","!","decode::DecodeSliceError","std::option::Option<usize>","u32","(usize, bool)","std::ops::RangeFrom<usize>","std::slice::Iter<'_, u8>","usize","[u8]","std::option::Option<&mut u8>","std::result::Result<&mut u8, decode::DecodeSliceError>","()","std::ops::Range<usize>","[u8; 4]","engine::DecodePaddingMode","std::iter::Enumerate<std::slice::Iter<'_, u8>>","isize","std::option::Option<(usize, &u8)>","decode::DecodeError","std::ops::ControlFlow<std::result::Result<std::convert::Infallible, decode::DecodeSliceError>, &mut u8>","[u8; 256]","std::result::Result<std::convert::Infallible, decode::DecodeSliceError>","u8"]}