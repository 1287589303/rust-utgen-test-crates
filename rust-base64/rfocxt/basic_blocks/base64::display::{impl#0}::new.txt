[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &(*_1),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/display.rs:28:30: 28:57 (#0),
                    scope: scope[0],
                },
                kind: _4 = chunked_encoder::ChunkedEncoder::<'_, E>::new(move _5) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _0 = display::Base64Display::<'_, '_, E> { bytes: move _3, chunked_encoder: move _4 },
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/display.rs:30:6: 30:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/display.rs:25:5: 30:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: display::Base64Display<'{erased}, '{erased}, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/display.rs:25:51: 25:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/display.rs:25:23: 25:31 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/display.rs:25:16: 25:21 (#0),
                            ),
                        ),
                        pat_span: src/display.rs:25:16: 25:21 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/display.rs:25:16: 25:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/display.rs:25:41: 25:46 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/display.rs:25:33: 25:39 (#0),
                            ),
                        ),
                        pat_span: src/display.rs:25:33: 25:39 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} E/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/display.rs:25:33: 25:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/display.rs:27:13: 27:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: chunked_encoder::ChunkedEncoder<'{erased}, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/display.rs:28:30: 28:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/display.rs:26:9: 29:10 (#0),
                },
            ),
        ),
        ty: &'{erased} E/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/display.rs:28:50: 28:56 (#0),
            scope: scope[0],
        },
    },
]