[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &mut (_1.0: write::encoder::EncoderWriter<'_, E, write::encoder_string_writer::Utf8SingleCodeUnitWriter<S>>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:68:9: 69:22 (#0),
                    scope: scope[0],
                },
                kind: _3 = write::encoder::EncoderWriter::<'_, E, write::encoder_string_writer::Utf8SingleCodeUnitWriter<S>>::finish(move _4) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = const "Writing to a consumer should never fail",
            _5 = &(*_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:68:9: 70:63 (#0),
                    scope: scope[0],
                },
                kind: _2 = std::result::Result::<write::encoder_string_writer::Utf8SingleCodeUnitWriter<S>, std::io::Error>::expect(move _3, move _5) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_3),
            _0 = move (_2.0: S),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:72:5: 72:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:72:5: 72:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:72:6: 72:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:70:62: 70:63 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:72:5: 72:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:67:5: 72:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: S/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:67:36: 67:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                ImplicitSelf(
                    Mut,
                ),
            ),
        ),
        ty: write::encoder_string_writer::EncoderStringWriter<'{erased}, E/#1, S/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:67:23: 67:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/write/encoder_string_writer.rs:68:9: 71:26 (#0),
                },
            ),
        ),
        ty: write::encoder_string_writer::Utf8SingleCodeUnitWriter<S/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:68:9: 70:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/write/encoder_string_writer.rs:68:9: 71:26 (#0),
                },
            ),
        ),
        ty: std::result::Result<write::encoder_string_writer::Utf8SingleCodeUnitWriter<S/#2>, std::io::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:68:9: 69:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/write/encoder_string_writer.rs:68:9: 71:26 (#0),
                },
            ),
        ),
        ty: &'{erased} mut write::encoder::EncoderWriter<'{erased}, E/#1, write::encoder_string_writer::Utf8SingleCodeUnitWriter<S/#2>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:68:9: 68:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/write/encoder_string_writer.rs:68:9: 71:26 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:70:21: 70:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/write/encoder_string_writer.rs:68:9: 71:26 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:70:21: 70:62 (#0),
            scope: scope[0],
        },
    },
]