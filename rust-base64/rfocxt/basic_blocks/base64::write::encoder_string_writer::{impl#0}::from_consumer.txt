[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = move _1,
            _4 = write::encoder_string_writer::Utf8SingleCodeUnitWriter::<S> { str_consumer: move _5 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:59:81: 59:82 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_6),
            _6 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:59:22: 59:91 (#0),
                    scope: scope[0],
                },
                kind: _3 = write::encoder::EncoderWriter::<'_, E, write::encoder_string_writer::Utf8SingleCodeUnitWriter<S>>::new(move _4, move _6) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_4),
            _0 = write::encoder_string_writer::EncoderStringWriter::<'_, E, S> { encoder: move _3 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:60:9: 60:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:61:5: 61:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:61:6: 61:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:59:90: 59:91 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:61:5: 61:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder_string_writer.rs:57:5: 61:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: write::encoder_string_writer::EncoderStringWriter<'{erased}, E/#1, S/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:57:61: 57:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/write/encoder_string_writer.rs:57:40: 57:41 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/write/encoder_string_writer.rs:57:26: 57:38 (#0),
                            ),
                        ),
                        pat_span: src/write/encoder_string_writer.rs:57:26: 57:38 (#0),
                    },
                ),
            ),
        ),
        ty: S/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:57:26: 57:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/write/encoder_string_writer.rs:57:51: 57:56 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/write/encoder_string_writer.rs:57:43: 57:49 (#0),
                            ),
                        ),
                        pat_span: src/write/encoder_string_writer.rs:57:43: 57:49 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} E/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:57:43: 57:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: write::encoder::EncoderWriter<'{erased}, E/#1, write::encoder_string_writer::Utf8SingleCodeUnitWriter<S/#2>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:59:22: 59:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/write/encoder_string_writer.rs:58:9: 60:10 (#0),
                },
            ),
        ),
        ty: write::encoder_string_writer::Utf8SingleCodeUnitWriter<S/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:59:41: 59:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: S/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:59:68: 59:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/write/encoder_string_writer.rs:58:9: 60:10 (#0),
                },
            ),
        ),
        ty: &'{erased} E/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder_string_writer.rs:59:84: 59:90 (#0),
            scope: scope[0],
        },
    },
]