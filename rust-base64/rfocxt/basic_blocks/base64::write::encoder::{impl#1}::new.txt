[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &(*_2),
            StorageLive(_4),
            StorageLive(_5),
            _5 = move _1,
            _4 = std::option::Option::<W>::Some(move _5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder.rs:101:36: 101:37 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_6),
            _6 = [const 0_u8; 3],
            StorageLive(_7),
            _7 = [const 0_u8; 1024],
            _0 = write::encoder::EncoderWriter::<'_, E, W> { engine: move _3, delegate: move _4, extra_input: move _6, extra_input_occupied_len: const 0_usize, output: move _7, output_occupied_len: const 0_usize, panicked: const false },
            StorageDead(_7),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder.rs:107:9: 107:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder.rs:108:5: 108:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder.rs:108:6: 108:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder.rs:107:9: 107:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder.rs:108:5: 108:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/write/encoder.rs:98:5: 108:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: write::encoder::EncoderWriter<'{erased}, E/#1, W/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder.rs:98:47: 98:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/write/encoder.rs:98:26: 98:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/write/encoder.rs:98:16: 98:24 (#0),
                            ),
                        ),
                        pat_span: src/write/encoder.rs:98:16: 98:24 (#0),
                    },
                ),
            ),
        ),
        ty: W/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder.rs:98:16: 98:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/write/encoder.rs:98:37: 98:42 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/write/encoder.rs:98:29: 98:35 (#0),
                            ),
                        ),
                        pat_span: src/write/encoder.rs:98:29: 98:35 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} E/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder.rs:98:29: 98:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} E/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder.rs:100:13: 100:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<W/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder.rs:101:23: 101:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: W/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder.rs:101:28: 101:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: [u8; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder.rs:102:26: 102:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: [u8; 1024_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/write/encoder.rs:104:21: 104:36 (#0),
            scope: scope[0],
        },
    },
]