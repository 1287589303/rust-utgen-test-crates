[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/engine/general_purpose/mod.rs:171:9: 171:47 (#0),
                    scope: scope[0],
                },
                kind: _0 = engine::general_purpose::decode::GeneralPurposeEstimate::new(move _3) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/engine/general_purpose/mod.rs:172:6: 172:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/engine/general_purpose/mod.rs:170:5: 172:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: engine::general_purpose::decode::GeneralPurposeEstimate,
        user_ty: None,
        source_info: SourceInfo {
            span: src/engine/general_purpose/mod.rs:170:66: 170:86 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} engine::general_purpose::GeneralPurpose,
        user_ty: None,
        source_info: SourceInfo {
            span: src/engine/general_purpose/mod.rs:170:38: 170:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/engine/general_purpose/mod.rs:170:56: 170:61 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/engine/general_purpose/mod.rs:170:45: 170:54 (#0),
                            ),
                        ),
                        pat_span: src/engine/general_purpose/mod.rs:170:45: 170:54 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/engine/general_purpose/mod.rs:170:45: 170:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/engine/general_purpose/mod.rs:171:9: 171:47 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/engine/general_purpose/mod.rs:171:37: 171:46 (#0),
            scope: scope[0],
        },
    },
]