[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = ParseAlphabetError::ReservedByte(0x3D);",
          "    let mut buf = String::new();",
          "    let _ = error.fmt(&mut buf);",
          "}"
        ],
        "oracle": [
          "    write!(f, \"Reserved byte: {:#04x}\", 0x3D)"
        ],
        "code": [
          "{",
          "    let error = ParseAlphabetError::ReservedByte(0x3D);",
          "    let mut buf = String::new();",
          "    let _ = error.fmt(&mut buf);",
          "    write!(f, \"Reserved byte: {:#04x}\", 0x3D)",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = ParseAlphabetError::ReservedByte(0x00);",
          "    let mut buf = String::new();",
          "    let _ = error.fmt(&mut buf);",
          "}"
        ],
        "oracle": [
          "    write!(f, \"Reserved byte: {:#04x}\", 0x00)"
        ],
        "code": [
          "{",
          "    let error = ParseAlphabetError::ReservedByte(0x00);",
          "    let mut buf = String::new();",
          "    let _ = error.fmt(&mut buf);",
          "    write!(f, \"Reserved byte: {:#04x}\", 0x00)",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = ParseAlphabetError::ReservedByte(0x1F);",
          "    let mut buf = String::new();",
          "    let _ = error.fmt(&mut buf);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf, \"Reserved byte: 0x1f\");"
        ],
        "code": [
          "{",
          "    let error = ParseAlphabetError::ReservedByte(0x1F);",
          "    let mut buf = String::new();",
          "    let _ = error.fmt(&mut buf);",
          "    assert_eq!(buf, \"Reserved byte: 0x1f\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = ParseAlphabetError::ReservedByte(0x7F);",
          "    let mut buf = String::new();",
          "    let _ = error.fmt(&mut buf);",
          "}"
        ],
        "oracle": [
          "    buf == \"Reserved byte: 0x7f\""
        ],
        "code": [
          "{",
          "    let error = ParseAlphabetError::ReservedByte(0x7F);",
          "    let mut buf = String::new();",
          "    let _ = error.fmt(&mut buf);",
          "    buf == \"Reserved byte: 0x7f\"",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]