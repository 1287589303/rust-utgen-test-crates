[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct DummyEngine;",
          "    impl Engine for DummyEngine {",
          "        type Config = ();",
          "        type DecodeEstimate = usize;",
          "",
          "        fn internal_encode(&self, _input: &[u8], _output: &mut [u8]) -> usize { 0 }",
          "        fn internal_decoded_len_estimate(&self, input_len: usize) -> Self::DecodeEstimate {",
          "            input_len / 4 * 3",
          "        }",
          "        fn internal_decode(&self, _input: &[u8], output: &mut [u8], _decode_estimate: Self::DecodeEstimate) -> Result<(), DecodeSliceError> {",
          "            output.copy_from_slice(&[0, 1, 2]); // Simulated decode",
          "            Ok(())",
          "        }",
          "        fn config(&self) -> &Self::Config { &() }",
          "    }",
          "",
          "    let engine = DummyEngine;",
          "    let reader = std::io::Cursor::new(&b\"SGVsbG8gd29ybGQ=\"[..]); // \"Hello world\" in base64",
          "    let mut decoder = DecoderReader::new(reader, &engine);",
          "    ",
          "    let mut buf = [0u8; 3];",
          "    decoder.b64_offset = 1; // Setting b64_offset to 1",
          "    decoder.b64_len = 4; // Simulating the presence of base64 data",
          "",
          "    let _ = decoder.read(&mut buf);",
          "}"
        ],
        "oracle": [
          "    assert!(buf.len() == 3);",
          "    assert!(decoder.b64_offset == 1);",
          "    assert!(decoder.b64_len == 4);",
          "    assert!(decoder.decoded_len == 0);",
          "    assert!(decoder.decoded_offset == 0);",
          "    assert!(decoder.padding_offset.is_none());",
          "    assert!(decoder.input_consumed_len == 0);",
          "    assert!(decoder.b64_buffer[0] == 0);",
          "    assert!(decoder.b64_buffer[1] == b'S');",
          "    assert!(decoder.b64_buffer[2] == b'G');",
          "    assert!(decoder.b64_buffer[3] == b'V');",
          "    assert!(decoder.b64_buffer[4] == b's');",
          "    assert!(decoder.b64_buffer[5] == b'B');",
          "    assert!(decoder.b64_buffer[6] == b'G');",
          "    assert!(decoder.b64_buffer[7] == b'8');",
          "    assert!(decoder.b64_buffer[8] == 0);",
          "    assert!(decoder.b64_buffer[9] == 0);",
          "    assert!(decoder.b64_buffer[10] == 0);",
          "    assert!(decoder.b64_buffer[11] == 0);",
          "    assert!(decoder.b64_buffer[12] == 0);",
          "    assert!(decoder.b64_buffer[13] == 0);",
          "    assert!(decoder.b64_buffer[14] == 0);",
          "    assert!(decoder.b64_buffer[15] == 0);",
          "    assert!(decoder.b64_buffer[16] == 0);",
          "    assert!(decoder.b64_buffer[17] == 0);",
          "    assert!(decoder.b64_buffer[18] == 0);",
          "    assert!(decoder.b64_buffer[19] == 0);",
          "    assert!(decoder.b64_buffer[20] == 0);",
          "    assert!(decoder.b64_buffer[21] == 0);",
          "    assert!(decoder.b64_buffer[22] == 0);",
          "    assert!(decoder.b64_buffer[23] == 0);",
          "    assert!(decoder.b64_buffer[24] == 0);",
          "    assert!(decoder.b64_buffer[25] == 0);",
          "    assert!(decoder.b64_buffer[26] == 0);",
          "    assert!(decoder.b64_buffer[27] == 0);",
          "    assert!(decoder.b64_buffer[28] == 0);",
          "    assert!(decoder.b64_buffer[29] == 0);",
          "    assert!(decoder.b64_buffer[30] == 0);",
          "    assert!(decoder.b64_buffer[31] == 0);",
          "    assert!(decoder.b64_buffer[32] == 0);",
          "    assert!(decoder.b64_buffer[33] == 0);",
          "    assert!(decoder.b64_buffer[34] == 0);",
          "    assert!(decoder.b64_buffer[35] == 0);",
          "    assert!(decoder.b64_buffer[36] == 0);",
          "    assert!(decoder.b64_buffer[37] == 0);",
          "    assert!(decoder.b64_buffer[38] == 0);",
          "    assert!(decoder.b64_buffer[39] == 0);",
          "    assert!(decoder.b64_buffer[40] == 0);",
          "    assert!(decoder.b64_buffer[41] == 0);",
          "    assert!(decoder.b64_buffer[42] == 0);",
          "    assert!(decoder.b64_buffer[43] == 0);",
          "    assert!(decoder.b64_buffer[44] == 0);",
          "    assert!(decoder.b64_buffer[45] == 0);",
          "    assert!(decoder.b64_buffer[46] == 0);",
          "    assert!(decoder.b64_buffer[47] == 0);",
          "    assert!(decoder.b64_buffer[48] == 0);",
          "    assert!(decoder.b64_buffer[49] == 0);",
          "    assert!(decoder.b64_buffer[50] == 0);",
          "    assert!(decoder.b64_buffer[51] == 0);",
          "    assert!(decoder.b64_buffer[52] == 0);",
          "    assert!(decoder.b64_buffer[53] == 0);",
          "    assert!(decoder.b64_buffer[54] == 0);",
          "    assert!(decoder.b64_buffer[55] == 0);",
          "    assert!(decoder.b64_buffer[56] == 0);",
          "    assert!(decoder.b64_buffer[57] == 0);",
          "    assert!(decoder.b64_buffer[58] == 0);",
          "    assert!(decoder.b64_buffer[59] == 0);",
          "    assert!(decoder.b64_buffer[60] == 0);",
          "    assert!(decoder.b64_buffer[61] == 0);",
          "    assert!(decoder.b64_buffer[62] == 0);",
          "    assert!(decoder.b64_buffer[63] == 0);",
          "    assert!(decoder.b64_buffer[64] == 0);",
          "    assert!(decoder.b64_buffer[65] == 0);",
          "    assert!(decoder.b64_buffer[66] == 0);",
          "    assert!(decoder.b64_buffer[67] == 0);",
          "    assert!(decoder.b64_buffer[68] == 0);",
          "    assert!(decoder.b64_buffer[69] == 0);",
          "    assert!(decoder.b64_buffer[70] == 0);",
          "    assert!(decoder.b64_buffer[71] == 0);",
          "    assert!(decoder.b64_buffer[72] == 0);",
          "    assert!(decoder.b64_buffer[73] == 0);",
          "    assert!(decoder.b64_buffer[74] == 0);",
          "    assert!(decoder.b64_buffer[75] == 0);",
          "    assert!(decoder.b64_buffer[76] == 0);",
          "    assert!(decoder.b64_buffer[77] == 0);",
          "    assert!(decoder.b64_buffer[78] == 0);",
          "    assert!(decoder.b64_buffer[79] == 0);",
          "    assert!(decoder.b64_buffer[80] == 0);",
          "    assert!(decoder.b64_buffer[81] == 0);",
          "    assert!(decoder.b64_buffer[82] == 0);",
          "    assert!(decoder.b64_buffer[83] == 0);",
          "    assert!(decoder.b64_buffer[84] == 0);",
          "    assert!(decoder.b64_buffer[85] == 0);",
          "    assert!(decoder.b64_buffer[86] == 0);",
          "    assert!(decoder.b64_buffer[87] == 0);",
          "    assert!(decoder.b64_buffer[88] == 0);",
          "    assert!(decoder.b64_buffer[89] == 0);",
          "    assert!(decoder.b64_buffer[90] == 0);",
          "    assert!(decoder.b64_buffer[91] == 0);",
          "    assert!(decoder.b64_buffer[92] == 0);",
          "    assert!(decoder.b64_buffer[93] == 0);",
          "    assert!(decoder.b64_buffer[94] == 0);",
          "    assert!(decoder.b64_buffer[95] == 0);",
          "    assert!(decoder.b64_buffer[96] == 0);",
          "    assert!(decoder.b64_buffer[97] == 0);",
          "    assert!(decoder.b64_buffer[98] == 0);",
          "    assert!(decoder.b64_buffer[99] == 0);",
          "    assert!(decoder.b64_buffer[100] == 0);",
          "    assert!(decoder.b64_buffer[101] == 0);",
          "    assert!(decoder.b64_buffer[102] == 0);",
          "    assert!(decoder.b64_buffer[103] == 0);",
          "    assert!(decoder.b64_buffer[104] == 0);",
          "    assert!(decoder.b64_buffer[105] == 0);",
          "    assert!(decoder.b64_buffer[106] == 0);",
          "    assert!(decoder.b64_buffer[107] == 0);",
          "    assert!(decoder.b64_buffer[108] == 0);",
          "    assert!(decoder.b64_buffer[109] == 0);",
          "    assert!(decoder.b64_buffer[110] == 0);",
          "    assert!(decoder.b64_buffer[111] == 0);",
          "    assert!(decoder.b64_buffer[112] == 0);",
          "    assert!(decoder.b64_buffer[113] == 0);",
          "    assert!(decoder.b64_buffer[114] == 0);",
          "    assert!(decoder.b64_buffer[115] == 0);",
          "    assert!(decoder.b64_buffer[116] == 0);",
          "    assert!(decoder.b64_buffer[117] == 0);",
          "    assert!(decoder.b64_buffer[118] == 0);",
          "    assert!(decoder.b64_buffer[119] == 0);",
          "    assert!(decoder.b64_buffer[120] == 0);",
          "    assert!(decoder.b64_buffer[121] == 0);",
          "    assert!(decoder.b64_buffer[122] == 0);",
          "    assert!(decoder.b64_buffer[123] == 0);",
          "    assert!(decoder.b64_buffer[124] == 0);",
          "    assert!(decoder.b64_buffer[125] == 0);",
          "    assert!(decoder.b64_buffer[126] == 0);",
          "    assert!(decoder.b64_buffer[127] == 0);",
          "    assert!(decoder.b64_buffer[128] == 0);",
          "    assert!(decoder.b64_buffer[129] == 0);",
          "    assert!(decoder.b64_buffer[130] == 0);",
          "    assert!(decoder.b64_buffer[131] == 0);",
          "    assert!(decoder.b64_buffer[132] == 0);",
          "    assert!(decoder.b64_buffer[133] == 0);",
          "    assert!(decoder.b64_buffer[134] == 0);",
          "    assert!(decoder.b64_buffer[135] == 0);",
          "    assert!(decoder.b64_buffer[136] == 0);",
          "    assert!(decoder.b64_buffer[137] == 0);",
          "    assert!(decoder.b64_buffer[138] == 0);",
          "    assert!(decoder.b64_buffer[139] == 0);",
          "    assert!(decoder.b64_buffer[140] == 0);",
          "    assert!(decoder.b64_buffer[141] == 0);",
          "    assert!(decoder.b64_buffer[142] == 0);",
          "    assert!(decoder.b64_buffer[143] == 0);",
          "    assert!(decoder.b64_buffer[144] == 0);",
          "    assert!(decoder.b64_buffer[145] == 0);",
          "    assert!(decoder.b64_buffer[146] == 0);",
          "    assert!(decoder.b64_buffer[147] == 0);",
          "    assert!(decoder.b64_buffer[148] == 0);",
          "    assert!(decoder.b64_buffer[149] == 0);",
          "    assert!(decoder.b64_buffer[150] == 0);",
          "    assert!(decoder.b64_buffer[151] == 0);",
          "    assert!(decoder.b64_buffer[152] == 0);",
          "    assert!(decoder.b64_buffer[153] == 0);",
          "    assert!(decoder.b64_buffer[154] == 0);",
          "    assert!(decoder.b64_buffer[155] == 0);",
          "    assert!(decoder.b64_buffer[156] == 0);",
          "    assert!(decoder.b64_buffer[157] == 0);",
          "    assert!(decoder.b64_buffer[158] == 0);",
          "    assert!(decoder.b64_buffer[159] == 0);",
          "    assert!(decoder.b64_buffer[160] == 0);",
          "    assert!(decoder.b64_buffer[161] == 0);",
          "    assert!(decoder.b64_buffer[162] == 0);",
          "    assert!(decoder.b64_buffer[163] == 0);",
          "    assert!(decoder.b64_buffer[164] == 0);",
          "    assert!(decoder.b64_buffer[165] == 0);",
          "    assert!(decoder.b64_buffer[166] == 0);",
          "    assert!(decoder.b64_buffer[167] == 0);",
          "    assert!(decoder.b64_buffer[168] == 0);",
          "    assert!(decoder.b64_buffer[169] == 0);",
          "    assert!(decoder.b64_buffer[170] == 0);",
          "    assert!(decoder.b64_buffer[171] == 0);",
          "    assert!(decoder.b64_buffer[172] == 0);",
          "    assert!(decoder.b64_buffer[173] == 0);",
          "    assert!(decoder.b64_buffer[174] == 0);",
          "    assert!(decoder.b64_buffer[175] == 0);",
          "    assert!(decoder.b64_buffer[176] == 0);",
          "    assert!(decoder.b64_buffer[177] == 0);",
          "    assert!(decoder.b64_buffer[178] == 0);",
          "    assert!(decoder.b64_buffer[179] == 0);",
          "    assert!(decoder.b64_buffer[180] == 0);",
          "    assert!(decoder.b64_buffer[181] == 0);",
          "    assert!(decoder.b64_buffer[182] == 0);",
          "    assert!(decoder.b64_buffer[183] == 0);",
          "    assert!(decoder.b64_buffer[184] == 0);",
          "    assert!(decoder.b64_buffer[185] == 0);",
          "    assert!(decoder.b64_buffer[186] == 0);",
          "    assert!(decoder.b64_buffer[187] == 0);",
          "    assert!(decoder.b64_buffer[188] == 0);",
          "    assert!(decoder.b64_buffer[189] == 0);",
          "    assert!(decoder.b64_buffer[190] == 0);",
          "    assert!(decoder.b64_buffer[191] == 0);",
          "    assert!(decoder.b64_buffer[192] == 0);",
          "    assert!(decoder.b64_buffer[193] == 0);",
          "    assert!(decoder.b64_buffer[194] == 0);",
          "    assert!(decoder.b64_buffer[195] == 0);",
          "    assert!(decoder.b64_buffer[196] == 0);",
          "    assert!(decoder.b64_buffer[197] == 0);",
          "    assert!(decoder.b64_buffer[198] == 0);",
          "    assert!(decoder.b64_buffer[199] == 0);",
          "    assert!(decoder.b64_buffer[200] == 0);",
          "    assert!(decoder.b64_buffer[201] == 0);",
          "    assert!(decoder.b64_buffer[202] == 0);",
          "    assert!(decoder.b64_buffer[203] == 0);",
          "    assert!(decoder.b64_buffer[204] == 0);",
          "    assert!(decoder.b64_buffer[205] == 0);",
          "    assert!(decoder.b64_buffer[206] == 0);",
          "    assert!(decoder.b64_buffer[207] == 0);",
          "    assert!(decoder.b64_buffer[208] == 0);",
          "    assert!(decoder.b64_buffer[209] == 0);",
          "    assert!(decoder.b64_buffer[210] == 0);",
          "    assert!(decoder.b64_buffer[211] == 0);",
          "    assert!(decoder.b64_buffer[212] == 0);",
          "    assert!(decoder.b64_buffer[213] == 0);",
          "    assert!(decoder.b64_buffer[214] == 0);",
          "    assert!(decoder.b64_buffer[215] == 0);",
          "    assert!(decoder.b64_buffer[216] == 0);",
          "    assert!(decoder.b64_buffer[217] == 0);",
          "    assert!(decoder.b64_buffer[218] == 0);",
          "    assert!(decoder.b64_buffer[219] == 0);",
          "    assert!(decoder.b64_buffer[220] == 0);",
          "    assert!(decoder.b64_buffer[221] == 0);",
          "    assert!(decoder.b64_buffer[222] == 0);",
          "    assert!(decoder.b64_buffer[223] == 0);",
          "    assert!(decoder.b64_buffer[224] == 0);",
          "    assert!(decoder.b64_buffer[225] == 0);",
          "    assert!(decoder.b64_buffer[226] == 0);",
          "    assert!(decoder.b64_buffer[227] == 0);",
          "    assert!(decoder.b64_buffer[228] == 0);",
          "    assert!(decoder.b64_buffer[229] == 0);",
          "    assert!(decoder.b64_buffer[230] == 0);",
          "    assert!(decoder.b64_buffer[231] == 0);",
          "    assert!(decoder.b64_buffer[232] == 0);",
          "    assert!(decoder.b64_buffer[233] == 0);",
          "    assert!(decoder.b64_buffer[234] == 0);",
          "    assert!(decoder.b64_buffer[235] == 0);",
          "    assert!(decoder.b64_buffer[236] == 0);",
          "    assert!(decoder.b64_buffer[237] == 0);",
          "    assert!(decoder.b64_buffer[238] == 0);",
          "    assert!(decoder.b64_buffer[239] == 0);",
          "    assert!(decoder.b64_buffer[240] == 0);",
          "    assert!(decoder.b64_buffer[241] == 0);",
          "    assert!(decoder.b64_buffer[242] == 0);",
          "    assert!(decoder.b64_buffer[243] == 0);",
          "    assert!(decoder.b64_buffer[244] == 0);",
          "    assert!(decoder.b64_buffer[245] == 0);",
          "    assert!(decoder.b64_buffer[246] == 0);",
          "    assert!(decoder.b64_buffer[247] == 0);",
          "    assert!(decoder.b64_buffer[248] == 0);",
          "    assert!(decoder.b64_buffer[249] == 0);",
          "    assert!(decoder.b64_buffer[250] == 0);",
          "    assert!(decoder.b64_buffer[251] == 0);",
          "    assert!(decoder.b64_buffer[252] == 0);",
          "    assert!(decoder.b64_buffer[253] == 0);",
          "    assert!(decoder.b64_buffer[254] == 0);",
          "    assert!(decoder.b64_buffer[255] == 0);",
          "    assert!(decoder.b64_buffer[256] == 0);",
          "    assert!(decoder.b64_buffer[257] == 0);",
          "    assert!(decoder.b64_buffer[258] == 0);",
          "    assert!(decoder.b64_buffer[259] == 0);",
          "    assert!(decoder.b64_buffer[260] == 0);",
          "    assert!(decoder.b64_buffer[261] == 0);",
          "    assert!(decoder.b64_buffer[262] == 0);",
          "    assert!(decoder.b64_buffer[263] == 0);",
          "    assert!(decoder.b64_buffer[264] == 0);",
          "    assert!(decoder.b64_buffer[265] == 0);",
          "    assert!(decoder.b64_buffer[266] == 0);",
          "    assert!(decoder.b64_buffer[267] == 0);",
          "    assert!(decoder.b64_buffer[268] == 0);",
          "    assert!(decoder.b64_buffer[269] == 0);",
          "    assert!(decoder.b64_buffer[270] == 0);",
          "    assert!(decoder.b64_buffer[271] == 0);",
          "    assert!(decoder.b64_buffer[272] == 0);",
          "    assert!(decoder.b64_buffer[273] == 0);",
          "    assert!(decoder.b64_buffer[274] == 0);",
          "    assert!(decoder.b64_buffer[275] == 0);",
          "    assert!(decoder.b64_buffer[276] == 0);",
          "    assert!(decoder.b64_buffer[277] == 0);",
          "    assert!(decoder.b64_buffer[278] == 0);",
          "    assert!(decoder.b64_buffer[279] == 0);",
          "    assert!(decoder.b64_buffer[280] == 0);",
          "    assert!(decoder.b64_buffer[281] == 0);",
          "    assert!(decoder.b64_buffer[282] == 0);",
          "    assert!(decoder.b64_buffer[283] == 0);",
          "    assert!(decoder.b64_buffer[284] == 0);",
          "    assert!(decoder.b64_buffer[285] == 0);",
          "    assert!(decoder.b64_buffer[286] == 0);",
          "    assert!(decoder.b64_buffer[287] == 0);",
          "    assert!(decoder.b64_buffer[288] == 0);",
          "    assert!(decoder.b64_buffer[289] == 0);",
          "    assert!(decoder.b64_buffer[290] == 0);",
          "    assert!(decoder.b64_buffer[291] == 0);",
          "    assert!(decoder.b64_buffer[292] == 0);",
          "    assert!(decoder.b64_buffer[293] == 0);",
          "    assert!(decoder.b64_buffer[294] == 0);",
          "    assert!(decoder.b64_buffer[295] == 0);",
          "    assert!(decoder.b64_buffer[296] == 0);",
          "    assert!(decoder.b64_buffer[297] == 0);",
          "    assert!(decoder.b64_buffer[298] == 0);",
          "    assert!(decoder.b64_buffer[299] == 0);",
          "    assert!(decoder.b64_buffer[300] == 0);",
          "    assert!(decoder.b64_buffer[301] == 0);",
          "    assert!(decoder.b64_buffer[302] == 0);",
          "    assert!(decoder.b64_buffer[303] == 0);",
          "    assert!(decoder.b64_buffer[304] == 0);",
          "    assert!(decoder.b64_buffer[305] == 0);",
          "    assert!(decoder.b64_buffer[306] == 0);",
          "    assert!(decoder.b64_buffer[307] == 0);",
          "    assert!(decoder.b64_buffer[308] == 0);",
          "    assert!(decoder.b64_buffer[309] == 0);",
          "    assert!(decoder.b64_buffer[310] == 0);",
          "    assert!(decoder.b64_buffer[311] == 0);",
          "    assert!(decoder.b64_buffer[312] == 0);",
          "    assert!(decoder.b64_buffer[313] == 0);",
          "    assert!(decoder.b64_buffer[314] == 0);",
          "    assert!(decoder.b64_buffer[315] == 0);",
          "    assert!(decoder.b64_buffer[316] == 0);",
          "    assert!(decoder.b64_buffer[317] == 0);",
          "    assert!(decoder.b64_buffer[318] == 0);",
          "    assert!(decoder.b64_buffer[319] == 0);",
          "    assert!(decoder.b64_buffer[320] == 0);",
          "    assert!(decoder.b64_buffer[321] == 0);",
          "    assert!(decoder.b64_buffer[322] == 0);",
          "    assert!(decoder.b64_buffer[323] == 0);",
          "    assert!(decoder.b64_buffer[324] == 0);",
          "    assert!(decoder.b64_buffer[325] == 0);",
          "    assert!(decoder.b64_buffer[326] == 0);",
          "    assert!(decoder.b64_buffer[327] == 0);",
          "    assert!(decoder.b64_buffer[328] == 0);",
          "    assert!(decoder.b64_buffer[329] == 0);",
          "    assert!(decoder.b64_buffer[330] == 0);",
          "    assert!(decoder.b64_buffer[331] == 0);",
          "    assert!(decoder.b64_buffer[332] == 0);",
          "    assert!(decoder.b64_buffer[333] == 0);",
          "    assert!(decoder.b64_buffer[334] == 0);",
          "    assert!(decoder.b64_buffer[335] == 0);",
          "    assert!(decoder.b64_buffer[336] == 0);",
          "    assert!(decoder.b64_buffer[337] == 0);",
          "    assert!(decoder.b64_buffer[338] == 0);",
          "    assert!(decoder.b64_buffer[339] == 0);",
          "    assert!(decoder.b64_buffer[340] == 0);",
          "    assert!(decoder.b64_buffer[341] == 0);",
          "    assert!(decoder.b64_buffer[342] == 0);",
          "    assert!(decoder.b64_buffer[343] == 0);",
          "    assert!(decoder.b64_buffer[344] == 0);",
          "    assert!(decoder.b64_buffer[345] == 0);",
          "    assert!(decoder.b64_buffer[346] == 0);",
          "    assert!(decoder.b64_buffer[347] == 0);",
          "    assert!(decoder.b64_buffer[348] == 0);",
          "    assert!(decoder.b64_buffer[349] == 0);",
          "    assert!(decoder.b64_buffer[350] == 0);",
          "    assert!(decoder.b64_buffer[351] == 0);",
          "    assert!(decoder.b64_buffer[352] == 0);",
          "    assert!(decoder.b64_buffer[353] == 0);",
          "    assert!(decoder.b64_buffer[354] == 0);",
          "    assert!(decoder.b64_buffer[355] == 0);",
          "    assert!(decoder.b64_buffer[356] == 0);",
          "    assert!(decoder.b64_buffer[357] == 0);",
          "    assert!(decoder.b64_buffer[358] == 0);",
          "    assert!(decoder.b64_buffer[359] == 0);",
          "    assert!(decoder.b64_buffer[360] == 0);",
          "    assert!(decoder.b64_buffer[361] == 0);",
          "    assert!(decoder.b64_buffer[362] == 0);",
          "    assert!(decoder.b64_buffer[363] == 0);",
          "    assert!(decoder.b64_buffer[364] == 0);",
          "    assert!(decoder.b64_buffer[365] == 0);",
          "    assert!(decoder.b64_buffer[366] == 0);",
          "    assert!(decoder.b64_buffer[367] == 0);",
          "    assert!(decoder.b64_buffer[368] == 0);",
          "    assert!(decoder.b64_buffer[369] == 0);",
          "    assert!(decoder.b64_buffer[370] == 0);",
          "    assert!(decoder.b64_buffer[371] == 0);",
          "    assert!(decoder.b64_buffer[372] == 0);",
          "    assert!(decoder.b64_buffer[373] == 0);",
          "    assert!(decoder.b64_buffer[374] == 0);",
          "    assert!(decoder.b64_buffer[375] == 0);",
          "    assert!(decoder.b64_buffer[376] == 0);",
          "    assert!(decoder.b64_buffer[377] == 0);",
          "    assert!(decoder.b64_buffer[378] == 0);",
          "    assert!(decoder.b64_buffer[379] == 0);",
          "    assert!(decoder.b64_buffer[380] == 0);",
          "    assert!(decoder.b64_buffer[381] == 0);",
          "    assert!(decoder.b64_buffer[382] == 0);",
          "    assert!(decoder.b64_buffer[383] == 0);",
          "    assert!(decoder.b64_buffer[384] == 0);",
          "    assert!(decoder.b64_buffer[385] == 0);",
          "    assert!(decoder.b64_buffer[386] == 0);",
          "    assert!(decoder.b64_buffer[387] == 0);",
          "    assert!(decoder.b64_buffer[388] == 0);",
          "    assert!(decoder.b64_buffer[389] == 0);",
          "    assert!(decoder.b64_buffer[390] == 0);",
          "    assert!(decoder.b64_buffer[391] == 0);",
          "    assert!(decoder.b64_buffer[392] == 0);",
          "    assert!(decoder.b64_buffer[393] == 0);",
          "    assert!(decoder.b64_buffer[394] == 0);",
          "    assert!(decoder.b64_buffer[395] == 0);",
          "    assert!(decoder.b64_buffer[396] == 0);",
          "    assert!(decoder.b64_buffer[397] == 0);",
          "    assert!(decoder.b64_buffer[398] == 0);",
          "    assert!(decoder.b64_buffer[399] == 0);",
          "    assert!(decoder.b64_buffer[400] == 0);",
          "    assert!(decoder.b64_buffer[401] == 0);",
          "    assert!(decoder.b64_buffer[402] == 0);",
          "    assert!(decoder.b64_buffer[403] == 0);",
          "    assert!(decoder.b64_buffer[404] == 0);",
          "    assert!(decoder.b64_buffer[405] == 0);",
          "    assert!(decoder.b64_buffer[406] == 0);",
          "    assert!(decoder.b64_buffer[407] == 0);",
          "    assert!(decoder.b64_buffer[408] == 0);",
          "    assert!(decoder.b64_buffer[409] == 0);",
          "    assert!(decoder.b64_buffer[410] == 0);",
          "    assert!(decoder.b64_buffer[411] == 0);",
          "    assert!(decoder.b64_buffer[412] == 0);",
          "    assert!(decoder.b64_buffer[413] == 0);",
          "    assert!(decoder.b64_buffer[414] == 0);",
          "    assert!(decoder.b64_buffer[415] == 0);",
          "    assert!(decoder.b64_buffer[416] == 0);",
          "    assert!(decoder.b64_buffer[417] == 0);",
          "    assert!(decoder.b64_buffer[418] == 0);",
          "    assert!(decoder.b64_buffer[419] == 0);",
          "    assert!(decoder.b64_buffer[420] == 0);",
          "    assert!(decoder.b64_buffer[421] == 0);",
          "    assert!(decoder.b64_buffer[422] == 0);",
          "    assert!(decoder.b64_buffer[423] == 0);",
          "    assert!(decoder.b64_buffer[424] == 0);",
          "    assert!(decoder.b64_buffer[425] == 0);",
          "    assert!(decoder.b64_buffer[426] == 0);",
          "    assert!(decoder.b64_buffer[427] == 0);",
          "    assert!(decoder.b64_buffer[428] == 0);",
          "    assert!(decoder.b64_buffer[429] == 0);",
          "    assert!(decoder.b64_buffer[430] == 0);",
          "    assert!(decoder.b64_buffer[431] == 0);",
          "    assert!(decoder.b64_buffer[432] == 0);",
          "    assert!(decoder.b64_buffer[433] == 0);",
          "    assert!(decoder.b64_buffer[434] == 0);",
          "    assert!(decoder.b64_buffer[435] == 0);",
          "    assert!(decoder.b64_buffer[436] == 0);",
          "    assert!(decoder.b64_buffer[437] == 0);",
          "    assert!(decoder.b64_buffer[438] == 0);",
          "    assert!(decoder.b64_buffer[439] == 0);",
          "    assert!(decoder.b64_buffer[440] == 0);",
          "    assert!(decoder.b64_buffer[441] == 0);",
          "    assert!(decoder.b64_buffer[442] == 0);",
          "    assert!(decoder.b64_buffer[443] == 0);",
          "    assert!(decoder.b64_buffer[444] == 0);",
          "    assert!(decoder.b64_buffer[445] == 0);",
          "    assert!(decoder.b64_buffer[446] == 0);",
          "    assert!(decoder.b64_buffer[447] == 0);",
          "    assert!(decoder.b64_buffer[448] == 0);",
          "    assert!(decoder.b64_buffer[449] == 0);",
          "    assert!(decoder.b64_buffer[450] == 0);",
          "    assert!(decoder.b64_buffer[451] == 0);",
          "    assert!(decoder.b64_buffer[452] == 0);",
          "    assert!(decoder.b64_buffer[453] == 0);",
          "    assert!(decoder.b64_buffer[454] == 0);",
          "    assert!(decoder.b64_buffer[455] == 0);",
          "    assert!(decoder.b64_buffer[456] == 0);",
          "    assert!(decoder.b64_buffer[457] == 0);",
          "    assert!(decoder.b64_buffer[458] == 0);",
          "    assert!(decoder.b64_buffer[459] == 0);",
          "    assert!(decoder.b64_buffer[460] == 0);",
          "    assert!(decoder.b64_buffer[461] == 0);",
          "    assert!(decoder.b64_buffer[462] == 0);",
          "    assert!(decoder.b64_buffer[463] == 0);",
          "    assert!(decoder.b64_buffer[464] == 0);",
          "    assert!(decoder.b64_buffer[465] == 0);",
          "    assert!(decoder.b64_buffer[466] == 0);",
          "    assert!(decoder.b64_buffer[467] == 0);",
          "    assert!(decoder.b64_buffer[468] == 0);",
          "    assert!(decoder.b64_buffer[469] == 0);",
          "    assert!(decoder.b64_buffer[470] == 0);",
          "    assert!(decoder.b64_buffer[471] == 0);",
          "    assert!(decoder.b64_buffer[472] == 0);",
          "    assert!(decoder.b64_buffer[473] == 0);",
          "    assert!(decoder.b64_buffer[474] == 0);",
          "    assert!(decoder.b64_buffer[475] == 0);",
          "    assert!(decoder.b64_buffer[476] == 0);",
          "    assert!(decoder.b64_buffer[477] == 0);",
          "    assert!(decoder.b64_buffer[478] == 0);",
          "    assert!(decoder.b64_buffer[479] == 0);",
          "    assert!(decoder.b64_buffer[480] == 0);",
          "    assert!(decoder.b64_buffer[481] == 0);",
          "    assert!(decoder.b64_buffer[482] == 0);",
          "    assert!(decoder.b64_buffer[483] == 0);",
          "    assert!(decoder.b64_buffer[484] == 0);",
          "    assert!(decoder.b64_buffer[485] == 0);",
          "    assert!(decoder.b64_buffer[486] == 0);",
          "    assert!(decoder.b64_buffer[487] == 0);",
          "    assert!(decoder.b64_buffer[488] == 0);",
          "    assert!(decoder.b64_buffer[489] == 0);",
          "    assert!(decoder.b64_buffer[490] == 0);",
          "    assert!(decoder.b64_buffer[491] == 0);",
          "    assert!(decoder.b64_buffer[492] == 0);",
          "    assert!(decoder.b64_buffer[493] == 0);",
          "    assert!(decoder.b64_buffer[494] == 0);",
          "    assert!(decoder.b64_buffer[495] == 0);",
          "    assert!(decoder.b64_buffer[496] == 0);",
          "    assert!(decoder.b64_buffer[497] == 0);",
          "    assert!(decoder.b64_buffer[498] == 0);",
          "    assert!(decoder.b64_buffer[499] == 0);",
          "    assert!(decoder.b64_buffer[500] == 0);",
          "    assert!(decoder.b64_buffer[501] == 0);",
          "    assert!(decoder.b64_buffer[502] == 0);",
          "    assert!(decoder.b64_buffer[503] == 0);",
          "    assert!(decoder.b64_buffer[504] == 0);",
          "    assert!(decoder.b64_buffer[505] == 0);",
          "    assert!(decoder.b64_buffer[506] == 0);",
          "    assert!(decoder.b64_buffer[507] == 0);",
          "    assert!(decoder.b64_buffer[508] == 0);",
          "    assert!(decoder.b64_buffer[509] == 0);",
          "    assert!(decoder.b64_buffer[510] == 0);",
          "    assert!(decoder.b64_buffer[511] == 0);",
          "    assert!(decoder.b64_buffer[512] == 0);",
          "    assert!(decoder.b64_buffer[513] == 0);",
          "    assert!(decoder.b64_buffer[514] == 0);",
          "    assert!(decoder.b64_buffer[515] == 0);",
          "    assert!(decoder.b64_buffer[516] == 0);",
          "    assert!(decoder.b64_buffer[517] == 0);",
          "    assert!(decoder.b64_buffer[518] == 0);",
          "    assert!(decoder.b64_buffer[519] == 0);",
          "    assert!(decoder.b64_buffer[520] == 0);",
          "    assert!(decoder.b64_buffer[521] == 0);",
          "    assert!(decoder.b64_buffer[522] == 0);",
          "    assert!(decoder.b64_buffer[523] == 0);",
          "    assert!(decoder.b64_buffer[524] == 0);",
          "    assert!(decoder.b64_buffer[525] == 0);",
          "    assert!(decoder.b64_buffer[526] == 0);",
          "    assert!(decoder.b64_buffer[527] == 0);",
          "    assert!(decoder.b64_buffer[528] == 0);",
          "    assert!(decoder.b64_buffer[529] == 0);",
          "    assert!(decoder.b64_buffer[530] == 0);",
          "    assert!(decoder.b64_buffer[531] == 0);",
          "    assert!(decoder.b64_buffer[532] == 0);",
          "    assert!(decoder.b64_buffer[533] == 0);",
          "    assert!(decoder.b64_buffer[534] == 0);",
          "    assert!(decoder.b64_buffer[535] == 0);",
          "    assert!(decoder.b64_buffer[536] == 0);",
          "    assert!(decoder.b64_buffer[537] == 0);",
          "    assert!(decoder.b64_buffer[538] == 0);",
          "    assert!(decoder.b64_buffer[539] == 0);",
          "    assert!(decoder.b64_buffer[540] == 0);",
          "    assert!(decoder.b64_buffer[541] == 0);",
          "    assert!(decoder.b64_buffer[542] == 0);",
          "    assert!(decoder.b64_buffer[543] == 0);",
          "    assert!(decoder.b64_buffer[544] == 0);",
          "    assert!(decoder.b64_buffer[545] == 0);",
          "    assert!(decoder.b64_buffer[546] == 0);",
          "    assert!(decoder.b64_buffer[547] == 0);",
          "    assert!(decoder.b64_buffer[548] == 0);",
          "    assert!(decoder.b64_buffer[549] == 0);",
          "    assert!(decoder.b64_buffer[550] == 0);",
          "    assert!(decoder.b64_buffer[551] == 0);",
          "    assert!(decoder.b64_buffer[552] == 0);",
          "    assert!(decoder.b64_buffer[553] == 0);",
          "    assert!(decoder.b64_buffer[554] == 0);",
          "    assert!(decoder.b64_buffer[555] == 0);",
          "    assert!(decoder.b64_buffer[556] == 0);",
          "    assert!(decoder.b64_buffer[557] == 0);",
          "    assert!(decoder.b64_buffer[558] == 0);",
          "    assert!(decoder.b64_buffer[559] == 0);",
          "    assert!(decoder.b64_buffer[560] == 0);",
          "    assert!(decoder.b64_buffer[561] == 0);",
          "    assert!(decoder.b64_buffer[562] == 0);",
          "    assert!(decoder.b64_buffer[563] == 0);",
          "    assert!(decoder.b64_buffer[564] == 0);",
          "    assert!(decoder.b64_buffer[565] == 0);",
          "    assert!(decoder.b64_buffer[566] == 0);",
          "    assert!(decoder.b64_buffer[567] == 0);",
          "    assert!(decoder.b64_buffer[568] == 0);",
          "    assert!(decoder.b64_buffer[569] == 0);",
          "    assert!(decoder.b64_buffer[570] == 0);",
          "    assert!(decoder.b64_buffer[571] == 0);",
          "    assert!(decoder.b64_buffer[572] == 0);",
          "    assert!(decoder.b64_buffer[573] == 0);",
          "    assert!(decoder.b64_buffer[574] == 0);",
          "    assert!(decoder.b64_buffer[575] == 0);",
          "    assert!(decoder.b64_buffer[576] == 0);",
          "    assert!(decoder.b64_buffer[577] == 0);",
          "    assert!(decoder.b64_buffer[578] == 0);",
          "    assert!(decoder.b64_buffer[579] == 0);",
          "    assert!(decoder.b64_buffer[580] == 0);",
          "    assert!(decoder.b64_buffer[581] == 0);",
          "    assert!(decoder.b64_buffer[582] == 0);",
          "    assert!(decoder.b64_buffer[583] == 0);",
          "    assert!(decoder.b64_buffer[584] == 0);",
          "    assert!(decoder.b64_buffer[585] == 0);",
          "    assert!(decoder.b64_buffer[586] == 0);",
          "    assert!(decoder.b64_buffer[587] == 0);",
          "    assert!(decoder.b64_buffer[588] == 0);",
          "    assert!(decoder.b64_buffer[589] == 0);",
          "    assert!(decoder.b64_buffer[590] == 0);",
          "    assert!(decoder.b64_buffer[591] == 0);",
          "    assert!(decoder.b64_buffer[592] == 0);",
          "    assert!(decoder.b64_buffer[593] == 0);",
          "    assert!(decoder.b64_buffer[594] == 0);",
          "    assert!(decoder.b64_buffer[595] == 0);",
          "    assert!(decoder.b64_buffer[596] == 0);",
          "    assert!(decoder.b64_buffer[597] == 0);",
          "    assert!(decoder.b64_buffer[598] == 0);",
          "    assert!(decoder.b64_buffer[599] == 0);",
          "    assert!(decoder.b64_buffer[600] == 0);",
          "    assert!(decoder.b64_buffer[601] == 0);",
          "    assert!(decoder.b64_buffer[602] == 0);",
          "    assert!(decoder.b64_buffer[603] == 0);",
          "    assert!(decoder.b64_buffer[604] == 0);",
          "    assert!(decoder.b64_buffer[605] == 0);",
          "    assert!(decoder.b64_buffer[606] == 0);",
          "    assert!(decoder.b64_buffer[607] == 0);",
          "    assert!(decoder.b64_buffer[608] == 0);",
          "    assert!(decoder.b64_buffer[609] == 0);",
          "    assert!(decoder.b64_buffer[610] == 0);",
          "    assert!(decoder.b64_buffer[611] == 0);",
          "    assert!(decoder.b64_buffer[612] == 0);",
          "    assert!(decoder.b64_buffer[613] == 0);",
          "    assert!(decoder.b64_buffer[614] == 0);",
          "    assert!(decoder.b64_buffer[615] == 0);",
          "    assert!(decoder.b64_buffer[616] == 0);",
          "    assert!(decoder.b64_buffer[617] == 0);",
          "    assert!(decoder.b64_buffer[618] == 0);",
          "    assert!(decoder.b64_buffer[619] == 0);",
          "    assert!(decoder.b64_buffer[620] == 0);",
          "    assert!(decoder.b64_buffer[621] == 0);",
          "    assert!(decoder.b64_buffer[622] == 0);",
          "    assert!(decoder.b64_buffer[623] == 0);",
          "    assert!(decoder.b64_buffer[624] == 0);",
          "    assert!(decoder.b64_buffer[625] == 0);",
          "    assert!(decoder.b64_buffer[626] == 0);",
          "    assert!(decoder.b64_buffer[627] == 0);",
          "    assert!(decoder.b64_buffer[628] == 0);",
          "    assert!(decoder.b64_buffer[629] == 0);",
          "    assert!(decoder.b64_buffer[630] == 0);",
          "    assert!(decoder.b64_buffer[631] == 0);",
          "    assert!(decoder.b64_buffer[632] == 0);",
          "    assert!(decoder.b64_buffer[633] == 0);",
          "    assert!(decoder.b64_buffer[634] == 0);",
          "    assert!(decoder.b64_buffer[635] == 0);",
          "    assert!(decoder.b64_buffer[636] == 0);",
          "    assert!(decoder.b64_buffer[637] == 0);",
          "    assert!(decoder.b64_buffer[638] == 0);",
          "    assert!(decoder.b64_buffer[639] == 0);",
          "    assert!(decoder.b64_buffer[640] == 0);",
          "    assert!(decoder.b64_buffer[641] == 0);",
          "    assert!(decoder.b64_buffer[642] == 0);",
          "    assert!(decoder.b64_buffer[643] == 0);",
          "    assert!(decoder.b64_buffer[644] == 0);",
          "    assert!(decoder.b64_buffer[645] == 0);",
          "    assert!(decoder.b64_buffer[646] == 0);",
          "    assert!(decoder.b64_buffer[647] == 0);",
          "    assert!(decoder.b64_buffer[648] == 0);",
          "    assert!(decoder.b64_buffer[649] == 0);",
          "    assert!(decoder.b64_buffer[650] == 0);",
          "    assert!(decoder.b64_buffer[651] == 0);",
          "    assert!(decoder.b64_buffer[652] == 0);",
          "    assert!(decoder.b64_buffer[653] == 0);",
          "    assert!(decoder.b64_buffer[654] == 0);",
          "    assert!(decoder.b64_buffer[655] == 0);",
          "    assert!(decoder.b64_buffer[656] == 0);",
          "    assert!(decoder.b64_buffer[657] == 0);",
          "    assert!(decoder.b64_buffer[658] == 0);",
          "    assert!(decoder.b64_buffer[659] == 0);",
          "    assert!(decoder.b64_buffer[660] == 0);",
          "    assert!(decoder.b64_buffer[661] == 0);",
          "    assert!(decoder.b64_buffer[662] == 0);",
          "    assert!(decoder.b64_buffer[663] == 0);",
          "    assert!(decoder.b64_buffer[664] == 0);",
          "    assert!(decoder.b64_buffer[665] == 0);",
          "    assert!(decoder.b64_buffer[666] == 0);",
          "    assert!(decoder.b64_buffer[667] == 0);",
          "    assert!(decoder.b64_buffer[668] == 0);",
          "    assert!(decoder.b64_buffer[669] == 0);",
          "    assert!(decoder.b64_buffer[670] == 0);",
          "    assert!(decoder.b64_buffer[671] == 0);",
          "    assert!(decoder.b64_buffer[672] == 0);",
          "    assert!(decoder.b64_buffer[673] == 0);",
          "    assert!(decoder.b64_buffer[674] == 0);",
          "    assert!(decoder.b64_buffer[675] == 0);",
          "    assert!(decoder.b64_buffer[676] == 0);",
          "    assert!(decoder.b64_buffer[677] == 0);",
          "    assert!(decoder.b64_buffer[678] == 0);",
          "    assert!(decoder.b64_buffer[679] == 0);",
          "    assert!(decoder.b64_buffer[680] == 0);",
          "    assert!(decoder.b64_buffer[681] == 0);",
          "    assert!(decoder.b64_buffer[682] == 0);",
          "    assert!(decoder.b64_buffer[683] == 0);",
          "    assert!(decoder.b64_buffer[684] == 0);",
          "    assert!(decoder.b64_buffer[685] == 0);",
          "    assert!(decoder.b64_buffer[686] == 0);",
          "    assert!(decoder.b64_buffer[687] == 0);",
          "    assert!(decoder.b64_buffer[688] == 0);",
          "    assert!(decoder.b64_buffer[689] == 0);",
          "    assert!(decoder.b64_buffer[690] == 0);",
          "    assert!(decoder.b64_buffer[691] == 0);",
          "    assert!(decoder.b64_buffer[692] == 0);",
          "    assert!(decoder.b64_buffer[693] == 0);",
          "    assert!(decoder.b64_buffer[694] == 0);",
          "    assert!(decoder.b64_buffer[695] == 0);",
          "    assert!(decoder.b64_buffer[696] == 0);",
          "    assert!(decoder.b64_buffer[697] == 0);",
          "    assert!(decoder.b64_buffer[698] == 0);",
          "    assert!(decoder.b64_buffer[699] == 0);",
          "    assert!(decoder.b64_buffer[700] == 0);",
          "    assert!(decoder.b64_buffer[701] == 0);",
          "    assert!(decoder.b64_buffer[702] == 0);",
          "    assert!(decoder.b64_buffer[703] == 0);",
          "    assert!(decoder.b64_buffer[704] == 0);",
          "    assert!(decoder.b64_buffer[705] == 0);",
          "    assert!(decoder.b64_buffer[706] == 0);",
          "    assert!(decoder.b64_buffer[707] == 0);",
          "    assert!(decoder.b64_buffer[708] == 0);",
          "    assert!(decoder.b64_buffer[709] == 0);",
          "    assert!(decoder.b64_buffer[710] == 0);",
          "    assert!(decoder.b64_buffer[711] == 0);",
          "    assert!(decoder.b64_buffer[712] == 0);",
          "    assert!(decoder.b64_buffer[713] == 0);",
          "    assert!(decoder.b64_buffer[714] == 0);",
          "    assert!(decoder.b64_buffer[715] == 0);",
          "    assert!(decoder.b64_buffer[716] == 0);",
          "    assert!(decoder.b64_buffer[717] == 0);",
          "    assert!(decoder.b64_buffer[718] == 0);",
          "    assert!(decoder.b64_buffer[719] == 0);",
          "    assert!(decoder.b64_buffer[720] == 0);",
          "    assert!(decoder.b64_buffer[721] == 0);",
          "    assert!(decoder.b64_buffer[722] == 0);",
          "    assert!(decoder.b64_buffer[723] == 0);",
          "    assert!(decoder.b64_buffer[724] == 0);",
          "    assert!(decoder.b64_buffer[725] == 0);",
          "    assert!(decoder.b64_buffer[726] == 0);",
          "    assert!(decoder.b64_buffer[727] == 0);",
          "    assert!(decoder.b64_buffer[728] == 0);",
          "    assert!(decoder.b64_buffer[729] == 0);",
          "    assert!(decoder.b64_buffer[730] == 0);",
          "    assert!(decoder.b64_buffer[731] == 0);",
          "    assert!(decoder.b64_buffer[732] == 0);",
          "    assert!(decoder.b64_buffer[733] == 0);",
          "    assert!(decoder.b64_buffer[734] == 0);",
          "    assert!(decoder.b64_buffer[735] == 0);",
          "    assert!(decoder.b64_buffer[736] == 0);",
          "    assert!(decoder.b64_buffer[737] == 0);",
          "    assert!(decoder.b64_buffer[738] == 0);",
          "    assert!(decoder.b64_buffer[739] == 0);",
          "    assert!(decoder.b64_buffer[740] == 0);",
          "    assert!(decoder.b64_buffer[741] == 0);",
          "    assert!(decoder.b64_buffer[742] == 0);",
          "    assert!(decoder.b64_buffer[743] == 0);",
          "    assert!(decoder.b64_buffer[744] == 0);",
          "    assert!(decoder.b64_buffer[745] == 0);",
          "    assert!(decoder.b64_buffer[746] == 0);",
          "    assert!(decoder.b64_buffer[747] == 0);",
          "    assert!(decoder.b64_buffer[748] == 0);",
          "    assert!(decoder.b64_buffer[749] == 0);",
          "    assert!(decoder.b64_buffer[750] == 0);",
          "    assert!(decoder.b64_buffer[751] == 0);",
          "    assert!(decoder.b64_buffer[752] == 0);",
          "    assert!(decoder.b64_buffer[753] == 0);",
          "    assert!(decoder.b64_buffer[754] == 0);",
          "    assert!(decoder.b64_buffer[755] == 0);",
          "    assert!(decoder.b64_buffer[756] == 0);",
          "    assert!(decoder.b64_buffer[757] == 0);",
          "    assert!(decoder.b64_buffer[758] == 0);",
          "    assert!(decoder.b64_buffer[759] == 0);",
          "    assert!(decoder.b64_buffer[760] == 0);",
          "    assert!(decoder.b64_buffer[761] == 0);",
          "    assert!(decoder.b64_buffer[762] == 0);",
          "    assert!(decoder.b64_buffer[763] == 0);",
          "    assert!(decoder.b64_buffer[764] == 0);",
          "    assert!(decoder.b64_buffer[765] == 0);",
          "    assert!(decoder.b64_buffer[766] == 0);",
          "    assert!(decoder.b64_buffer[767] == 0);",
          "    assert!(decoder.b64_buffer[768] == 0);",
          "    assert!(decoder.b64_buffer[769] == 0);",
          "    assert!(decoder.b64_buffer[770] == 0);",
          "    assert!(decoder.b64_buffer[771] == 0);",
          "    assert!(decoder.b64_buffer[772] == 0);",
          "    assert!(decoder.b64_buffer[773] == 0);",
          "    assert!(decoder.b64_buffer[774] == 0);",
          "    assert!(decoder.b64_buffer[775] == 0);",
          "    assert!(decoder.b64_buffer[776] == 0);",
          "    assert!(decoder.b64_buffer[777] == 0);",
          "    assert!(decoder.b64_buffer[778] == 0);",
          "    assert!(decoder.b64_buffer[779] == 0);",
          "    assert!(decoder.b64_buffer[780] == 0);",
          "    assert!(decoder.b64_buffer[781] == 0);",
          "    assert!(decoder.b64_buffer[782] == 0);",
          "    assert!(decoder.b64_buffer[783] == 0);",
          "    assert!(decoder.b64_buffer[784] == 0);",
          "    assert!(decoder.b64_buffer[785] == 0);",
          "    assert!(decoder.b64_buffer[786] == 0);",
          "    assert!(decoder.b64_buffer[787] == 0);",
          "    assert!(decoder.b64_buffer[788] == 0);",
          "    assert!(decoder.b64_buffer[789] == 0);",
          "    assert!(decoder.b64_buffer[790] == 0);",
          "    assert!(decoder.b64_buffer[791] == 0);",
          "    assert!(decoder.b64_buffer[792] == 0);",
          "    assert!(decoder.b64_buffer[793] == 0);",
          "    assert!(decoder.b64_buffer[794] == 0);",
          "    assert!(decoder.b64_buffer[795] == 0);",
          "    assert!(decoder.b64_buffer[796] == 0);",
          "    assert!(decoder.b64_buffer[797] == 0);",
          "    assert!(decoder.b64_buffer[798] == 0);",
          "    assert!(decoder.b64_buffer[799] == 0);",
          "    assert!(decoder.b64_buffer[800] == 0);",
          "    assert!(decoder.b64_buffer[801] == 0);",
          "    assert!(decoder.b64_buffer[802] == 0);",
          "    assert!(decoder.b64_buffer[803] == 0);",
          "    assert!(decoder.b64_buffer[804] == 0);",
          "    assert!(decoder.b64_buffer[805] == 0);",
          "    assert!(decoder.b64_buffer[806] == 0);",
          "    assert!(decoder.b64_buffer[807] == 0);",
          "    assert!(decoder.b64_buffer[808] == 0);",
          "    assert!(decoder.b64_buffer[809] == 0);",
          "    assert!(decoder.b64_buffer[810] == 0);",
          "    assert!(decoder.b64_buffer[811] == 0);",
          "    assert!(decoder.b64_buffer[812] == 0);",
          "    assert!(decoder.b64_buffer[813] == 0);",
          "    assert!(decoder.b64_buffer[814] == 0);",
          "    assert!(decoder.b64_buffer[815] == 0);",
          "    assert!(decoder.b64_buffer[816] == 0);",
          "    assert!(decoder.b64_buffer[817] == 0);",
          "    assert!(decoder.b64_buffer[818] == 0);",
          "    assert!(decoder.b64_buffer[819] == 0);",
          "    assert!(decoder.b64_buffer[820] == 0);",
          "    assert!(decoder.b64_buffer[821] == 0);",
          "    assert!(decoder.b64_buffer[822] == 0);",
          "    assert!(decoder.b64_buffer[823] == 0);",
          "    assert!(decoder.b64_buffer[824] == 0);",
          "    assert!(decoder.b64_buffer[825] == 0);",
          "    assert!(decoder.b64_buffer[826] == 0);",
          "    assert!(decoder.b64_buffer[827] == 0);",
          "    assert!(decoder.b64_buffer[828] == 0);",
          "    assert!(decoder.b64_buffer[829] == 0);",
          "    assert!(decoder.b64_buffer[830] == 0);",
          "    assert!(decoder.b64_buffer[831] == 0);",
          "    assert!(decoder.b64_buffer[832] == 0);",
          "    assert!(decoder.b64_buffer[833] == 0);",
          "    assert!(decoder.b64_buffer[834] == 0);",
          "    assert!(decoder.b64_buffer[835] == 0);",
          "    assert!(decoder.b64_buffer[836] == 0);",
          "    assert!(decoder.b64_buffer[837] == 0);",
          "    assert!(decoder.b64_buffer[838] == 0);",
          "    assert!(decoder.b64_buffer[839] == 0);",
          "    assert!(decoder.b64_buffer[840] == 0);",
          "    assert!(decoder.b64_buffer[841] == 0);",
          "    assert!(decoder.b64_buffer[842] == 0);",
          "    assert!(decoder.b64_buffer[843] == 0);",
          "    assert!(decoder.b64_buffer[844] == 0);",
          "    assert!(decoder.b64_buffer[845] == 0);",
          "    assert!(decoder.b64_buffer[846] == 0);",
          "    assert!(decoder.b64_buffer[847] == 0);",
          "    assert!(decoder.b64_buffer[848] == 0);",
          "    assert!(decoder.b64_buffer[849] == 0);",
          "    assert!(decoder.b64_buffer[850] == 0);",
          "    assert!(decoder.b64_buffer[851] == 0);",
          "    assert!(decoder.b64_buffer[852] == 0);",
          "    assert!(decoder.b64_buffer[853] == 0);",
          "    assert!(decoder.b64_buffer[854] == 0);",
          "    assert!(decoder.b64_buffer[855] == 0);",
          "    assert!(decoder.b64_buffer[856] == 0);",
          "    assert!(decoder.b64_buffer[857] == 0);",
          "    assert!(decoder.b64_buffer[858] == 0);",
          "    assert!(decoder.b64_buffer[859] == 0);",
          "    assert!(decoder.b64_buffer[860] == 0);",
          "    assert!(decoder.b64_buffer[861] == 0);",
          "    assert!(decoder.b64_buffer[862] == 0);",
          "    assert!(decoder.b64_buffer[863] == 0);",
          "    assert!(decoder.b64_buffer[864] == 0);",
          "    assert!(decoder.b64_buffer[865] == 0);",
          "    assert!(decoder.b64_buffer[866] == 0);",
          "    assert!(decoder.b64_buffer[867] == 0);",
          "    assert!(decoder.b64_buffer[868] == 0);",
          "    assert!(decoder.b64_buffer[869] == 0);",
          "    assert!(decoder.b64_buffer[870] == 0);",
          "    assert!(decoder.b64_buffer[871] == 0);",
          "    assert!(decoder.b64_buffer[872] == 0);",
          "    assert!(decoder.b64_buffer[873] == 0);",
          "    assert!(decoder.b64_buffer[874] == 0);",
          "    assert!(decoder.b64_buffer[875] == 0);",
          "    assert!(decoder.b64_buffer[876] == 0);",
          "    assert!(decoder.b64_buffer[877] == 0);",
          "    assert!(decoder.b64_buffer[878] == 0);",
          "    assert!(decoder.b64_buffer[879] == 0);",
          "    assert!(decoder.b64_buffer[880] == 0);",
          "    assert!(decoder.b64_buffer[881] == 0);",
          "    assert!(decoder.b64_buffer[882] == 0);",
          "    assert!(decoder.b64_buffer[883] == 0);",
          "    assert!(decoder.b64_buffer[884] == 0);",
          "    assert!(decoder.b64_buffer[885] == 0);",
          "    assert!(decoder.b64_buffer[886] == 0);",
          "    assert!(decoder.b64_buffer[887] == 0);",
          "    assert!(decoder.b64_buffer[888] == 0);",
          "    assert!(decoder.b64_buffer[889] == 0);",
          "    assert!(decoder.b64_buffer[890] == 0);",
          "    assert!(decoder.b64_buffer[891] == 0);",
          "    assert!(decoder.b64_buffer[892] == 0);",
          "    assert!(decoder.b64_buffer[893] == 0);",
          "    assert!(decoder.b64_buffer[894] == 0);",
          "    assert!(decoder.b64_buffer[895] == 0);",
          "    assert!(decoder.b64_buffer[896] == 0);",
          "    assert!(decoder.b64_buffer[897] == 0);",
          "    assert!(decoder.b64_buffer[898] == 0);",
          "    assert!(decoder.b64_buffer[899] == 0);",
          "    assert!(decoder.b64_buffer[900] == 0);",
          "    assert!(decoder.b64_buffer[901] == 0);",
          "    assert!(decoder.b64_buffer[902] == 0);",
          "    assert!(decoder.b64_buffer[903] == 0);",
          "    assert!(decoder.b64_buffer[904] == 0);",
          "    assert!(decoder.b64_buffer[905] == 0);",
          "    assert!(decoder.b64_buffer[906] == 0);",
          "    assert!(decoder.b64_buffer[907] == 0);",
          "    assert!(decoder.b64_buffer[908] == 0);",
          "    assert!(decoder.b64_buffer[909] == 0);",
          "    assert!(decoder.b64_buffer[910] == 0);",
          "    assert!(decoder.b64_buffer[911] == 0);",
          "    assert!(decoder.b64_buffer[912] == 0);",
          "    assert!(decoder.b64_buffer[913] == 0);",
          "    assert!(decoder.b64_buffer[914] == 0);",
          "    assert!(decoder.b64_buffer[915] == 0);",
          "    assert!(decoder.b64_buffer[916] == 0);",
          "    assert!(decoder.b64_buffer[917] == 0);",
          "    assert!(decoder.b64_buffer[918] == 0);",
          "    assert!(decoder.b64_buffer[919] == 0);",
          "    assert!(decoder.b64_buffer[920] == 0);",
          "    assert!(decoder.b64_buffer[921] == 0);",
          "    assert!(decoder.b64_buffer[922] == 0);",
          "    assert!(decoder.b64_buffer[923] == 0);",
          "    assert!(decoder.b64_buffer[924] == 0);",
          "    assert!(decoder.b64_buffer[925] == 0);",
          "    assert!(decoder.b64_buffer[926] == 0);",
          "    assert!(decoder.b64_buffer[927] == 0);",
          "    assert!(decoder.b64_buffer[928] == 0);",
          "    assert!(decoder.b64_buffer[929] == 0);",
          "    assert!(decoder.b64_buffer[930] == 0);",
          "    assert!(decoder.b64_buffer[931] == 0);",
          "    assert!(decoder.b64_buffer[932] == 0);",
          "    assert!(decoder.b64_buffer[933] == 0);",
          "    assert!(decoder.b64_buffer[934] == 0);",
          "    assert!(decoder.b64_buffer[935] == 0);",
          "    assert!(decoder.b64_buffer[936] == 0);",
          "    assert!(decoder.b64_buffer[937] == 0);",
          "    assert!(decoder.b64_buffer[938] == 0);",
          "    assert!(decoder.b64_buffer[939] == 0);",
          "    assert!(decoder.b64_buffer[940] == 0);",
          "    assert!(decoder.b64_buffer[941] == 0);",
          "    assert!(decoder.b64_buffer[942] == 0);",
          "    assert!(decoder.b64_buffer[943] == 0);",
          "    assert!(decoder.b64_buffer[944] == 0);",
          "    assert!(decoder.b64_buffer[945] == 0);",
          "    assert!(decoder.b64_buffer[946] == 0);",
          "    assert!(decoder.b64_buffer[947] == 0);",
          "    assert!(decoder.b64_buffer[948] == 0);",
          "    assert!(decoder.b64_buffer[949] == 0);",
          "    assert!(decoder.b64_buffer[950] == 0);",
          "    assert!(decoder.b64_buffer[951] == 0);",
          "    assert!(decoder.b64_buffer[952] == 0);",
          "    assert!(decoder.b64_buffer[953] == 0);",
          "    assert!(decoder.b64_buffer[954] == 0);",
          "    assert!(decoder.b64_buffer[955] == 0);",
          "    assert!(decoder.b64_buffer[956] == 0);",
          "    assert!(decoder.b64_buffer[957] == 0);",
          "    assert!(decoder.b64_buffer[958] == 0);",
          "    assert!(decoder.b64_buffer[959] == 0);",
          "    assert!(decoder.b64_buffer[960] == 0);",
          "    assert!(decoder.b64_buffer[961] == 0);",
          "    assert!(decoder.b64_buffer[962] == 0);",
          "    assert!(decoder.b64_buffer[963] == 0);",
          "    assert!(decoder.b64_buffer[964] == 0);",
          "    assert!(decoder.b64_buffer[965] == 0);",
          "    assert!(decoder.b64_buffer[966] == 0);",
          "    assert!(decoder.b64_buffer[967] == 0);",
          "    assert!(decoder.b64_buffer[968] == 0);",
          "    assert!(decoder.b64_buffer[969] == 0);",
          "    assert!(decoder.b64_buffer[970] == 0);",
          "    assert!(decoder.b64_buffer[971] == 0);",
          "    assert!(decoder.b64_buffer[972] == 0);",
          "    assert!(decoder.b64_buffer[973] == 0);",
          "    assert!(decoder.b64_buffer[974] == 0);",
          "    assert!(decoder.b64_buffer[975] == 0);",
          "    assert!(decoder.b64_buffer[976] == 0);",
          "    assert!(decoder.b64_buffer[977] == 0);",
          "    assert!(decoder.b64_buffer[978] == 0);",
          "    assert!(decoder.b64_buffer[979] == 0);",
          "    assert!(decoder.b64_buffer[980] == 0);",
          "    assert!(decoder.b64_buffer[981] == 0);",
          "    assert!(decoder.b64_buffer[982] == 0);",
          "    assert!(decoder.b64_buffer[983] == 0);",
          "    assert!(decoder.b64_buffer[984] == 0);",
          "    assert!(decoder.b64_buffer[985] == 0);",
          "    assert!(decoder.b64_buffer[986] == 0);",
          "    assert!(decoder.b64_buffer[987] == 0);",
          "    assert!(decoder.b64_buffer[988] == 0);",
          "    assert!(decoder.b64_buffer[989] == 0);",
          "    assert!(decoder.b64_buffer[990] == 0);",
          "    assert!(decoder.b64_buffer[991] == 0);",
          "    assert!(decoder.b64_buffer[992] == 0);",
          "    assert!(decoder.b64_buffer[993] == 0);",
          "    assert!(decoder.b64_buffer[994] == 0);",
          "    assert!(decoder.b64_buffer[995] == 0);",
          "    assert!(decoder.b64_buffer[996] == 0);",
          "    assert!(decoder.b64_buffer[997] == 0);",
          "    assert!(decoder.b64_buffer[998] == 0);",
          "    assert!(decoder.b64_buffer[999] == 0);",
          "    assert!(decoder.b64_buffer[1000] == 0);",
          "    assert!(decoder.b64_buffer[1001] == 0);",
          "    assert!(decoder.b64_buffer[1002] == 0);",
          "    assert!(decoder.b64_buffer[1003] == 0);",
          "    assert!(decoder.b64_buffer[1004] == 0);",
          "    assert!(decoder.b64_buffer[1005] == 0);",
          "    assert!(decoder.b64_buffer[1006] == 0);",
          "    assert!(decoder.b64_buffer[1007] == 0);",
          "    assert!(decoder.b64_buffer[1008] == 0);",
          "    assert!(decoder.b64_buffer[1009] == 0);",
          "    assert!(decoder.b64_buffer[1010] == 0);",
          "    assert!(decoder.b64_buffer[1011] == 0);",
          "    assert!(decoder.b64_buffer[1012] == 0);",
          "    assert!(decoder.b64_buffer[1013] == 0);",
          "    assert!(decoder.b64_buffer[1014] == 0);",
          "    assert!(decoder.b64_buffer[1015] == 0);",
          "    assert!(decoder.b64_buffer[1016] == 0);",
          "    assert!(decoder.b64_buffer[1017] == 0);",
          "    assert!(decoder.b64_buffer[1018] == 0);",
          "    assert!(decoder.b64_buffer[1019] == 0);",
          "    assert!(decoder.b64_buffer[1020] == 0);",
          "    assert!(decoder.b64_buffer[1021] == 0);",
          "    assert!(decoder.b64_buffer[1022] == 0);",
          "    assert!(decoder.b64_buffer[1023] == 0);",
          "    assert!(decoder.b64_buffer[1024] == 0);"
        ],
        "code": [
          "{",
          "    struct DummyEngine;",
          "    impl Engine for DummyEngine {",
          "        type Config = ();",
          "        type DecodeEstimate = usize;",
          "",
          "        fn internal_encode(&self, _input: &[u8], _output: &mut [u8]) -> usize { 0 }",
          "        fn internal_decoded_len_estimate(&self, input_len: usize) -> Self::DecodeEstimate {",
          "            input_len / 4 * 3",
          "        }",
          "        fn internal_decode(&self, _input: &[u8], output: &mut [u8], _decode_estimate: Self::DecodeEstimate) -> Result<(), DecodeSliceError> {",
          "            output.copy_from_slice(&[0, 1, 2]); // Simulated decode",
          "            Ok(())",
          "        }",
          "        fn config(&self) -> &Self::Config { &() }",
          "    }",
          "",
          "    let engine = DummyEngine;",
          "    let reader = std::io::Cursor::new(&b\"SGVsbG8gd29ybGQ=\"[..]); // \"Hello world\" in base64",
          "    let mut decoder = DecoderReader::new(reader, &engine);",
          "    ",
          "    let mut buf = [0u8; 3];",
          "    decoder.b64_offset = 1; // Setting b64_offset to 1",
          "    decoder.b64_len = 4; // Simulating the presence of base64 data",
          "",
          "    let _ = decoder.read(&mut buf);",
          "    assert!(buf.len() == 3);",
          "    assert!(decoder.b64_offset == 1);",
          "    assert!(decoder.b64_len == 4);",
          "    assert!(decoder.decoded_len == 0);",
          "    assert!(decoder.decoded_offset == 0);",
          "    assert!(decoder.padding_offset.is_none());",
          "    assert!(decoder.input_consumed_len == 0);",
          "    assert!(decoder.b64_buffer[0] == 0);",
          "    assert!(decoder.b64_buffer[1] == b'S');",
          "    assert!(decoder.b64_buffer[2] == b'G');",
          "    assert!(decoder.b64_buffer[3] == b'V');",
          "    assert!(decoder.b64_buffer[4] == b's');",
          "    assert!(decoder.b64_buffer[5] == b'B');",
          "    assert!(decoder.b64_buffer[6] == b'G');",
          "    assert!(decoder.b64_buffer[7] == b'8');",
          "    assert!(decoder.b64_buffer[8] == 0);",
          "    assert!(decoder.b64_buffer[9] == 0);",
          "    assert!(decoder.b64_buffer[10] == 0);",
          "    assert!(decoder.b64_buffer[11] == 0);",
          "    assert!(decoder.b64_buffer[12] == 0);",
          "    assert!(decoder.b64_buffer[13] == 0);",
          "    assert!(decoder.b64_buffer[14] == 0);",
          "    assert!(decoder.b64_buffer[15] == 0);",
          "    assert!(decoder.b64_buffer[16] == 0);",
          "    assert!(decoder.b64_buffer[17] == 0);",
          "    assert!(decoder.b64_buffer[18] == 0);",
          "    assert!(decoder.b64_buffer[19] == 0);",
          "    assert!(decoder.b64_buffer[20] == 0);",
          "    assert!(decoder.b64_buffer[21] == 0);",
          "    assert!(decoder.b64_buffer[22] == 0);",
          "    assert!(decoder.b64_buffer[23] == 0);",
          "    assert!(decoder.b64_buffer[24] == 0);",
          "    assert!(decoder.b64_buffer[25] == 0);",
          "    assert!(decoder.b64_buffer[26] == 0);",
          "    assert!(decoder.b64_buffer[27] == 0);",
          "    assert!(decoder.b64_buffer[28] == 0);",
          "    assert!(decoder.b64_buffer[29] == 0);",
          "    assert!(decoder.b64_buffer[30] == 0);",
          "    assert!(decoder.b64_buffer[31] == 0);",
          "    assert!(decoder.b64_buffer[32] == 0);",
          "    assert!(decoder.b64_buffer[33] == 0);",
          "    assert!(decoder.b64_buffer[34] == 0);",
          "    assert!(decoder.b64_buffer[35] == 0);",
          "    assert!(decoder.b64_buffer[36] == 0);",
          "    assert!(decoder.b64_buffer[37] == 0);",
          "    assert!(decoder.b64_buffer[38] == 0);",
          "    assert!(decoder.b64_buffer[39] == 0);",
          "    assert!(decoder.b64_buffer[40] == 0);",
          "    assert!(decoder.b64_buffer[41] == 0);",
          "    assert!(decoder.b64_buffer[42] == 0);",
          "    assert!(decoder.b64_buffer[43] == 0);",
          "    assert!(decoder.b64_buffer[44] == 0);",
          "    assert!(decoder.b64_buffer[45] == 0);",
          "    assert!(decoder.b64_buffer[46] == 0);",
          "    assert!(decoder.b64_buffer[47] == 0);",
          "    assert!(decoder.b64_buffer[48] == 0);",
          "    assert!(decoder.b64_buffer[49] == 0);",
          "    assert!(decoder.b64_buffer[50] == 0);",
          "    assert!(decoder.b64_buffer[51] == 0);",
          "    assert!(decoder.b64_buffer[52] == 0);",
          "    assert!(decoder.b64_buffer[53] == 0);",
          "    assert!(decoder.b64_buffer[54] == 0);",
          "    assert!(decoder.b64_buffer[55] == 0);",
          "    assert!(decoder.b64_buffer[56] == 0);",
          "    assert!(decoder.b64_buffer[57] == 0);",
          "    assert!(decoder.b64_buffer[58] == 0);",
          "    assert!(decoder.b64_buffer[59] == 0);",
          "    assert!(decoder.b64_buffer[60] == 0);",
          "    assert!(decoder.b64_buffer[61] == 0);",
          "    assert!(decoder.b64_buffer[62] == 0);",
          "    assert!(decoder.b64_buffer[63] == 0);",
          "    assert!(decoder.b64_buffer[64] == 0);",
          "    assert!(decoder.b64_buffer[65] == 0);",
          "    assert!(decoder.b64_buffer[66] == 0);",
          "    assert!(decoder.b64_buffer[67] == 0);",
          "    assert!(decoder.b64_buffer[68] == 0);",
          "    assert!(decoder.b64_buffer[69] == 0);",
          "    assert!(decoder.b64_buffer[70] == 0);",
          "    assert!(decoder.b64_buffer[71] == 0);",
          "    assert!(decoder.b64_buffer[72] == 0);",
          "    assert!(decoder.b64_buffer[73] == 0);",
          "    assert!(decoder.b64_buffer[74] == 0);",
          "    assert!(decoder.b64_buffer[75] == 0);",
          "    assert!(decoder.b64_buffer[76] == 0);",
          "    assert!(decoder.b64_buffer[77] == 0);",
          "    assert!(decoder.b64_buffer[78] == 0);",
          "    assert!(decoder.b64_buffer[79] == 0);",
          "    assert!(decoder.b64_buffer[80] == 0);",
          "    assert!(decoder.b64_buffer[81] == 0);",
          "    assert!(decoder.b64_buffer[82] == 0);",
          "    assert!(decoder.b64_buffer[83] == 0);",
          "    assert!(decoder.b64_buffer[84] == 0);",
          "    assert!(decoder.b64_buffer[85] == 0);",
          "    assert!(decoder.b64_buffer[86] == 0);",
          "    assert!(decoder.b64_buffer[87] == 0);",
          "    assert!(decoder.b64_buffer[88] == 0);",
          "    assert!(decoder.b64_buffer[89] == 0);",
          "    assert!(decoder.b64_buffer[90] == 0);",
          "    assert!(decoder.b64_buffer[91] == 0);",
          "    assert!(decoder.b64_buffer[92] == 0);",
          "    assert!(decoder.b64_buffer[93] == 0);",
          "    assert!(decoder.b64_buffer[94] == 0);",
          "    assert!(decoder.b64_buffer[95] == 0);",
          "    assert!(decoder.b64_buffer[96] == 0);",
          "    assert!(decoder.b64_buffer[97] == 0);",
          "    assert!(decoder.b64_buffer[98] == 0);",
          "    assert!(decoder.b64_buffer[99] == 0);",
          "    assert!(decoder.b64_buffer[100] == 0);",
          "    assert!(decoder.b64_buffer[101] == 0);",
          "    assert!(decoder.b64_buffer[102] == 0);",
          "    assert!(decoder.b64_buffer[103] == 0);",
          "    assert!(decoder.b64_buffer[104] == 0);",
          "    assert!(decoder.b64_buffer[105] == 0);",
          "    assert!(decoder.b64_buffer[106] == 0);",
          "    assert!(decoder.b64_buffer[107] == 0);",
          "    assert!(decoder.b64_buffer[108] == 0);",
          "    assert!(decoder.b64_buffer[109] == 0);",
          "    assert!(decoder.b64_buffer[110] == 0);",
          "    assert!(decoder.b64_buffer[111] == 0);",
          "    assert!(decoder.b64_buffer[112] == 0);",
          "    assert!(decoder.b64_buffer[113] == 0);",
          "    assert!(decoder.b64_buffer[114] == 0);",
          "    assert!(decoder.b64_buffer[115] == 0);",
          "    assert!(decoder.b64_buffer[116] == 0);",
          "    assert!(decoder.b64_buffer[117] == 0);",
          "    assert!(decoder.b64_buffer[118] == 0);",
          "    assert!(decoder.b64_buffer[119] == 0);",
          "    assert!(decoder.b64_buffer[120] == 0);",
          "    assert!(decoder.b64_buffer[121] == 0);",
          "    assert!(decoder.b64_buffer[122] == 0);",
          "    assert!(decoder.b64_buffer[123] == 0);",
          "    assert!(decoder.b64_buffer[124] == 0);",
          "    assert!(decoder.b64_buffer[125] == 0);",
          "    assert!(decoder.b64_buffer[126] == 0);",
          "    assert!(decoder.b64_buffer[127] == 0);",
          "    assert!(decoder.b64_buffer[128] == 0);",
          "    assert!(decoder.b64_buffer[129] == 0);",
          "    assert!(decoder.b64_buffer[130] == 0);",
          "    assert!(decoder.b64_buffer[131] == 0);",
          "    assert!(decoder.b64_buffer[132] == 0);",
          "    assert!(decoder.b64_buffer[133] == 0);",
          "    assert!(decoder.b64_buffer[134] == 0);",
          "    assert!(decoder.b64_buffer[135] == 0);",
          "    assert!(decoder.b64_buffer[136] == 0);",
          "    assert!(decoder.b64_buffer[137] == 0);",
          "    assert!(decoder.b64_buffer[138] == 0);",
          "    assert!(decoder.b64_buffer[139] == 0);",
          "    assert!(decoder.b64_buffer[140] == 0);",
          "    assert!(decoder.b64_buffer[141] == 0);",
          "    assert!(decoder.b64_buffer[142] == 0);",
          "    assert!(decoder.b64_buffer[143] == 0);",
          "    assert!(decoder.b64_buffer[144] == 0);",
          "    assert!(decoder.b64_buffer[145] == 0);",
          "    assert!(decoder.b64_buffer[146] == 0);",
          "    assert!(decoder.b64_buffer[147] == 0);",
          "    assert!(decoder.b64_buffer[148] == 0);",
          "    assert!(decoder.b64_buffer[149] == 0);",
          "    assert!(decoder.b64_buffer[150] == 0);",
          "    assert!(decoder.b64_buffer[151] == 0);",
          "    assert!(decoder.b64_buffer[152] == 0);",
          "    assert!(decoder.b64_buffer[153] == 0);",
          "    assert!(decoder.b64_buffer[154] == 0);",
          "    assert!(decoder.b64_buffer[155] == 0);",
          "    assert!(decoder.b64_buffer[156] == 0);",
          "    assert!(decoder.b64_buffer[157] == 0);",
          "    assert!(decoder.b64_buffer[158] == 0);",
          "    assert!(decoder.b64_buffer[159] == 0);",
          "    assert!(decoder.b64_buffer[160] == 0);",
          "    assert!(decoder.b64_buffer[161] == 0);",
          "    assert!(decoder.b64_buffer[162] == 0);",
          "    assert!(decoder.b64_buffer[163] == 0);",
          "    assert!(decoder.b64_buffer[164] == 0);",
          "    assert!(decoder.b64_buffer[165] == 0);",
          "    assert!(decoder.b64_buffer[166] == 0);",
          "    assert!(decoder.b64_buffer[167] == 0);",
          "    assert!(decoder.b64_buffer[168] == 0);",
          "    assert!(decoder.b64_buffer[169] == 0);",
          "    assert!(decoder.b64_buffer[170] == 0);",
          "    assert!(decoder.b64_buffer[171] == 0);",
          "    assert!(decoder.b64_buffer[172] == 0);",
          "    assert!(decoder.b64_buffer[173] == 0);",
          "    assert!(decoder.b64_buffer[174] == 0);",
          "    assert!(decoder.b64_buffer[175] == 0);",
          "    assert!(decoder.b64_buffer[176] == 0);",
          "    assert!(decoder.b64_buffer[177] == 0);",
          "    assert!(decoder.b64_buffer[178] == 0);",
          "    assert!(decoder.b64_buffer[179] == 0);",
          "    assert!(decoder.b64_buffer[180] == 0);",
          "    assert!(decoder.b64_buffer[181] == 0);",
          "    assert!(decoder.b64_buffer[182] == 0);",
          "    assert!(decoder.b64_buffer[183] == 0);",
          "    assert!(decoder.b64_buffer[184] == 0);",
          "    assert!(decoder.b64_buffer[185] == 0);",
          "    assert!(decoder.b64_buffer[186] == 0);",
          "    assert!(decoder.b64_buffer[187] == 0);",
          "    assert!(decoder.b64_buffer[188] == 0);",
          "    assert!(decoder.b64_buffer[189] == 0);",
          "    assert!(decoder.b64_buffer[190] == 0);",
          "    assert!(decoder.b64_buffer[191] == 0);",
          "    assert!(decoder.b64_buffer[192] == 0);",
          "    assert!(decoder.b64_buffer[193] == 0);",
          "    assert!(decoder.b64_buffer[194] == 0);",
          "    assert!(decoder.b64_buffer[195] == 0);",
          "    assert!(decoder.b64_buffer[196] == 0);",
          "    assert!(decoder.b64_buffer[197] == 0);",
          "    assert!(decoder.b64_buffer[198] == 0);",
          "    assert!(decoder.b64_buffer[199] == 0);",
          "    assert!(decoder.b64_buffer[200] == 0);",
          "    assert!(decoder.b64_buffer[201] == 0);",
          "    assert!(decoder.b64_buffer[202] == 0);",
          "    assert!(decoder.b64_buffer[203] == 0);",
          "    assert!(decoder.b64_buffer[204] == 0);",
          "    assert!(decoder.b64_buffer[205] == 0);",
          "    assert!(decoder.b64_buffer[206] == 0);",
          "    assert!(decoder.b64_buffer[207] == 0);",
          "    assert!(decoder.b64_buffer[208] == 0);",
          "    assert!(decoder.b64_buffer[209] == 0);",
          "    assert!(decoder.b64_buffer[210] == 0);",
          "    assert!(decoder.b64_buffer[211] == 0);",
          "    assert!(decoder.b64_buffer[212] == 0);",
          "    assert!(decoder.b64_buffer[213] == 0);",
          "    assert!(decoder.b64_buffer[214] == 0);",
          "    assert!(decoder.b64_buffer[215] == 0);",
          "    assert!(decoder.b64_buffer[216] == 0);",
          "    assert!(decoder.b64_buffer[217] == 0);",
          "    assert!(decoder.b64_buffer[218] == 0);",
          "    assert!(decoder.b64_buffer[219] == 0);",
          "    assert!(decoder.b64_buffer[220] == 0);",
          "    assert!(decoder.b64_buffer[221] == 0);",
          "    assert!(decoder.b64_buffer[222] == 0);",
          "    assert!(decoder.b64_buffer[223] == 0);",
          "    assert!(decoder.b64_buffer[224] == 0);",
          "    assert!(decoder.b64_buffer[225] == 0);",
          "    assert!(decoder.b64_buffer[226] == 0);",
          "    assert!(decoder.b64_buffer[227] == 0);",
          "    assert!(decoder.b64_buffer[228] == 0);",
          "    assert!(decoder.b64_buffer[229] == 0);",
          "    assert!(decoder.b64_buffer[230] == 0);",
          "    assert!(decoder.b64_buffer[231] == 0);",
          "    assert!(decoder.b64_buffer[232] == 0);",
          "    assert!(decoder.b64_buffer[233] == 0);",
          "    assert!(decoder.b64_buffer[234] == 0);",
          "    assert!(decoder.b64_buffer[235] == 0);",
          "    assert!(decoder.b64_buffer[236] == 0);",
          "    assert!(decoder.b64_buffer[237] == 0);",
          "    assert!(decoder.b64_buffer[238] == 0);",
          "    assert!(decoder.b64_buffer[239] == 0);",
          "    assert!(decoder.b64_buffer[240] == 0);",
          "    assert!(decoder.b64_buffer[241] == 0);",
          "    assert!(decoder.b64_buffer[242] == 0);",
          "    assert!(decoder.b64_buffer[243] == 0);",
          "    assert!(decoder.b64_buffer[244] == 0);",
          "    assert!(decoder.b64_buffer[245] == 0);",
          "    assert!(decoder.b64_buffer[246] == 0);",
          "    assert!(decoder.b64_buffer[247] == 0);",
          "    assert!(decoder.b64_buffer[248] == 0);",
          "    assert!(decoder.b64_buffer[249] == 0);",
          "    assert!(decoder.b64_buffer[250] == 0);",
          "    assert!(decoder.b64_buffer[251] == 0);",
          "    assert!(decoder.b64_buffer[252] == 0);",
          "    assert!(decoder.b64_buffer[253] == 0);",
          "    assert!(decoder.b64_buffer[254] == 0);",
          "    assert!(decoder.b64_buffer[255] == 0);",
          "    assert!(decoder.b64_buffer[256] == 0);",
          "    assert!(decoder.b64_buffer[257] == 0);",
          "    assert!(decoder.b64_buffer[258] == 0);",
          "    assert!(decoder.b64_buffer[259] == 0);",
          "    assert!(decoder.b64_buffer[260] == 0);",
          "    assert!(decoder.b64_buffer[261] == 0);",
          "    assert!(decoder.b64_buffer[262] == 0);",
          "    assert!(decoder.b64_buffer[263] == 0);",
          "    assert!(decoder.b64_buffer[264] == 0);",
          "    assert!(decoder.b64_buffer[265] == 0);",
          "    assert!(decoder.b64_buffer[266] == 0);",
          "    assert!(decoder.b64_buffer[267] == 0);",
          "    assert!(decoder.b64_buffer[268] == 0);",
          "    assert!(decoder.b64_buffer[269] == 0);",
          "    assert!(decoder.b64_buffer[270] == 0);",
          "    assert!(decoder.b64_buffer[271] == 0);",
          "    assert!(decoder.b64_buffer[272] == 0);",
          "    assert!(decoder.b64_buffer[273] == 0);",
          "    assert!(decoder.b64_buffer[274] == 0);",
          "    assert!(decoder.b64_buffer[275] == 0);",
          "    assert!(decoder.b64_buffer[276] == 0);",
          "    assert!(decoder.b64_buffer[277] == 0);",
          "    assert!(decoder.b64_buffer[278] == 0);",
          "    assert!(decoder.b64_buffer[279] == 0);",
          "    assert!(decoder.b64_buffer[280] == 0);",
          "    assert!(decoder.b64_buffer[281] == 0);",
          "    assert!(decoder.b64_buffer[282] == 0);",
          "    assert!(decoder.b64_buffer[283] == 0);",
          "    assert!(decoder.b64_buffer[284] == 0);",
          "    assert!(decoder.b64_buffer[285] == 0);",
          "    assert!(decoder.b64_buffer[286] == 0);",
          "    assert!(decoder.b64_buffer[287] == 0);",
          "    assert!(decoder.b64_buffer[288] == 0);",
          "    assert!(decoder.b64_buffer[289] == 0);",
          "    assert!(decoder.b64_buffer[290] == 0);",
          "    assert!(decoder.b64_buffer[291] == 0);",
          "    assert!(decoder.b64_buffer[292] == 0);",
          "    assert!(decoder.b64_buffer[293] == 0);",
          "    assert!(decoder.b64_buffer[294] == 0);",
          "    assert!(decoder.b64_buffer[295] == 0);",
          "    assert!(decoder.b64_buffer[296] == 0);",
          "    assert!(decoder.b64_buffer[297] == 0);",
          "    assert!(decoder.b64_buffer[298] == 0);",
          "    assert!(decoder.b64_buffer[299] == 0);",
          "    assert!(decoder.b64_buffer[300] == 0);",
          "    assert!(decoder.b64_buffer[301] == 0);",
          "    assert!(decoder.b64_buffer[302] == 0);",
          "    assert!(decoder.b64_buffer[303] == 0);",
          "    assert!(decoder.b64_buffer[304] == 0);",
          "    assert!(decoder.b64_buffer[305] == 0);",
          "    assert!(decoder.b64_buffer[306] == 0);",
          "    assert!(decoder.b64_buffer[307] == 0);",
          "    assert!(decoder.b64_buffer[308] == 0);",
          "    assert!(decoder.b64_buffer[309] == 0);",
          "    assert!(decoder.b64_buffer[310] == 0);",
          "    assert!(decoder.b64_buffer[311] == 0);",
          "    assert!(decoder.b64_buffer[312] == 0);",
          "    assert!(decoder.b64_buffer[313] == 0);",
          "    assert!(decoder.b64_buffer[314] == 0);",
          "    assert!(decoder.b64_buffer[315] == 0);",
          "    assert!(decoder.b64_buffer[316] == 0);",
          "    assert!(decoder.b64_buffer[317] == 0);",
          "    assert!(decoder.b64_buffer[318] == 0);",
          "    assert!(decoder.b64_buffer[319] == 0);",
          "    assert!(decoder.b64_buffer[320] == 0);",
          "    assert!(decoder.b64_buffer[321] == 0);",
          "    assert!(decoder.b64_buffer[322] == 0);",
          "    assert!(decoder.b64_buffer[323] == 0);",
          "    assert!(decoder.b64_buffer[324] == 0);",
          "    assert!(decoder.b64_buffer[325] == 0);",
          "    assert!(decoder.b64_buffer[326] == 0);",
          "    assert!(decoder.b64_buffer[327] == 0);",
          "    assert!(decoder.b64_buffer[328] == 0);",
          "    assert!(decoder.b64_buffer[329] == 0);",
          "    assert!(decoder.b64_buffer[330] == 0);",
          "    assert!(decoder.b64_buffer[331] == 0);",
          "    assert!(decoder.b64_buffer[332] == 0);",
          "    assert!(decoder.b64_buffer[333] == 0);",
          "    assert!(decoder.b64_buffer[334] == 0);",
          "    assert!(decoder.b64_buffer[335] == 0);",
          "    assert!(decoder.b64_buffer[336] == 0);",
          "    assert!(decoder.b64_buffer[337] == 0);",
          "    assert!(decoder.b64_buffer[338] == 0);",
          "    assert!(decoder.b64_buffer[339] == 0);",
          "    assert!(decoder.b64_buffer[340] == 0);",
          "    assert!(decoder.b64_buffer[341] == 0);",
          "    assert!(decoder.b64_buffer[342] == 0);",
          "    assert!(decoder.b64_buffer[343] == 0);",
          "    assert!(decoder.b64_buffer[344] == 0);",
          "    assert!(decoder.b64_buffer[345] == 0);",
          "    assert!(decoder.b64_buffer[346] == 0);",
          "    assert!(decoder.b64_buffer[347] == 0);",
          "    assert!(decoder.b64_buffer[348] == 0);",
          "    assert!(decoder.b64_buffer[349] == 0);",
          "    assert!(decoder.b64_buffer[350] == 0);",
          "    assert!(decoder.b64_buffer[351] == 0);",
          "    assert!(decoder.b64_buffer[352] == 0);",
          "    assert!(decoder.b64_buffer[353] == 0);",
          "    assert!(decoder.b64_buffer[354] == 0);",
          "    assert!(decoder.b64_buffer[355] == 0);",
          "    assert!(decoder.b64_buffer[356] == 0);",
          "    assert!(decoder.b64_buffer[357] == 0);",
          "    assert!(decoder.b64_buffer[358] == 0);",
          "    assert!(decoder.b64_buffer[359] == 0);",
          "    assert!(decoder.b64_buffer[360] == 0);",
          "    assert!(decoder.b64_buffer[361] == 0);",
          "    assert!(decoder.b64_buffer[362] == 0);",
          "    assert!(decoder.b64_buffer[363] == 0);",
          "    assert!(decoder.b64_buffer[364] == 0);",
          "    assert!(decoder.b64_buffer[365] == 0);",
          "    assert!(decoder.b64_buffer[366] == 0);",
          "    assert!(decoder.b64_buffer[367] == 0);",
          "    assert!(decoder.b64_buffer[368] == 0);",
          "    assert!(decoder.b64_buffer[369] == 0);",
          "    assert!(decoder.b64_buffer[370] == 0);",
          "    assert!(decoder.b64_buffer[371] == 0);",
          "    assert!(decoder.b64_buffer[372] == 0);",
          "    assert!(decoder.b64_buffer[373] == 0);",
          "    assert!(decoder.b64_buffer[374] == 0);",
          "    assert!(decoder.b64_buffer[375] == 0);",
          "    assert!(decoder.b64_buffer[376] == 0);",
          "    assert!(decoder.b64_buffer[377] == 0);",
          "    assert!(decoder.b64_buffer[378] == 0);",
          "    assert!(decoder.b64_buffer[379] == 0);",
          "    assert!(decoder.b64_buffer[380] == 0);",
          "    assert!(decoder.b64_buffer[381] == 0);",
          "    assert!(decoder.b64_buffer[382] == 0);",
          "    assert!(decoder.b64_buffer[383] == 0);",
          "    assert!(decoder.b64_buffer[384] == 0);",
          "    assert!(decoder.b64_buffer[385] == 0);",
          "    assert!(decoder.b64_buffer[386] == 0);",
          "    assert!(decoder.b64_buffer[387] == 0);",
          "    assert!(decoder.b64_buffer[388] == 0);",
          "    assert!(decoder.b64_buffer[389] == 0);",
          "    assert!(decoder.b64_buffer[390] == 0);",
          "    assert!(decoder.b64_buffer[391] == 0);",
          "    assert!(decoder.b64_buffer[392] == 0);",
          "    assert!(decoder.b64_buffer[393] == 0);",
          "    assert!(decoder.b64_buffer[394] == 0);",
          "    assert!(decoder.b64_buffer[395] == 0);",
          "    assert!(decoder.b64_buffer[396] == 0);",
          "    assert!(decoder.b64_buffer[397] == 0);",
          "    assert!(decoder.b64_buffer[398] == 0);",
          "    assert!(decoder.b64_buffer[399] == 0);",
          "    assert!(decoder.b64_buffer[400] == 0);",
          "    assert!(decoder.b64_buffer[401] == 0);",
          "    assert!(decoder.b64_buffer[402] == 0);",
          "    assert!(decoder.b64_buffer[403] == 0);",
          "    assert!(decoder.b64_buffer[404] == 0);",
          "    assert!(decoder.b64_buffer[405] == 0);",
          "    assert!(decoder.b64_buffer[406] == 0);",
          "    assert!(decoder.b64_buffer[407] == 0);",
          "    assert!(decoder.b64_buffer[408] == 0);",
          "    assert!(decoder.b64_buffer[409] == 0);",
          "    assert!(decoder.b64_buffer[410] == 0);",
          "    assert!(decoder.b64_buffer[411] == 0);",
          "    assert!(decoder.b64_buffer[412] == 0);",
          "    assert!(decoder.b64_buffer[413] == 0);",
          "    assert!(decoder.b64_buffer[414] == 0);",
          "    assert!(decoder.b64_buffer[415] == 0);",
          "    assert!(decoder.b64_buffer[416] == 0);",
          "    assert!(decoder.b64_buffer[417] == 0);",
          "    assert!(decoder.b64_buffer[418] == 0);",
          "    assert!(decoder.b64_buffer[419] == 0);",
          "    assert!(decoder.b64_buffer[420] == 0);",
          "    assert!(decoder.b64_buffer[421] == 0);",
          "    assert!(decoder.b64_buffer[422] == 0);",
          "    assert!(decoder.b64_buffer[423] == 0);",
          "    assert!(decoder.b64_buffer[424] == 0);",
          "    assert!(decoder.b64_buffer[425] == 0);",
          "    assert!(decoder.b64_buffer[426] == 0);",
          "    assert!(decoder.b64_buffer[427] == 0);",
          "    assert!(decoder.b64_buffer[428] == 0);",
          "    assert!(decoder.b64_buffer[429] == 0);",
          "    assert!(decoder.b64_buffer[430] == 0);",
          "    assert!(decoder.b64_buffer[431] == 0);",
          "    assert!(decoder.b64_buffer[432] == 0);",
          "    assert!(decoder.b64_buffer[433] == 0);",
          "    assert!(decoder.b64_buffer[434] == 0);",
          "    assert!(decoder.b64_buffer[435] == 0);",
          "    assert!(decoder.b64_buffer[436] == 0);",
          "    assert!(decoder.b64_buffer[437] == 0);",
          "    assert!(decoder.b64_buffer[438] == 0);",
          "    assert!(decoder.b64_buffer[439] == 0);",
          "    assert!(decoder.b64_buffer[440] == 0);",
          "    assert!(decoder.b64_buffer[441] == 0);",
          "    assert!(decoder.b64_buffer[442] == 0);",
          "    assert!(decoder.b64_buffer[443] == 0);",
          "    assert!(decoder.b64_buffer[444] == 0);",
          "    assert!(decoder.b64_buffer[445] == 0);",
          "    assert!(decoder.b64_buffer[446] == 0);",
          "    assert!(decoder.b64_buffer[447] == 0);",
          "    assert!(decoder.b64_buffer[448] == 0);",
          "    assert!(decoder.b64_buffer[449] == 0);",
          "    assert!(decoder.b64_buffer[450] == 0);",
          "    assert!(decoder.b64_buffer[451] == 0);",
          "    assert!(decoder.b64_buffer[452] == 0);",
          "    assert!(decoder.b64_buffer[453] == 0);",
          "    assert!(decoder.b64_buffer[454] == 0);",
          "    assert!(decoder.b64_buffer[455] == 0);",
          "    assert!(decoder.b64_buffer[456] == 0);",
          "    assert!(decoder.b64_buffer[457] == 0);",
          "    assert!(decoder.b64_buffer[458] == 0);",
          "    assert!(decoder.b64_buffer[459] == 0);",
          "    assert!(decoder.b64_buffer[460] == 0);",
          "    assert!(decoder.b64_buffer[461] == 0);",
          "    assert!(decoder.b64_buffer[462] == 0);",
          "    assert!(decoder.b64_buffer[463] == 0);",
          "    assert!(decoder.b64_buffer[464] == 0);",
          "    assert!(decoder.b64_buffer[465] == 0);",
          "    assert!(decoder.b64_buffer[466] == 0);",
          "    assert!(decoder.b64_buffer[467] == 0);",
          "    assert!(decoder.b64_buffer[468] == 0);",
          "    assert!(decoder.b64_buffer[469] == 0);",
          "    assert!(decoder.b64_buffer[470] == 0);",
          "    assert!(decoder.b64_buffer[471] == 0);",
          "    assert!(decoder.b64_buffer[472] == 0);",
          "    assert!(decoder.b64_buffer[473] == 0);",
          "    assert!(decoder.b64_buffer[474] == 0);",
          "    assert!(decoder.b64_buffer[475] == 0);",
          "    assert!(decoder.b64_buffer[476] == 0);",
          "    assert!(decoder.b64_buffer[477] == 0);",
          "    assert!(decoder.b64_buffer[478] == 0);",
          "    assert!(decoder.b64_buffer[479] == 0);",
          "    assert!(decoder.b64_buffer[480] == 0);",
          "    assert!(decoder.b64_buffer[481] == 0);",
          "    assert!(decoder.b64_buffer[482] == 0);",
          "    assert!(decoder.b64_buffer[483] == 0);",
          "    assert!(decoder.b64_buffer[484] == 0);",
          "    assert!(decoder.b64_buffer[485] == 0);",
          "    assert!(decoder.b64_buffer[486] == 0);",
          "    assert!(decoder.b64_buffer[487] == 0);",
          "    assert!(decoder.b64_buffer[488] == 0);",
          "    assert!(decoder.b64_buffer[489] == 0);",
          "    assert!(decoder.b64_buffer[490] == 0);",
          "    assert!(decoder.b64_buffer[491] == 0);",
          "    assert!(decoder.b64_buffer[492] == 0);",
          "    assert!(decoder.b64_buffer[493] == 0);",
          "    assert!(decoder.b64_buffer[494] == 0);",
          "    assert!(decoder.b64_buffer[495] == 0);",
          "    assert!(decoder.b64_buffer[496] == 0);",
          "    assert!(decoder.b64_buffer[497] == 0);",
          "    assert!(decoder.b64_buffer[498] == 0);",
          "    assert!(decoder.b64_buffer[499] == 0);",
          "    assert!(decoder.b64_buffer[500] == 0);",
          "    assert!(decoder.b64_buffer[501] == 0);",
          "    assert!(decoder.b64_buffer[502] == 0);",
          "    assert!(decoder.b64_buffer[503] == 0);",
          "    assert!(decoder.b64_buffer[504] == 0);",
          "    assert!(decoder.b64_buffer[505] == 0);",
          "    assert!(decoder.b64_buffer[506] == 0);",
          "    assert!(decoder.b64_buffer[507] == 0);",
          "    assert!(decoder.b64_buffer[508] == 0);",
          "    assert!(decoder.b64_buffer[509] == 0);",
          "    assert!(decoder.b64_buffer[510] == 0);",
          "    assert!(decoder.b64_buffer[511] == 0);",
          "    assert!(decoder.b64_buffer[512] == 0);",
          "    assert!(decoder.b64_buffer[513] == 0);",
          "    assert!(decoder.b64_buffer[514] == 0);",
          "    assert!(decoder.b64_buffer[515] == 0);",
          "    assert!(decoder.b64_buffer[516] == 0);",
          "    assert!(decoder.b64_buffer[517] == 0);",
          "    assert!(decoder.b64_buffer[518] == 0);",
          "    assert!(decoder.b64_buffer[519] == 0);",
          "    assert!(decoder.b64_buffer[520] == 0);",
          "    assert!(decoder.b64_buffer[521] == 0);",
          "    assert!(decoder.b64_buffer[522] == 0);",
          "    assert!(decoder.b64_buffer[523] == 0);",
          "    assert!(decoder.b64_buffer[524] == 0);",
          "    assert!(decoder.b64_buffer[525] == 0);",
          "    assert!(decoder.b64_buffer[526] == 0);",
          "    assert!(decoder.b64_buffer[527] == 0);",
          "    assert!(decoder.b64_buffer[528] == 0);",
          "    assert!(decoder.b64_buffer[529] == 0);",
          "    assert!(decoder.b64_buffer[530] == 0);",
          "    assert!(decoder.b64_buffer[531] == 0);",
          "    assert!(decoder.b64_buffer[532] == 0);",
          "    assert!(decoder.b64_buffer[533] == 0);",
          "    assert!(decoder.b64_buffer[534] == 0);",
          "    assert!(decoder.b64_buffer[535] == 0);",
          "    assert!(decoder.b64_buffer[536] == 0);",
          "    assert!(decoder.b64_buffer[537] == 0);",
          "    assert!(decoder.b64_buffer[538] == 0);",
          "    assert!(decoder.b64_buffer[539] == 0);",
          "    assert!(decoder.b64_buffer[540] == 0);",
          "    assert!(decoder.b64_buffer[541] == 0);",
          "    assert!(decoder.b64_buffer[542] == 0);",
          "    assert!(decoder.b64_buffer[543] == 0);",
          "    assert!(decoder.b64_buffer[544] == 0);",
          "    assert!(decoder.b64_buffer[545] == 0);",
          "    assert!(decoder.b64_buffer[546] == 0);",
          "    assert!(decoder.b64_buffer[547] == 0);",
          "    assert!(decoder.b64_buffer[548] == 0);",
          "    assert!(decoder.b64_buffer[549] == 0);",
          "    assert!(decoder.b64_buffer[550] == 0);",
          "    assert!(decoder.b64_buffer[551] == 0);",
          "    assert!(decoder.b64_buffer[552] == 0);",
          "    assert!(decoder.b64_buffer[553] == 0);",
          "    assert!(decoder.b64_buffer[554] == 0);",
          "    assert!(decoder.b64_buffer[555] == 0);",
          "    assert!(decoder.b64_buffer[556] == 0);",
          "    assert!(decoder.b64_buffer[557] == 0);",
          "    assert!(decoder.b64_buffer[558] == 0);",
          "    assert!(decoder.b64_buffer[559] == 0);",
          "    assert!(decoder.b64_buffer[560] == 0);",
          "    assert!(decoder.b64_buffer[561] == 0);",
          "    assert!(decoder.b64_buffer[562] == 0);",
          "    assert!(decoder.b64_buffer[563] == 0);",
          "    assert!(decoder.b64_buffer[564] == 0);",
          "    assert!(decoder.b64_buffer[565] == 0);",
          "    assert!(decoder.b64_buffer[566] == 0);",
          "    assert!(decoder.b64_buffer[567] == 0);",
          "    assert!(decoder.b64_buffer[568] == 0);",
          "    assert!(decoder.b64_buffer[569] == 0);",
          "    assert!(decoder.b64_buffer[570] == 0);",
          "    assert!(decoder.b64_buffer[571] == 0);",
          "    assert!(decoder.b64_buffer[572] == 0);",
          "    assert!(decoder.b64_buffer[573] == 0);",
          "    assert!(decoder.b64_buffer[574] == 0);",
          "    assert!(decoder.b64_buffer[575] == 0);",
          "    assert!(decoder.b64_buffer[576] == 0);",
          "    assert!(decoder.b64_buffer[577] == 0);",
          "    assert!(decoder.b64_buffer[578] == 0);",
          "    assert!(decoder.b64_buffer[579] == 0);",
          "    assert!(decoder.b64_buffer[580] == 0);",
          "    assert!(decoder.b64_buffer[581] == 0);",
          "    assert!(decoder.b64_buffer[582] == 0);",
          "    assert!(decoder.b64_buffer[583] == 0);",
          "    assert!(decoder.b64_buffer[584] == 0);",
          "    assert!(decoder.b64_buffer[585] == 0);",
          "    assert!(decoder.b64_buffer[586] == 0);",
          "    assert!(decoder.b64_buffer[587] == 0);",
          "    assert!(decoder.b64_buffer[588] == 0);",
          "    assert!(decoder.b64_buffer[589] == 0);",
          "    assert!(decoder.b64_buffer[590] == 0);",
          "    assert!(decoder.b64_buffer[591] == 0);",
          "    assert!(decoder.b64_buffer[592] == 0);",
          "    assert!(decoder.b64_buffer[593] == 0);",
          "    assert!(decoder.b64_buffer[594] == 0);",
          "    assert!(decoder.b64_buffer[595] == 0);",
          "    assert!(decoder.b64_buffer[596] == 0);",
          "    assert!(decoder.b64_buffer[597] == 0);",
          "    assert!(decoder.b64_buffer[598] == 0);",
          "    assert!(decoder.b64_buffer[599] == 0);",
          "    assert!(decoder.b64_buffer[600] == 0);",
          "    assert!(decoder.b64_buffer[601] == 0);",
          "    assert!(decoder.b64_buffer[602] == 0);",
          "    assert!(decoder.b64_buffer[603] == 0);",
          "    assert!(decoder.b64_buffer[604] == 0);",
          "    assert!(decoder.b64_buffer[605] == 0);",
          "    assert!(decoder.b64_buffer[606] == 0);",
          "    assert!(decoder.b64_buffer[607] == 0);",
          "    assert!(decoder.b64_buffer[608] == 0);",
          "    assert!(decoder.b64_buffer[609] == 0);",
          "    assert!(decoder.b64_buffer[610] == 0);",
          "    assert!(decoder.b64_buffer[611] == 0);",
          "    assert!(decoder.b64_buffer[612] == 0);",
          "    assert!(decoder.b64_buffer[613] == 0);",
          "    assert!(decoder.b64_buffer[614] == 0);",
          "    assert!(decoder.b64_buffer[615] == 0);",
          "    assert!(decoder.b64_buffer[616] == 0);",
          "    assert!(decoder.b64_buffer[617] == 0);",
          "    assert!(decoder.b64_buffer[618] == 0);",
          "    assert!(decoder.b64_buffer[619] == 0);",
          "    assert!(decoder.b64_buffer[620] == 0);",
          "    assert!(decoder.b64_buffer[621] == 0);",
          "    assert!(decoder.b64_buffer[622] == 0);",
          "    assert!(decoder.b64_buffer[623] == 0);",
          "    assert!(decoder.b64_buffer[624] == 0);",
          "    assert!(decoder.b64_buffer[625] == 0);",
          "    assert!(decoder.b64_buffer[626] == 0);",
          "    assert!(decoder.b64_buffer[627] == 0);",
          "    assert!(decoder.b64_buffer[628] == 0);",
          "    assert!(decoder.b64_buffer[629] == 0);",
          "    assert!(decoder.b64_buffer[630] == 0);",
          "    assert!(decoder.b64_buffer[631] == 0);",
          "    assert!(decoder.b64_buffer[632] == 0);",
          "    assert!(decoder.b64_buffer[633] == 0);",
          "    assert!(decoder.b64_buffer[634] == 0);",
          "    assert!(decoder.b64_buffer[635] == 0);",
          "    assert!(decoder.b64_buffer[636] == 0);",
          "    assert!(decoder.b64_buffer[637] == 0);",
          "    assert!(decoder.b64_buffer[638] == 0);",
          "    assert!(decoder.b64_buffer[639] == 0);",
          "    assert!(decoder.b64_buffer[640] == 0);",
          "    assert!(decoder.b64_buffer[641] == 0);",
          "    assert!(decoder.b64_buffer[642] == 0);",
          "    assert!(decoder.b64_buffer[643] == 0);",
          "    assert!(decoder.b64_buffer[644] == 0);",
          "    assert!(decoder.b64_buffer[645] == 0);",
          "    assert!(decoder.b64_buffer[646] == 0);",
          "    assert!(decoder.b64_buffer[647] == 0);",
          "    assert!(decoder.b64_buffer[648] == 0);",
          "    assert!(decoder.b64_buffer[649] == 0);",
          "    assert!(decoder.b64_buffer[650] == 0);",
          "    assert!(decoder.b64_buffer[651] == 0);",
          "    assert!(decoder.b64_buffer[652] == 0);",
          "    assert!(decoder.b64_buffer[653] == 0);",
          "    assert!(decoder.b64_buffer[654] == 0);",
          "    assert!(decoder.b64_buffer[655] == 0);",
          "    assert!(decoder.b64_buffer[656] == 0);",
          "    assert!(decoder.b64_buffer[657] == 0);",
          "    assert!(decoder.b64_buffer[658] == 0);",
          "    assert!(decoder.b64_buffer[659] == 0);",
          "    assert!(decoder.b64_buffer[660] == 0);",
          "    assert!(decoder.b64_buffer[661] == 0);",
          "    assert!(decoder.b64_buffer[662] == 0);",
          "    assert!(decoder.b64_buffer[663] == 0);",
          "    assert!(decoder.b64_buffer[664] == 0);",
          "    assert!(decoder.b64_buffer[665] == 0);",
          "    assert!(decoder.b64_buffer[666] == 0);",
          "    assert!(decoder.b64_buffer[667] == 0);",
          "    assert!(decoder.b64_buffer[668] == 0);",
          "    assert!(decoder.b64_buffer[669] == 0);",
          "    assert!(decoder.b64_buffer[670] == 0);",
          "    assert!(decoder.b64_buffer[671] == 0);",
          "    assert!(decoder.b64_buffer[672] == 0);",
          "    assert!(decoder.b64_buffer[673] == 0);",
          "    assert!(decoder.b64_buffer[674] == 0);",
          "    assert!(decoder.b64_buffer[675] == 0);",
          "    assert!(decoder.b64_buffer[676] == 0);",
          "    assert!(decoder.b64_buffer[677] == 0);",
          "    assert!(decoder.b64_buffer[678] == 0);",
          "    assert!(decoder.b64_buffer[679] == 0);",
          "    assert!(decoder.b64_buffer[680] == 0);",
          "    assert!(decoder.b64_buffer[681] == 0);",
          "    assert!(decoder.b64_buffer[682] == 0);",
          "    assert!(decoder.b64_buffer[683] == 0);",
          "    assert!(decoder.b64_buffer[684] == 0);",
          "    assert!(decoder.b64_buffer[685] == 0);",
          "    assert!(decoder.b64_buffer[686] == 0);",
          "    assert!(decoder.b64_buffer[687] == 0);",
          "    assert!(decoder.b64_buffer[688] == 0);",
          "    assert!(decoder.b64_buffer[689] == 0);",
          "    assert!(decoder.b64_buffer[690] == 0);",
          "    assert!(decoder.b64_buffer[691] == 0);",
          "    assert!(decoder.b64_buffer[692] == 0);",
          "    assert!(decoder.b64_buffer[693] == 0);",
          "    assert!(decoder.b64_buffer[694] == 0);",
          "    assert!(decoder.b64_buffer[695] == 0);",
          "    assert!(decoder.b64_buffer[696] == 0);",
          "    assert!(decoder.b64_buffer[697] == 0);",
          "    assert!(decoder.b64_buffer[698] == 0);",
          "    assert!(decoder.b64_buffer[699] == 0);",
          "    assert!(decoder.b64_buffer[700] == 0);",
          "    assert!(decoder.b64_buffer[701] == 0);",
          "    assert!(decoder.b64_buffer[702] == 0);",
          "    assert!(decoder.b64_buffer[703] == 0);",
          "    assert!(decoder.b64_buffer[704] == 0);",
          "    assert!(decoder.b64_buffer[705] == 0);",
          "    assert!(decoder.b64_buffer[706] == 0);",
          "    assert!(decoder.b64_buffer[707] == 0);",
          "    assert!(decoder.b64_buffer[708] == 0);",
          "    assert!(decoder.b64_buffer[709] == 0);",
          "    assert!(decoder.b64_buffer[710] == 0);",
          "    assert!(decoder.b64_buffer[711] == 0);",
          "    assert!(decoder.b64_buffer[712] == 0);",
          "    assert!(decoder.b64_buffer[713] == 0);",
          "    assert!(decoder.b64_buffer[714] == 0);",
          "    assert!(decoder.b64_buffer[715] == 0);",
          "    assert!(decoder.b64_buffer[716] == 0);",
          "    assert!(decoder.b64_buffer[717] == 0);",
          "    assert!(decoder.b64_buffer[718] == 0);",
          "    assert!(decoder.b64_buffer[719] == 0);",
          "    assert!(decoder.b64_buffer[720] == 0);",
          "    assert!(decoder.b64_buffer[721] == 0);",
          "    assert!(decoder.b64_buffer[722] == 0);",
          "    assert!(decoder.b64_buffer[723] == 0);",
          "    assert!(decoder.b64_buffer[724] == 0);",
          "    assert!(decoder.b64_buffer[725] == 0);",
          "    assert!(decoder.b64_buffer[726] == 0);",
          "    assert!(decoder.b64_buffer[727] == 0);",
          "    assert!(decoder.b64_buffer[728] == 0);",
          "    assert!(decoder.b64_buffer[729] == 0);",
          "    assert!(decoder.b64_buffer[730] == 0);",
          "    assert!(decoder.b64_buffer[731] == 0);",
          "    assert!(decoder.b64_buffer[732] == 0);",
          "    assert!(decoder.b64_buffer[733] == 0);",
          "    assert!(decoder.b64_buffer[734] == 0);",
          "    assert!(decoder.b64_buffer[735] == 0);",
          "    assert!(decoder.b64_buffer[736] == 0);",
          "    assert!(decoder.b64_buffer[737] == 0);",
          "    assert!(decoder.b64_buffer[738] == 0);",
          "    assert!(decoder.b64_buffer[739] == 0);",
          "    assert!(decoder.b64_buffer[740] == 0);",
          "    assert!(decoder.b64_buffer[741] == 0);",
          "    assert!(decoder.b64_buffer[742] == 0);",
          "    assert!(decoder.b64_buffer[743] == 0);",
          "    assert!(decoder.b64_buffer[744] == 0);",
          "    assert!(decoder.b64_buffer[745] == 0);",
          "    assert!(decoder.b64_buffer[746] == 0);",
          "    assert!(decoder.b64_buffer[747] == 0);",
          "    assert!(decoder.b64_buffer[748] == 0);",
          "    assert!(decoder.b64_buffer[749] == 0);",
          "    assert!(decoder.b64_buffer[750] == 0);",
          "    assert!(decoder.b64_buffer[751] == 0);",
          "    assert!(decoder.b64_buffer[752] == 0);",
          "    assert!(decoder.b64_buffer[753] == 0);",
          "    assert!(decoder.b64_buffer[754] == 0);",
          "    assert!(decoder.b64_buffer[755] == 0);",
          "    assert!(decoder.b64_buffer[756] == 0);",
          "    assert!(decoder.b64_buffer[757] == 0);",
          "    assert!(decoder.b64_buffer[758] == 0);",
          "    assert!(decoder.b64_buffer[759] == 0);",
          "    assert!(decoder.b64_buffer[760] == 0);",
          "    assert!(decoder.b64_buffer[761] == 0);",
          "    assert!(decoder.b64_buffer[762] == 0);",
          "    assert!(decoder.b64_buffer[763] == 0);",
          "    assert!(decoder.b64_buffer[764] == 0);",
          "    assert!(decoder.b64_buffer[765] == 0);",
          "    assert!(decoder.b64_buffer[766] == 0);",
          "    assert!(decoder.b64_buffer[767] == 0);",
          "    assert!(decoder.b64_buffer[768] == 0);",
          "    assert!(decoder.b64_buffer[769] == 0);",
          "    assert!(decoder.b64_buffer[770] == 0);",
          "    assert!(decoder.b64_buffer[771] == 0);",
          "    assert!(decoder.b64_buffer[772] == 0);",
          "    assert!(decoder.b64_buffer[773] == 0);",
          "    assert!(decoder.b64_buffer[774] == 0);",
          "    assert!(decoder.b64_buffer[775] == 0);",
          "    assert!(decoder.b64_buffer[776] == 0);",
          "    assert!(decoder.b64_buffer[777] == 0);",
          "    assert!(decoder.b64_buffer[778] == 0);",
          "    assert!(decoder.b64_buffer[779] == 0);",
          "    assert!(decoder.b64_buffer[780] == 0);",
          "    assert!(decoder.b64_buffer[781] == 0);",
          "    assert!(decoder.b64_buffer[782] == 0);",
          "    assert!(decoder.b64_buffer[783] == 0);",
          "    assert!(decoder.b64_buffer[784] == 0);",
          "    assert!(decoder.b64_buffer[785] == 0);",
          "    assert!(decoder.b64_buffer[786] == 0);",
          "    assert!(decoder.b64_buffer[787] == 0);",
          "    assert!(decoder.b64_buffer[788] == 0);",
          "    assert!(decoder.b64_buffer[789] == 0);",
          "    assert!(decoder.b64_buffer[790] == 0);",
          "    assert!(decoder.b64_buffer[791] == 0);",
          "    assert!(decoder.b64_buffer[792] == 0);",
          "    assert!(decoder.b64_buffer[793] == 0);",
          "    assert!(decoder.b64_buffer[794] == 0);",
          "    assert!(decoder.b64_buffer[795] == 0);",
          "    assert!(decoder.b64_buffer[796] == 0);",
          "    assert!(decoder.b64_buffer[797] == 0);",
          "    assert!(decoder.b64_buffer[798] == 0);",
          "    assert!(decoder.b64_buffer[799] == 0);",
          "    assert!(decoder.b64_buffer[800] == 0);",
          "    assert!(decoder.b64_buffer[801] == 0);",
          "    assert!(decoder.b64_buffer[802] == 0);",
          "    assert!(decoder.b64_buffer[803] == 0);",
          "    assert!(decoder.b64_buffer[804] == 0);",
          "    assert!(decoder.b64_buffer[805] == 0);",
          "    assert!(decoder.b64_buffer[806] == 0);",
          "    assert!(decoder.b64_buffer[807] == 0);",
          "    assert!(decoder.b64_buffer[808] == 0);",
          "    assert!(decoder.b64_buffer[809] == 0);",
          "    assert!(decoder.b64_buffer[810] == 0);",
          "    assert!(decoder.b64_buffer[811] == 0);",
          "    assert!(decoder.b64_buffer[812] == 0);",
          "    assert!(decoder.b64_buffer[813] == 0);",
          "    assert!(decoder.b64_buffer[814] == 0);",
          "    assert!(decoder.b64_buffer[815] == 0);",
          "    assert!(decoder.b64_buffer[816] == 0);",
          "    assert!(decoder.b64_buffer[817] == 0);",
          "    assert!(decoder.b64_buffer[818] == 0);",
          "    assert!(decoder.b64_buffer[819] == 0);",
          "    assert!(decoder.b64_buffer[820] == 0);",
          "    assert!(decoder.b64_buffer[821] == 0);",
          "    assert!(decoder.b64_buffer[822] == 0);",
          "    assert!(decoder.b64_buffer[823] == 0);",
          "    assert!(decoder.b64_buffer[824] == 0);",
          "    assert!(decoder.b64_buffer[825] == 0);",
          "    assert!(decoder.b64_buffer[826] == 0);",
          "    assert!(decoder.b64_buffer[827] == 0);",
          "    assert!(decoder.b64_buffer[828] == 0);",
          "    assert!(decoder.b64_buffer[829] == 0);",
          "    assert!(decoder.b64_buffer[830] == 0);",
          "    assert!(decoder.b64_buffer[831] == 0);",
          "    assert!(decoder.b64_buffer[832] == 0);",
          "    assert!(decoder.b64_buffer[833] == 0);",
          "    assert!(decoder.b64_buffer[834] == 0);",
          "    assert!(decoder.b64_buffer[835] == 0);",
          "    assert!(decoder.b64_buffer[836] == 0);",
          "    assert!(decoder.b64_buffer[837] == 0);",
          "    assert!(decoder.b64_buffer[838] == 0);",
          "    assert!(decoder.b64_buffer[839] == 0);",
          "    assert!(decoder.b64_buffer[840] == 0);",
          "    assert!(decoder.b64_buffer[841] == 0);",
          "    assert!(decoder.b64_buffer[842] == 0);",
          "    assert!(decoder.b64_buffer[843] == 0);",
          "    assert!(decoder.b64_buffer[844] == 0);",
          "    assert!(decoder.b64_buffer[845] == 0);",
          "    assert!(decoder.b64_buffer[846] == 0);",
          "    assert!(decoder.b64_buffer[847] == 0);",
          "    assert!(decoder.b64_buffer[848] == 0);",
          "    assert!(decoder.b64_buffer[849] == 0);",
          "    assert!(decoder.b64_buffer[850] == 0);",
          "    assert!(decoder.b64_buffer[851] == 0);",
          "    assert!(decoder.b64_buffer[852] == 0);",
          "    assert!(decoder.b64_buffer[853] == 0);",
          "    assert!(decoder.b64_buffer[854] == 0);",
          "    assert!(decoder.b64_buffer[855] == 0);",
          "    assert!(decoder.b64_buffer[856] == 0);",
          "    assert!(decoder.b64_buffer[857] == 0);",
          "    assert!(decoder.b64_buffer[858] == 0);",
          "    assert!(decoder.b64_buffer[859] == 0);",
          "    assert!(decoder.b64_buffer[860] == 0);",
          "    assert!(decoder.b64_buffer[861] == 0);",
          "    assert!(decoder.b64_buffer[862] == 0);",
          "    assert!(decoder.b64_buffer[863] == 0);",
          "    assert!(decoder.b64_buffer[864] == 0);",
          "    assert!(decoder.b64_buffer[865] == 0);",
          "    assert!(decoder.b64_buffer[866] == 0);",
          "    assert!(decoder.b64_buffer[867] == 0);",
          "    assert!(decoder.b64_buffer[868] == 0);",
          "    assert!(decoder.b64_buffer[869] == 0);",
          "    assert!(decoder.b64_buffer[870] == 0);",
          "    assert!(decoder.b64_buffer[871] == 0);",
          "    assert!(decoder.b64_buffer[872] == 0);",
          "    assert!(decoder.b64_buffer[873] == 0);",
          "    assert!(decoder.b64_buffer[874] == 0);",
          "    assert!(decoder.b64_buffer[875] == 0);",
          "    assert!(decoder.b64_buffer[876] == 0);",
          "    assert!(decoder.b64_buffer[877] == 0);",
          "    assert!(decoder.b64_buffer[878] == 0);",
          "    assert!(decoder.b64_buffer[879] == 0);",
          "    assert!(decoder.b64_buffer[880] == 0);",
          "    assert!(decoder.b64_buffer[881] == 0);",
          "    assert!(decoder.b64_buffer[882] == 0);",
          "    assert!(decoder.b64_buffer[883] == 0);",
          "    assert!(decoder.b64_buffer[884] == 0);",
          "    assert!(decoder.b64_buffer[885] == 0);",
          "    assert!(decoder.b64_buffer[886] == 0);",
          "    assert!(decoder.b64_buffer[887] == 0);",
          "    assert!(decoder.b64_buffer[888] == 0);",
          "    assert!(decoder.b64_buffer[889] == 0);",
          "    assert!(decoder.b64_buffer[890] == 0);",
          "    assert!(decoder.b64_buffer[891] == 0);",
          "    assert!(decoder.b64_buffer[892] == 0);",
          "    assert!(decoder.b64_buffer[893] == 0);",
          "    assert!(decoder.b64_buffer[894] == 0);",
          "    assert!(decoder.b64_buffer[895] == 0);",
          "    assert!(decoder.b64_buffer[896] == 0);",
          "    assert!(decoder.b64_buffer[897] == 0);",
          "    assert!(decoder.b64_buffer[898] == 0);",
          "    assert!(decoder.b64_buffer[899] == 0);",
          "    assert!(decoder.b64_buffer[900] == 0);",
          "    assert!(decoder.b64_buffer[901] == 0);",
          "    assert!(decoder.b64_buffer[902] == 0);",
          "    assert!(decoder.b64_buffer[903] == 0);",
          "    assert!(decoder.b64_buffer[904] == 0);",
          "    assert!(decoder.b64_buffer[905] == 0);",
          "    assert!(decoder.b64_buffer[906] == 0);",
          "    assert!(decoder.b64_buffer[907] == 0);",
          "    assert!(decoder.b64_buffer[908] == 0);",
          "    assert!(decoder.b64_buffer[909] == 0);",
          "    assert!(decoder.b64_buffer[910] == 0);",
          "    assert!(decoder.b64_buffer[911] == 0);",
          "    assert!(decoder.b64_buffer[912] == 0);",
          "    assert!(decoder.b64_buffer[913] == 0);",
          "    assert!(decoder.b64_buffer[914] == 0);",
          "    assert!(decoder.b64_buffer[915] == 0);",
          "    assert!(decoder.b64_buffer[916] == 0);",
          "    assert!(decoder.b64_buffer[917] == 0);",
          "    assert!(decoder.b64_buffer[918] == 0);",
          "    assert!(decoder.b64_buffer[919] == 0);",
          "    assert!(decoder.b64_buffer[920] == 0);",
          "    assert!(decoder.b64_buffer[921] == 0);",
          "    assert!(decoder.b64_buffer[922] == 0);",
          "    assert!(decoder.b64_buffer[923] == 0);",
          "    assert!(decoder.b64_buffer[924] == 0);",
          "    assert!(decoder.b64_buffer[925] == 0);",
          "    assert!(decoder.b64_buffer[926] == 0);",
          "    assert!(decoder.b64_buffer[927] == 0);",
          "    assert!(decoder.b64_buffer[928] == 0);",
          "    assert!(decoder.b64_buffer[929] == 0);",
          "    assert!(decoder.b64_buffer[930] == 0);",
          "    assert!(decoder.b64_buffer[931] == 0);",
          "    assert!(decoder.b64_buffer[932] == 0);",
          "    assert!(decoder.b64_buffer[933] == 0);",
          "    assert!(decoder.b64_buffer[934] == 0);",
          "    assert!(decoder.b64_buffer[935] == 0);",
          "    assert!(decoder.b64_buffer[936] == 0);",
          "    assert!(decoder.b64_buffer[937] == 0);",
          "    assert!(decoder.b64_buffer[938] == 0);",
          "    assert!(decoder.b64_buffer[939] == 0);",
          "    assert!(decoder.b64_buffer[940] == 0);",
          "    assert!(decoder.b64_buffer[941] == 0);",
          "    assert!(decoder.b64_buffer[942] == 0);",
          "    assert!(decoder.b64_buffer[943] == 0);",
          "    assert!(decoder.b64_buffer[944] == 0);",
          "    assert!(decoder.b64_buffer[945] == 0);",
          "    assert!(decoder.b64_buffer[946] == 0);",
          "    assert!(decoder.b64_buffer[947] == 0);",
          "    assert!(decoder.b64_buffer[948] == 0);",
          "    assert!(decoder.b64_buffer[949] == 0);",
          "    assert!(decoder.b64_buffer[950] == 0);",
          "    assert!(decoder.b64_buffer[951] == 0);",
          "    assert!(decoder.b64_buffer[952] == 0);",
          "    assert!(decoder.b64_buffer[953] == 0);",
          "    assert!(decoder.b64_buffer[954] == 0);",
          "    assert!(decoder.b64_buffer[955] == 0);",
          "    assert!(decoder.b64_buffer[956] == 0);",
          "    assert!(decoder.b64_buffer[957] == 0);",
          "    assert!(decoder.b64_buffer[958] == 0);",
          "    assert!(decoder.b64_buffer[959] == 0);",
          "    assert!(decoder.b64_buffer[960] == 0);",
          "    assert!(decoder.b64_buffer[961] == 0);",
          "    assert!(decoder.b64_buffer[962] == 0);",
          "    assert!(decoder.b64_buffer[963] == 0);",
          "    assert!(decoder.b64_buffer[964] == 0);",
          "    assert!(decoder.b64_buffer[965] == 0);",
          "    assert!(decoder.b64_buffer[966] == 0);",
          "    assert!(decoder.b64_buffer[967] == 0);",
          "    assert!(decoder.b64_buffer[968] == 0);",
          "    assert!(decoder.b64_buffer[969] == 0);",
          "    assert!(decoder.b64_buffer[970] == 0);",
          "    assert!(decoder.b64_buffer[971] == 0);",
          "    assert!(decoder.b64_buffer[972] == 0);",
          "    assert!(decoder.b64_buffer[973] == 0);",
          "    assert!(decoder.b64_buffer[974] == 0);",
          "    assert!(decoder.b64_buffer[975] == 0);",
          "    assert!(decoder.b64_buffer[976] == 0);",
          "    assert!(decoder.b64_buffer[977] == 0);",
          "    assert!(decoder.b64_buffer[978] == 0);",
          "    assert!(decoder.b64_buffer[979] == 0);",
          "    assert!(decoder.b64_buffer[980] == 0);",
          "    assert!(decoder.b64_buffer[981] == 0);",
          "    assert!(decoder.b64_buffer[982] == 0);",
          "    assert!(decoder.b64_buffer[983] == 0);",
          "    assert!(decoder.b64_buffer[984] == 0);",
          "    assert!(decoder.b64_buffer[985] == 0);",
          "    assert!(decoder.b64_buffer[986] == 0);",
          "    assert!(decoder.b64_buffer[987] == 0);",
          "    assert!(decoder.b64_buffer[988] == 0);",
          "    assert!(decoder.b64_buffer[989] == 0);",
          "    assert!(decoder.b64_buffer[990] == 0);",
          "    assert!(decoder.b64_buffer[991] == 0);",
          "    assert!(decoder.b64_buffer[992] == 0);",
          "    assert!(decoder.b64_buffer[993] == 0);",
          "    assert!(decoder.b64_buffer[994] == 0);",
          "    assert!(decoder.b64_buffer[995] == 0);",
          "    assert!(decoder.b64_buffer[996] == 0);",
          "    assert!(decoder.b64_buffer[997] == 0);",
          "    assert!(decoder.b64_buffer[998] == 0);",
          "    assert!(decoder.b64_buffer[999] == 0);",
          "    assert!(decoder.b64_buffer[1000] == 0);",
          "    assert!(decoder.b64_buffer[1001] == 0);",
          "    assert!(decoder.b64_buffer[1002] == 0);",
          "    assert!(decoder.b64_buffer[1003] == 0);",
          "    assert!(decoder.b64_buffer[1004] == 0);",
          "    assert!(decoder.b64_buffer[1005] == 0);",
          "    assert!(decoder.b64_buffer[1006] == 0);",
          "    assert!(decoder.b64_buffer[1007] == 0);",
          "    assert!(decoder.b64_buffer[1008] == 0);",
          "    assert!(decoder.b64_buffer[1009] == 0);",
          "    assert!(decoder.b64_buffer[1010] == 0);",
          "    assert!(decoder.b64_buffer[1011] == 0);",
          "    assert!(decoder.b64_buffer[1012] == 0);",
          "    assert!(decoder.b64_buffer[1013] == 0);",
          "    assert!(decoder.b64_buffer[1014] == 0);",
          "    assert!(decoder.b64_buffer[1015] == 0);",
          "    assert!(decoder.b64_buffer[1016] == 0);",
          "    assert!(decoder.b64_buffer[1017] == 0);",
          "    assert!(decoder.b64_buffer[1018] == 0);",
          "    assert!(decoder.b64_buffer[1019] == 0);",
          "    assert!(decoder.b64_buffer[1020] == 0);",
          "    assert!(decoder.b64_buffer[1021] == 0);",
          "    assert!(decoder.b64_buffer[1022] == 0);",
          "    assert!(decoder.b64_buffer[1023] == 0);",
          "    assert!(decoder.b64_buffer[1024] == 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct DummyEngine;",
          "    impl Engine for DummyEngine {",
          "        type Config = ();",
          "        type DecodeEstimate = usize;",
          "",
          "        fn internal_encode(&self, _input: &[u8], _output: &mut [u8]) -> usize { 0 }",
          "        fn internal_decoded_len_estimate(&self, input_len: usize) -> Self::DecodeEstimate {",
          "            input_len / 4 * 3",
          "        }",
          "        fn internal_decode(&self, _input: &[u8], output: &mut [u8], _decode_estimate: Self::DecodeEstimate) -> Result<(), DecodeSliceError> {",
          "            output.copy_from_slice(&[0, 1, 2]); // Simulated decode",
          "            Ok(())",
          "        }",
          "        fn config(&self) -> &Self::Config { &() }",
          "    }",
          "",
          "    let engine = DummyEngine;",
          "    let reader = std::io::Cursor::new(&b\"SGVsbG8gd29ybGQ=\"[..]); // \"Hello world\" in base64",
          "    let mut decoder = DecoderReader::new(reader, &engine);",
          "    ",
          "    let mut buf = [0u8; 4];",
          "    decoder.b64_offset = 2; // Setting b64_offset to a valid point",
          "    decoder.b64_len = 4; // Simulating the presence of base64 data",
          "",
          "    let _ = decoder.read(&mut buf);",
          "}"
        ],
        "oracle": [
          "    assert!(!buf.is_empty(), \"Buffer should not be empty at line 233\");",
          "    assert!(decoder.b64_offset <= BUF_SIZE, \"b64_offset should be less than or equal to BUF_SIZE at line 238\");",
          "    assert!(decoder.b64_len >= BASE64_CHUNK_SIZE, \"b64_len should be at least BASE64_CHUNK_SIZE when reading data\");",
          "    assert_eq!(decoder.decoded_len, 0, \"decoded_len should be 0 before decoding at line 293\");",
          "    assert!(decoder.decoded_offset < DECODED_CHUNK_SIZE, \"decoded_offset should be less than DECODED_CHUNK_SIZE\");",
          "    assert!(decoder.b64_len <= BUF_SIZE, \"b64_len should not exceed BUF_SIZE after reading\");",
          "    assert_eq!(decoder.decoded_chunk_buffer[..decoder.decoded_len], [0, 1, 2], \"Decoded chunk buffer should match expected decoded values\");",
          "    assert!(decoder.padding_offset.is_none(), \"padding_offset should be None before any decoding operation\");"
        ],
        "code": [
          "{",
          "    struct DummyEngine;",
          "    impl Engine for DummyEngine {",
          "        type Config = ();",
          "        type DecodeEstimate = usize;",
          "",
          "        fn internal_encode(&self, _input: &[u8], _output: &mut [u8]) -> usize { 0 }",
          "        fn internal_decoded_len_estimate(&self, input_len: usize) -> Self::DecodeEstimate {",
          "            input_len / 4 * 3",
          "        }",
          "        fn internal_decode(&self, _input: &[u8], output: &mut [u8], _decode_estimate: Self::DecodeEstimate) -> Result<(), DecodeSliceError> {",
          "            output.copy_from_slice(&[0, 1, 2]); // Simulated decode",
          "            Ok(())",
          "        }",
          "        fn config(&self) -> &Self::Config { &() }",
          "    }",
          "",
          "    let engine = DummyEngine;",
          "    let reader = std::io::Cursor::new(&b\"SGVsbG8gd29ybGQ=\"[..]); // \"Hello world\" in base64",
          "    let mut decoder = DecoderReader::new(reader, &engine);",
          "    ",
          "    let mut buf = [0u8; 4];",
          "    decoder.b64_offset = 2; // Setting b64_offset to a valid point",
          "    decoder.b64_len = 4; // Simulating the presence of base64 data",
          "",
          "    let _ = decoder.read(&mut buf);",
          "    assert!(!buf.is_empty(), \"Buffer should not be empty at line 233\");",
          "    assert!(decoder.b64_offset <= BUF_SIZE, \"b64_offset should be less than or equal to BUF_SIZE at line 238\");",
          "    assert!(decoder.b64_len >= BASE64_CHUNK_SIZE, \"b64_len should be at least BASE64_CHUNK_SIZE when reading data\");",
          "    assert_eq!(decoder.decoded_len, 0, \"decoded_len should be 0 before decoding at line 293\");",
          "    assert!(decoder.decoded_offset < DECODED_CHUNK_SIZE, \"decoded_offset should be less than DECODED_CHUNK_SIZE\");",
          "    assert!(decoder.b64_len <= BUF_SIZE, \"b64_len should not exceed BUF_SIZE after reading\");",
          "    assert_eq!(decoder.decoded_chunk_buffer[..decoder.decoded_len], [0, 1, 2], \"Decoded chunk buffer should match expected decoded values\");",
          "    assert!(decoder.padding_offset.is_none(), \"padding_offset should be None before any decoding operation\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct DummyEngine;",
          "    impl Engine for DummyEngine {",
          "        type Config = ();",
          "        type DecodeEstimate = usize;",
          "",
          "        fn internal_encode(&self, _input: &[u8], _output: &mut [u8]) -> usize { 0 }",
          "        fn internal_decoded_len_estimate(&self, input_len: usize) -> Self::DecodeEstimate {",
          "            input_len / 4 * 3",
          "        }",
          "        fn internal_decode(&self, _input: &[u8], output: &mut [u8], _decode_estimate: Self::DecodeEstimate) -> Result<(), DecodeSliceError> {",
          "            output.copy_from_slice(&[0, 1, 2]); // Simulated decode",
          "            Ok(())",
          "        }",
          "        fn config(&self) -> &Self::Config { &() }",
          "    }",
          "",
          "    let engine = DummyEngine;",
          "    let reader = std::io::Cursor::new(&b\"SGVsbG8gd29ybGQ=\"[..]); // \"Hello world\" in base64",
          "    let mut decoder = DecoderReader::new(reader, &engine);",
          "    ",
          "    let mut buf = [0u8; 3];",
          "    decoder.b64_offset = BASE64_CHUNK_SIZE; // Setting b64_offset to BUF_SIZE",
          "    decoder.b64_len = 4; // Simulating the presence of base64 data",
          "",
          "    let _ = decoder.read(&mut buf);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf.len(), 3);",
          "    assert!(decoder.b64_offset > BUF_SIZE);",
          "    assert!(decoder.b64_len > 0);",
          "    assert!(decoder.decoded_len == 0);",
          "    assert!(decoder.padding_offset.is_none());",
          "    assert!(decoder.input_consumed_len == 0);",
          "    assert_eq!(decoder.b64_buffer[0..decoder.b64_len], [b'S', b'G', b'V', b's']);",
          "    assert!(decoder.decoded_offset < DECODED_CHUNK_SIZE);",
          "    assert!(decoder.decoded_len < DECODED_CHUNK_SIZE);",
          "    assert_eq!(decoder.b64_len, 4);",
          "    assert!(decoder.b64_offset == BASE64_CHUNK_SIZE);",
          "    assert!(decoder.b64_len <= BUF_SIZE);",
          "    assert!(decoder.decoded_len <= 3);",
          "    assert!(decoder.padding_offset.is_none());"
        ],
        "code": [
          "{",
          "    struct DummyEngine;",
          "    impl Engine for DummyEngine {",
          "        type Config = ();",
          "        type DecodeEstimate = usize;",
          "",
          "        fn internal_encode(&self, _input: &[u8], _output: &mut [u8]) -> usize { 0 }",
          "        fn internal_decoded_len_estimate(&self, input_len: usize) -> Self::DecodeEstimate {",
          "            input_len / 4 * 3",
          "        }",
          "        fn internal_decode(&self, _input: &[u8], output: &mut [u8], _decode_estimate: Self::DecodeEstimate) -> Result<(), DecodeSliceError> {",
          "            output.copy_from_slice(&[0, 1, 2]); // Simulated decode",
          "            Ok(())",
          "        }",
          "        fn config(&self) -> &Self::Config { &() }",
          "    }",
          "",
          "    let engine = DummyEngine;",
          "    let reader = std::io::Cursor::new(&b\"SGVsbG8gd29ybGQ=\"[..]); // \"Hello world\" in base64",
          "    let mut decoder = DecoderReader::new(reader, &engine);",
          "    ",
          "    let mut buf = [0u8; 3];",
          "    decoder.b64_offset = BASE64_CHUNK_SIZE; // Setting b64_offset to BUF_SIZE",
          "    decoder.b64_len = 4; // Simulating the presence of base64 data",
          "",
          "    let _ = decoder.read(&mut buf);",
          "    assert_eq!(buf.len(), 3);",
          "    assert!(decoder.b64_offset > BUF_SIZE);",
          "    assert!(decoder.b64_len > 0);",
          "    assert!(decoder.decoded_len == 0);",
          "    assert!(decoder.padding_offset.is_none());",
          "    assert!(decoder.input_consumed_len == 0);",
          "    assert_eq!(decoder.b64_buffer[0..decoder.b64_len], [b'S', b'G', b'V', b's']);",
          "    assert!(decoder.decoded_offset < DECODED_CHUNK_SIZE);",
          "    assert!(decoder.decoded_len < DECODED_CHUNK_SIZE);",
          "    assert_eq!(decoder.b64_len, 4);",
          "    assert!(decoder.b64_offset == BASE64_CHUNK_SIZE);",
          "    assert!(decoder.b64_len <= BUF_SIZE);",
          "    assert!(decoder.decoded_len <= 3);",
          "    assert!(decoder.padding_offset.is_none());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]