bb0
  0: StorageLive(_2)
    SourceInfo(src/decode.rs:151:5-152:52)
  1: StorageLive(_3)
    SourceInfo(src/decode.rs:151:5-152:52)
  2: StorageLive(_4)
    SourceInfo(src/decode.rs:151:5-151:13)
  3: StorageLive(_5)
    SourceInfo(src/decode.rs:151:5-151:13)
  4: _5 = const engine::general_purpose::STANDARD
    SourceInfo(src/decode.rs:151:5-151:13)
  5: _4 = &_5
    SourceInfo(src/decode.rs:151:5-151:13)
  6: StorageLive(_6)
    SourceInfo(src/decode.rs:152:40-152:51)
  7: _6 = _1
    SourceInfo(src/decode.rs:152:40-152:51)
  Terminator {
      source_info: SourceInfo(src/decode.rs:151:5-152:52)
      kind: _3 = <engine::general_purpose::GeneralPurpose as engine::Engine>::internal_decoded_len_estimate(move _4, move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _2 = &_3
    SourceInfo(src/decode.rs:151:5-152:52)
  1: StorageDead(_6)
    SourceInfo(src/decode.rs:152:51-152:52)
  2: StorageDead(_4)
    SourceInfo(src/decode.rs:152:51-152:52)
  Terminator {
      source_info: SourceInfo(src/decode.rs:151:5-153:32)
      kind: _0 = <engine::general_purpose::decode::GeneralPurposeEstimate as engine::DecodeEstimate>::decoded_len_estimate(move _2) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_2)
    SourceInfo(src/decode.rs:153:31-153:32)
  1: StorageDead(_5)
    SourceInfo(src/decode.rs:154:1-154:2)
  2: StorageDead(_3)
    SourceInfo(src/decode.rs:154:1-154:2)
  Terminator {
      source_info: SourceInfo(src/decode.rs:154:2-154:2)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/decode.rs:150:1-154:2)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

