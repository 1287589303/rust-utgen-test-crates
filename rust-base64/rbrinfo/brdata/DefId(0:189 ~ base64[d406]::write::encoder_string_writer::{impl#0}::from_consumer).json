{
  "name": "base64::write::encoder_string_writer::{impl#0}::from_consumer",
  "mod_info": {
    "name": "write::encoder_string_writer",
    "loc": "src/write/mod.rs:3:1:3:27"
  },
  "visible": true,
  "loc": "src/write/encoder_string_writer.rs:57:5:61:6",
  "doc": "/// Create a `EncoderStringWriter` that will append to the provided `StrConsumer`.\n",
  "code": [
    "pub fn from_consumer(str_consumer: S, engine: &'e E) -> Self {",
    "    EncoderStringWriter {",
    "        encoder: EncoderWriter::new(Utf8SingleCodeUnitWriter { str_consumer }, engine),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "EncoderStringWriter {\n            encoder: EncoderWriter::new(Utf8SingleCodeUnitWriter { str_consumer }, engine),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}