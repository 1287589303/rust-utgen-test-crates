{
  "name": "base64::engine::general_purpose::{impl#2}::with_decode_allow_trailing_bits",
  "mod_info": {
    "name": "engine::general_purpose",
    "loc": "src/engine/mod.rs:14:1:14:25"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/mod.rs:296:5:301:6",
  "doc": "/// Create a new config based on `self` with an updated `decode_allow_trailing_bits` setting.\n///\n/// Most users will not need to configure this. It's useful if you need to decode base64\n/// produced by a buggy encoder that has bits set in the unused space on the last base64\n/// character as per [forgiving-base64 decode](https://infra.spec.whatwg.org/#forgiving-base64-decode).\n/// If invalid trailing bits are present and this is `true`, those bits will\n/// be silently ignored, else `DecodeError::InvalidLastSymbol` will be emitted.\n",
  "code": [
    "pub const fn with_decode_allow_trailing_bits(self, allow: bool) -> Self {",
    "    Self {",
    "        decode_allow_trailing_bits: allow,",
    "        ..self",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Self {\n            decode_allow_trailing_bits: allow,\n            ..self\n        }",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}