{
  "name": "base64::encode::add_padding",
  "mod_info": {
    "name": "encode",
    "loc": "src/lib.rs:286:1:286:12"
  },
  "visible": true,
  "loc": "src/encode.rs:133:1:143:2",
  "doc": "/// Write padding characters.\n/// `unpadded_output_len` is the size of the unpadded but base64 encoded data.\n/// `output` is the slice where padding should be written, of length at least 2.\n///\n/// Returns the number of padding bytes written.\n",
  "code": [
    "pub(crate) fn add_padding(unpadded_output_len: usize, output: &mut [u8]) -> usize {",
    "    let pad_bytes = (4 - (unpadded_output_len % 4)) % 4;",
    "    // for just a couple bytes, this has better performance than using",
    "    // .fill(), or iterating over mutable refs, which call memset()",
    "    #[allow(clippy::needless_range_loop)]",
    "    for i in 0..pad_bytes {",
    "        output[i] = PAD_BYTE;",
    "    }",
    "",
    "    pad_bytes",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "i in 0..pad_bytes",
          "norm": null,
          "value": "true",
          "line": 138,
          "bound": null
        },
        {
          "cond": "i in 0..pad_bytes",
          "norm": null,
          "value": "false",
          "line": 138,
          "bound": null
        }
      ],
      "ret": "pad_bytes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        5,
        6,
        7,
        9,
        11
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "i in 0..pad_bytes",
          "norm": null,
          "value": "false",
          "line": 138,
          "bound": null
        }
      ],
      "ret": "pad_bytes",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}