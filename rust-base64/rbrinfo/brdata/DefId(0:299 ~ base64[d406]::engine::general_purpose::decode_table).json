{
  "name": "base64::engine::general_purpose::decode_table",
  "mod_info": {
    "name": "engine::general_purpose",
    "loc": "src/engine/mod.rs:14:1:14:25"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/mod.rs:214:1:228:2",
  "doc": "/// Returns a table mapping base64 bytes as the lookup index to either:\n/// - [`INVALID_VALUE`] for bytes that aren't members of the alphabet\n/// - a byte whose lower 6 bits are the value that was encoded into the index byte\n",
  "code": [
    "pub(crate) const fn decode_table(alphabet: &Alphabet) -> [u8; 256] {",
    "    let mut decode_table = [INVALID_VALUE; 256];",
    "",
    "    // Since the table is full of `INVALID_VALUE` already, we only need to overwrite",
    "    // the parts that are valid.",
    "    let mut index = 0;",
    "    while index < 64 {",
    "        // The index in the alphabet is the 6-bit value we care about.",
    "        // Since the index is in 0-63, it is safe to cast to u8.",
    "        decode_table[alphabet.symbols[index] as usize] = index as u8;",
    "        index += 1;",
    "    }",
    "",
    "    decode_table",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "index < 64",
          "norm": "64 > index",
          "value": "true",
          "line": 220,
          "bound": null
        },
        {
          "cond": "index < 64",
          "norm": "64 > index",
          "value": "false",
          "line": 220,
          "bound": "index == 64"
        }
      ],
      "ret": "decode_table",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        1,
        2,
        7
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "index < 64",
          "norm": "64 > index",
          "value": "false",
          "line": 220,
          "bound": "index == 64"
        }
      ],
      "ret": "decode_table",
      "path": [
        0,
        1,
        2,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}