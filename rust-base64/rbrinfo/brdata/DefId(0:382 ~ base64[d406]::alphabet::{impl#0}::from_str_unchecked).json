{
  "name": "base64::alphabet::{impl#0}::from_str_unchecked",
  "mod_info": {
    "name": "alphabet",
    "loc": "src/lib.rs:284:1:284:18"
  },
  "visible": false,
  "loc": "src/alphabet.rs:62:5:74:6",
  "doc": "/// Performs no checks so that it can be const.\n/// Used only for known-valid strings.\n",
  "code": [
    "const fn from_str_unchecked(alphabet: &str) -> Self {",
    "    let mut symbols = [0_u8; ALPHABET_SIZE];",
    "    let source_bytes = alphabet.as_bytes();",
    "",
    "    // a way to copy that's allowed in const fn",
    "    let mut index = 0;",
    "    while index < ALPHABET_SIZE {",
    "        symbols[index] = source_bytes[index];",
    "        index += 1;",
    "    }",
    "",
    "    Self { symbols }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "index < ALPHABET_SIZE",
          "norm": "ALPHABET_SIZE > index",
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "index < ALPHABET_SIZE",
          "norm": "ALPHABET_SIZE > index",
          "value": "false",
          "line": 68,
          "bound": "index == ALPHABET_SIZE"
        }
      ],
      "ret": "Self { symbols }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        2,
        3,
        8
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "index < ALPHABET_SIZE",
          "norm": "ALPHABET_SIZE > index",
          "value": "false",
          "line": 68,
          "bound": "index == ALPHABET_SIZE"
        }
      ],
      "ret": "Self { symbols }",
      "path": [
        0,
        1,
        2,
        3,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}