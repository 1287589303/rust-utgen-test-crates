{
  "name": "base64::read::decoder::{impl#1}::read_from_delegate",
  "mod_info": {
    "name": "read::decoder",
    "loc": "src/read/mod.rs:2:1:2:13"
  },
  "visible": false,
  "loc": "src/read/decoder.rs:119:5:130:6",
  "doc": "/// Read into the remaining space in the buffer after the current contents.\n/// Must only be called when there is space to read into in the buffer.\n/// Returns the number of bytes read.\n",
  "code": [
    "fn read_from_delegate(&mut self) -> io::Result<usize> {",
    "    debug_assert!(self.b64_offset + self.b64_len < BUF_SIZE);",
    "",
    "    let read = self",
    "        .inner",
    "        .read(&mut self.b64_buffer[self.b64_offset + self.b64_len..])?;",
    "    self.b64_len += read;",
    "",
    "    debug_assert!(self.b64_offset + self.b64_len <= BUF_SIZE);",
    "",
    "    Ok(read)",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.b64_offset + self.b64_len < BUF_SIZE",
          "norm": "BUF_SIZE > self.b64_offset + self.b64_len",
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self\n            .inner\n            .read(&mut self.b64_buffer[self.b64_offset + self.b64_len..])?",
          "norm": null,
          "value": "Err/None",
          "line": 122,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        15,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.b64_offset + self.b64_len < BUF_SIZE",
          "norm": "BUF_SIZE > self.b64_offset + self.b64_len",
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self\n            .inner\n            .read(&mut self.b64_buffer[self.b64_offset + self.b64_len..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 122,
          "bound": null
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 127,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        }
      ],
      "ret": "Ok(read)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        9,
        10,
        13,
        16,
        17,
        18,
        19,
        20,
        23,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.b64_offset + self.b64_len < BUF_SIZE",
          "norm": "BUF_SIZE > self.b64_offset + self.b64_len",
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self\n            .inner\n            .read(&mut self.b64_buffer[self.b64_offset + self.b64_len..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 122,
          "bound": null
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "false",
          "line": 127,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        9,
        10,
        13,
        16,
        17,
        18,
        19,
        21,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.b64_offset + self.b64_len < BUF_SIZE",
          "norm": "BUF_SIZE > self.b64_offset + self.b64_len",
          "value": "false",
          "line": 120,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        31
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}