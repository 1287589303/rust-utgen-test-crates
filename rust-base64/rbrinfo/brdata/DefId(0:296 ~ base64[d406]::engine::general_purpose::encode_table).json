{
  "name": "base64::engine::general_purpose::encode_table",
  "mod_info": {
    "name": "engine::general_purpose",
    "loc": "src/engine/mod.rs:14:1:14:25"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/mod.rs:196:1:209:2",
  "doc": "/// Returns a table mapping a 6-bit index to the ASCII byte encoding of the index\n",
  "code": [
    "pub(crate) const fn encode_table(alphabet: &Alphabet) -> [u8; 64] {",
    "    // the encode table is just the alphabet:",
    "    // 6-bit index lookup -> printable byte",
    "    let mut encode_table = [0_u8; 64];",
    "    {",
    "        let mut index = 0;",
    "        while index < 64 {",
    "            encode_table[index] = alphabet.symbols[index];",
    "            index += 1;",
    "        }",
    "    }",
    "",
    "    encode_table",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "index < 64",
          "norm": "64 > index",
          "value": "true",
          "line": 202,
          "bound": null
        },
        {
          "cond": "index < 64",
          "norm": "64 > index",
          "value": "false",
          "line": 202,
          "bound": "index == 64"
        }
      ],
      "ret": "encode_table",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        1,
        2,
        7
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "index < 64",
          "norm": "64 > index",
          "value": "false",
          "line": 202,
          "bound": "index == 64"
        }
      ],
      "ret": "encode_table",
      "path": [
        0,
        1,
        2,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}