{
  "name": "base64::engine::general_purpose::decode::{impl#0}::new",
  "mod_info": {
    "name": "engine::general_purpose::decode",
    "loc": "src/engine/general_purpose/mod.rs:12:1:12:23"
  },
  "visible": true,
  "loc": "src/engine/general_purpose/decode.rs:14:5:20:6",
  "doc": "",
  "code": [
    "pub(crate) fn new(encoded_len: usize) -> Self {",
    "    let rem = encoded_len % 4;",
    "    Self {",
    "        rem,",
    "        conservative_decoded_len: (encoded_len / 4 + usize::from(rem > 0)) * 3,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Self {\n            rem,\n            conservative_decoded_len: (encoded_len / 4 + usize::from(rem > 0)) * 3,\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}