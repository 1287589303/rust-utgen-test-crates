{
  "name": "base64::write::encoder_string_writer::{impl#5}::write",
  "mod_info": {
    "name": "write::encoder_string_writer",
    "loc": "src/write/mod.rs:3:1:3:27"
  },
  "visible": true,
  "loc": "src/write/encoder_string_writer.rs:120:5:128:6",
  "doc": "",
  "code": [
    "fn write(&mut self, buf: &[u8]) -> io::Result<usize> {",
    "    // Because we expect all input to be valid utf-8 individual bytes, we can encode any buffer",
    "    // length",
    "    let s = std::str::from_utf8(buf).expect(\"Input must be valid UTF-8\");",
    "",
    "    self.str_consumer.consume(s);",
    "",
    "    Ok(buf.len())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Ok(buf.len())",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}