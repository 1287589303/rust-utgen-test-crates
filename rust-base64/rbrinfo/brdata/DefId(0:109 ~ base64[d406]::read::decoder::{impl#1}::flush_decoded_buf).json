{
  "name": "base64::read::decoder::{impl#1}::flush_decoded_buf",
  "mod_info": {
    "name": "read::decoder",
    "loc": "src/read/mod.rs:2:1:2:13"
  },
  "visible": false,
  "loc": "src/read/decoder.rs:96:5:114:6",
  "doc": "/// Write as much as possible of the decoded buffer into the target buffer.\n/// Must only be called when there is something to write and space to write into.\n/// Returns a Result with the number of (decoded) bytes copied.\n",
  "code": [
    "fn flush_decoded_buf(&mut self, buf: &mut [u8]) -> io::Result<usize> {",
    "    debug_assert!(self.decoded_len > 0);",
    "    debug_assert!(!buf.is_empty());",
    "",
    "    let copy_len = cmp::min(self.decoded_len, buf.len());",
    "    debug_assert!(copy_len > 0);",
    "    debug_assert!(copy_len <= self.decoded_len);",
    "",
    "    buf[..copy_len].copy_from_slice(",
    "        &self.decoded_chunk_buffer[self.decoded_offset..self.decoded_offset + copy_len],",
    "    );",
    "",
    "    self.decoded_offset += copy_len;",
    "    self.decoded_len -= copy_len;",
    "",
    "    debug_assert!(self.decoded_len < DECODED_CHUNK_SIZE);",
    "",
    "    Ok(copy_len)",
    "}"
  ],
  "size": {
    "chain": 6,
    "contra": 0,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "true",
          "line": 97,
          "bound": null
        },
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "true",
          "line": 98,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        8,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "true",
          "line": 97,
          "bound": null
        },
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 98,
          "bound": null
        },
        {
          "cond": "copy_len > 0",
          "norm": "0 < copy_len",
          "value": "true",
          "line": 101,
          "bound": null
        },
        {
          "cond": "copy_len <= self.decoded_len",
          "norm": null,
          "value": "true",
          "line": 102,
          "bound": "copy_len == self.decoded_len"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 111,
          "bound": null
        }
      ],
      "ret": "Ok(copy_len)",
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        9,
        11,
        12,
        13,
        14,
        15,
        18,
        19,
        20,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "true",
          "line": 97,
          "bound": null
        },
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 98,
          "bound": null
        },
        {
          "cond": "copy_len > 0",
          "norm": "0 < copy_len",
          "value": "true",
          "line": 101,
          "bound": null
        },
        {
          "cond": "copy_len <= self.decoded_len",
          "norm": null,
          "value": "true",
          "line": 102,
          "bound": "copy_len == self.decoded_len"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "false",
          "line": 111,
          "bound": "self.decoded_len == DECODED_CHUNK_SIZE"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        9,
        11,
        12,
        13,
        14,
        15,
        18,
        19,
        20,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        32,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "true",
          "line": 97,
          "bound": null
        },
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 98,
          "bound": null
        },
        {
          "cond": "copy_len > 0",
          "norm": "0 < copy_len",
          "value": "true",
          "line": 101,
          "bound": null
        },
        {
          "cond": "copy_len <= self.decoded_len",
          "norm": null,
          "value": "false",
          "line": 102,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        9,
        11,
        12,
        13,
        14,
        15,
        18,
        19,
        21,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "true",
          "line": 97,
          "bound": null
        },
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 98,
          "bound": null
        },
        {
          "cond": "copy_len > 0",
          "norm": "0 < copy_len",
          "value": "false",
          "line": 101,
          "bound": "copy_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        6,
        7,
        9,
        11,
        12,
        13,
        14,
        16,
        35
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 97,
          "bound": "self.decoded_len == 0"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        35
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}