{
  "name": "base64::read::decoder::{impl#2}::read",
  "mod_info": {
    "name": "read::decoder",
    "loc": "src/read/mod.rs:2:1:2:13"
  },
  "visible": true,
  "loc": "src/read/decoder.rs:232:5:334:6",
  "doc": "/// Decode input from the wrapped reader.\n///\n/// Under non-error circumstances, this returns `Ok` with the value being the number of bytes\n/// written in `buf`.\n///\n/// Where possible, this function buffers base64 to minimize the number of `read()` calls to the\n/// delegate reader.\n///\n/// # Errors\n///\n/// Any errors emitted by the delegate reader are returned. Decoding errors due to invalid\n/// base64 are also possible, and will have `io::ErrorKind::InvalidData`.\n",
  "code": [
    "fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {",
    "    if buf.is_empty() {",
    "        return Ok(0);",
    "    }",
    "",
    "    // offset == BUF_SIZE when we copied it all last time",
    "    debug_assert!(self.b64_offset <= BUF_SIZE);",
    "    debug_assert!(self.b64_offset + self.b64_len <= BUF_SIZE);",
    "    debug_assert!(if self.b64_offset == BUF_SIZE {",
    "        self.b64_len == 0",
    "    } else {",
    "        self.b64_len <= BUF_SIZE",
    "    });",
    "",
    "    debug_assert!(if self.decoded_len == 0 {",
    "        // can be = when we were able to copy the complete chunk",
    "        self.decoded_offset <= DECODED_CHUNK_SIZE",
    "    } else {",
    "        self.decoded_offset < DECODED_CHUNK_SIZE",
    "    });",
    "",
    "    // We shouldn't ever decode into decoded_buffer when we can't immediately write at least one",
    "    // byte into the provided buf, so the effective length should only be 3 momentarily between",
    "    // when we decode and when we copy into the target buffer.",
    "    debug_assert!(self.decoded_len < DECODED_CHUNK_SIZE);",
    "    debug_assert!(self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE);",
    "",
    "    if self.decoded_len > 0 {",
    "        // we have a few leftover decoded bytes; flush that rather than pull in more b64",
    "        self.flush_decoded_buf(buf)",
    "    } else {",
    "        let mut at_eof = false;",
    "        while self.b64_len < BASE64_CHUNK_SIZE {",
    "            // Copy any bytes we have to the start of the buffer.",
    "            self.b64_buffer",
    "                .copy_within(self.b64_offset..self.b64_offset + self.b64_len, 0);",
    "            self.b64_offset = 0;",
    "",
    "            // then fill in more data",
    "            let read = self.read_from_delegate()?;",
    "            if read == 0 {",
    "                // we never read into an empty buf, so 0 => we've hit EOF",
    "                at_eof = true;",
    "                break;",
    "            }",
    "        }",
    "",
    "        if self.b64_len == 0 {",
    "            debug_assert!(at_eof);",
    "            // we must be at EOF, and we have no data left to decode",
    "            return Ok(0);",
    "        };",
    "",
    "        debug_assert!(if at_eof {",
    "            // if we are at eof, we may not have a complete chunk",
    "            self.b64_len > 0",
    "        } else {",
    "            // otherwise, we must have at least one chunk",
    "            self.b64_len >= BASE64_CHUNK_SIZE",
    "        });",
    "",
    "        debug_assert_eq!(0, self.decoded_len);",
    "",
    "        if buf.len() < DECODED_CHUNK_SIZE {",
    "            // caller requested an annoyingly short read",
    "            // have to write to a tmp buf first to avoid double mutable borrow",
    "            let mut decoded_chunk = [0_u8; DECODED_CHUNK_SIZE];",
    "            // if we are at eof, could have less than BASE64_CHUNK_SIZE, in which case we have",
    "            // to assume that these last few tokens are, in fact, valid (i.e. must be 2-4 b64",
    "            // tokens, not 1, since 1 token can't decode to 1 byte).",
    "            let to_decode = cmp::min(self.b64_len, BASE64_CHUNK_SIZE);",
    "",
    "            let decoded = self.decode_to_buf(to_decode, &mut decoded_chunk[..])?;",
    "            self.decoded_chunk_buffer[..decoded].copy_from_slice(&decoded_chunk[..decoded]);",
    "",
    "            self.decoded_offset = 0;",
    "            self.decoded_len = decoded;",
    "",
    "            // can be less than 3 on last block due to padding",
    "            debug_assert!(decoded <= 3);",
    "",
    "            self.flush_decoded_buf(buf)",
    "        } else {",
    "            let b64_bytes_that_can_decode_into_buf = (buf.len() / DECODED_CHUNK_SIZE)",
    "                .checked_mul(BASE64_CHUNK_SIZE)",
    "                .expect(\"too many chunks\");",
    "            debug_assert!(b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE);",
    "",
    "            let b64_bytes_available_to_decode = if at_eof {",
    "                self.b64_len",
    "            } else {",
    "                // only use complete chunks",
    "                self.b64_len - self.b64_len % 4",
    "            };",
    "",
    "            let actual_decode_len = cmp::min(",
    "                b64_bytes_that_can_decode_into_buf,",
    "                b64_bytes_available_to_decode,",
    "            );",
    "            self.decode_to_buf(actual_decode_len, buf)",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 241,
    "contra": 136,
    "min_set": 20
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "true",
          "line": 233,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        2,
        127
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "true",
          "line": 259,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        42,
        43,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Err/None",
          "line": 271,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        53,
        55,
        56,
        124,
        125,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 50,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 51,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 52,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 53,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 54,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 55,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 56,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 57,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 58,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "false",
          "line": 257,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        39,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 59,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "false",
          "line": 256,
          "bound": "self.decoded_len == DECODED_CHUNK_SIZE"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        33,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 60,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "false",
          "line": 246,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        24,
        26,
        28,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 61,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "true",
          "line": 259,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        42,
        43,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 62,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Err/None",
          "line": 271,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        53,
        55,
        56,
        124,
        125,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 63,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 64,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 65,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 66,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 67,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 68,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 69,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 70,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 71,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 72,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 73,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 74,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 75,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 76,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 77,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 78,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 79,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 80,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 81,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 82,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 83,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 84,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 85,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 86,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 87,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 88,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 89,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 90,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 91,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 92,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 93,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 94,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 95,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 96,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 97,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 98,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 99,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 100,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 101,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 102,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 103,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 104,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 105,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 106,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 107,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 108,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 109,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 110,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 111,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 112,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 113,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 114,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 115,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 116,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 117,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "false",
          "line": 257,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        39,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 118,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "false",
          "line": 256,
          "bound": "self.decoded_len == DECODED_CHUNK_SIZE"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        33,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 119,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "false",
          "line": 246,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        19,
        22,
        23,
        25,
        26,
        28,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 120,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "true",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "false",
          "line": 240,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        16,
        18,
        20,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 121,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "true",
          "line": 259,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        42,
        43,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 122,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Err/None",
          "line": 271,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        53,
        55,
        56,
        124,
        125,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 123,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 124,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 125,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 126,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 127,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 128,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 129,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 130,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 131,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 132,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 133,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 134,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 135,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 136,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 137,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 138,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 139,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 140,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 141,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 142,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 143,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 144,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 145,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 146,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 147,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 148,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 149,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 150,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 151,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 152,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 153,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 154,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 155,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 156,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 157,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 158,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 159,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 160,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 161,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 162,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 163,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 164,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 165,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 166,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 167,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 168,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 169,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 170,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 171,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 172,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 173,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 174,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 175,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 176,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 177,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "false",
          "line": 257,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        39,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 178,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "false",
          "line": 256,
          "bound": "self.decoded_len == DECODED_CHUNK_SIZE"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        27,
        30,
        31,
        33,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 179,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "false",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "false",
          "line": 246,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        24,
        26,
        28,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 180,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "true",
          "line": 259,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        42,
        43,
        121,
        127
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 181,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Err/None",
          "line": 271,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        53,
        55,
        56,
        124,
        125,
        126,
        127
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 182,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 183,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 184,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 185,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 186,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 187,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 188,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 189,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 190,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 191,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 192,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 193,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 194,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 195,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 196,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 197,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 198,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 199,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "false",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        58,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 200,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 201,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 202,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 203,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 204,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 205,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 206,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 207,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 208,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 209,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 210,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 211,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 212,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 213,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 214,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 215,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 216,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 217,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "true",
          "line": 264,
          "bound": null
        },
        {
          "cond": "self.read_from_delegate()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 271,
          "bound": null
        },
        {
          "cond": "read == 0",
          "norm": "0 == read",
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        57,
        59,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 218,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        }
      ],
      "ret": "Ok(0)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        62,
        63,
        65,
        67,
        126,
        127
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 219,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        62,
        63,
        64,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 220,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 221,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 222,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 223,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 224,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 225,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 226,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 227,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        71,
        73,
        75,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 228,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Err/None",
          "line": 304,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        91,
        92,
        122,
        123,
        126,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 229,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "true",
          "line": 311,
          "bound": "decoded == 3"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        98,
        101,
        102,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 230,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "true",
          "line": 295,
          "bound": null
        },
        {
          "cond": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?",
          "norm": null,
          "value": "Ok/Some",
          "line": 304,
          "bound": null
        },
        {
          "cond": "decoded <= 3",
          "norm": "3 >= decoded",
          "value": "false",
          "line": 311,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        90,
        93,
        94,
        95,
        96,
        97,
        99,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 231,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        113,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 232,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "true",
          "line": 318,
          "bound": "b64_bytes_that_can_decode_into_buf == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        127
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 233,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "buf.len() < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > buf.len()",
          "value": "false",
          "line": 295,
          "bound": "buf.len() == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE <= b64_bytes_that_can_decode_into_buf",
          "value": "false",
          "line": 318,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        78,
        81,
        82,
        103,
        104,
        105,
        106,
        107,
        108,
        110,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 234,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "true",
          "line": 285,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        74,
        76,
        77,
        79,
        136
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 235,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "true",
          "line": 257,
          "bound": "self.decoded_len + self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len > 0",
          "norm": "0 < self.decoded_len",
          "value": "false",
          "line": 259,
          "bound": "self.decoded_len == 0"
        },
        {
          "cond": "self.b64_len < BASE64_CHUNK_SIZE",
          "norm": "BASE64_CHUNK_SIZE > self.b64_len",
          "value": "false",
          "line": 264,
          "bound": "self.b64_len == BASE64_CHUNK_SIZE"
        },
        {
          "cond": "self.b64_len == 0",
          "norm": "0 == self.b64_len",
          "value": "true",
          "line": 279,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "at_eof",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        44,
        45,
        46,
        60,
        61,
        68,
        69,
        72,
        73,
        75,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 236,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "true",
          "line": 256,
          "bound": null
        },
        {
          "cond": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_len + self.decoded_offset",
          "value": "false",
          "line": 257,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        32,
        35,
        36,
        37,
        39,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 237,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "true",
          "line": 246,
          "bound": "self.decoded_offset == DECODED_CHUNK_SIZE"
        },
        {
          "cond": "self.decoded_len < DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE > self.decoded_len",
          "value": "false",
          "line": 256,
          "bound": "self.decoded_len == DECODED_CHUNK_SIZE"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        27,
        30,
        31,
        33,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 238,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "true",
          "line": 240,
          "bound": "self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.decoded_len == 0",
          "norm": "0 == self.decoded_len",
          "value": "true",
          "line": 246,
          "bound": null
        },
        {
          "cond": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "norm": "DECODED_CHUNK_SIZE >= self.decoded_offset",
          "value": "false",
          "line": 246,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        19,
        22,
        23,
        25,
        26,
        28,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 239,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "true",
          "line": 239,
          "bound": "self.b64_offset + self.b64_len == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset == BUF_SIZE",
          "norm": "BUF_SIZE == self.b64_offset",
          "value": "false",
          "line": 240,
          "bound": null
        },
        {
          "cond": "self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_len",
          "value": "false",
          "line": 240,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        11,
        14,
        15,
        17,
        18,
        20,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 240,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "true",
          "line": 238,
          "bound": "self.b64_offset == BUF_SIZE"
        },
        {
          "cond": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset + self.b64_len",
          "value": "false",
          "line": 239,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        9,
        10,
        12,
        136
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 241,
      "conds": [
        {
          "cond": "buf.is_empty()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        },
        {
          "cond": "self.b64_offset <= BUF_SIZE",
          "norm": "BUF_SIZE >= self.b64_offset",
          "value": "false",
          "line": 238,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        7,
        136
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}