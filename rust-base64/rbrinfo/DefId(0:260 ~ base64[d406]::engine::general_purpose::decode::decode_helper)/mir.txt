bb0
  0: StorageLive(_7)
    SourceInfo(src/engine/general_purpose/decode.rs:43:9-43:45)
  1: StorageLive(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
  2: StorageLive(_9)
    SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:76)
  3: StorageLive(_10)
    SourceInfo(src/engine/general_purpose/decode.rs:44:28-44:33)
  4: _10 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:44:28-44:33)
  5: StorageLive(_11)
    SourceInfo(src/engine/general_purpose/decode.rs:44:35-44:47)
  6: _11 = ((*_2).0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:44:35-44:47)
  7: StorageLive(_12)
    SourceInfo(src/engine/general_purpose/decode.rs:44:49-44:61)
  8: StorageLive(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:44:49-44:55)
  9: _13 = &(*_3)
    SourceInfo(src/engine/general_purpose/decode.rs:44:49-44:55)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:44:49-44:61)
      kind: _12 = core::slice::<impl [u8]>::len(move _13) -> [return: bb1, unwind: bb100]
  }
  preds []
  succs [bb1, bb100]

bb1
  0: StorageDead(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:44:60-44:61)
  1: StorageLive(_14)
    SourceInfo(src/engine/general_purpose/decode.rs:44:63-44:75)
  2: _14 = &(*_4)
    SourceInfo(src/engine/general_purpose/decode.rs:44:63-44:75)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:76)
      kind: _9 = engine::general_purpose::decode::complete_quads_len(move _10, move _11, move _12, move _14) -> [return: bb2, unwind: bb100]
  }
  preds [bb0]
  succs [bb2, bb100]

bb2
  0: StorageDead(_14)
    SourceInfo(src/engine/general_purpose/decode.rs:44:75-44:76)
  1: StorageDead(_12)
    SourceInfo(src/engine/general_purpose/decode.rs:44:75-44:76)
  2: StorageDead(_11)
    SourceInfo(src/engine/general_purpose/decode.rs:44:75-44:76)
  3: StorageDead(_10)
    SourceInfo(src/engine/general_purpose/decode.rs:44:75-44:76)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
      kind: _8 = <std::result::Result<usize, decode::DecodeSliceError> as std::ops::Try>::branch(move _9) -> [return: bb3, unwind: bb100]
  }
  preds [bb1]
  succs [bb3, bb100]

bb3
  0: StorageDead(_9)
    SourceInfo(src/engine/general_purpose/decode.rs:44:76-44:77)
  1: PlaceMention(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
  2: _15 = discriminant(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
      kind: switchInt(move _15) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:44:76-44:77)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_19)
    SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
  1: _19 = ((_8 as Continue).0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
  2: _7 = _19
    SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
  3: StorageDead(_19)
    SourceInfo(src/engine/general_purpose/decode.rs:44:76-44:77)
  4: FakeRead(ForLet(None), _7)
    SourceInfo(src/engine/general_purpose/decode.rs:43:9-43:45)
  5: StorageDead(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:44:77-44:78)
  6: StorageLive(_20)
    SourceInfo(src/engine/general_purpose/decode.rs:49:9-49:55)
  7: StorageLive(_21)
    SourceInfo(src/engine/general_purpose/decode.rs:50:9-50:45)
  8: _21 = _7
    SourceInfo(src/engine/general_purpose/decode.rs:50:9-50:45)
  9: _22 = Eq(const engine::general_purpose::decode::decode_helper::UNROLLED_INPUT_CHUNK_SIZE, const 0_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:50:9-50:73)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:50:9-50:73)
      kind: assert(!move _22, "attempt to calculate the remainder of `{}` with a divisor of zero", _21) -> [success: bb9, unwind: bb100]
  }
  preds [bb3, bb5]
  succs [bb9, bb100]

bb7
  0: StorageLive(_16)
    SourceInfo(src/engine/general_purpose/decode.rs:44:76-44:77)
  1: _16 = move ((_8 as Break).0: std::result::Result<std::convert::Infallible, decode::DecodeSliceError>)
    SourceInfo(src/engine/general_purpose/decode.rs:44:76-44:77)
  2: StorageLive(_18)
    SourceInfo(src/engine/general_purpose/decode.rs:44:76-44:77)
  3: _18 = move _16
    SourceInfo(src/engine/general_purpose/decode.rs:44:76-44:77)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:44:9-44:77)
      kind: _0 = <std::result::Result<engine::DecodeMetadata, decode::DecodeSliceError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, decode::DecodeSliceError>>>::from_residual(move _18) -> [return: bb8, unwind: bb100]
  }
  preds [bb5]
  succs [bb8, bb100]

bb8
  0: StorageDead(_18)
    SourceInfo(src/engine/general_purpose/decode.rs:44:76-44:77)
  1: StorageDead(_16)
    SourceInfo(src/engine/general_purpose/decode.rs:44:76-44:77)
  2: StorageDead(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:44:77-44:78)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb98
  }
  preds [bb7]
  succs [bb98]

bb9
  0: _20 = Rem(move _21, const engine::general_purpose::decode::decode_helper::UNROLLED_INPUT_CHUNK_SIZE)
    SourceInfo(src/engine/general_purpose/decode.rs:50:9-50:73)
  1: StorageDead(_21)
    SourceInfo(src/engine/general_purpose/decode.rs:50:72-50:73)
  2: FakeRead(ForLet(None), _20)
    SourceInfo(src/engine/general_purpose/decode.rs:49:9-49:55)
  3: StorageLive(_23)
    SourceInfo(src/engine/general_purpose/decode.rs:52:9-52:32)
  4: StorageLive(_24)
    SourceInfo(src/engine/general_purpose/decode.rs:53:9-53:45)
  5: _24 = _7
    SourceInfo(src/engine/general_purpose/decode.rs:53:9-53:45)
  6: StorageLive(_25)
    SourceInfo(src/engine/general_purpose/decode.rs:53:48-53:94)
  7: _25 = _20
    SourceInfo(src/engine/general_purpose/decode.rs:53:48-53:94)
  8: _26 = SubWithOverflow(_24, _25)
    SourceInfo(src/engine/general_purpose/decode.rs:53:9-53:94)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:53:9-53:94)
      kind: assert(!move (_26.1: bool), "attempt to compute `{} - {}`, which would overflow", move _24, move _25) -> [success: bb10, unwind: bb100]
  }
  preds [bb6]
  succs [bb10, bb100]

bb10
  0: _23 = move (_26.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:53:9-53:94)
  1: StorageDead(_25)
    SourceInfo(src/engine/general_purpose/decode.rs:53:93-53:94)
  2: StorageDead(_24)
    SourceInfo(src/engine/general_purpose/decode.rs:53:93-53:94)
  3: FakeRead(ForLet(None), _23)
    SourceInfo(src/engine/general_purpose/decode.rs:52:9-52:32)
  4: StorageLive(_27)
    SourceInfo(src/engine/general_purpose/decode.rs:56:5-88:6)
  5: StorageLive(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  6: StorageLive(_29)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  7: StorageLive(_30)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-57:49)
  8: StorageLive(_31)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-56:65)
  9: StorageLive(_32)
    SourceInfo(src/engine/general_purpose/decode.rs:56:38-56:65)
  10: StorageLive(_33)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-56:38)
  11: _33 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-56:38)
  12: StorageLive(_34)
    SourceInfo(src/engine/general_purpose/decode.rs:56:39-56:64)
  13: StorageLive(_35)
    SourceInfo(src/engine/general_purpose/decode.rs:56:41-56:64)
  14: _35 = _23
    SourceInfo(src/engine/general_purpose/decode.rs:56:41-56:64)
  15: _34 = std::ops::RangeTo::<usize> { end: move _35 }
    SourceInfo(src/engine/general_purpose/decode.rs:56:39-56:64)
  16: StorageDead(_35)
    SourceInfo(src/engine/general_purpose/decode.rs:56:63-56:64)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:38-56:65)
      kind: _32 = <[u8] as std::ops::Index<std::ops::RangeTo<usize>>>::index(move _33, move _34) -> [return: bb11, unwind: bb100]
  }
  preds [bb9]
  succs [bb11, bb100]

bb11
  0: _31 = &(*_32)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-56:65)
  1: StorageDead(_34)
    SourceInfo(src/engine/general_purpose/decode.rs:56:64-56:65)
  2: StorageDead(_33)
    SourceInfo(src/engine/general_purpose/decode.rs:56:64-56:65)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:33-57:49)
      kind: _30 = core::slice::<impl [u8]>::chunks_exact(move _31, const engine::general_purpose::decode::decode_helper::UNROLLED_INPUT_CHUNK_SIZE) -> [return: bb12, unwind: bb100]
  }
  preds [bb10]
  succs [bb12, bb100]

bb12
  0: StorageDead(_31)
    SourceInfo(src/engine/general_purpose/decode.rs:57:48-57:49)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
      kind: _29 = <std::slice::ChunksExact<'_, u8> as std::iter::Iterator>::enumerate(move _30) -> [return: bb13, unwind: bb100]
  }
  preds [bb11]
  succs [bb13, bb100]

bb13
  0: StorageDead(_30)
    SourceInfo(src/engine/general_purpose/decode.rs:58:20-58:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
      kind: _28 = <std::iter::Enumerate<std::slice::ChunksExact<'_, u8>> as std::iter::IntoIterator>::into_iter(move _29) -> [return: bb14, unwind: bb100]
  }
  preds [bb12]
  succs [bb14, bb100]

bb14
  0: StorageDead(_29)
    SourceInfo(src/engine/general_purpose/decode.rs:58:20-58:21)
  1: PlaceMention(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  2: StorageLive(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  3: _36 = move _28
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:5-88:6)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:5-88:6)
      kind: falseUnwind -> [real: bb16, unwind: bb100]
  }
  preds [bb14, bb63]
  succs [bb16, bb100]

bb16
  0: StorageLive(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  1: StorageLive(_39)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  2: StorageLive(_40)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  3: StorageLive(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  4: _41 = &mut _36
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  5: _40 = &mut (*_41)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
      kind: _39 = <std::iter::Enumerate<std::slice::ChunksExact<'_, u8>> as std::iter::Iterator>::next(move _40) -> [return: bb17, unwind: bb100]
  }
  preds [bb15]
  succs [bb17, bb100]

bb17
  0: StorageDead(_40)
    SourceInfo(src/engine/general_purpose/decode.rs:58:20-58:21)
  1: PlaceMention(_39)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  2: _42 = discriminant(_39)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
      kind: switchInt(move _42) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _39)
    SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:33-58:21)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:5-88:6)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_44)
    SourceInfo(src/engine/general_purpose/decode.rs:56:10-56:21)
  1: _44 = (((_39 as Some).0: (usize, &[u8])).0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:56:10-56:21)
  2: StorageLive(_45)
    SourceInfo(src/engine/general_purpose/decode.rs:56:23-56:28)
  3: _45 = (((_39 as Some).0: (usize, &[u8])).1: &[u8])
    SourceInfo(src/engine/general_purpose/decode.rs:56:23-56:28)
  4: StorageLive(_46)
    SourceInfo(src/engine/general_purpose/decode.rs:60:13-60:24)
  5: StorageLive(_47)
    SourceInfo(src/engine/general_purpose/decode.rs:60:27-60:38)
  6: _47 = _44
    SourceInfo(src/engine/general_purpose/decode.rs:60:27-60:38)
  7: _48 = MulWithOverflow(_47, const engine::general_purpose::decode::decode_helper::UNROLLED_INPUT_CHUNK_SIZE)
    SourceInfo(src/engine/general_purpose/decode.rs:60:27-60:66)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:60:27-60:66)
      kind: assert(!move (_48.1: bool), "attempt to compute `{} * {}`, which would overflow", move _47, const engine::general_purpose::decode::decode_helper::UNROLLED_INPUT_CHUNK_SIZE) -> [success: bb22, unwind: bb100]
  }
  preds [bb17, bb19]
  succs [bb22, bb100]

bb21
  0: _27 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:56:5-88:6)
  1: StorageDead(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  2: StorageDead(_39)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  3: StorageDead(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  4: StorageDead(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  5: StorageDead(_32)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  6: StorageDead(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  7: StorageDead(_27)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  8: StorageLive(_147)
    SourceInfo(src/engine/general_purpose/decode.rs:91:9-91:33)
  9: StorageLive(_148)
    SourceInfo(src/engine/general_purpose/decode.rs:91:36-91:63)
  10: StorageLive(_149)
    SourceInfo(src/engine/general_purpose/decode.rs:91:36-91:59)
  11: _149 = _23
    SourceInfo(src/engine/general_purpose/decode.rs:91:36-91:59)
  12: _150 = Eq(const 4_usize, const 0_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:91:36-91:63)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:91:36-91:63)
      kind: assert(!move _150, "attempt to divide `{}` by zero", _149) -> [success: bb66, unwind: bb100]
  }
  preds [bb19]
  succs [bb66, bb100]

bb22
  0: _46 = move (_48.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:60:27-60:66)
  1: StorageDead(_47)
    SourceInfo(src/engine/general_purpose/decode.rs:60:65-60:66)
  2: FakeRead(ForLet(None), _46)
    SourceInfo(src/engine/general_purpose/decode.rs:60:13-60:24)
  3: StorageLive(_49)
    SourceInfo(src/engine/general_purpose/decode.rs:61:13-61:25)
  4: StorageLive(_50)
    SourceInfo(src/engine/general_purpose/decode.rs:61:39-62:62)
  5: StorageLive(_51)
    SourceInfo(src/engine/general_purpose/decode.rs:61:33-61:39)
  6: _51 = &mut (*_3)
    SourceInfo(src/engine/general_purpose/decode.rs:61:33-61:39)
  7: StorageLive(_52)
    SourceInfo(src/engine/general_purpose/decode.rs:61:40-62:61)
  8: StorageLive(_53)
    SourceInfo(src/engine/general_purpose/decode.rs:61:40-61:80)
  9: StorageLive(_54)
    SourceInfo(src/engine/general_purpose/decode.rs:61:40-61:51)
  10: _54 = _44
    SourceInfo(src/engine/general_purpose/decode.rs:61:40-61:51)
  11: _55 = MulWithOverflow(_54, const engine::general_purpose::decode::decode_helper::UNROLLED_OUTPUT_CHUNK_SIZE)
    SourceInfo(src/engine/general_purpose/decode.rs:61:40-61:80)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:61:40-61:80)
      kind: assert(!move (_55.1: bool), "attempt to compute `{} * {}`, which would overflow", move _54, const engine::general_purpose::decode::decode_helper::UNROLLED_OUTPUT_CHUNK_SIZE) -> [success: bb23, unwind: bb100]
  }
  preds [bb20]
  succs [bb23, bb100]

bb23
  0: _53 = move (_55.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:61:40-61:80)
  1: StorageDead(_54)
    SourceInfo(src/engine/general_purpose/decode.rs:61:79-61:80)
  2: StorageLive(_56)
    SourceInfo(src/engine/general_purpose/decode.rs:62:15-62:61)
  3: StorageLive(_57)
    SourceInfo(src/engine/general_purpose/decode.rs:62:15-62:32)
  4: StorageLive(_58)
    SourceInfo(src/engine/general_purpose/decode.rs:62:16-62:27)
  5: _58 = _44
    SourceInfo(src/engine/general_purpose/decode.rs:62:16-62:27)
  6: _59 = AddWithOverflow(_58, const 1_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:62:15-62:32)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:62:15-62:32)
      kind: assert(!move (_59.1: bool), "attempt to compute `{} + {}`, which would overflow", move _58, const 1_usize) -> [success: bb24, unwind: bb100]
  }
  preds [bb22]
  succs [bb24, bb100]

bb24
  0: _57 = move (_59.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:62:15-62:32)
  1: StorageDead(_58)
    SourceInfo(src/engine/general_purpose/decode.rs:62:31-62:32)
  2: _60 = MulWithOverflow(_57, const engine::general_purpose::decode::decode_helper::UNROLLED_OUTPUT_CHUNK_SIZE)
    SourceInfo(src/engine/general_purpose/decode.rs:62:15-62:61)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:62:15-62:61)
      kind: assert(!move (_60.1: bool), "attempt to compute `{} * {}`, which would overflow", move _57, const engine::general_purpose::decode::decode_helper::UNROLLED_OUTPUT_CHUNK_SIZE) -> [success: bb25, unwind: bb100]
  }
  preds [bb23]
  succs [bb25, bb100]

bb25
  0: _56 = move (_60.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:62:15-62:61)
  1: StorageDead(_57)
    SourceInfo(src/engine/general_purpose/decode.rs:62:60-62:61)
  2: _52 = std::ops::Range::<usize> { start: move _53, end: move _56 }
    SourceInfo(src/engine/general_purpose/decode.rs:61:40-62:61)
  3: StorageDead(_56)
    SourceInfo(src/engine/general_purpose/decode.rs:62:60-62:61)
  4: StorageDead(_53)
    SourceInfo(src/engine/general_purpose/decode.rs:62:60-62:61)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:61:39-62:62)
      kind: _50 = <[u8] as std::ops::IndexMut<std::ops::Range<usize>>>::index_mut(move _51, move _52) -> [return: bb26, unwind: bb100]
  }
  preds [bb24]
  succs [bb26, bb100]

bb26
  0: StorageDead(_52)
    SourceInfo(src/engine/general_purpose/decode.rs:62:61-62:62)
  1: StorageDead(_51)
    SourceInfo(src/engine/general_purpose/decode.rs:62:61-62:62)
  2: _49 = &mut (*_50)
    SourceInfo(src/engine/general_purpose/decode.rs:61:28-62:62)
  3: FakeRead(ForLet(None), _49)
    SourceInfo(src/engine/general_purpose/decode.rs:61:13-61:25)
  4: StorageLive(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
  5: StorageLive(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
  6: StorageLive(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:10)
  7: StorageLive(_64)
    SourceInfo(src/engine/general_purpose/decode.rs:65:13-65:25)
  8: StorageLive(_65)
    SourceInfo(src/engine/general_purpose/decode.rs:65:13-65:25)
  9: StorageLive(_66)
    SourceInfo(src/engine/general_purpose/decode.rs:65:19-65:25)
  10: StorageLive(_67)
    SourceInfo(src/engine/general_purpose/decode.rs:65:14-65:19)
  11: _67 = &(*_45)
    SourceInfo(src/engine/general_purpose/decode.rs:65:14-65:19)
  12: StorageLive(_68)
    SourceInfo(src/engine/general_purpose/decode.rs:65:20-65:24)
  13: _68 = std::ops::Range::<usize> { start: const 0_usize, end: const 8_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:65:20-65:24)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:65:19-65:25)
      kind: _66 = <[u8] as std::ops::Index<std::ops::Range<usize>>>::index(move _67, move _68) -> [return: bb27, unwind: bb100]
  }
  preds [bb25]
  succs [bb27, bb100]

bb27
  0: StorageDead(_68)
    SourceInfo(src/engine/general_purpose/decode.rs:65:24-65:25)
  1: StorageDead(_67)
    SourceInfo(src/engine/general_purpose/decode.rs:65:24-65:25)
  2: _65 = &(*_66)
    SourceInfo(src/engine/general_purpose/decode.rs:65:13-65:25)
  3: _64 = &(*_65)
    SourceInfo(src/engine/general_purpose/decode.rs:65:13-65:25)
  4: StorageLive(_69)
    SourceInfo(src/engine/general_purpose/decode.rs:66:13-66:24)
  5: _69 = _46
    SourceInfo(src/engine/general_purpose/decode.rs:66:13-66:24)
  6: StorageLive(_70)
    SourceInfo(src/engine/general_purpose/decode.rs:67:13-67:25)
  7: _70 = &(*_4)
    SourceInfo(src/engine/general_purpose/decode.rs:67:13-67:25)
  8: StorageLive(_71)
    SourceInfo(src/engine/general_purpose/decode.rs:68:13-68:36)
  9: StorageLive(_72)
    SourceInfo(src/engine/general_purpose/decode.rs:68:13-68:36)
  10: StorageLive(_73)
    SourceInfo(src/engine/general_purpose/decode.rs:68:30-68:36)
  11: StorageLive(_74)
    SourceInfo(src/engine/general_purpose/decode.rs:68:18-68:30)
  12: _74 = &mut (*_49)
    SourceInfo(src/engine/general_purpose/decode.rs:68:18-68:30)
  13: StorageLive(_75)
    SourceInfo(src/engine/general_purpose/decode.rs:68:31-68:35)
  14: _75 = std::ops::Range::<usize> { start: const 0_usize, end: const 6_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:68:31-68:35)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:68:30-68:36)
      kind: _73 = <[u8] as std::ops::IndexMut<std::ops::Range<usize>>>::index_mut(move _74, move _75) -> [return: bb28, unwind: bb100]
  }
  preds [bb26]
  succs [bb28, bb100]

bb28
  0: StorageDead(_75)
    SourceInfo(src/engine/general_purpose/decode.rs:68:35-68:36)
  1: StorageDead(_74)
    SourceInfo(src/engine/general_purpose/decode.rs:68:35-68:36)
  2: _72 = &mut (*_73)
    SourceInfo(src/engine/general_purpose/decode.rs:68:13-68:36)
  3: _71 = &mut (*_72)
    SourceInfo(src/engine/general_purpose/decode.rs:68:13-68:36)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:10)
      kind: _63 = engine::general_purpose::decode::decode_chunk_8(move _64, move _69, move _70, move _71) -> [return: bb29, unwind: bb100]
  }
  preds [bb27]
  succs [bb29, bb100]

bb29
  0: StorageDead(_71)
    SourceInfo(src/engine/general_purpose/decode.rs:69:9-69:10)
  1: StorageDead(_70)
    SourceInfo(src/engine/general_purpose/decode.rs:69:9-69:10)
  2: StorageDead(_69)
    SourceInfo(src/engine/general_purpose/decode.rs:69:9-69:10)
  3: StorageDead(_64)
    SourceInfo(src/engine/general_purpose/decode.rs:69:9-69:10)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
      kind: _62 = <std::result::Result<(), decode::DecodeError> as std::ops::Try>::branch(move _63) -> [return: bb30, unwind: bb100]
  }
  preds [bb28]
  succs [bb30, bb100]

bb30
  0: StorageDead(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:69:10-69:11)
  1: PlaceMention(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
  2: _76 = discriminant(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
      kind: switchInt(move _76) -> [0: bb33, 1: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32, bb33]

bb31
  0: FakeRead(ForMatchedPlace(None), _62)
    SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
      kind: unreachable
  }
  preds [bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:69:10-69:11)
      kind: falseEdge -> [real: bb34, imaginary: bb33]
  }
  preds [bb30]
  succs [bb33, bb34]

bb33
  0: StorageLive(_80)
    SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
  1: _80 = ((_62 as Continue).0: ())
    SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
  2: _61 = _80
    SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
  3: StorageDead(_80)
    SourceInfo(src/engine/general_purpose/decode.rs:69:10-69:11)
  4: StorageDead(_73)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  5: StorageDead(_72)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  6: StorageDead(_66)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  7: StorageDead(_65)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  8: StorageDead(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  9: StorageDead(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  10: StorageLive(_81)
    SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
  11: StorageLive(_82)
    SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
  12: StorageLive(_83)
    SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:10)
  13: StorageLive(_84)
    SourceInfo(src/engine/general_purpose/decode.rs:71:13-71:26)
  14: StorageLive(_85)
    SourceInfo(src/engine/general_purpose/decode.rs:71:13-71:26)
  15: StorageLive(_86)
    SourceInfo(src/engine/general_purpose/decode.rs:71:19-71:26)
  16: StorageLive(_87)
    SourceInfo(src/engine/general_purpose/decode.rs:71:14-71:19)
  17: _87 = &(*_45)
    SourceInfo(src/engine/general_purpose/decode.rs:71:14-71:19)
  18: StorageLive(_88)
    SourceInfo(src/engine/general_purpose/decode.rs:71:20-71:25)
  19: _88 = std::ops::Range::<usize> { start: const 8_usize, end: const 16_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:71:20-71:25)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:71:19-71:26)
      kind: _86 = <[u8] as std::ops::Index<std::ops::Range<usize>>>::index(move _87, move _88) -> [return: bb36, unwind: bb100]
  }
  preds [bb30, bb32]
  succs [bb36, bb100]

bb34
  0: StorageLive(_77)
    SourceInfo(src/engine/general_purpose/decode.rs:69:10-69:11)
  1: _77 = move ((_62 as Break).0: std::result::Result<std::convert::Infallible, decode::DecodeError>)
    SourceInfo(src/engine/general_purpose/decode.rs:69:10-69:11)
  2: StorageLive(_79)
    SourceInfo(src/engine/general_purpose/decode.rs:69:10-69:11)
  3: _79 = move _77
    SourceInfo(src/engine/general_purpose/decode.rs:69:10-69:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:64:9-69:11)
      kind: _0 = <std::result::Result<engine::DecodeMetadata, decode::DecodeSliceError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, decode::DecodeError>>>::from_residual(move _79) -> [return: bb35, unwind: bb100]
  }
  preds [bb32]
  succs [bb35, bb100]

bb35
  0: StorageDead(_79)
    SourceInfo(src/engine/general_purpose/decode.rs:69:10-69:11)
  1: StorageDead(_77)
    SourceInfo(src/engine/general_purpose/decode.rs:69:10-69:11)
  2: StorageDead(_73)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  3: StorageDead(_72)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  4: StorageDead(_66)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  5: StorageDead(_65)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  6: StorageDead(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  7: StorageDead(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:69:11-69:12)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb34]
  succs [bb96]

bb36
  0: StorageDead(_88)
    SourceInfo(src/engine/general_purpose/decode.rs:71:25-71:26)
  1: StorageDead(_87)
    SourceInfo(src/engine/general_purpose/decode.rs:71:25-71:26)
  2: _85 = &(*_86)
    SourceInfo(src/engine/general_purpose/decode.rs:71:13-71:26)
  3: _84 = &(*_85)
    SourceInfo(src/engine/general_purpose/decode.rs:71:13-71:26)
  4: StorageLive(_89)
    SourceInfo(src/engine/general_purpose/decode.rs:72:13-72:28)
  5: StorageLive(_90)
    SourceInfo(src/engine/general_purpose/decode.rs:72:13-72:24)
  6: _90 = _46
    SourceInfo(src/engine/general_purpose/decode.rs:72:13-72:24)
  7: _91 = AddWithOverflow(_90, const 8_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:72:13-72:28)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:72:13-72:28)
      kind: assert(!move (_91.1: bool), "attempt to compute `{} + {}`, which would overflow", move _90, const 8_usize) -> [success: bb37, unwind: bb100]
  }
  preds [bb33]
  succs [bb37, bb100]

bb37
  0: _89 = move (_91.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:72:13-72:28)
  1: StorageDead(_90)
    SourceInfo(src/engine/general_purpose/decode.rs:72:27-72:28)
  2: StorageLive(_92)
    SourceInfo(src/engine/general_purpose/decode.rs:73:13-73:25)
  3: _92 = &(*_4)
    SourceInfo(src/engine/general_purpose/decode.rs:73:13-73:25)
  4: StorageLive(_93)
    SourceInfo(src/engine/general_purpose/decode.rs:74:13-74:37)
  5: StorageLive(_94)
    SourceInfo(src/engine/general_purpose/decode.rs:74:13-74:37)
  6: StorageLive(_95)
    SourceInfo(src/engine/general_purpose/decode.rs:74:30-74:37)
  7: StorageLive(_96)
    SourceInfo(src/engine/general_purpose/decode.rs:74:18-74:30)
  8: _96 = &mut (*_49)
    SourceInfo(src/engine/general_purpose/decode.rs:74:18-74:30)
  9: StorageLive(_97)
    SourceInfo(src/engine/general_purpose/decode.rs:74:31-74:36)
  10: _97 = std::ops::Range::<usize> { start: const 6_usize, end: const 12_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:74:31-74:36)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:74:30-74:37)
      kind: _95 = <[u8] as std::ops::IndexMut<std::ops::Range<usize>>>::index_mut(move _96, move _97) -> [return: bb38, unwind: bb100]
  }
  preds [bb36]
  succs [bb38, bb100]

bb38
  0: StorageDead(_97)
    SourceInfo(src/engine/general_purpose/decode.rs:74:36-74:37)
  1: StorageDead(_96)
    SourceInfo(src/engine/general_purpose/decode.rs:74:36-74:37)
  2: _94 = &mut (*_95)
    SourceInfo(src/engine/general_purpose/decode.rs:74:13-74:37)
  3: _93 = &mut (*_94)
    SourceInfo(src/engine/general_purpose/decode.rs:74:13-74:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:10)
      kind: _83 = engine::general_purpose::decode::decode_chunk_8(move _84, move _89, move _92, move _93) -> [return: bb39, unwind: bb100]
  }
  preds [bb37]
  succs [bb39, bb100]

bb39
  0: StorageDead(_93)
    SourceInfo(src/engine/general_purpose/decode.rs:75:9-75:10)
  1: StorageDead(_92)
    SourceInfo(src/engine/general_purpose/decode.rs:75:9-75:10)
  2: StorageDead(_89)
    SourceInfo(src/engine/general_purpose/decode.rs:75:9-75:10)
  3: StorageDead(_84)
    SourceInfo(src/engine/general_purpose/decode.rs:75:9-75:10)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
      kind: _82 = <std::result::Result<(), decode::DecodeError> as std::ops::Try>::branch(move _83) -> [return: bb40, unwind: bb100]
  }
  preds [bb38]
  succs [bb40, bb100]

bb40
  0: StorageDead(_83)
    SourceInfo(src/engine/general_purpose/decode.rs:75:10-75:11)
  1: PlaceMention(_82)
    SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
  2: _98 = discriminant(_82)
    SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
      kind: switchInt(move _98) -> [0: bb43, 1: bb42, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb42, bb43]

bb41
  0: FakeRead(ForMatchedPlace(None), _82)
    SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
      kind: unreachable
  }
  preds [bb40]
  succs []

bb42
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:75:10-75:11)
      kind: falseEdge -> [real: bb44, imaginary: bb43]
  }
  preds [bb40]
  succs [bb43, bb44]

bb43
  0: StorageLive(_102)
    SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
  1: _102 = ((_82 as Continue).0: ())
    SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
  2: _81 = _102
    SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
  3: StorageDead(_102)
    SourceInfo(src/engine/general_purpose/decode.rs:75:10-75:11)
  4: StorageDead(_95)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  5: StorageDead(_94)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  6: StorageDead(_86)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  7: StorageDead(_85)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  8: StorageDead(_82)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  9: StorageDead(_81)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  10: StorageLive(_103)
    SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
  11: StorageLive(_104)
    SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
  12: StorageLive(_105)
    SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:10)
  13: StorageLive(_106)
    SourceInfo(src/engine/general_purpose/decode.rs:77:13-77:27)
  14: StorageLive(_107)
    SourceInfo(src/engine/general_purpose/decode.rs:77:13-77:27)
  15: StorageLive(_108)
    SourceInfo(src/engine/general_purpose/decode.rs:77:19-77:27)
  16: StorageLive(_109)
    SourceInfo(src/engine/general_purpose/decode.rs:77:14-77:19)
  17: _109 = &(*_45)
    SourceInfo(src/engine/general_purpose/decode.rs:77:14-77:19)
  18: StorageLive(_110)
    SourceInfo(src/engine/general_purpose/decode.rs:77:20-77:26)
  19: _110 = std::ops::Range::<usize> { start: const 16_usize, end: const 24_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:77:20-77:26)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:77:19-77:27)
      kind: _108 = <[u8] as std::ops::Index<std::ops::Range<usize>>>::index(move _109, move _110) -> [return: bb46, unwind: bb100]
  }
  preds [bb40, bb42]
  succs [bb46, bb100]

bb44
  0: StorageLive(_99)
    SourceInfo(src/engine/general_purpose/decode.rs:75:10-75:11)
  1: _99 = move ((_82 as Break).0: std::result::Result<std::convert::Infallible, decode::DecodeError>)
    SourceInfo(src/engine/general_purpose/decode.rs:75:10-75:11)
  2: StorageLive(_101)
    SourceInfo(src/engine/general_purpose/decode.rs:75:10-75:11)
  3: _101 = move _99
    SourceInfo(src/engine/general_purpose/decode.rs:75:10-75:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:70:9-75:11)
      kind: _0 = <std::result::Result<engine::DecodeMetadata, decode::DecodeSliceError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, decode::DecodeError>>>::from_residual(move _101) -> [return: bb45, unwind: bb100]
  }
  preds [bb42]
  succs [bb45, bb100]

bb45
  0: StorageDead(_101)
    SourceInfo(src/engine/general_purpose/decode.rs:75:10-75:11)
  1: StorageDead(_99)
    SourceInfo(src/engine/general_purpose/decode.rs:75:10-75:11)
  2: StorageDead(_95)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  3: StorageDead(_94)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  4: StorageDead(_86)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  5: StorageDead(_85)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  6: StorageDead(_82)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  7: StorageDead(_81)
    SourceInfo(src/engine/general_purpose/decode.rs:75:11-75:12)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb44]
  succs [bb96]

bb46
  0: StorageDead(_110)
    SourceInfo(src/engine/general_purpose/decode.rs:77:26-77:27)
  1: StorageDead(_109)
    SourceInfo(src/engine/general_purpose/decode.rs:77:26-77:27)
  2: _107 = &(*_108)
    SourceInfo(src/engine/general_purpose/decode.rs:77:13-77:27)
  3: _106 = &(*_107)
    SourceInfo(src/engine/general_purpose/decode.rs:77:13-77:27)
  4: StorageLive(_111)
    SourceInfo(src/engine/general_purpose/decode.rs:78:13-78:29)
  5: StorageLive(_112)
    SourceInfo(src/engine/general_purpose/decode.rs:78:13-78:24)
  6: _112 = _46
    SourceInfo(src/engine/general_purpose/decode.rs:78:13-78:24)
  7: _113 = AddWithOverflow(_112, const 16_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:78:13-78:29)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:78:13-78:29)
      kind: assert(!move (_113.1: bool), "attempt to compute `{} + {}`, which would overflow", move _112, const 16_usize) -> [success: bb47, unwind: bb100]
  }
  preds [bb43]
  succs [bb47, bb100]

bb47
  0: _111 = move (_113.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:78:13-78:29)
  1: StorageDead(_112)
    SourceInfo(src/engine/general_purpose/decode.rs:78:28-78:29)
  2: StorageLive(_114)
    SourceInfo(src/engine/general_purpose/decode.rs:79:13-79:25)
  3: _114 = &(*_4)
    SourceInfo(src/engine/general_purpose/decode.rs:79:13-79:25)
  4: StorageLive(_115)
    SourceInfo(src/engine/general_purpose/decode.rs:80:13-80:38)
  5: StorageLive(_116)
    SourceInfo(src/engine/general_purpose/decode.rs:80:13-80:38)
  6: StorageLive(_117)
    SourceInfo(src/engine/general_purpose/decode.rs:80:30-80:38)
  7: StorageLive(_118)
    SourceInfo(src/engine/general_purpose/decode.rs:80:18-80:30)
  8: _118 = &mut (*_49)
    SourceInfo(src/engine/general_purpose/decode.rs:80:18-80:30)
  9: StorageLive(_119)
    SourceInfo(src/engine/general_purpose/decode.rs:80:31-80:37)
  10: _119 = std::ops::Range::<usize> { start: const 12_usize, end: const 18_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:80:31-80:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:80:30-80:38)
      kind: _117 = <[u8] as std::ops::IndexMut<std::ops::Range<usize>>>::index_mut(move _118, move _119) -> [return: bb48, unwind: bb100]
  }
  preds [bb46]
  succs [bb48, bb100]

bb48
  0: StorageDead(_119)
    SourceInfo(src/engine/general_purpose/decode.rs:80:37-80:38)
  1: StorageDead(_118)
    SourceInfo(src/engine/general_purpose/decode.rs:80:37-80:38)
  2: _116 = &mut (*_117)
    SourceInfo(src/engine/general_purpose/decode.rs:80:13-80:38)
  3: _115 = &mut (*_116)
    SourceInfo(src/engine/general_purpose/decode.rs:80:13-80:38)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:10)
      kind: _105 = engine::general_purpose::decode::decode_chunk_8(move _106, move _111, move _114, move _115) -> [return: bb49, unwind: bb100]
  }
  preds [bb47]
  succs [bb49, bb100]

bb49
  0: StorageDead(_115)
    SourceInfo(src/engine/general_purpose/decode.rs:81:9-81:10)
  1: StorageDead(_114)
    SourceInfo(src/engine/general_purpose/decode.rs:81:9-81:10)
  2: StorageDead(_111)
    SourceInfo(src/engine/general_purpose/decode.rs:81:9-81:10)
  3: StorageDead(_106)
    SourceInfo(src/engine/general_purpose/decode.rs:81:9-81:10)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
      kind: _104 = <std::result::Result<(), decode::DecodeError> as std::ops::Try>::branch(move _105) -> [return: bb50, unwind: bb100]
  }
  preds [bb48]
  succs [bb50, bb100]

bb50
  0: StorageDead(_105)
    SourceInfo(src/engine/general_purpose/decode.rs:81:10-81:11)
  1: PlaceMention(_104)
    SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
  2: _120 = discriminant(_104)
    SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
      kind: switchInt(move _120) -> [0: bb53, 1: bb52, otherwise: bb51]
  }
  preds [bb49]
  succs [bb51, bb52, bb53]

bb51
  0: FakeRead(ForMatchedPlace(None), _104)
    SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
      kind: unreachable
  }
  preds [bb50]
  succs []

bb52
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:81:10-81:11)
      kind: falseEdge -> [real: bb54, imaginary: bb53]
  }
  preds [bb50]
  succs [bb53, bb54]

bb53
  0: StorageLive(_124)
    SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
  1: _124 = ((_104 as Continue).0: ())
    SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
  2: _103 = _124
    SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
  3: StorageDead(_124)
    SourceInfo(src/engine/general_purpose/decode.rs:81:10-81:11)
  4: StorageDead(_117)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  5: StorageDead(_116)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  6: StorageDead(_108)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  7: StorageDead(_107)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  8: StorageDead(_104)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  9: StorageDead(_103)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  10: StorageLive(_125)
    SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
  11: StorageLive(_126)
    SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
  12: StorageLive(_127)
    SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:10)
  13: StorageLive(_128)
    SourceInfo(src/engine/general_purpose/decode.rs:83:13-83:27)
  14: StorageLive(_129)
    SourceInfo(src/engine/general_purpose/decode.rs:83:13-83:27)
  15: StorageLive(_130)
    SourceInfo(src/engine/general_purpose/decode.rs:83:19-83:27)
  16: StorageLive(_131)
    SourceInfo(src/engine/general_purpose/decode.rs:83:14-83:19)
  17: _131 = &(*_45)
    SourceInfo(src/engine/general_purpose/decode.rs:83:14-83:19)
  18: StorageLive(_132)
    SourceInfo(src/engine/general_purpose/decode.rs:83:20-83:26)
  19: _132 = std::ops::Range::<usize> { start: const 24_usize, end: const 32_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:83:20-83:26)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:83:19-83:27)
      kind: _130 = <[u8] as std::ops::Index<std::ops::Range<usize>>>::index(move _131, move _132) -> [return: bb56, unwind: bb100]
  }
  preds [bb50, bb52]
  succs [bb56, bb100]

bb54
  0: StorageLive(_121)
    SourceInfo(src/engine/general_purpose/decode.rs:81:10-81:11)
  1: _121 = move ((_104 as Break).0: std::result::Result<std::convert::Infallible, decode::DecodeError>)
    SourceInfo(src/engine/general_purpose/decode.rs:81:10-81:11)
  2: StorageLive(_123)
    SourceInfo(src/engine/general_purpose/decode.rs:81:10-81:11)
  3: _123 = move _121
    SourceInfo(src/engine/general_purpose/decode.rs:81:10-81:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:76:9-81:11)
      kind: _0 = <std::result::Result<engine::DecodeMetadata, decode::DecodeSliceError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, decode::DecodeError>>>::from_residual(move _123) -> [return: bb55, unwind: bb100]
  }
  preds [bb52]
  succs [bb55, bb100]

bb55
  0: StorageDead(_123)
    SourceInfo(src/engine/general_purpose/decode.rs:81:10-81:11)
  1: StorageDead(_121)
    SourceInfo(src/engine/general_purpose/decode.rs:81:10-81:11)
  2: StorageDead(_117)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  3: StorageDead(_116)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  4: StorageDead(_108)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  5: StorageDead(_107)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  6: StorageDead(_104)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  7: StorageDead(_103)
    SourceInfo(src/engine/general_purpose/decode.rs:81:11-81:12)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb54]
  succs [bb96]

bb56
  0: StorageDead(_132)
    SourceInfo(src/engine/general_purpose/decode.rs:83:26-83:27)
  1: StorageDead(_131)
    SourceInfo(src/engine/general_purpose/decode.rs:83:26-83:27)
  2: _129 = &(*_130)
    SourceInfo(src/engine/general_purpose/decode.rs:83:13-83:27)
  3: _128 = &(*_129)
    SourceInfo(src/engine/general_purpose/decode.rs:83:13-83:27)
  4: StorageLive(_133)
    SourceInfo(src/engine/general_purpose/decode.rs:84:13-84:29)
  5: StorageLive(_134)
    SourceInfo(src/engine/general_purpose/decode.rs:84:13-84:24)
  6: _134 = _46
    SourceInfo(src/engine/general_purpose/decode.rs:84:13-84:24)
  7: _135 = AddWithOverflow(_134, const 24_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:84:13-84:29)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:84:13-84:29)
      kind: assert(!move (_135.1: bool), "attempt to compute `{} + {}`, which would overflow", move _134, const 24_usize) -> [success: bb57, unwind: bb100]
  }
  preds [bb53]
  succs [bb57, bb100]

bb57
  0: _133 = move (_135.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:84:13-84:29)
  1: StorageDead(_134)
    SourceInfo(src/engine/general_purpose/decode.rs:84:28-84:29)
  2: StorageLive(_136)
    SourceInfo(src/engine/general_purpose/decode.rs:85:13-85:25)
  3: _136 = &(*_4)
    SourceInfo(src/engine/general_purpose/decode.rs:85:13-85:25)
  4: StorageLive(_137)
    SourceInfo(src/engine/general_purpose/decode.rs:86:13-86:38)
  5: StorageLive(_138)
    SourceInfo(src/engine/general_purpose/decode.rs:86:13-86:38)
  6: StorageLive(_139)
    SourceInfo(src/engine/general_purpose/decode.rs:86:30-86:38)
  7: StorageLive(_140)
    SourceInfo(src/engine/general_purpose/decode.rs:86:18-86:30)
  8: _140 = &mut (*_49)
    SourceInfo(src/engine/general_purpose/decode.rs:86:18-86:30)
  9: StorageLive(_141)
    SourceInfo(src/engine/general_purpose/decode.rs:86:31-86:37)
  10: _141 = std::ops::Range::<usize> { start: const 18_usize, end: const 24_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:86:31-86:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:86:30-86:38)
      kind: _139 = <[u8] as std::ops::IndexMut<std::ops::Range<usize>>>::index_mut(move _140, move _141) -> [return: bb58, unwind: bb100]
  }
  preds [bb56]
  succs [bb58, bb100]

bb58
  0: StorageDead(_141)
    SourceInfo(src/engine/general_purpose/decode.rs:86:37-86:38)
  1: StorageDead(_140)
    SourceInfo(src/engine/general_purpose/decode.rs:86:37-86:38)
  2: _138 = &mut (*_139)
    SourceInfo(src/engine/general_purpose/decode.rs:86:13-86:38)
  3: _137 = &mut (*_138)
    SourceInfo(src/engine/general_purpose/decode.rs:86:13-86:38)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:10)
      kind: _127 = engine::general_purpose::decode::decode_chunk_8(move _128, move _133, move _136, move _137) -> [return: bb59, unwind: bb100]
  }
  preds [bb57]
  succs [bb59, bb100]

bb59
  0: StorageDead(_137)
    SourceInfo(src/engine/general_purpose/decode.rs:87:9-87:10)
  1: StorageDead(_136)
    SourceInfo(src/engine/general_purpose/decode.rs:87:9-87:10)
  2: StorageDead(_133)
    SourceInfo(src/engine/general_purpose/decode.rs:87:9-87:10)
  3: StorageDead(_128)
    SourceInfo(src/engine/general_purpose/decode.rs:87:9-87:10)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
      kind: _126 = <std::result::Result<(), decode::DecodeError> as std::ops::Try>::branch(move _127) -> [return: bb60, unwind: bb100]
  }
  preds [bb58]
  succs [bb60, bb100]

bb60
  0: StorageDead(_127)
    SourceInfo(src/engine/general_purpose/decode.rs:87:10-87:11)
  1: PlaceMention(_126)
    SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
  2: _142 = discriminant(_126)
    SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
      kind: switchInt(move _142) -> [0: bb63, 1: bb62, otherwise: bb61]
  }
  preds [bb59]
  succs [bb61, bb62, bb63]

bb61
  0: FakeRead(ForMatchedPlace(None), _126)
    SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
      kind: unreachable
  }
  preds [bb60]
  succs []

bb62
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:87:10-87:11)
      kind: falseEdge -> [real: bb64, imaginary: bb63]
  }
  preds [bb60]
  succs [bb63, bb64]

bb63
  0: StorageLive(_146)
    SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
  1: _146 = ((_126 as Continue).0: ())
    SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
  2: _125 = _146
    SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
  3: StorageDead(_146)
    SourceInfo(src/engine/general_purpose/decode.rs:87:10-87:11)
  4: StorageDead(_139)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  5: StorageDead(_138)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  6: StorageDead(_130)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  7: StorageDead(_129)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  8: StorageDead(_126)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  9: StorageDead(_125)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  10: _38 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:59:5-88:6)
  11: StorageDead(_50)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  12: StorageDead(_49)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  13: StorageDead(_46)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  14: StorageDead(_45)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  15: StorageDead(_44)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  16: StorageDead(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  17: StorageDead(_39)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  18: StorageDead(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  19: _37 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:56:5-88:6)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:56:5-88:6)
      kind: goto -> bb15
  }
  preds [bb60, bb62]
  succs [bb15]

bb64
  0: StorageLive(_143)
    SourceInfo(src/engine/general_purpose/decode.rs:87:10-87:11)
  1: _143 = move ((_126 as Break).0: std::result::Result<std::convert::Infallible, decode::DecodeError>)
    SourceInfo(src/engine/general_purpose/decode.rs:87:10-87:11)
  2: StorageLive(_145)
    SourceInfo(src/engine/general_purpose/decode.rs:87:10-87:11)
  3: _145 = move _143
    SourceInfo(src/engine/general_purpose/decode.rs:87:10-87:11)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:82:9-87:11)
      kind: _0 = <std::result::Result<engine::DecodeMetadata, decode::DecodeSliceError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, decode::DecodeError>>>::from_residual(move _145) -> [return: bb65, unwind: bb100]
  }
  preds [bb62]
  succs [bb65, bb100]

bb65
  0: StorageDead(_145)
    SourceInfo(src/engine/general_purpose/decode.rs:87:10-87:11)
  1: StorageDead(_143)
    SourceInfo(src/engine/general_purpose/decode.rs:87:10-87:11)
  2: StorageDead(_139)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  3: StorageDead(_138)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  4: StorageDead(_130)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  5: StorageDead(_129)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  6: StorageDead(_126)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  7: StorageDead(_125)
    SourceInfo(src/engine/general_purpose/decode.rs:87:11-87:12)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb96
  }
  preds [bb64]
  succs [bb96]

bb66
  0: _148 = Div(move _149, const 4_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:91:36-91:63)
  1: StorageDead(_149)
    SourceInfo(src/engine/general_purpose/decode.rs:91:62-91:63)
  2: _151 = MulWithOverflow(_148, const 3_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:91:36-91:67)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:91:36-91:67)
      kind: assert(!move (_151.1: bool), "attempt to compute `{} * {}`, which would overflow", move _148, const 3_usize) -> [success: bb67, unwind: bb100]
  }
  preds [bb21]
  succs [bb67, bb100]

bb67
  0: _147 = move (_151.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:91:36-91:67)
  1: StorageDead(_148)
    SourceInfo(src/engine/general_purpose/decode.rs:91:66-91:67)
  2: FakeRead(ForLet(None), _147)
    SourceInfo(src/engine/general_purpose/decode.rs:91:9-91:33)
  3: StorageLive(_152)
    SourceInfo(src/engine/general_purpose/decode.rs:92:9-92:33)
  4: StorageLive(_153)
    SourceInfo(src/engine/general_purpose/decode.rs:92:36-92:76)
  5: StorageLive(_154)
    SourceInfo(src/engine/general_purpose/decode.rs:92:36-92:72)
  6: _154 = _7
    SourceInfo(src/engine/general_purpose/decode.rs:92:36-92:72)
  7: _155 = Eq(const 4_usize, const 0_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:92:36-92:76)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:92:36-92:76)
      kind: assert(!move _155, "attempt to divide `{}` by zero", _154) -> [success: bb68, unwind: bb100]
  }
  preds [bb66]
  succs [bb68, bb100]

bb68
  0: _153 = Div(move _154, const 4_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:92:36-92:76)
  1: StorageDead(_154)
    SourceInfo(src/engine/general_purpose/decode.rs:92:75-92:76)
  2: _156 = MulWithOverflow(_153, const 3_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:92:36-92:80)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:92:36-92:80)
      kind: assert(!move (_156.1: bool), "attempt to compute `{} * {}`, which would overflow", move _153, const 3_usize) -> [success: bb69, unwind: bb100]
  }
  preds [bb67]
  succs [bb69, bb100]

bb69
  0: _152 = move (_156.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:92:36-92:80)
  1: StorageDead(_153)
    SourceInfo(src/engine/general_purpose/decode.rs:92:79-92:80)
  2: FakeRead(ForLet(None), _152)
    SourceInfo(src/engine/general_purpose/decode.rs:92:9-92:33)
  3: StorageLive(_157)
    SourceInfo(src/engine/general_purpose/decode.rs:93:5-110:6)
  4: StorageLive(_158)
    SourceInfo(src/engine/general_purpose/decode.rs:94:13-94:32)
  5: StorageLive(_159)
    SourceInfo(src/engine/general_purpose/decode.rs:94:46-94:98)
  6: StorageLive(_160)
    SourceInfo(src/engine/general_purpose/decode.rs:94:40-94:46)
  7: _160 = &mut (*_3)
    SourceInfo(src/engine/general_purpose/decode.rs:94:40-94:46)
  8: StorageLive(_161)
    SourceInfo(src/engine/general_purpose/decode.rs:94:47-94:97)
  9: StorageLive(_162)
    SourceInfo(src/engine/general_purpose/decode.rs:94:47-94:71)
  10: _162 = _147
    SourceInfo(src/engine/general_purpose/decode.rs:94:47-94:71)
  11: StorageLive(_163)
    SourceInfo(src/engine/general_purpose/decode.rs:94:73-94:97)
  12: _163 = _152
    SourceInfo(src/engine/general_purpose/decode.rs:94:73-94:97)
  13: _161 = std::ops::Range::<usize> { start: move _162, end: move _163 }
    SourceInfo(src/engine/general_purpose/decode.rs:94:47-94:97)
  14: StorageDead(_163)
    SourceInfo(src/engine/general_purpose/decode.rs:94:96-94:97)
  15: StorageDead(_162)
    SourceInfo(src/engine/general_purpose/decode.rs:94:96-94:97)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:94:46-94:98)
      kind: _159 = <[u8] as std::ops::IndexMut<std::ops::Range<usize>>>::index_mut(move _160, move _161) -> [return: bb70, unwind: bb100]
  }
  preds [bb68]
  succs [bb70, bb100]

bb70
  0: StorageDead(_161)
    SourceInfo(src/engine/general_purpose/decode.rs:94:97-94:98)
  1: StorageDead(_160)
    SourceInfo(src/engine/general_purpose/decode.rs:94:97-94:98)
  2: _158 = &mut (*_159)
    SourceInfo(src/engine/general_purpose/decode.rs:94:35-94:98)
  3: FakeRead(ForLet(None), _158)
    SourceInfo(src/engine/general_purpose/decode.rs:94:13-94:32)
  4: StorageLive(_164)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  5: StorageLive(_165)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  6: StorageLive(_166)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-98:29)
  7: StorageLive(_167)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-97:76)
  8: StorageLive(_168)
    SourceInfo(src/engine/general_purpose/decode.rs:97:13-97:76)
  9: StorageLive(_169)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-96:42)
  10: _169 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-96:42)
  11: StorageLive(_170)
    SourceInfo(src/engine/general_purpose/decode.rs:97:14-97:75)
  12: StorageLive(_171)
    SourceInfo(src/engine/general_purpose/decode.rs:97:14-97:37)
  13: _171 = _23
    SourceInfo(src/engine/general_purpose/decode.rs:97:14-97:37)
  14: StorageLive(_172)
    SourceInfo(src/engine/general_purpose/decode.rs:97:39-97:75)
  15: _172 = _7
    SourceInfo(src/engine/general_purpose/decode.rs:97:39-97:75)
  16: _170 = std::ops::Range::<usize> { start: move _171, end: move _172 }
    SourceInfo(src/engine/general_purpose/decode.rs:97:14-97:75)
  17: StorageDead(_172)
    SourceInfo(src/engine/general_purpose/decode.rs:97:74-97:75)
  18: StorageDead(_171)
    SourceInfo(src/engine/general_purpose/decode.rs:97:74-97:75)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:97:13-97:76)
      kind: _168 = <[u8] as std::ops::Index<std::ops::Range<usize>>>::index(move _169, move _170) -> [return: bb71, unwind: bb100]
  }
  preds [bb69]
  succs [bb71, bb100]

bb71
  0: _167 = &(*_168)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-97:76)
  1: StorageDead(_170)
    SourceInfo(src/engine/general_purpose/decode.rs:97:75-97:76)
  2: StorageDead(_169)
    SourceInfo(src/engine/general_purpose/decode.rs:97:75-97:76)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:37-98:29)
      kind: _166 = core::slice::<impl [u8]>::chunks_exact(move _167, const 4_usize) -> [return: bb72, unwind: bb100]
  }
  preds [bb70]
  succs [bb72, bb100]

bb72
  0: StorageDead(_167)
    SourceInfo(src/engine/general_purpose/decode.rs:98:28-98:29)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
      kind: _165 = <std::slice::ChunksExact<'_, u8> as std::iter::Iterator>::enumerate(move _166) -> [return: bb73, unwind: bb100]
  }
  preds [bb71]
  succs [bb73, bb100]

bb73
  0: StorageDead(_166)
    SourceInfo(src/engine/general_purpose/decode.rs:99:24-99:25)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
      kind: _164 = <std::iter::Enumerate<std::slice::ChunksExact<'_, u8>> as std::iter::IntoIterator>::into_iter(move _165) -> [return: bb74, unwind: bb100]
  }
  preds [bb72]
  succs [bb74, bb100]

bb74
  0: StorageDead(_165)
    SourceInfo(src/engine/general_purpose/decode.rs:99:24-99:25)
  1: PlaceMention(_164)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  2: StorageLive(_173)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  3: _173 = move _164
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:9-109:10)
      kind: goto -> bb75
  }
  preds [bb73]
  succs [bb75]

bb75
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:9-109:10)
      kind: falseUnwind -> [real: bb76, unwind: bb100]
  }
  preds [bb74, bb92]
  succs [bb76, bb100]

bb76
  0: StorageLive(_174)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  1: StorageLive(_175)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  2: StorageLive(_176)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  3: StorageLive(_177)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  4: _177 = &mut _173
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  5: _176 = &mut (*_177)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
      kind: _175 = <std::iter::Enumerate<std::slice::ChunksExact<'_, u8>> as std::iter::Iterator>::next(move _176) -> [return: bb77, unwind: bb100]
  }
  preds [bb75]
  succs [bb77, bb100]

bb77
  0: StorageDead(_176)
    SourceInfo(src/engine/general_purpose/decode.rs:99:24-99:25)
  1: PlaceMention(_175)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  2: _178 = discriminant(_175)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
      kind: switchInt(move _178) -> [0: bb79, 1: bb80, otherwise: bb78]
  }
  preds [bb76]
  succs [bb78, bb79, bb80]

bb78
  0: FakeRead(ForMatchedPlace(None), _175)
    SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:37-99:25)
      kind: unreachable
  }
  preds [bb77]
  succs []

bb79
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:9-109:10)
      kind: falseEdge -> [real: bb81, imaginary: bb80]
  }
  preds [bb77]
  succs [bb80, bb81]

bb80
  0: StorageLive(_180)
    SourceInfo(src/engine/general_purpose/decode.rs:96:14-96:25)
  1: _180 = (((_175 as Some).0: (usize, &[u8])).0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:96:14-96:25)
  2: StorageLive(_181)
    SourceInfo(src/engine/general_purpose/decode.rs:96:27-96:32)
  3: _181 = (((_175 as Some).0: (usize, &[u8])).1: &[u8])
    SourceInfo(src/engine/general_purpose/decode.rs:96:27-96:32)
  4: StorageLive(_182)
    SourceInfo(src/engine/general_purpose/decode.rs:101:17-101:29)
  5: StorageLive(_183)
    SourceInfo(src/engine/general_purpose/decode.rs:101:56-101:94)
  6: StorageLive(_184)
    SourceInfo(src/engine/general_purpose/decode.rs:101:37-101:56)
  7: _184 = &mut (*_158)
    SourceInfo(src/engine/general_purpose/decode.rs:101:37-101:56)
  8: StorageLive(_185)
    SourceInfo(src/engine/general_purpose/decode.rs:101:57-101:93)
  9: StorageLive(_186)
    SourceInfo(src/engine/general_purpose/decode.rs:101:57-101:72)
  10: StorageLive(_187)
    SourceInfo(src/engine/general_purpose/decode.rs:101:57-101:68)
  11: _187 = _180
    SourceInfo(src/engine/general_purpose/decode.rs:101:57-101:68)
  12: _188 = MulWithOverflow(_187, const 3_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:101:57-101:72)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:101:57-101:72)
      kind: assert(!move (_188.1: bool), "attempt to compute `{} * {}`, which would overflow", move _187, const 3_usize) -> [success: bb82, unwind: bb100]
  }
  preds [bb77, bb79]
  succs [bb82, bb100]

bb81
  0: _157 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:96:9-109:10)
  1: StorageDead(_177)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  2: StorageDead(_175)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  3: StorageDead(_174)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  4: StorageDead(_173)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  5: StorageDead(_168)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  6: StorageDead(_164)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  7: StorageDead(_159)
    SourceInfo(src/engine/general_purpose/decode.rs:110:5-110:6)
  8: StorageDead(_158)
    SourceInfo(src/engine/general_purpose/decode.rs:110:5-110:6)
  9: StorageDead(_157)
    SourceInfo(src/engine/general_purpose/decode.rs:110:5-110:6)
  10: StorageLive(_211)
    SourceInfo(src/engine/general_purpose/decode.rs:113:9-113:14)
  11: _211 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:113:9-113:14)
  12: StorageLive(_212)
    SourceInfo(src/engine/general_purpose/decode.rs:114:9-114:45)
  13: _212 = _7
    SourceInfo(src/engine/general_purpose/decode.rs:114:9-114:45)
  14: StorageLive(_213)
    SourceInfo(src/engine/general_purpose/decode.rs:115:9-115:15)
  15: _213 = &mut (*_3)
    SourceInfo(src/engine/general_purpose/decode.rs:115:9-115:15)
  16: StorageLive(_214)
    SourceInfo(src/engine/general_purpose/decode.rs:116:9-116:33)
  17: _214 = _152
    SourceInfo(src/engine/general_purpose/decode.rs:116:9-116:33)
  18: StorageLive(_215)
    SourceInfo(src/engine/general_purpose/decode.rs:117:9-117:21)
  19: _215 = &(*_4)
    SourceInfo(src/engine/general_purpose/decode.rs:117:9-117:21)
  20: StorageLive(_216)
    SourceInfo(src/engine/general_purpose/decode.rs:118:9-118:35)
  21: _216 = _5
    SourceInfo(src/engine/general_purpose/decode.rs:118:9-118:35)
  22: StorageLive(_217)
    SourceInfo(src/engine/general_purpose/decode.rs:119:9-119:21)
  23: _217 = _6
    SourceInfo(src/engine/general_purpose/decode.rs:119:9-119:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:112:5-120:6)
      kind: _0 = engine::general_purpose::decode_suffix::decode_suffix(move _211, move _212, move _213, move _214, move _215, move _216, move _217) -> [return: bb95, unwind: bb100]
  }
  preds [bb79]
  succs [bb95, bb100]

bb82
  0: _186 = move (_188.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:101:57-101:72)
  1: StorageDead(_187)
    SourceInfo(src/engine/general_purpose/decode.rs:101:71-101:72)
  2: StorageLive(_189)
    SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:93)
  3: StorageLive(_190)
    SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:89)
  4: StorageLive(_191)
    SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:85)
  5: _191 = _180
    SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:85)
  6: _192 = MulWithOverflow(_191, const 3_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:89)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:89)
      kind: assert(!move (_192.1: bool), "attempt to compute `{} * {}`, which would overflow", move _191, const 3_usize) -> [success: bb83, unwind: bb100]
  }
  preds [bb80]
  succs [bb83, bb100]

bb83
  0: _190 = move (_192.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:89)
  1: StorageDead(_191)
    SourceInfo(src/engine/general_purpose/decode.rs:101:88-101:89)
  2: _193 = AddWithOverflow(_190, const 3_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:93)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:93)
      kind: assert(!move (_193.1: bool), "attempt to compute `{} + {}`, which would overflow", move _190, const 3_usize) -> [success: bb84, unwind: bb100]
  }
  preds [bb82]
  succs [bb84, bb100]

bb84
  0: _189 = move (_193.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:101:74-101:93)
  1: StorageDead(_190)
    SourceInfo(src/engine/general_purpose/decode.rs:101:92-101:93)
  2: _185 = std::ops::Range::<usize> { start: move _186, end: move _189 }
    SourceInfo(src/engine/general_purpose/decode.rs:101:57-101:93)
  3: StorageDead(_189)
    SourceInfo(src/engine/general_purpose/decode.rs:101:92-101:93)
  4: StorageDead(_186)
    SourceInfo(src/engine/general_purpose/decode.rs:101:92-101:93)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:101:56-101:94)
      kind: _183 = <[u8] as std::ops::IndexMut<std::ops::Range<usize>>>::index_mut(move _184, move _185) -> [return: bb85, unwind: bb100]
  }
  preds [bb83]
  succs [bb85, bb100]

bb85
  0: StorageDead(_185)
    SourceInfo(src/engine/general_purpose/decode.rs:101:93-101:94)
  1: StorageDead(_184)
    SourceInfo(src/engine/general_purpose/decode.rs:101:93-101:94)
  2: _182 = &mut (*_183)
    SourceInfo(src/engine/general_purpose/decode.rs:101:32-101:94)
  3: FakeRead(ForLet(None), _182)
    SourceInfo(src/engine/general_purpose/decode.rs:101:17-101:29)
  4: StorageLive(_194)
    SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
  5: StorageLive(_195)
    SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
  6: StorageLive(_196)
    SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:14)
  7: StorageLive(_197)
    SourceInfo(src/engine/general_purpose/decode.rs:104:17-104:22)
  8: _197 = &(*_181)
    SourceInfo(src/engine/general_purpose/decode.rs:104:17-104:22)
  9: StorageLive(_198)
    SourceInfo(src/engine/general_purpose/decode.rs:105:17-105:58)
  10: StorageLive(_199)
    SourceInfo(src/engine/general_purpose/decode.rs:105:17-105:40)
  11: _199 = _23
    SourceInfo(src/engine/general_purpose/decode.rs:105:17-105:40)
  12: StorageLive(_200)
    SourceInfo(src/engine/general_purpose/decode.rs:105:43-105:58)
  13: StorageLive(_201)
    SourceInfo(src/engine/general_purpose/decode.rs:105:43-105:54)
  14: _201 = _180
    SourceInfo(src/engine/general_purpose/decode.rs:105:43-105:54)
  15: _202 = MulWithOverflow(_201, const 4_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:105:43-105:58)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:105:43-105:58)
      kind: assert(!move (_202.1: bool), "attempt to compute `{} * {}`, which would overflow", move _201, const 4_usize) -> [success: bb86, unwind: bb100]
  }
  preds [bb84]
  succs [bb86, bb100]

bb86
  0: _200 = move (_202.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:105:43-105:58)
  1: StorageDead(_201)
    SourceInfo(src/engine/general_purpose/decode.rs:105:57-105:58)
  2: _203 = AddWithOverflow(_199, _200)
    SourceInfo(src/engine/general_purpose/decode.rs:105:17-105:58)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:105:17-105:58)
      kind: assert(!move (_203.1: bool), "attempt to compute `{} + {}`, which would overflow", move _199, move _200) -> [success: bb87, unwind: bb100]
  }
  preds [bb85]
  succs [bb87, bb100]

bb87
  0: _198 = move (_203.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:105:17-105:58)
  1: StorageDead(_200)
    SourceInfo(src/engine/general_purpose/decode.rs:105:57-105:58)
  2: StorageDead(_199)
    SourceInfo(src/engine/general_purpose/decode.rs:105:57-105:58)
  3: StorageLive(_204)
    SourceInfo(src/engine/general_purpose/decode.rs:106:17-106:29)
  4: _204 = &(*_4)
    SourceInfo(src/engine/general_purpose/decode.rs:106:17-106:29)
  5: StorageLive(_205)
    SourceInfo(src/engine/general_purpose/decode.rs:107:17-107:29)
  6: _205 = &mut (*_182)
    SourceInfo(src/engine/general_purpose/decode.rs:107:17-107:29)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:14)
      kind: _196 = engine::general_purpose::decode::decode_chunk_4(move _197, move _198, move _204, move _205) -> [return: bb88, unwind: bb100]
  }
  preds [bb86]
  succs [bb88, bb100]

bb88
  0: StorageDead(_205)
    SourceInfo(src/engine/general_purpose/decode.rs:108:13-108:14)
  1: StorageDead(_204)
    SourceInfo(src/engine/general_purpose/decode.rs:108:13-108:14)
  2: StorageDead(_198)
    SourceInfo(src/engine/general_purpose/decode.rs:108:13-108:14)
  3: StorageDead(_197)
    SourceInfo(src/engine/general_purpose/decode.rs:108:13-108:14)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
      kind: _195 = <std::result::Result<(), decode::DecodeError> as std::ops::Try>::branch(move _196) -> [return: bb89, unwind: bb100]
  }
  preds [bb87]
  succs [bb89, bb100]

bb89
  0: StorageDead(_196)
    SourceInfo(src/engine/general_purpose/decode.rs:108:14-108:15)
  1: PlaceMention(_195)
    SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
  2: _206 = discriminant(_195)
    SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
      kind: switchInt(move _206) -> [0: bb92, 1: bb91, otherwise: bb90]
  }
  preds [bb88]
  succs [bb90, bb91, bb92]

bb90
  0: FakeRead(ForMatchedPlace(None), _195)
    SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
      kind: unreachable
  }
  preds [bb89]
  succs []

bb91
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:108:14-108:15)
      kind: falseEdge -> [real: bb93, imaginary: bb92]
  }
  preds [bb89]
  succs [bb92, bb93]

bb92
  0: StorageLive(_210)
    SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
  1: _210 = ((_195 as Continue).0: ())
    SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
  2: _194 = _210
    SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
  3: StorageDead(_210)
    SourceInfo(src/engine/general_purpose/decode.rs:108:14-108:15)
  4: StorageDead(_195)
    SourceInfo(src/engine/general_purpose/decode.rs:108:15-108:16)
  5: StorageDead(_194)
    SourceInfo(src/engine/general_purpose/decode.rs:108:15-108:16)
  6: _174 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:100:9-109:10)
  7: StorageDead(_183)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  8: StorageDead(_182)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  9: StorageDead(_181)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  10: StorageDead(_180)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  11: StorageDead(_177)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  12: StorageDead(_175)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  13: StorageDead(_174)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  14: _37 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:96:9-109:10)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:96:9-109:10)
      kind: goto -> bb75
  }
  preds [bb89, bb91]
  succs [bb75]

bb93
  0: StorageLive(_207)
    SourceInfo(src/engine/general_purpose/decode.rs:108:14-108:15)
  1: _207 = move ((_195 as Break).0: std::result::Result<std::convert::Infallible, decode::DecodeError>)
    SourceInfo(src/engine/general_purpose/decode.rs:108:14-108:15)
  2: StorageLive(_209)
    SourceInfo(src/engine/general_purpose/decode.rs:108:14-108:15)
  3: _209 = move _207
    SourceInfo(src/engine/general_purpose/decode.rs:108:14-108:15)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:103:13-108:15)
      kind: _0 = <std::result::Result<engine::DecodeMetadata, decode::DecodeSliceError> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, decode::DecodeError>>>::from_residual(move _209) -> [return: bb94, unwind: bb100]
  }
  preds [bb91]
  succs [bb94, bb100]

bb94
  0: StorageDead(_209)
    SourceInfo(src/engine/general_purpose/decode.rs:108:14-108:15)
  1: StorageDead(_207)
    SourceInfo(src/engine/general_purpose/decode.rs:108:14-108:15)
  2: StorageDead(_195)
    SourceInfo(src/engine/general_purpose/decode.rs:108:15-108:16)
  3: StorageDead(_194)
    SourceInfo(src/engine/general_purpose/decode.rs:108:15-108:16)
  4: StorageDead(_183)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  5: StorageDead(_182)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  6: StorageDead(_181)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  7: StorageDead(_180)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  8: StorageDead(_177)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  9: StorageDead(_175)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  10: StorageDead(_174)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  11: StorageDead(_173)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  12: StorageDead(_168)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  13: StorageDead(_164)
    SourceInfo(src/engine/general_purpose/decode.rs:109:9-109:10)
  14: StorageDead(_159)
    SourceInfo(src/engine/general_purpose/decode.rs:110:5-110:6)
  15: StorageDead(_158)
    SourceInfo(src/engine/general_purpose/decode.rs:110:5-110:6)
  16: StorageDead(_157)
    SourceInfo(src/engine/general_purpose/decode.rs:110:5-110:6)
  17: StorageDead(_152)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  18: StorageDead(_147)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb93]
  succs [bb97]

bb95
  0: StorageDead(_217)
    SourceInfo(src/engine/general_purpose/decode.rs:120:5-120:6)
  1: StorageDead(_216)
    SourceInfo(src/engine/general_purpose/decode.rs:120:5-120:6)
  2: StorageDead(_215)
    SourceInfo(src/engine/general_purpose/decode.rs:120:5-120:6)
  3: StorageDead(_214)
    SourceInfo(src/engine/general_purpose/decode.rs:120:5-120:6)
  4: StorageDead(_213)
    SourceInfo(src/engine/general_purpose/decode.rs:120:5-120:6)
  5: StorageDead(_212)
    SourceInfo(src/engine/general_purpose/decode.rs:120:5-120:6)
  6: StorageDead(_211)
    SourceInfo(src/engine/general_purpose/decode.rs:120:5-120:6)
  7: StorageDead(_152)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  8: StorageDead(_147)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  9: StorageDead(_23)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  10: StorageDead(_20)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  11: StorageDead(_7)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:121:2-121:2)
      kind: goto -> bb99
  }
  preds [bb81]
  succs [bb99]

bb96
  0: StorageDead(_50)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  1: StorageDead(_49)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  2: StorageDead(_46)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  3: StorageDead(_45)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  4: StorageDead(_44)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  5: StorageDead(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  6: StorageDead(_39)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  7: StorageDead(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  8: StorageDead(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  9: StorageDead(_32)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  10: StorageDead(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  11: StorageDead(_27)
    SourceInfo(src/engine/general_purpose/decode.rs:88:5-88:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb97
  }
  preds [bb35, bb45, bb55, bb65]
  succs [bb97]

bb97
  0: StorageDead(_23)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  1: StorageDead(_20)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb98
  }
  preds [bb94, bb96]
  succs [bb98]

bb98
  0: StorageDead(_7)
    SourceInfo(src/engine/general_purpose/decode.rs:121:1-121:2)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:121:2-121:2)
      kind: goto -> bb99
  }
  preds [bb8, bb97]
  succs [bb99]

bb99
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:121:2-121:2)
      kind: return
  }
  preds [bb95, bb98]
  succs []

bb100
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:35:1-121:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb6, bb7, bb9, bb10, bb11, bb12, bb13, bb15, bb16, bb20, bb21, bb22, bb23, bb24, bb25, bb26, bb27, bb28, bb29, bb33, bb34, bb36, bb37, bb38, bb39, bb43, bb44, bb46, bb47, bb48, bb49, bb53, bb54, bb56, bb57, bb58, bb59, bb64, bb66, bb67, bb68, bb69, bb70, bb71, bb72, bb73, bb75, bb76, bb80, bb81, bb82, bb83, bb84, bb85, bb86, bb87, bb88, bb93]
  succs []

