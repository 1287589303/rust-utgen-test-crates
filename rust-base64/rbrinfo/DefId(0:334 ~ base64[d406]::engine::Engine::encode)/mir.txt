bb0
  0: StorageLive(_3)
    SourceInfo(src/engine/mod.rs:130:15-130:19)
  1: _3 = &(*_1)
    SourceInfo(src/engine/mod.rs:130:15-130:19)
  2: StorageLive(_4)
    SourceInfo(src/engine/mod.rs:130:21-130:35)
  3: StorageLive(_5)
    SourceInfo(src/engine/mod.rs:130:21-130:35)
  4: StorageLive(_6)
    SourceInfo(src/engine/mod.rs:130:21-130:26)
  5: _6 = &_2
    SourceInfo(src/engine/mod.rs:130:21-130:26)
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:130:21-130:35)
      kind: _5 = <T as std::convert::AsRef<[u8]>>::as_ref(move _6) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _4 = &(*_5)
    SourceInfo(src/engine/mod.rs:130:21-130:35)
  1: StorageDead(_6)
    SourceInfo(src/engine/mod.rs:130:34-130:35)
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:130:9-130:36)
      kind: _0 = engine::Engine::encode::inner::<Self>(move _3, move _4) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_4)
    SourceInfo(src/engine/mod.rs:130:35-130:36)
  1: StorageDead(_3)
    SourceInfo(src/engine/mod.rs:130:35-130:36)
  2: StorageDead(_5)
    SourceInfo(src/engine/mod.rs:131:5-131:6)
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:131:5-131:6)
      kind: drop(_2) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:131:6-131:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:131:5-131:6)
      kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:115:5-131:6)
      kind: resume
  }
  preds [bb2, bb4]
  succs []

