bb0
  0: StorageLive(_2)
    SourceInfo(src/engine/general_purpose/mod.rs:215:9-215:25)
  1: _2 = [const engine::general_purpose::INVALID_VALUE; 256]
    SourceInfo(src/engine/general_purpose/mod.rs:215:28-215:48)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(src/engine/general_purpose/mod.rs:215:9-215:25)
  3: StorageLive(_3)
    SourceInfo(src/engine/general_purpose/mod.rs:219:9-219:18)
  4: _3 = const 0_usize
    SourceInfo(src/engine/general_purpose/mod.rs:219:21-219:22)
  5: FakeRead(ForLet(None), _3)
    SourceInfo(src/engine/general_purpose/mod.rs:219:9-219:18)
  6: StorageLive(_4)
    SourceInfo(src/engine/general_purpose/mod.rs:220:5-225:6)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/mod.rs:220:5-225:6)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/mod.rs:220:5-225:6)
      kind: falseUnwind -> [real: bb2, unwind: bb8]
  }
  preds [bb0, bb6]
  succs [bb2, bb8]

bb2
  0: StorageLive(_6)
    SourceInfo(src/engine/general_purpose/mod.rs:220:11-220:21)
  1: StorageLive(_7)
    SourceInfo(src/engine/general_purpose/mod.rs:220:11-220:16)
  2: _7 = _3
    SourceInfo(src/engine/general_purpose/mod.rs:220:11-220:16)
  3: _6 = Lt(move _7, const 64_usize)
    SourceInfo(src/engine/general_purpose/mod.rs:220:11-220:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/mod.rs:220:11-220:21)
      kind: switchInt(move _6) -> [0: bb7, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_7)
    SourceInfo(src/engine/general_purpose/mod.rs:220:20-220:21)
  1: StorageLive(_8)
    SourceInfo(src/engine/general_purpose/mod.rs:223:58-223:63)
  2: _8 = _3
    SourceInfo(src/engine/general_purpose/mod.rs:223:58-223:63)
  3: StorageLive(_9)
    SourceInfo(src/engine/general_purpose/mod.rs:223:22-223:54)
  4: StorageLive(_10)
    SourceInfo(src/engine/general_purpose/mod.rs:223:22-223:45)
  5: StorageLive(_11)
    SourceInfo(src/engine/general_purpose/mod.rs:223:39-223:44)
  6: _11 = _3
    SourceInfo(src/engine/general_purpose/mod.rs:223:39-223:44)
  7: _12 = Len(((*_1).0: [u8; 64]))
    SourceInfo(src/engine/general_purpose/mod.rs:223:22-223:45)
  8: _13 = Lt(_11, _12)
    SourceInfo(src/engine/general_purpose/mod.rs:223:22-223:45)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/mod.rs:223:22-223:45)
      kind: assert(move _13, "index out of bounds: the length is {} but the index is {}", move _12, _11) -> [success: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: _10 = ((*_1).0: [u8; 64])[_11]
    SourceInfo(src/engine/general_purpose/mod.rs:223:22-223:45)
  1: _9 = move _10 as usize (IntToInt)
    SourceInfo(src/engine/general_purpose/mod.rs:223:22-223:54)
  2: StorageDead(_10)
    SourceInfo(src/engine/general_purpose/mod.rs:223:53-223:54)
  3: _14 = Len(_2)
    SourceInfo(src/engine/general_purpose/mod.rs:223:9-223:55)
  4: _15 = Lt(_9, _14)
    SourceInfo(src/engine/general_purpose/mod.rs:223:9-223:55)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/mod.rs:223:9-223:55)
      kind: assert(move _15, "index out of bounds: the length is {} but the index is {}", move _14, _9) -> [success: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: _2[_9] = move _8 as u8 (IntToInt)
    SourceInfo(src/engine/general_purpose/mod.rs:223:9-223:69)
  1: StorageDead(_8)
    SourceInfo(src/engine/general_purpose/mod.rs:223:68-223:69)
  2: StorageDead(_11)
    SourceInfo(src/engine/general_purpose/mod.rs:223:69-223:70)
  3: StorageDead(_9)
    SourceInfo(src/engine/general_purpose/mod.rs:223:69-223:70)
  4: _16 = AddWithOverflow(_3, const 1_usize)
    SourceInfo(src/engine/general_purpose/mod.rs:224:9-224:19)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/mod.rs:224:9-224:19)
      kind: assert(!move (_16.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, const 1_usize) -> [success: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: _3 = move (_16.0: usize)
    SourceInfo(src/engine/general_purpose/mod.rs:224:9-224:19)
  1: _5 = const ()
    SourceInfo(src/engine/general_purpose/mod.rs:220:22-225:6)
  2: StorageDead(_6)
    SourceInfo(src/engine/general_purpose/mod.rs:225:5-225:6)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/mod.rs:220:5-225:6)
      kind: goto -> bb1
  }
  preds [bb5]
  succs [bb1]

bb7
  0: StorageDead(_7)
    SourceInfo(src/engine/general_purpose/mod.rs:220:20-220:21)
  1: StorageLive(_18)
    SourceInfo(src/engine/general_purpose/mod.rs:220:5-225:6)
  2: _4 = const ()
    SourceInfo(src/engine/general_purpose/mod.rs:220:5-225:6)
  3: StorageDead(_18)
    SourceInfo(src/engine/general_purpose/mod.rs:225:5-225:6)
  4: StorageDead(_6)
    SourceInfo(src/engine/general_purpose/mod.rs:225:5-225:6)
  5: StorageDead(_4)
    SourceInfo(src/engine/general_purpose/mod.rs:225:5-225:6)
  6: _0 = _2
    SourceInfo(src/engine/general_purpose/mod.rs:227:5-227:17)
  7: StorageDead(_3)
    SourceInfo(src/engine/general_purpose/mod.rs:228:1-228:2)
  8: StorageDead(_2)
    SourceInfo(src/engine/general_purpose/mod.rs:228:1-228:2)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/mod.rs:228:2-228:2)
      kind: return
  }
  preds [bb2]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/mod.rs:214:1-228:2)
      kind: resume
  }
  preds [bb1, bb3, bb4, bb5]
  succs []

