bb0
  0: ((*_1).6: bool) = const true
    SourceInfo(src/write/encoder.rs:180:9-180:29)
  1: StorageLive(_3)
    SourceInfo(src/write/encoder.rs:181:13-181:16)
  2: StorageLive(_4)
    SourceInfo(src/write/encoder.rs:181:19-184:46)
  3: StorageLive(_5)
    SourceInfo(src/write/encoder.rs:181:19-184:46)
  4: StorageLive(_6)
    SourceInfo(src/write/encoder.rs:181:19-183:22)
  5: StorageLive(_7)
    SourceInfo(src/write/encoder.rs:181:19-182:22)
  6: _7 = &mut ((*_1).1: std::option::Option<W>)
    SourceInfo(src/write/encoder.rs:181:19-182:22)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:181:19-183:22)
      kind: _6 = std::option::Option::<W>::as_mut(move _7) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_7)
    SourceInfo(src/write/encoder.rs:183:21-183:22)
  1: StorageLive(_8)
    SourceInfo(src/write/encoder.rs:184:21-184:45)
  2: StorageLive(_9)
    SourceInfo(src/write/encoder.rs:184:21-184:45)
  3: _9 = const "Writer must be present"
    SourceInfo(src/write/encoder.rs:184:21-184:45)
  4: _8 = &(*_9)
    SourceInfo(src/write/encoder.rs:184:21-184:45)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:181:19-184:46)
      kind: _5 = std::option::Option::<&mut W>::expect(move _6, move _8) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: _4 = &mut (*_5)
    SourceInfo(src/write/encoder.rs:181:19-184:46)
  1: StorageDead(_8)
    SourceInfo(src/write/encoder.rs:184:45-184:46)
  2: StorageDead(_6)
    SourceInfo(src/write/encoder.rs:184:45-184:46)
  3: StorageLive(_10)
    SourceInfo(src/write/encoder.rs:185:20-185:54)
  4: StorageLive(_11)
    SourceInfo(src/write/encoder.rs:185:20-185:54)
  5: StorageLive(_12)
    SourceInfo(src/write/encoder.rs:185:32-185:54)
  6: StorageLive(_13)
    SourceInfo(src/write/encoder.rs:185:21-185:32)
  7: _13 = &((*_1).4: [u8; 1024])
    SourceInfo(src/write/encoder.rs:185:21-185:32)
  8: StorageLive(_14)
    SourceInfo(src/write/encoder.rs:185:33-185:53)
  9: StorageLive(_15)
    SourceInfo(src/write/encoder.rs:185:35-185:53)
  10: _15 = _2
    SourceInfo(src/write/encoder.rs:185:35-185:53)
  11: _14 = std::ops::RangeTo::<usize> { end: move _15 }
    SourceInfo(src/write/encoder.rs:185:33-185:53)
  12: StorageDead(_15)
    SourceInfo(src/write/encoder.rs:185:52-185:53)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:185:32-185:54)
      kind: _12 = <[u8; 1024] as std::ops::Index<std::ops::RangeTo<usize>>>::index(move _13, move _14) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_14)
    SourceInfo(src/write/encoder.rs:185:53-185:54)
  1: StorageDead(_13)
    SourceInfo(src/write/encoder.rs:185:53-185:54)
  2: _11 = &(*_12)
    SourceInfo(src/write/encoder.rs:185:20-185:54)
  3: _10 = &(*_11)
    SourceInfo(src/write/encoder.rs:185:20-185:54)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:181:19-185:55)
      kind: _3 = <W as std::io::Write>::write(move _4, move _10) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_10)
    SourceInfo(src/write/encoder.rs:185:54-185:55)
  1: StorageDead(_4)
    SourceInfo(src/write/encoder.rs:185:54-185:55)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/write/encoder.rs:181:13-181:16)
  3: StorageDead(_12)
    SourceInfo(src/write/encoder.rs:185:55-185:56)
  4: StorageDead(_11)
    SourceInfo(src/write/encoder.rs:185:55-185:56)
  5: StorageDead(_9)
    SourceInfo(src/write/encoder.rs:185:55-185:56)
  6: StorageDead(_5)
    SourceInfo(src/write/encoder.rs:185:55-185:56)
  7: ((*_1).6: bool) = const false
    SourceInfo(src/write/encoder.rs:186:9-186:30)
  8: StorageLive(_16)
    SourceInfo(src/write/encoder.rs:188:9-188:12)
  9: _16 = move _3
    SourceInfo(src/write/encoder.rs:188:9-188:12)
  10: StorageLive(_17)
    SourceInfo(src/write/encoder.rs:188:17-200:10)
  11: StorageLive(_18)
    SourceInfo(src/write/encoder.rs:188:17-200:10)
  12: _18 = &_2
    SourceInfo(src/write/encoder.rs:188:17-200:10)
  13: StorageLive(_19)
    SourceInfo(src/write/encoder.rs:188:17-200:10)
  14: _19 = &mut _1
    SourceInfo(src/write/encoder.rs:188:17-200:10)
  15: _17 = {closure@src/write/encoder.rs:188:17: 188:27} { current_output_len: move _18, self: move _19 }
    SourceInfo(src/write/encoder.rs:188:17-200:10)
  16: StorageDead(_19)
    SourceInfo(src/write/encoder.rs:188:26-188:27)
  17: StorageDead(_18)
    SourceInfo(src/write/encoder.rs:188:26-188:27)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:188:9-200:11)
      kind: _0 = std::result::Result::<usize, std::io::Error>::map::<(), {closure@src/write/encoder.rs:188:17: 188:27}>(move _16, move _17) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_17)
    SourceInfo(src/write/encoder.rs:200:10-200:11)
  1: StorageDead(_16)
    SourceInfo(src/write/encoder.rs:200:10-200:11)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:201:5-201:6)
      kind: drop(_3) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_3)
    SourceInfo(src/write/encoder.rs:201:5-201:6)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:201:6-201:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:200:10-200:11)
      kind: drop(_16) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:201:5-201:6)
      kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:179:5-201:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb8]
  succs []

