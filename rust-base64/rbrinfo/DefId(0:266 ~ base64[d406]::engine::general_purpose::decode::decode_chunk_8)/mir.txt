bb0
  0: StorageLive(_5)
    SourceInfo(src/engine/general_purpose/decode.rs:180:9-180:15)
  1: StorageLive(_6)
    SourceInfo(src/engine/general_purpose/decode.rs:180:31-180:52)
  2: StorageLive(_7)
    SourceInfo(src/engine/general_purpose/decode.rs:180:43-180:51)
  3: StorageLive(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:180:49-180:50)
  4: _8 = const 0_usize
    SourceInfo(src/engine/general_purpose/decode.rs:180:49-180:50)
  5: _9 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:180:43-180:51)
  6: _10 = Lt(_8, _9)
    SourceInfo(src/engine/general_purpose/decode.rs:180:43-180:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:180:43-180:51)
      kind: assert(move _10, "index out of bounds: the length is {} but the index is {}", move _9, _8) -> [success: bb1, unwind: bb84]
  }
  preds []
  succs [bb1, bb84]

bb1
  0: _7 = (*_1)[_8]
    SourceInfo(src/engine/general_purpose/decode.rs:180:43-180:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:180:31-180:52)
      kind: _6 = <usize as std::convert::From<u8>>::from(move _7) -> [return: bb2, unwind: bb84]
  }
  preds [bb0]
  succs [bb2, bb84]

bb2
  0: StorageDead(_7)
    SourceInfo(src/engine/general_purpose/decode.rs:180:51-180:52)
  1: _11 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:180:18-180:53)
  2: _12 = Lt(_6, _11)
    SourceInfo(src/engine/general_purpose/decode.rs:180:18-180:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:180:18-180:53)
      kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _6) -> [success: bb3, unwind: bb84]
  }
  preds [bb1]
  succs [bb3, bb84]

bb3
  0: _5 = (*_3)[_6]
    SourceInfo(src/engine/general_purpose/decode.rs:180:18-180:53)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(src/engine/general_purpose/decode.rs:180:9-180:15)
  2: StorageDead(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:180:53-180:54)
  3: StorageDead(_6)
    SourceInfo(src/engine/general_purpose/decode.rs:180:53-180:54)
  4: StorageLive(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:181:5-183:6)
  5: StorageLive(_14)
    SourceInfo(src/engine/general_purpose/decode.rs:181:8-181:31)
  6: StorageLive(_15)
    SourceInfo(src/engine/general_purpose/decode.rs:181:8-181:14)
  7: _15 = _5
    SourceInfo(src/engine/general_purpose/decode.rs:181:8-181:14)
  8: _14 = Eq(move _15, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:181:8-181:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:181:8-181:31)
      kind: switchInt(move _14) -> [0: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_15)
    SourceInfo(src/engine/general_purpose/decode.rs:181:30-181:31)
  1: StorageLive(_17)
    SourceInfo(src/engine/general_purpose/decode.rs:182:20-182:79)
  2: StorageLive(_18)
    SourceInfo(src/engine/general_purpose/decode.rs:182:45-182:68)
  3: _18 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:182:45-182:68)
  4: StorageLive(_19)
    SourceInfo(src/engine/general_purpose/decode.rs:182:70-182:78)
  5: StorageLive(_20)
    SourceInfo(src/engine/general_purpose/decode.rs:182:76-182:77)
  6: _20 = const 0_usize
    SourceInfo(src/engine/general_purpose/decode.rs:182:76-182:77)
  7: _21 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:182:70-182:78)
  8: _22 = Lt(_20, _21)
    SourceInfo(src/engine/general_purpose/decode.rs:182:70-182:78)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:182:70-182:78)
      kind: assert(move _22, "index out of bounds: the length is {} but the index is {}", move _21, _20) -> [success: bb5, unwind: bb84]
  }
  preds [bb3]
  succs [bb5, bb84]

bb5
  0: _19 = (*_1)[_20]
    SourceInfo(src/engine/general_purpose/decode.rs:182:70-182:78)
  1: _17 = decode::DecodeError::InvalidByte(move _18, move _19)
    SourceInfo(src/engine/general_purpose/decode.rs:182:20-182:79)
  2: StorageDead(_19)
    SourceInfo(src/engine/general_purpose/decode.rs:182:78-182:79)
  3: StorageDead(_18)
    SourceInfo(src/engine/general_purpose/decode.rs:182:78-182:79)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _17)
    SourceInfo(src/engine/general_purpose/decode.rs:182:16-182:80)
  5: StorageDead(_17)
    SourceInfo(src/engine/general_purpose/decode.rs:182:79-182:80)
  6: StorageDead(_20)
    SourceInfo(src/engine/general_purpose/decode.rs:182:80-182:81)
  7: StorageDead(_14)
    SourceInfo(src/engine/general_purpose/decode.rs:183:5-183:6)
  8: StorageDead(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:183:5-183:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb82
  }
  preds [bb4]
  succs [bb82]

bb6
  0: StorageDead(_15)
    SourceInfo(src/engine/general_purpose/decode.rs:181:30-181:31)
  1: _13 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:183:6-183:6)
  2: StorageDead(_14)
    SourceInfo(src/engine/general_purpose/decode.rs:183:5-183:6)
  3: StorageDead(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:183:5-183:6)
  4: StorageLive(_23)
    SourceInfo(src/engine/general_purpose/decode.rs:184:9-184:18)
  5: StorageLive(_24)
    SourceInfo(src/engine/general_purpose/decode.rs:184:21-184:38)
  6: StorageLive(_25)
    SourceInfo(src/engine/general_purpose/decode.rs:184:31-184:37)
  7: _25 = _5
    SourceInfo(src/engine/general_purpose/decode.rs:184:31-184:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:184:21-184:38)
      kind: _24 = <u64 as std::convert::From<u8>>::from(move _25) -> [return: bb7, unwind: bb84]
  }
  preds [bb3]
  succs [bb7, bb84]

bb7
  0: StorageDead(_25)
    SourceInfo(src/engine/general_purpose/decode.rs:184:37-184:38)
  1: _26 = const 58_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:184:21-184:44)
  2: _27 = Lt(move _26, const 64_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:184:21-184:44)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:184:21-184:44)
      kind: assert(move _27, "attempt to shift left by `{}`, which would overflow", const 58_i32) -> [success: bb8, unwind: bb84]
  }
  preds [bb6]
  succs [bb8, bb84]

bb8
  0: _23 = Shl(move _24, const 58_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:184:21-184:44)
  1: StorageDead(_24)
    SourceInfo(src/engine/general_purpose/decode.rs:184:43-184:44)
  2: FakeRead(ForLet(None), _23)
    SourceInfo(src/engine/general_purpose/decode.rs:184:9-184:18)
  3: StorageLive(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:186:9-186:15)
  4: StorageLive(_29)
    SourceInfo(src/engine/general_purpose/decode.rs:186:31-186:52)
  5: StorageLive(_30)
    SourceInfo(src/engine/general_purpose/decode.rs:186:43-186:51)
  6: StorageLive(_31)
    SourceInfo(src/engine/general_purpose/decode.rs:186:49-186:50)
  7: _31 = const 1_usize
    SourceInfo(src/engine/general_purpose/decode.rs:186:49-186:50)
  8: _32 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:186:43-186:51)
  9: _33 = Lt(_31, _32)
    SourceInfo(src/engine/general_purpose/decode.rs:186:43-186:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:186:43-186:51)
      kind: assert(move _33, "index out of bounds: the length is {} but the index is {}", move _32, _31) -> [success: bb9, unwind: bb84]
  }
  preds [bb7]
  succs [bb9, bb84]

bb9
  0: _30 = (*_1)[_31]
    SourceInfo(src/engine/general_purpose/decode.rs:186:43-186:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:186:31-186:52)
      kind: _29 = <usize as std::convert::From<u8>>::from(move _30) -> [return: bb10, unwind: bb84]
  }
  preds [bb8]
  succs [bb10, bb84]

bb10
  0: StorageDead(_30)
    SourceInfo(src/engine/general_purpose/decode.rs:186:51-186:52)
  1: _34 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:186:18-186:53)
  2: _35 = Lt(_29, _34)
    SourceInfo(src/engine/general_purpose/decode.rs:186:18-186:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:186:18-186:53)
      kind: assert(move _35, "index out of bounds: the length is {} but the index is {}", move _34, _29) -> [success: bb11, unwind: bb84]
  }
  preds [bb9]
  succs [bb11, bb84]

bb11
  0: _28 = (*_3)[_29]
    SourceInfo(src/engine/general_purpose/decode.rs:186:18-186:53)
  1: FakeRead(ForLet(None), _28)
    SourceInfo(src/engine/general_purpose/decode.rs:186:9-186:15)
  2: StorageDead(_31)
    SourceInfo(src/engine/general_purpose/decode.rs:186:53-186:54)
  3: StorageDead(_29)
    SourceInfo(src/engine/general_purpose/decode.rs:186:53-186:54)
  4: StorageLive(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:187:5-192:6)
  5: StorageLive(_37)
    SourceInfo(src/engine/general_purpose/decode.rs:187:8-187:31)
  6: StorageLive(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:187:8-187:14)
  7: _38 = _28
    SourceInfo(src/engine/general_purpose/decode.rs:187:8-187:14)
  8: _37 = Eq(move _38, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:187:8-187:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:187:8-187:31)
      kind: switchInt(move _37) -> [0: bb15, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb15]

bb12
  0: StorageDead(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:187:30-187:31)
  1: StorageLive(_40)
    SourceInfo(src/engine/general_purpose/decode.rs:188:20-191:10)
  2: StorageLive(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:189:13-189:40)
  3: StorageLive(_42)
    SourceInfo(src/engine/general_purpose/decode.rs:189:13-189:36)
  4: _42 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:189:13-189:36)
  5: _43 = AddWithOverflow(_42, const 1_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:189:13-189:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:189:13-189:40)
      kind: assert(!move (_43.1: bool), "attempt to compute `{} + {}`, which would overflow", move _42, const 1_usize) -> [success: bb13, unwind: bb84]
  }
  preds [bb11]
  succs [bb13, bb84]

bb13
  0: _41 = move (_43.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:189:13-189:40)
  1: StorageDead(_42)
    SourceInfo(src/engine/general_purpose/decode.rs:189:39-189:40)
  2: StorageLive(_44)
    SourceInfo(src/engine/general_purpose/decode.rs:190:13-190:21)
  3: StorageLive(_45)
    SourceInfo(src/engine/general_purpose/decode.rs:190:19-190:20)
  4: _45 = const 1_usize
    SourceInfo(src/engine/general_purpose/decode.rs:190:19-190:20)
  5: _46 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:190:13-190:21)
  6: _47 = Lt(_45, _46)
    SourceInfo(src/engine/general_purpose/decode.rs:190:13-190:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:190:13-190:21)
      kind: assert(move _47, "index out of bounds: the length is {} but the index is {}", move _46, _45) -> [success: bb14, unwind: bb84]
  }
  preds [bb12]
  succs [bb14, bb84]

bb14
  0: _44 = (*_1)[_45]
    SourceInfo(src/engine/general_purpose/decode.rs:190:13-190:21)
  1: _40 = decode::DecodeError::InvalidByte(move _41, move _44)
    SourceInfo(src/engine/general_purpose/decode.rs:188:20-191:10)
  2: StorageDead(_44)
    SourceInfo(src/engine/general_purpose/decode.rs:191:9-191:10)
  3: StorageDead(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:191:9-191:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _40)
    SourceInfo(src/engine/general_purpose/decode.rs:188:16-191:11)
  5: StorageDead(_40)
    SourceInfo(src/engine/general_purpose/decode.rs:191:10-191:11)
  6: StorageDead(_45)
    SourceInfo(src/engine/general_purpose/decode.rs:191:11-191:12)
  7: StorageDead(_37)
    SourceInfo(src/engine/general_purpose/decode.rs:192:5-192:6)
  8: StorageDead(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:192:5-192:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb81
  }
  preds [bb13]
  succs [bb81]

bb15
  0: StorageDead(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:187:30-187:31)
  1: _36 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:192:6-192:6)
  2: StorageDead(_37)
    SourceInfo(src/engine/general_purpose/decode.rs:192:5-192:6)
  3: StorageDead(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:192:5-192:6)
  4: StorageLive(_48)
    SourceInfo(src/engine/general_purpose/decode.rs:193:14-193:37)
  5: StorageLive(_49)
    SourceInfo(src/engine/general_purpose/decode.rs:193:14-193:31)
  6: StorageLive(_50)
    SourceInfo(src/engine/general_purpose/decode.rs:193:24-193:30)
  7: _50 = _28
    SourceInfo(src/engine/general_purpose/decode.rs:193:24-193:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:193:14-193:31)
      kind: _49 = <u64 as std::convert::From<u8>>::from(move _50) -> [return: bb16, unwind: bb84]
  }
  preds [bb11]
  succs [bb16, bb84]

bb16
  0: StorageDead(_50)
    SourceInfo(src/engine/general_purpose/decode.rs:193:30-193:31)
  1: _51 = const 52_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:193:14-193:37)
  2: _52 = Lt(move _51, const 64_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:193:14-193:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:193:14-193:37)
      kind: assert(move _52, "attempt to shift left by `{}`, which would overflow", const 52_i32) -> [success: bb17, unwind: bb84]
  }
  preds [bb15]
  succs [bb17, bb84]

bb17
  0: _48 = Shl(move _49, const 52_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:193:14-193:37)
  1: StorageDead(_49)
    SourceInfo(src/engine/general_purpose/decode.rs:193:36-193:37)
  2: _23 = BitOr(_23, move _48)
    SourceInfo(src/engine/general_purpose/decode.rs:193:5-193:37)
  3: StorageDead(_48)
    SourceInfo(src/engine/general_purpose/decode.rs:193:36-193:37)
  4: StorageLive(_53)
    SourceInfo(src/engine/general_purpose/decode.rs:195:9-195:15)
  5: StorageLive(_54)
    SourceInfo(src/engine/general_purpose/decode.rs:195:31-195:52)
  6: StorageLive(_55)
    SourceInfo(src/engine/general_purpose/decode.rs:195:43-195:51)
  7: StorageLive(_56)
    SourceInfo(src/engine/general_purpose/decode.rs:195:49-195:50)
  8: _56 = const 2_usize
    SourceInfo(src/engine/general_purpose/decode.rs:195:49-195:50)
  9: _57 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:195:43-195:51)
  10: _58 = Lt(_56, _57)
    SourceInfo(src/engine/general_purpose/decode.rs:195:43-195:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:195:43-195:51)
      kind: assert(move _58, "index out of bounds: the length is {} but the index is {}", move _57, _56) -> [success: bb18, unwind: bb84]
  }
  preds [bb16]
  succs [bb18, bb84]

bb18
  0: _55 = (*_1)[_56]
    SourceInfo(src/engine/general_purpose/decode.rs:195:43-195:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:195:31-195:52)
      kind: _54 = <usize as std::convert::From<u8>>::from(move _55) -> [return: bb19, unwind: bb84]
  }
  preds [bb17]
  succs [bb19, bb84]

bb19
  0: StorageDead(_55)
    SourceInfo(src/engine/general_purpose/decode.rs:195:51-195:52)
  1: _59 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:195:18-195:53)
  2: _60 = Lt(_54, _59)
    SourceInfo(src/engine/general_purpose/decode.rs:195:18-195:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:195:18-195:53)
      kind: assert(move _60, "index out of bounds: the length is {} but the index is {}", move _59, _54) -> [success: bb20, unwind: bb84]
  }
  preds [bb18]
  succs [bb20, bb84]

bb20
  0: _53 = (*_3)[_54]
    SourceInfo(src/engine/general_purpose/decode.rs:195:18-195:53)
  1: FakeRead(ForLet(None), _53)
    SourceInfo(src/engine/general_purpose/decode.rs:195:9-195:15)
  2: StorageDead(_56)
    SourceInfo(src/engine/general_purpose/decode.rs:195:53-195:54)
  3: StorageDead(_54)
    SourceInfo(src/engine/general_purpose/decode.rs:195:53-195:54)
  4: StorageLive(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:196:5-201:6)
  5: StorageLive(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:196:8-196:31)
  6: StorageLive(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:196:8-196:14)
  7: _63 = _53
    SourceInfo(src/engine/general_purpose/decode.rs:196:8-196:14)
  8: _62 = Eq(move _63, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:196:8-196:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:196:8-196:31)
      kind: switchInt(move _62) -> [0: bb24, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb24]

bb21
  0: StorageDead(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:196:30-196:31)
  1: StorageLive(_65)
    SourceInfo(src/engine/general_purpose/decode.rs:197:20-200:10)
  2: StorageLive(_66)
    SourceInfo(src/engine/general_purpose/decode.rs:198:13-198:40)
  3: StorageLive(_67)
    SourceInfo(src/engine/general_purpose/decode.rs:198:13-198:36)
  4: _67 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:198:13-198:36)
  5: _68 = AddWithOverflow(_67, const 2_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:198:13-198:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:198:13-198:40)
      kind: assert(!move (_68.1: bool), "attempt to compute `{} + {}`, which would overflow", move _67, const 2_usize) -> [success: bb22, unwind: bb84]
  }
  preds [bb20]
  succs [bb22, bb84]

bb22
  0: _66 = move (_68.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:198:13-198:40)
  1: StorageDead(_67)
    SourceInfo(src/engine/general_purpose/decode.rs:198:39-198:40)
  2: StorageLive(_69)
    SourceInfo(src/engine/general_purpose/decode.rs:199:13-199:21)
  3: StorageLive(_70)
    SourceInfo(src/engine/general_purpose/decode.rs:199:19-199:20)
  4: _70 = const 2_usize
    SourceInfo(src/engine/general_purpose/decode.rs:199:19-199:20)
  5: _71 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:199:13-199:21)
  6: _72 = Lt(_70, _71)
    SourceInfo(src/engine/general_purpose/decode.rs:199:13-199:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:199:13-199:21)
      kind: assert(move _72, "index out of bounds: the length is {} but the index is {}", move _71, _70) -> [success: bb23, unwind: bb84]
  }
  preds [bb21]
  succs [bb23, bb84]

bb23
  0: _69 = (*_1)[_70]
    SourceInfo(src/engine/general_purpose/decode.rs:199:13-199:21)
  1: _65 = decode::DecodeError::InvalidByte(move _66, move _69)
    SourceInfo(src/engine/general_purpose/decode.rs:197:20-200:10)
  2: StorageDead(_69)
    SourceInfo(src/engine/general_purpose/decode.rs:200:9-200:10)
  3: StorageDead(_66)
    SourceInfo(src/engine/general_purpose/decode.rs:200:9-200:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _65)
    SourceInfo(src/engine/general_purpose/decode.rs:197:16-200:11)
  5: StorageDead(_65)
    SourceInfo(src/engine/general_purpose/decode.rs:200:10-200:11)
  6: StorageDead(_70)
    SourceInfo(src/engine/general_purpose/decode.rs:200:11-200:12)
  7: StorageDead(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:201:5-201:6)
  8: StorageDead(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:201:5-201:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb22]
  succs [bb80]

bb24
  0: StorageDead(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:196:30-196:31)
  1: _61 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:201:6-201:6)
  2: StorageDead(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:201:5-201:6)
  3: StorageDead(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:201:5-201:6)
  4: StorageLive(_73)
    SourceInfo(src/engine/general_purpose/decode.rs:202:14-202:37)
  5: StorageLive(_74)
    SourceInfo(src/engine/general_purpose/decode.rs:202:14-202:31)
  6: StorageLive(_75)
    SourceInfo(src/engine/general_purpose/decode.rs:202:24-202:30)
  7: _75 = _53
    SourceInfo(src/engine/general_purpose/decode.rs:202:24-202:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:202:14-202:31)
      kind: _74 = <u64 as std::convert::From<u8>>::from(move _75) -> [return: bb25, unwind: bb84]
  }
  preds [bb20]
  succs [bb25, bb84]

bb25
  0: StorageDead(_75)
    SourceInfo(src/engine/general_purpose/decode.rs:202:30-202:31)
  1: _76 = const 46_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:202:14-202:37)
  2: _77 = Lt(move _76, const 64_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:202:14-202:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:202:14-202:37)
      kind: assert(move _77, "attempt to shift left by `{}`, which would overflow", const 46_i32) -> [success: bb26, unwind: bb84]
  }
  preds [bb24]
  succs [bb26, bb84]

bb26
  0: _73 = Shl(move _74, const 46_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:202:14-202:37)
  1: StorageDead(_74)
    SourceInfo(src/engine/general_purpose/decode.rs:202:36-202:37)
  2: _23 = BitOr(_23, move _73)
    SourceInfo(src/engine/general_purpose/decode.rs:202:5-202:37)
  3: StorageDead(_73)
    SourceInfo(src/engine/general_purpose/decode.rs:202:36-202:37)
  4: StorageLive(_78)
    SourceInfo(src/engine/general_purpose/decode.rs:204:9-204:15)
  5: StorageLive(_79)
    SourceInfo(src/engine/general_purpose/decode.rs:204:31-204:52)
  6: StorageLive(_80)
    SourceInfo(src/engine/general_purpose/decode.rs:204:43-204:51)
  7: StorageLive(_81)
    SourceInfo(src/engine/general_purpose/decode.rs:204:49-204:50)
  8: _81 = const 3_usize
    SourceInfo(src/engine/general_purpose/decode.rs:204:49-204:50)
  9: _82 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:204:43-204:51)
  10: _83 = Lt(_81, _82)
    SourceInfo(src/engine/general_purpose/decode.rs:204:43-204:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:204:43-204:51)
      kind: assert(move _83, "index out of bounds: the length is {} but the index is {}", move _82, _81) -> [success: bb27, unwind: bb84]
  }
  preds [bb25]
  succs [bb27, bb84]

bb27
  0: _80 = (*_1)[_81]
    SourceInfo(src/engine/general_purpose/decode.rs:204:43-204:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:204:31-204:52)
      kind: _79 = <usize as std::convert::From<u8>>::from(move _80) -> [return: bb28, unwind: bb84]
  }
  preds [bb26]
  succs [bb28, bb84]

bb28
  0: StorageDead(_80)
    SourceInfo(src/engine/general_purpose/decode.rs:204:51-204:52)
  1: _84 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:204:18-204:53)
  2: _85 = Lt(_79, _84)
    SourceInfo(src/engine/general_purpose/decode.rs:204:18-204:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:204:18-204:53)
      kind: assert(move _85, "index out of bounds: the length is {} but the index is {}", move _84, _79) -> [success: bb29, unwind: bb84]
  }
  preds [bb27]
  succs [bb29, bb84]

bb29
  0: _78 = (*_3)[_79]
    SourceInfo(src/engine/general_purpose/decode.rs:204:18-204:53)
  1: FakeRead(ForLet(None), _78)
    SourceInfo(src/engine/general_purpose/decode.rs:204:9-204:15)
  2: StorageDead(_81)
    SourceInfo(src/engine/general_purpose/decode.rs:204:53-204:54)
  3: StorageDead(_79)
    SourceInfo(src/engine/general_purpose/decode.rs:204:53-204:54)
  4: StorageLive(_86)
    SourceInfo(src/engine/general_purpose/decode.rs:205:5-210:6)
  5: StorageLive(_87)
    SourceInfo(src/engine/general_purpose/decode.rs:205:8-205:31)
  6: StorageLive(_88)
    SourceInfo(src/engine/general_purpose/decode.rs:205:8-205:14)
  7: _88 = _78
    SourceInfo(src/engine/general_purpose/decode.rs:205:8-205:14)
  8: _87 = Eq(move _88, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:205:8-205:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:205:8-205:31)
      kind: switchInt(move _87) -> [0: bb33, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb33]

bb30
  0: StorageDead(_88)
    SourceInfo(src/engine/general_purpose/decode.rs:205:30-205:31)
  1: StorageLive(_90)
    SourceInfo(src/engine/general_purpose/decode.rs:206:20-209:10)
  2: StorageLive(_91)
    SourceInfo(src/engine/general_purpose/decode.rs:207:13-207:40)
  3: StorageLive(_92)
    SourceInfo(src/engine/general_purpose/decode.rs:207:13-207:36)
  4: _92 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:207:13-207:36)
  5: _93 = AddWithOverflow(_92, const 3_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:207:13-207:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:207:13-207:40)
      kind: assert(!move (_93.1: bool), "attempt to compute `{} + {}`, which would overflow", move _92, const 3_usize) -> [success: bb31, unwind: bb84]
  }
  preds [bb29]
  succs [bb31, bb84]

bb31
  0: _91 = move (_93.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:207:13-207:40)
  1: StorageDead(_92)
    SourceInfo(src/engine/general_purpose/decode.rs:207:39-207:40)
  2: StorageLive(_94)
    SourceInfo(src/engine/general_purpose/decode.rs:208:13-208:21)
  3: StorageLive(_95)
    SourceInfo(src/engine/general_purpose/decode.rs:208:19-208:20)
  4: _95 = const 3_usize
    SourceInfo(src/engine/general_purpose/decode.rs:208:19-208:20)
  5: _96 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:208:13-208:21)
  6: _97 = Lt(_95, _96)
    SourceInfo(src/engine/general_purpose/decode.rs:208:13-208:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:208:13-208:21)
      kind: assert(move _97, "index out of bounds: the length is {} but the index is {}", move _96, _95) -> [success: bb32, unwind: bb84]
  }
  preds [bb30]
  succs [bb32, bb84]

bb32
  0: _94 = (*_1)[_95]
    SourceInfo(src/engine/general_purpose/decode.rs:208:13-208:21)
  1: _90 = decode::DecodeError::InvalidByte(move _91, move _94)
    SourceInfo(src/engine/general_purpose/decode.rs:206:20-209:10)
  2: StorageDead(_94)
    SourceInfo(src/engine/general_purpose/decode.rs:209:9-209:10)
  3: StorageDead(_91)
    SourceInfo(src/engine/general_purpose/decode.rs:209:9-209:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _90)
    SourceInfo(src/engine/general_purpose/decode.rs:206:16-209:11)
  5: StorageDead(_90)
    SourceInfo(src/engine/general_purpose/decode.rs:209:10-209:11)
  6: StorageDead(_95)
    SourceInfo(src/engine/general_purpose/decode.rs:209:11-209:12)
  7: StorageDead(_87)
    SourceInfo(src/engine/general_purpose/decode.rs:210:5-210:6)
  8: StorageDead(_86)
    SourceInfo(src/engine/general_purpose/decode.rs:210:5-210:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb31]
  succs [bb79]

bb33
  0: StorageDead(_88)
    SourceInfo(src/engine/general_purpose/decode.rs:205:30-205:31)
  1: _86 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:210:6-210:6)
  2: StorageDead(_87)
    SourceInfo(src/engine/general_purpose/decode.rs:210:5-210:6)
  3: StorageDead(_86)
    SourceInfo(src/engine/general_purpose/decode.rs:210:5-210:6)
  4: StorageLive(_98)
    SourceInfo(src/engine/general_purpose/decode.rs:211:14-211:37)
  5: StorageLive(_99)
    SourceInfo(src/engine/general_purpose/decode.rs:211:14-211:31)
  6: StorageLive(_100)
    SourceInfo(src/engine/general_purpose/decode.rs:211:24-211:30)
  7: _100 = _78
    SourceInfo(src/engine/general_purpose/decode.rs:211:24-211:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:211:14-211:31)
      kind: _99 = <u64 as std::convert::From<u8>>::from(move _100) -> [return: bb34, unwind: bb84]
  }
  preds [bb29]
  succs [bb34, bb84]

bb34
  0: StorageDead(_100)
    SourceInfo(src/engine/general_purpose/decode.rs:211:30-211:31)
  1: _101 = const 40_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:211:14-211:37)
  2: _102 = Lt(move _101, const 64_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:211:14-211:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:211:14-211:37)
      kind: assert(move _102, "attempt to shift left by `{}`, which would overflow", const 40_i32) -> [success: bb35, unwind: bb84]
  }
  preds [bb33]
  succs [bb35, bb84]

bb35
  0: _98 = Shl(move _99, const 40_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:211:14-211:37)
  1: StorageDead(_99)
    SourceInfo(src/engine/general_purpose/decode.rs:211:36-211:37)
  2: _23 = BitOr(_23, move _98)
    SourceInfo(src/engine/general_purpose/decode.rs:211:5-211:37)
  3: StorageDead(_98)
    SourceInfo(src/engine/general_purpose/decode.rs:211:36-211:37)
  4: StorageLive(_103)
    SourceInfo(src/engine/general_purpose/decode.rs:213:9-213:15)
  5: StorageLive(_104)
    SourceInfo(src/engine/general_purpose/decode.rs:213:31-213:52)
  6: StorageLive(_105)
    SourceInfo(src/engine/general_purpose/decode.rs:213:43-213:51)
  7: StorageLive(_106)
    SourceInfo(src/engine/general_purpose/decode.rs:213:49-213:50)
  8: _106 = const 4_usize
    SourceInfo(src/engine/general_purpose/decode.rs:213:49-213:50)
  9: _107 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:213:43-213:51)
  10: _108 = Lt(_106, _107)
    SourceInfo(src/engine/general_purpose/decode.rs:213:43-213:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:213:43-213:51)
      kind: assert(move _108, "index out of bounds: the length is {} but the index is {}", move _107, _106) -> [success: bb36, unwind: bb84]
  }
  preds [bb34]
  succs [bb36, bb84]

bb36
  0: _105 = (*_1)[_106]
    SourceInfo(src/engine/general_purpose/decode.rs:213:43-213:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:213:31-213:52)
      kind: _104 = <usize as std::convert::From<u8>>::from(move _105) -> [return: bb37, unwind: bb84]
  }
  preds [bb35]
  succs [bb37, bb84]

bb37
  0: StorageDead(_105)
    SourceInfo(src/engine/general_purpose/decode.rs:213:51-213:52)
  1: _109 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:213:18-213:53)
  2: _110 = Lt(_104, _109)
    SourceInfo(src/engine/general_purpose/decode.rs:213:18-213:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:213:18-213:53)
      kind: assert(move _110, "index out of bounds: the length is {} but the index is {}", move _109, _104) -> [success: bb38, unwind: bb84]
  }
  preds [bb36]
  succs [bb38, bb84]

bb38
  0: _103 = (*_3)[_104]
    SourceInfo(src/engine/general_purpose/decode.rs:213:18-213:53)
  1: FakeRead(ForLet(None), _103)
    SourceInfo(src/engine/general_purpose/decode.rs:213:9-213:15)
  2: StorageDead(_106)
    SourceInfo(src/engine/general_purpose/decode.rs:213:53-213:54)
  3: StorageDead(_104)
    SourceInfo(src/engine/general_purpose/decode.rs:213:53-213:54)
  4: StorageLive(_111)
    SourceInfo(src/engine/general_purpose/decode.rs:214:5-219:6)
  5: StorageLive(_112)
    SourceInfo(src/engine/general_purpose/decode.rs:214:8-214:31)
  6: StorageLive(_113)
    SourceInfo(src/engine/general_purpose/decode.rs:214:8-214:14)
  7: _113 = _103
    SourceInfo(src/engine/general_purpose/decode.rs:214:8-214:14)
  8: _112 = Eq(move _113, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:214:8-214:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:214:8-214:31)
      kind: switchInt(move _112) -> [0: bb42, otherwise: bb39]
  }
  preds [bb37]
  succs [bb39, bb42]

bb39
  0: StorageDead(_113)
    SourceInfo(src/engine/general_purpose/decode.rs:214:30-214:31)
  1: StorageLive(_115)
    SourceInfo(src/engine/general_purpose/decode.rs:215:20-218:10)
  2: StorageLive(_116)
    SourceInfo(src/engine/general_purpose/decode.rs:216:13-216:40)
  3: StorageLive(_117)
    SourceInfo(src/engine/general_purpose/decode.rs:216:13-216:36)
  4: _117 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:216:13-216:36)
  5: _118 = AddWithOverflow(_117, const 4_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:216:13-216:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:216:13-216:40)
      kind: assert(!move (_118.1: bool), "attempt to compute `{} + {}`, which would overflow", move _117, const 4_usize) -> [success: bb40, unwind: bb84]
  }
  preds [bb38]
  succs [bb40, bb84]

bb40
  0: _116 = move (_118.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:216:13-216:40)
  1: StorageDead(_117)
    SourceInfo(src/engine/general_purpose/decode.rs:216:39-216:40)
  2: StorageLive(_119)
    SourceInfo(src/engine/general_purpose/decode.rs:217:13-217:21)
  3: StorageLive(_120)
    SourceInfo(src/engine/general_purpose/decode.rs:217:19-217:20)
  4: _120 = const 4_usize
    SourceInfo(src/engine/general_purpose/decode.rs:217:19-217:20)
  5: _121 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:217:13-217:21)
  6: _122 = Lt(_120, _121)
    SourceInfo(src/engine/general_purpose/decode.rs:217:13-217:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:217:13-217:21)
      kind: assert(move _122, "index out of bounds: the length is {} but the index is {}", move _121, _120) -> [success: bb41, unwind: bb84]
  }
  preds [bb39]
  succs [bb41, bb84]

bb41
  0: _119 = (*_1)[_120]
    SourceInfo(src/engine/general_purpose/decode.rs:217:13-217:21)
  1: _115 = decode::DecodeError::InvalidByte(move _116, move _119)
    SourceInfo(src/engine/general_purpose/decode.rs:215:20-218:10)
  2: StorageDead(_119)
    SourceInfo(src/engine/general_purpose/decode.rs:218:9-218:10)
  3: StorageDead(_116)
    SourceInfo(src/engine/general_purpose/decode.rs:218:9-218:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _115)
    SourceInfo(src/engine/general_purpose/decode.rs:215:16-218:11)
  5: StorageDead(_115)
    SourceInfo(src/engine/general_purpose/decode.rs:218:10-218:11)
  6: StorageDead(_120)
    SourceInfo(src/engine/general_purpose/decode.rs:218:11-218:12)
  7: StorageDead(_112)
    SourceInfo(src/engine/general_purpose/decode.rs:219:5-219:6)
  8: StorageDead(_111)
    SourceInfo(src/engine/general_purpose/decode.rs:219:5-219:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb40]
  succs [bb78]

bb42
  0: StorageDead(_113)
    SourceInfo(src/engine/general_purpose/decode.rs:214:30-214:31)
  1: _111 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:219:6-219:6)
  2: StorageDead(_112)
    SourceInfo(src/engine/general_purpose/decode.rs:219:5-219:6)
  3: StorageDead(_111)
    SourceInfo(src/engine/general_purpose/decode.rs:219:5-219:6)
  4: StorageLive(_123)
    SourceInfo(src/engine/general_purpose/decode.rs:220:14-220:37)
  5: StorageLive(_124)
    SourceInfo(src/engine/general_purpose/decode.rs:220:14-220:31)
  6: StorageLive(_125)
    SourceInfo(src/engine/general_purpose/decode.rs:220:24-220:30)
  7: _125 = _103
    SourceInfo(src/engine/general_purpose/decode.rs:220:24-220:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:220:14-220:31)
      kind: _124 = <u64 as std::convert::From<u8>>::from(move _125) -> [return: bb43, unwind: bb84]
  }
  preds [bb38]
  succs [bb43, bb84]

bb43
  0: StorageDead(_125)
    SourceInfo(src/engine/general_purpose/decode.rs:220:30-220:31)
  1: _126 = const 34_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:220:14-220:37)
  2: _127 = Lt(move _126, const 64_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:220:14-220:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:220:14-220:37)
      kind: assert(move _127, "attempt to shift left by `{}`, which would overflow", const 34_i32) -> [success: bb44, unwind: bb84]
  }
  preds [bb42]
  succs [bb44, bb84]

bb44
  0: _123 = Shl(move _124, const 34_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:220:14-220:37)
  1: StorageDead(_124)
    SourceInfo(src/engine/general_purpose/decode.rs:220:36-220:37)
  2: _23 = BitOr(_23, move _123)
    SourceInfo(src/engine/general_purpose/decode.rs:220:5-220:37)
  3: StorageDead(_123)
    SourceInfo(src/engine/general_purpose/decode.rs:220:36-220:37)
  4: StorageLive(_128)
    SourceInfo(src/engine/general_purpose/decode.rs:222:9-222:15)
  5: StorageLive(_129)
    SourceInfo(src/engine/general_purpose/decode.rs:222:31-222:52)
  6: StorageLive(_130)
    SourceInfo(src/engine/general_purpose/decode.rs:222:43-222:51)
  7: StorageLive(_131)
    SourceInfo(src/engine/general_purpose/decode.rs:222:49-222:50)
  8: _131 = const 5_usize
    SourceInfo(src/engine/general_purpose/decode.rs:222:49-222:50)
  9: _132 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:222:43-222:51)
  10: _133 = Lt(_131, _132)
    SourceInfo(src/engine/general_purpose/decode.rs:222:43-222:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:222:43-222:51)
      kind: assert(move _133, "index out of bounds: the length is {} but the index is {}", move _132, _131) -> [success: bb45, unwind: bb84]
  }
  preds [bb43]
  succs [bb45, bb84]

bb45
  0: _130 = (*_1)[_131]
    SourceInfo(src/engine/general_purpose/decode.rs:222:43-222:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:222:31-222:52)
      kind: _129 = <usize as std::convert::From<u8>>::from(move _130) -> [return: bb46, unwind: bb84]
  }
  preds [bb44]
  succs [bb46, bb84]

bb46
  0: StorageDead(_130)
    SourceInfo(src/engine/general_purpose/decode.rs:222:51-222:52)
  1: _134 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:222:18-222:53)
  2: _135 = Lt(_129, _134)
    SourceInfo(src/engine/general_purpose/decode.rs:222:18-222:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:222:18-222:53)
      kind: assert(move _135, "index out of bounds: the length is {} but the index is {}", move _134, _129) -> [success: bb47, unwind: bb84]
  }
  preds [bb45]
  succs [bb47, bb84]

bb47
  0: _128 = (*_3)[_129]
    SourceInfo(src/engine/general_purpose/decode.rs:222:18-222:53)
  1: FakeRead(ForLet(None), _128)
    SourceInfo(src/engine/general_purpose/decode.rs:222:9-222:15)
  2: StorageDead(_131)
    SourceInfo(src/engine/general_purpose/decode.rs:222:53-222:54)
  3: StorageDead(_129)
    SourceInfo(src/engine/general_purpose/decode.rs:222:53-222:54)
  4: StorageLive(_136)
    SourceInfo(src/engine/general_purpose/decode.rs:223:5-228:6)
  5: StorageLive(_137)
    SourceInfo(src/engine/general_purpose/decode.rs:223:8-223:31)
  6: StorageLive(_138)
    SourceInfo(src/engine/general_purpose/decode.rs:223:8-223:14)
  7: _138 = _128
    SourceInfo(src/engine/general_purpose/decode.rs:223:8-223:14)
  8: _137 = Eq(move _138, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:223:8-223:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:223:8-223:31)
      kind: switchInt(move _137) -> [0: bb51, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb51]

bb48
  0: StorageDead(_138)
    SourceInfo(src/engine/general_purpose/decode.rs:223:30-223:31)
  1: StorageLive(_140)
    SourceInfo(src/engine/general_purpose/decode.rs:224:20-227:10)
  2: StorageLive(_141)
    SourceInfo(src/engine/general_purpose/decode.rs:225:13-225:40)
  3: StorageLive(_142)
    SourceInfo(src/engine/general_purpose/decode.rs:225:13-225:36)
  4: _142 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:225:13-225:36)
  5: _143 = AddWithOverflow(_142, const 5_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:225:13-225:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:225:13-225:40)
      kind: assert(!move (_143.1: bool), "attempt to compute `{} + {}`, which would overflow", move _142, const 5_usize) -> [success: bb49, unwind: bb84]
  }
  preds [bb47]
  succs [bb49, bb84]

bb49
  0: _141 = move (_143.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:225:13-225:40)
  1: StorageDead(_142)
    SourceInfo(src/engine/general_purpose/decode.rs:225:39-225:40)
  2: StorageLive(_144)
    SourceInfo(src/engine/general_purpose/decode.rs:226:13-226:21)
  3: StorageLive(_145)
    SourceInfo(src/engine/general_purpose/decode.rs:226:19-226:20)
  4: _145 = const 5_usize
    SourceInfo(src/engine/general_purpose/decode.rs:226:19-226:20)
  5: _146 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:226:13-226:21)
  6: _147 = Lt(_145, _146)
    SourceInfo(src/engine/general_purpose/decode.rs:226:13-226:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:226:13-226:21)
      kind: assert(move _147, "index out of bounds: the length is {} but the index is {}", move _146, _145) -> [success: bb50, unwind: bb84]
  }
  preds [bb48]
  succs [bb50, bb84]

bb50
  0: _144 = (*_1)[_145]
    SourceInfo(src/engine/general_purpose/decode.rs:226:13-226:21)
  1: _140 = decode::DecodeError::InvalidByte(move _141, move _144)
    SourceInfo(src/engine/general_purpose/decode.rs:224:20-227:10)
  2: StorageDead(_144)
    SourceInfo(src/engine/general_purpose/decode.rs:227:9-227:10)
  3: StorageDead(_141)
    SourceInfo(src/engine/general_purpose/decode.rs:227:9-227:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _140)
    SourceInfo(src/engine/general_purpose/decode.rs:224:16-227:11)
  5: StorageDead(_140)
    SourceInfo(src/engine/general_purpose/decode.rs:227:10-227:11)
  6: StorageDead(_145)
    SourceInfo(src/engine/general_purpose/decode.rs:227:11-227:12)
  7: StorageDead(_137)
    SourceInfo(src/engine/general_purpose/decode.rs:228:5-228:6)
  8: StorageDead(_136)
    SourceInfo(src/engine/general_purpose/decode.rs:228:5-228:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb49]
  succs [bb77]

bb51
  0: StorageDead(_138)
    SourceInfo(src/engine/general_purpose/decode.rs:223:30-223:31)
  1: _136 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:228:6-228:6)
  2: StorageDead(_137)
    SourceInfo(src/engine/general_purpose/decode.rs:228:5-228:6)
  3: StorageDead(_136)
    SourceInfo(src/engine/general_purpose/decode.rs:228:5-228:6)
  4: StorageLive(_148)
    SourceInfo(src/engine/general_purpose/decode.rs:229:14-229:37)
  5: StorageLive(_149)
    SourceInfo(src/engine/general_purpose/decode.rs:229:14-229:31)
  6: StorageLive(_150)
    SourceInfo(src/engine/general_purpose/decode.rs:229:24-229:30)
  7: _150 = _128
    SourceInfo(src/engine/general_purpose/decode.rs:229:24-229:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:229:14-229:31)
      kind: _149 = <u64 as std::convert::From<u8>>::from(move _150) -> [return: bb52, unwind: bb84]
  }
  preds [bb47]
  succs [bb52, bb84]

bb52
  0: StorageDead(_150)
    SourceInfo(src/engine/general_purpose/decode.rs:229:30-229:31)
  1: _151 = const 28_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:229:14-229:37)
  2: _152 = Lt(move _151, const 64_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:229:14-229:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:229:14-229:37)
      kind: assert(move _152, "attempt to shift left by `{}`, which would overflow", const 28_i32) -> [success: bb53, unwind: bb84]
  }
  preds [bb51]
  succs [bb53, bb84]

bb53
  0: _148 = Shl(move _149, const 28_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:229:14-229:37)
  1: StorageDead(_149)
    SourceInfo(src/engine/general_purpose/decode.rs:229:36-229:37)
  2: _23 = BitOr(_23, move _148)
    SourceInfo(src/engine/general_purpose/decode.rs:229:5-229:37)
  3: StorageDead(_148)
    SourceInfo(src/engine/general_purpose/decode.rs:229:36-229:37)
  4: StorageLive(_153)
    SourceInfo(src/engine/general_purpose/decode.rs:231:9-231:15)
  5: StorageLive(_154)
    SourceInfo(src/engine/general_purpose/decode.rs:231:31-231:52)
  6: StorageLive(_155)
    SourceInfo(src/engine/general_purpose/decode.rs:231:43-231:51)
  7: StorageLive(_156)
    SourceInfo(src/engine/general_purpose/decode.rs:231:49-231:50)
  8: _156 = const 6_usize
    SourceInfo(src/engine/general_purpose/decode.rs:231:49-231:50)
  9: _157 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:231:43-231:51)
  10: _158 = Lt(_156, _157)
    SourceInfo(src/engine/general_purpose/decode.rs:231:43-231:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:231:43-231:51)
      kind: assert(move _158, "index out of bounds: the length is {} but the index is {}", move _157, _156) -> [success: bb54, unwind: bb84]
  }
  preds [bb52]
  succs [bb54, bb84]

bb54
  0: _155 = (*_1)[_156]
    SourceInfo(src/engine/general_purpose/decode.rs:231:43-231:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:231:31-231:52)
      kind: _154 = <usize as std::convert::From<u8>>::from(move _155) -> [return: bb55, unwind: bb84]
  }
  preds [bb53]
  succs [bb55, bb84]

bb55
  0: StorageDead(_155)
    SourceInfo(src/engine/general_purpose/decode.rs:231:51-231:52)
  1: _159 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:231:18-231:53)
  2: _160 = Lt(_154, _159)
    SourceInfo(src/engine/general_purpose/decode.rs:231:18-231:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:231:18-231:53)
      kind: assert(move _160, "index out of bounds: the length is {} but the index is {}", move _159, _154) -> [success: bb56, unwind: bb84]
  }
  preds [bb54]
  succs [bb56, bb84]

bb56
  0: _153 = (*_3)[_154]
    SourceInfo(src/engine/general_purpose/decode.rs:231:18-231:53)
  1: FakeRead(ForLet(None), _153)
    SourceInfo(src/engine/general_purpose/decode.rs:231:9-231:15)
  2: StorageDead(_156)
    SourceInfo(src/engine/general_purpose/decode.rs:231:53-231:54)
  3: StorageDead(_154)
    SourceInfo(src/engine/general_purpose/decode.rs:231:53-231:54)
  4: StorageLive(_161)
    SourceInfo(src/engine/general_purpose/decode.rs:232:5-237:6)
  5: StorageLive(_162)
    SourceInfo(src/engine/general_purpose/decode.rs:232:8-232:31)
  6: StorageLive(_163)
    SourceInfo(src/engine/general_purpose/decode.rs:232:8-232:14)
  7: _163 = _153
    SourceInfo(src/engine/general_purpose/decode.rs:232:8-232:14)
  8: _162 = Eq(move _163, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:232:8-232:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:232:8-232:31)
      kind: switchInt(move _162) -> [0: bb60, otherwise: bb57]
  }
  preds [bb55]
  succs [bb57, bb60]

bb57
  0: StorageDead(_163)
    SourceInfo(src/engine/general_purpose/decode.rs:232:30-232:31)
  1: StorageLive(_165)
    SourceInfo(src/engine/general_purpose/decode.rs:233:20-236:10)
  2: StorageLive(_166)
    SourceInfo(src/engine/general_purpose/decode.rs:234:13-234:40)
  3: StorageLive(_167)
    SourceInfo(src/engine/general_purpose/decode.rs:234:13-234:36)
  4: _167 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:234:13-234:36)
  5: _168 = AddWithOverflow(_167, const 6_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:234:13-234:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:234:13-234:40)
      kind: assert(!move (_168.1: bool), "attempt to compute `{} + {}`, which would overflow", move _167, const 6_usize) -> [success: bb58, unwind: bb84]
  }
  preds [bb56]
  succs [bb58, bb84]

bb58
  0: _166 = move (_168.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:234:13-234:40)
  1: StorageDead(_167)
    SourceInfo(src/engine/general_purpose/decode.rs:234:39-234:40)
  2: StorageLive(_169)
    SourceInfo(src/engine/general_purpose/decode.rs:235:13-235:21)
  3: StorageLive(_170)
    SourceInfo(src/engine/general_purpose/decode.rs:235:19-235:20)
  4: _170 = const 6_usize
    SourceInfo(src/engine/general_purpose/decode.rs:235:19-235:20)
  5: _171 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:235:13-235:21)
  6: _172 = Lt(_170, _171)
    SourceInfo(src/engine/general_purpose/decode.rs:235:13-235:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:235:13-235:21)
      kind: assert(move _172, "index out of bounds: the length is {} but the index is {}", move _171, _170) -> [success: bb59, unwind: bb84]
  }
  preds [bb57]
  succs [bb59, bb84]

bb59
  0: _169 = (*_1)[_170]
    SourceInfo(src/engine/general_purpose/decode.rs:235:13-235:21)
  1: _165 = decode::DecodeError::InvalidByte(move _166, move _169)
    SourceInfo(src/engine/general_purpose/decode.rs:233:20-236:10)
  2: StorageDead(_169)
    SourceInfo(src/engine/general_purpose/decode.rs:236:9-236:10)
  3: StorageDead(_166)
    SourceInfo(src/engine/general_purpose/decode.rs:236:9-236:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _165)
    SourceInfo(src/engine/general_purpose/decode.rs:233:16-236:11)
  5: StorageDead(_165)
    SourceInfo(src/engine/general_purpose/decode.rs:236:10-236:11)
  6: StorageDead(_170)
    SourceInfo(src/engine/general_purpose/decode.rs:236:11-236:12)
  7: StorageDead(_162)
    SourceInfo(src/engine/general_purpose/decode.rs:237:5-237:6)
  8: StorageDead(_161)
    SourceInfo(src/engine/general_purpose/decode.rs:237:5-237:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb58]
  succs [bb76]

bb60
  0: StorageDead(_163)
    SourceInfo(src/engine/general_purpose/decode.rs:232:30-232:31)
  1: _161 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:237:6-237:6)
  2: StorageDead(_162)
    SourceInfo(src/engine/general_purpose/decode.rs:237:5-237:6)
  3: StorageDead(_161)
    SourceInfo(src/engine/general_purpose/decode.rs:237:5-237:6)
  4: StorageLive(_173)
    SourceInfo(src/engine/general_purpose/decode.rs:238:14-238:37)
  5: StorageLive(_174)
    SourceInfo(src/engine/general_purpose/decode.rs:238:14-238:31)
  6: StorageLive(_175)
    SourceInfo(src/engine/general_purpose/decode.rs:238:24-238:30)
  7: _175 = _153
    SourceInfo(src/engine/general_purpose/decode.rs:238:24-238:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:238:14-238:31)
      kind: _174 = <u64 as std::convert::From<u8>>::from(move _175) -> [return: bb61, unwind: bb84]
  }
  preds [bb56]
  succs [bb61, bb84]

bb61
  0: StorageDead(_175)
    SourceInfo(src/engine/general_purpose/decode.rs:238:30-238:31)
  1: _176 = const 22_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:238:14-238:37)
  2: _177 = Lt(move _176, const 64_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:238:14-238:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:238:14-238:37)
      kind: assert(move _177, "attempt to shift left by `{}`, which would overflow", const 22_i32) -> [success: bb62, unwind: bb84]
  }
  preds [bb60]
  succs [bb62, bb84]

bb62
  0: _173 = Shl(move _174, const 22_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:238:14-238:37)
  1: StorageDead(_174)
    SourceInfo(src/engine/general_purpose/decode.rs:238:36-238:37)
  2: _23 = BitOr(_23, move _173)
    SourceInfo(src/engine/general_purpose/decode.rs:238:5-238:37)
  3: StorageDead(_173)
    SourceInfo(src/engine/general_purpose/decode.rs:238:36-238:37)
  4: StorageLive(_178)
    SourceInfo(src/engine/general_purpose/decode.rs:240:9-240:15)
  5: StorageLive(_179)
    SourceInfo(src/engine/general_purpose/decode.rs:240:31-240:52)
  6: StorageLive(_180)
    SourceInfo(src/engine/general_purpose/decode.rs:240:43-240:51)
  7: StorageLive(_181)
    SourceInfo(src/engine/general_purpose/decode.rs:240:49-240:50)
  8: _181 = const 7_usize
    SourceInfo(src/engine/general_purpose/decode.rs:240:49-240:50)
  9: _182 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:240:43-240:51)
  10: _183 = Lt(_181, _182)
    SourceInfo(src/engine/general_purpose/decode.rs:240:43-240:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:240:43-240:51)
      kind: assert(move _183, "index out of bounds: the length is {} but the index is {}", move _182, _181) -> [success: bb63, unwind: bb84]
  }
  preds [bb61]
  succs [bb63, bb84]

bb63
  0: _180 = (*_1)[_181]
    SourceInfo(src/engine/general_purpose/decode.rs:240:43-240:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:240:31-240:52)
      kind: _179 = <usize as std::convert::From<u8>>::from(move _180) -> [return: bb64, unwind: bb84]
  }
  preds [bb62]
  succs [bb64, bb84]

bb64
  0: StorageDead(_180)
    SourceInfo(src/engine/general_purpose/decode.rs:240:51-240:52)
  1: _184 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:240:18-240:53)
  2: _185 = Lt(_179, _184)
    SourceInfo(src/engine/general_purpose/decode.rs:240:18-240:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:240:18-240:53)
      kind: assert(move _185, "index out of bounds: the length is {} but the index is {}", move _184, _179) -> [success: bb65, unwind: bb84]
  }
  preds [bb63]
  succs [bb65, bb84]

bb65
  0: _178 = (*_3)[_179]
    SourceInfo(src/engine/general_purpose/decode.rs:240:18-240:53)
  1: FakeRead(ForLet(None), _178)
    SourceInfo(src/engine/general_purpose/decode.rs:240:9-240:15)
  2: StorageDead(_181)
    SourceInfo(src/engine/general_purpose/decode.rs:240:53-240:54)
  3: StorageDead(_179)
    SourceInfo(src/engine/general_purpose/decode.rs:240:53-240:54)
  4: StorageLive(_186)
    SourceInfo(src/engine/general_purpose/decode.rs:241:5-246:6)
  5: StorageLive(_187)
    SourceInfo(src/engine/general_purpose/decode.rs:241:8-241:31)
  6: StorageLive(_188)
    SourceInfo(src/engine/general_purpose/decode.rs:241:8-241:14)
  7: _188 = _178
    SourceInfo(src/engine/general_purpose/decode.rs:241:8-241:14)
  8: _187 = Eq(move _188, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:241:8-241:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:241:8-241:31)
      kind: switchInt(move _187) -> [0: bb69, otherwise: bb66]
  }
  preds [bb64]
  succs [bb66, bb69]

bb66
  0: StorageDead(_188)
    SourceInfo(src/engine/general_purpose/decode.rs:241:30-241:31)
  1: StorageLive(_190)
    SourceInfo(src/engine/general_purpose/decode.rs:242:20-245:10)
  2: StorageLive(_191)
    SourceInfo(src/engine/general_purpose/decode.rs:243:13-243:40)
  3: StorageLive(_192)
    SourceInfo(src/engine/general_purpose/decode.rs:243:13-243:36)
  4: _192 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:243:13-243:36)
  5: _193 = AddWithOverflow(_192, const 7_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:243:13-243:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:243:13-243:40)
      kind: assert(!move (_193.1: bool), "attempt to compute `{} + {}`, which would overflow", move _192, const 7_usize) -> [success: bb67, unwind: bb84]
  }
  preds [bb65]
  succs [bb67, bb84]

bb67
  0: _191 = move (_193.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:243:13-243:40)
  1: StorageDead(_192)
    SourceInfo(src/engine/general_purpose/decode.rs:243:39-243:40)
  2: StorageLive(_194)
    SourceInfo(src/engine/general_purpose/decode.rs:244:13-244:21)
  3: StorageLive(_195)
    SourceInfo(src/engine/general_purpose/decode.rs:244:19-244:20)
  4: _195 = const 7_usize
    SourceInfo(src/engine/general_purpose/decode.rs:244:19-244:20)
  5: _196 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:244:13-244:21)
  6: _197 = Lt(_195, _196)
    SourceInfo(src/engine/general_purpose/decode.rs:244:13-244:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:244:13-244:21)
      kind: assert(move _197, "index out of bounds: the length is {} but the index is {}", move _196, _195) -> [success: bb68, unwind: bb84]
  }
  preds [bb66]
  succs [bb68, bb84]

bb68
  0: _194 = (*_1)[_195]
    SourceInfo(src/engine/general_purpose/decode.rs:244:13-244:21)
  1: _190 = decode::DecodeError::InvalidByte(move _191, move _194)
    SourceInfo(src/engine/general_purpose/decode.rs:242:20-245:10)
  2: StorageDead(_194)
    SourceInfo(src/engine/general_purpose/decode.rs:245:9-245:10)
  3: StorageDead(_191)
    SourceInfo(src/engine/general_purpose/decode.rs:245:9-245:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _190)
    SourceInfo(src/engine/general_purpose/decode.rs:242:16-245:11)
  5: StorageDead(_190)
    SourceInfo(src/engine/general_purpose/decode.rs:245:10-245:11)
  6: StorageDead(_195)
    SourceInfo(src/engine/general_purpose/decode.rs:245:11-245:12)
  7: StorageDead(_187)
    SourceInfo(src/engine/general_purpose/decode.rs:246:5-246:6)
  8: StorageDead(_186)
    SourceInfo(src/engine/general_purpose/decode.rs:246:5-246:6)
  9: StorageDead(_178)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb67]
  succs [bb76]

bb69
  0: StorageDead(_188)
    SourceInfo(src/engine/general_purpose/decode.rs:241:30-241:31)
  1: _186 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:246:6-246:6)
  2: StorageDead(_187)
    SourceInfo(src/engine/general_purpose/decode.rs:246:5-246:6)
  3: StorageDead(_186)
    SourceInfo(src/engine/general_purpose/decode.rs:246:5-246:6)
  4: StorageLive(_198)
    SourceInfo(src/engine/general_purpose/decode.rs:247:14-247:37)
  5: StorageLive(_199)
    SourceInfo(src/engine/general_purpose/decode.rs:247:14-247:31)
  6: StorageLive(_200)
    SourceInfo(src/engine/general_purpose/decode.rs:247:24-247:30)
  7: _200 = _178
    SourceInfo(src/engine/general_purpose/decode.rs:247:24-247:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:247:14-247:31)
      kind: _199 = <u64 as std::convert::From<u8>>::from(move _200) -> [return: bb70, unwind: bb84]
  }
  preds [bb65]
  succs [bb70, bb84]

bb70
  0: StorageDead(_200)
    SourceInfo(src/engine/general_purpose/decode.rs:247:30-247:31)
  1: _201 = const 16_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:247:14-247:37)
  2: _202 = Lt(move _201, const 64_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:247:14-247:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:247:14-247:37)
      kind: assert(move _202, "attempt to shift left by `{}`, which would overflow", const 16_i32) -> [success: bb71, unwind: bb84]
  }
  preds [bb69]
  succs [bb71, bb84]

bb71
  0: _198 = Shl(move _199, const 16_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:247:14-247:37)
  1: StorageDead(_199)
    SourceInfo(src/engine/general_purpose/decode.rs:247:36-247:37)
  2: _23 = BitOr(_23, move _198)
    SourceInfo(src/engine/general_purpose/decode.rs:247:5-247:37)
  3: StorageDead(_198)
    SourceInfo(src/engine/general_purpose/decode.rs:247:36-247:37)
  4: StorageLive(_203)
    SourceInfo(src/engine/general_purpose/decode.rs:249:5-249:59)
  5: StorageLive(_204)
    SourceInfo(src/engine/general_purpose/decode.rs:249:5-249:16)
  6: StorageLive(_205)
    SourceInfo(src/engine/general_purpose/decode.rs:249:11-249:16)
  7: StorageLive(_206)
    SourceInfo(src/engine/general_purpose/decode.rs:249:5-249:11)
  8: _206 = &mut (*_4)
    SourceInfo(src/engine/general_purpose/decode.rs:249:5-249:11)
  9: StorageLive(_207)
    SourceInfo(src/engine/general_purpose/decode.rs:249:12-249:15)
  10: _207 = std::ops::RangeTo::<usize> { end: const 6_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:249:12-249:15)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:249:11-249:16)
      kind: _205 = <[u8] as std::ops::IndexMut<std::ops::RangeTo<usize>>>::index_mut(move _206, move _207) -> [return: bb72, unwind: bb84]
  }
  preds [bb70]
  succs [bb72, bb84]

bb72
  0: _204 = &mut (*_205)
    SourceInfo(src/engine/general_purpose/decode.rs:249:5-249:16)
  1: StorageDead(_207)
    SourceInfo(src/engine/general_purpose/decode.rs:249:15-249:16)
  2: StorageDead(_206)
    SourceInfo(src/engine/general_purpose/decode.rs:249:15-249:16)
  3: StorageLive(_208)
    SourceInfo(src/engine/general_purpose/decode.rs:249:33-249:58)
  4: StorageLive(_209)
    SourceInfo(src/engine/general_purpose/decode.rs:249:33-249:58)
  5: StorageLive(_210)
    SourceInfo(src/engine/general_purpose/decode.rs:249:53-249:58)
  6: StorageLive(_211)
    SourceInfo(src/engine/general_purpose/decode.rs:249:34-249:53)
  7: StorageLive(_212)
    SourceInfo(src/engine/general_purpose/decode.rs:249:34-249:53)
  8: StorageLive(_213)
    SourceInfo(src/engine/general_purpose/decode.rs:249:34-249:39)
  9: _213 = _23
    SourceInfo(src/engine/general_purpose/decode.rs:249:34-249:39)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:249:34-249:53)
      kind: _212 = core::num::<impl u64>::to_be_bytes(move _213) -> [return: bb73, unwind: bb84]
  }
  preds [bb71]
  succs [bb73, bb84]

bb73
  0: _211 = &_212
    SourceInfo(src/engine/general_purpose/decode.rs:249:34-249:53)
  1: StorageDead(_213)
    SourceInfo(src/engine/general_purpose/decode.rs:249:52-249:53)
  2: StorageLive(_214)
    SourceInfo(src/engine/general_purpose/decode.rs:249:54-249:57)
  3: _214 = std::ops::RangeTo::<usize> { end: const 6_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:249:54-249:57)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:249:53-249:58)
      kind: _210 = <[u8; 8] as std::ops::Index<std::ops::RangeTo<usize>>>::index(move _211, move _214) -> [return: bb74, unwind: bb84]
  }
  preds [bb72]
  succs [bb74, bb84]

bb74
  0: StorageDead(_214)
    SourceInfo(src/engine/general_purpose/decode.rs:249:57-249:58)
  1: StorageDead(_211)
    SourceInfo(src/engine/general_purpose/decode.rs:249:57-249:58)
  2: _209 = &(*_210)
    SourceInfo(src/engine/general_purpose/decode.rs:249:33-249:58)
  3: _208 = &(*_209)
    SourceInfo(src/engine/general_purpose/decode.rs:249:33-249:58)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:249:5-249:59)
      kind: _203 = core::slice::<impl [u8]>::copy_from_slice(move _204, move _208) -> [return: bb75, unwind: bb84]
  }
  preds [bb73]
  succs [bb75, bb84]

bb75
  0: StorageDead(_208)
    SourceInfo(src/engine/general_purpose/decode.rs:249:58-249:59)
  1: StorageDead(_204)
    SourceInfo(src/engine/general_purpose/decode.rs:249:58-249:59)
  2: StorageDead(_212)
    SourceInfo(src/engine/general_purpose/decode.rs:249:59-249:60)
  3: StorageDead(_210)
    SourceInfo(src/engine/general_purpose/decode.rs:249:59-249:60)
  4: StorageDead(_209)
    SourceInfo(src/engine/general_purpose/decode.rs:249:59-249:60)
  5: StorageDead(_205)
    SourceInfo(src/engine/general_purpose/decode.rs:249:59-249:60)
  6: StorageDead(_203)
    SourceInfo(src/engine/general_purpose/decode.rs:249:59-249:60)
  7: StorageLive(_215)
    SourceInfo(src/engine/general_purpose/decode.rs:251:8-251:10)
  8: _215 = ()
    SourceInfo(src/engine/general_purpose/decode.rs:251:8-251:10)
  9: _0 = std::result::Result::<(), decode::DecodeError>::Ok(move _215)
    SourceInfo(src/engine/general_purpose/decode.rs:251:5-251:11)
  10: StorageDead(_215)
    SourceInfo(src/engine/general_purpose/decode.rs:251:10-251:11)
  11: StorageDead(_178)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  12: StorageDead(_153)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  13: StorageDead(_128)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  14: StorageDead(_103)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  15: StorageDead(_78)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  16: StorageDead(_53)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  17: StorageDead(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  18: StorageDead(_23)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  19: StorageDead(_5)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:252:2-252:2)
      kind: goto -> bb83
  }
  preds [bb74]
  succs [bb83]

bb76
  0: StorageDead(_153)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb59, bb68]
  succs [bb77]

bb77
  0: StorageDead(_128)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb50, bb76]
  succs [bb78]

bb78
  0: StorageDead(_103)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb41, bb77]
  succs [bb79]

bb79
  0: StorageDead(_78)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb32, bb78]
  succs [bb80]

bb80
  0: StorageDead(_53)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb81
  }
  preds [bb23, bb79]
  succs [bb81]

bb81
  0: StorageDead(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  1: StorageDead(_23)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb82
  }
  preds [bb14, bb80]
  succs [bb82]

bb82
  0: StorageDead(_5)
    SourceInfo(src/engine/general_purpose/decode.rs:252:1-252:2)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:252:2-252:2)
      kind: goto -> bb83
  }
  preds [bb5, bb81]
  succs [bb83]

bb83
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:252:2-252:2)
      kind: return
  }
  preds [bb75, bb82]
  succs []

bb84
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:174:1-252:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb6, bb7, bb8, bb9, bb10, bb12, bb13, bb15, bb16, bb17, bb18, bb19, bb21, bb22, bb24, bb25, bb26, bb27, bb28, bb30, bb31, bb33, bb34, bb35, bb36, bb37, bb39, bb40, bb42, bb43, bb44, bb45, bb46, bb48, bb49, bb51, bb52, bb53, bb54, bb55, bb57, bb58, bb60, bb61, bb62, bb63, bb64, bb66, bb67, bb69, bb70, bb71, bb72, bb73, bb74]
  succs []

