bb0
  0: StorageLive(_2)
    SourceInfo(src/decode.rs:90:5-90:13)
  1: StorageLive(_3)
    SourceInfo(src/decode.rs:90:5-90:13)
  2: _3 = const engine::general_purpose::STANDARD
    SourceInfo(src/decode.rs:90:5-90:13)
  3: _2 = &_3
    SourceInfo(src/decode.rs:90:5-90:13)
  4: StorageLive(_4)
    SourceInfo(src/decode.rs:90:21-90:26)
  5: _4 = move _1
    SourceInfo(src/decode.rs:90:21-90:26)
  Terminator {
      source_info: SourceInfo(src/decode.rs:90:5-90:27)
      kind: _0 = <engine::general_purpose::GeneralPurpose as engine::Engine>::decode::<T>(move _2, move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(src/decode.rs:90:26-90:27)
  1: StorageDead(_2)
    SourceInfo(src/decode.rs:90:26-90:27)
  2: StorageDead(_3)
    SourceInfo(src/decode.rs:91:1-91:2)
  Terminator {
      source_info: SourceInfo(src/decode.rs:91:1-91:2)
      kind: drop(_1) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(src/decode.rs:91:2-91:2)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/decode.rs:90:26-90:27)
      kind: drop(_4) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/decode.rs:91:1-91:2)
      kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/decode.rs:89:1-91:2)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

