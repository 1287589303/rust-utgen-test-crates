bb0
  0: StorageLive(_4)
    SourceInfo(src/engine/mod.rs:221:15-221:19)
  1: _4 = &(*_1)
    SourceInfo(src/engine/mod.rs:221:15-221:19)
  2: StorageLive(_5)
    SourceInfo(src/engine/mod.rs:221:21-221:35)
  3: StorageLive(_6)
    SourceInfo(src/engine/mod.rs:221:21-221:35)
  4: StorageLive(_7)
    SourceInfo(src/engine/mod.rs:221:21-221:26)
  5: _7 = &_2
    SourceInfo(src/engine/mod.rs:221:21-221:26)
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:221:21-221:35)
      kind: _6 = <T as std::convert::AsRef<[u8]>>::as_ref(move _7) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _5 = &(*_6)
    SourceInfo(src/engine/mod.rs:221:21-221:35)
  1: StorageDead(_7)
    SourceInfo(src/engine/mod.rs:221:34-221:35)
  2: StorageLive(_8)
    SourceInfo(src/engine/mod.rs:221:37-221:47)
  3: _8 = &mut (*_3)
    SourceInfo(src/engine/mod.rs:221:37-221:47)
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:221:9-221:48)
      kind: _0 = engine::Engine::encode_slice::inner::<Self>(move _4, move _5, move _8) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_8)
    SourceInfo(src/engine/mod.rs:221:47-221:48)
  1: StorageDead(_5)
    SourceInfo(src/engine/mod.rs:221:47-221:48)
  2: StorageDead(_4)
    SourceInfo(src/engine/mod.rs:221:47-221:48)
  3: StorageDead(_6)
    SourceInfo(src/engine/mod.rs:222:5-222:6)
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:222:5-222:6)
      kind: drop(_2) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:222:6-222:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:222:5-222:6)
      kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/engine/mod.rs:194:5-222:6)
      kind: resume
  }
  preds [bb2, bb4]
  succs []

