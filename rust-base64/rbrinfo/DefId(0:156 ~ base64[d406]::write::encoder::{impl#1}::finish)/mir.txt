bb0
  0: StorageLive(_2)
    SourceInfo(src/write/encoder.rs:129:9-132:10)
  1: StorageLive(_3)
    SourceInfo(src/write/encoder.rs:130:13-130:36)
  2: StorageLive(_4)
    SourceInfo(src/write/encoder.rs:130:13-130:26)
  3: _4 = &((*_1).1: std::option::Option<W>)
    SourceInfo(src/write/encoder.rs:130:13-130:26)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:130:13-130:36)
      kind: _3 = std::option::Option::<W>::is_some(move _4) -> [return: bb1, unwind: bb25]
  }
  preds []
  succs [bb1, bb25]

bb1
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:130:13-130:36)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/write/encoder.rs:130:35-130:36)
  1: _2 = const ()
    SourceInfo(src/write/encoder.rs:132:10-132:10)
  2: StorageDead(_3)
    SourceInfo(src/write/encoder.rs:132:9-132:10)
  3: StorageDead(_2)
    SourceInfo(src/write/encoder.rs:132:9-132:10)
  4: StorageLive(_7)
    SourceInfo(src/write/encoder.rs:134:9-134:38)
  5: StorageLive(_8)
    SourceInfo(src/write/encoder.rs:134:9-134:38)
  6: StorageLive(_9)
    SourceInfo(src/write/encoder.rs:134:9-134:37)
  7: StorageLive(_10)
    SourceInfo(src/write/encoder.rs:134:9-134:13)
  8: _10 = &mut (*_1)
    SourceInfo(src/write/encoder.rs:134:9-134:13)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:9-134:37)
      kind: _9 = write::encoder::EncoderWriter::<'_, E, W>::write_final_leftovers(move _10) -> [return: bb4, unwind: bb25]
  }
  preds [bb1]
  succs [bb4, bb25]

bb3
  0: StorageDead(_4)
    SourceInfo(src/write/encoder.rs:130:35-130:36)
  1: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:223:9-223:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:223:9-223:38)
      kind: _6 = std::rt::begin_panic::<&str>(const "Encoder has already had finish() called") -> bb25
  }
  preds [bb1]
  succs [bb25]

bb4
  0: StorageDead(_10)
    SourceInfo(src/write/encoder.rs:134:36-134:37)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:9-134:38)
      kind: _8 = <std::result::Result<(), std::io::Error> as std::ops::Try>::branch(move _9) -> [return: bb5, unwind: bb24]
  }
  preds [bb2]
  succs [bb5, bb24]

bb5
  0: StorageDead(_9)
    SourceInfo(src/write/encoder.rs:134:37-134:38)
  1: PlaceMention(_8)
    SourceInfo(src/write/encoder.rs:134:9-134:38)
  2: _11 = discriminant(_8)
    SourceInfo(src/write/encoder.rs:134:9-134:38)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:9-134:38)
      kind: switchInt(move _11) -> [0: bb8, 1: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(src/write/encoder.rs:134:9-134:38)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:9-134:38)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:37-134:38)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_15)
    SourceInfo(src/write/encoder.rs:134:9-134:38)
  1: _15 = ((_8 as Continue).0: ())
    SourceInfo(src/write/encoder.rs:134:9-134:38)
  2: _7 = _15
    SourceInfo(src/write/encoder.rs:134:9-134:38)
  3: StorageDead(_15)
    SourceInfo(src/write/encoder.rs:134:37-134:38)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:38-134:39)
      kind: drop(_8) -> [return: bb11, unwind: bb25]
  }
  preds [bb5, bb7]
  succs [bb11, bb25]

bb9
  0: StorageLive(_12)
    SourceInfo(src/write/encoder.rs:134:37-134:38)
  1: _12 = move ((_8 as Break).0: std::result::Result<std::convert::Infallible, std::io::Error>)
    SourceInfo(src/write/encoder.rs:134:37-134:38)
  2: StorageLive(_14)
    SourceInfo(src/write/encoder.rs:134:37-134:38)
  3: _14 = move _12
    SourceInfo(src/write/encoder.rs:134:37-134:38)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:9-134:38)
      kind: _0 = <std::result::Result<W, std::io::Error> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, std::io::Error>>>::from_residual(move _14) -> [return: bb10, unwind: bb21]
  }
  preds [bb7]
  succs [bb10, bb21]

bb10
  0: StorageDead(_14)
    SourceInfo(src/write/encoder.rs:134:37-134:38)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:37-134:38)
      kind: drop(_12) -> [return: bb16, unwind: bb23]
  }
  preds [bb9]
  succs [bb16, bb23]

bb11
  0: StorageDead(_8)
    SourceInfo(src/write/encoder.rs:134:38-134:39)
  1: StorageDead(_7)
    SourceInfo(src/write/encoder.rs:134:38-134:39)
  2: StorageLive(_16)
    SourceInfo(src/write/encoder.rs:136:13-136:19)
  3: StorageLive(_17)
    SourceInfo(src/write/encoder.rs:136:22-136:42)
  4: StorageLive(_18)
    SourceInfo(src/write/encoder.rs:136:22-136:35)
  5: _18 = &mut ((*_1).1: std::option::Option<W>)
    SourceInfo(src/write/encoder.rs:136:22-136:35)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:136:22-136:42)
      kind: _17 = std::option::Option::<W>::take(move _18) -> [return: bb12, unwind: bb25]
  }
  preds [bb8]
  succs [bb12, bb25]

bb12
  0: StorageDead(_18)
    SourceInfo(src/write/encoder.rs:136:41-136:42)
  1: StorageLive(_19)
    SourceInfo(src/write/encoder.rs:136:50-136:74)
  2: StorageLive(_20)
    SourceInfo(src/write/encoder.rs:136:50-136:74)
  3: _20 = const "Writer must be present"
    SourceInfo(src/write/encoder.rs:136:50-136:74)
  4: _19 = &(*_20)
    SourceInfo(src/write/encoder.rs:136:50-136:74)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:136:22-136:75)
      kind: _16 = std::option::Option::<W>::expect(move _17, move _19) -> [return: bb13, unwind: bb20]
  }
  preds [bb11]
  succs [bb13, bb20]

bb13
  0: StorageDead(_19)
    SourceInfo(src/write/encoder.rs:136:74-136:75)
  1: StorageDead(_17)
    SourceInfo(src/write/encoder.rs:136:74-136:75)
  2: FakeRead(ForLet(None), _16)
    SourceInfo(src/write/encoder.rs:136:13-136:19)
  3: StorageDead(_20)
    SourceInfo(src/write/encoder.rs:136:75-136:76)
  4: StorageLive(_21)
    SourceInfo(src/write/encoder.rs:138:12-138:18)
  5: _21 = move _16
    SourceInfo(src/write/encoder.rs:138:12-138:18)
  6: _0 = std::result::Result::<W, std::io::Error>::Ok(move _21)
    SourceInfo(src/write/encoder.rs:138:9-138:19)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:138:18-138:19)
      kind: drop(_21) -> [return: bb14, unwind: bb19]
  }
  preds [bb12]
  succs [bb14, bb19]

bb14
  0: StorageDead(_21)
    SourceInfo(src/write/encoder.rs:138:18-138:19)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:139:5-139:6)
      kind: drop(_16) -> [return: bb15, unwind: bb25]
  }
  preds [bb13]
  succs [bb15, bb25]

bb15
  0: StorageDead(_16)
    SourceInfo(src/write/encoder.rs:139:5-139:6)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:139:6-139:6)
      kind: goto -> bb18
  }
  preds [bb14]
  succs [bb18]

bb16
  0: StorageDead(_12)
    SourceInfo(src/write/encoder.rs:134:37-134:38)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:38-134:39)
      kind: drop(_8) -> [return: bb17, unwind: bb25]
  }
  preds [bb10]
  succs [bb17, bb25]

bb17
  0: StorageDead(_8)
    SourceInfo(src/write/encoder.rs:134:38-134:39)
  1: StorageDead(_7)
    SourceInfo(src/write/encoder.rs:134:38-134:39)
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:139:6-139:6)
      kind: goto -> bb18
  }
  preds [bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:139:6-139:6)
      kind: return
  }
  preds [bb15, bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:139:5-139:6)
      kind: drop(_16) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb25]

bb20
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:136:74-136:75)
      kind: drop(_17) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb25]

bb21
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:37-134:38)
      kind: drop(_14) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:37-134:38)
      kind: drop(_12) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:38-134:39)
      kind: drop(_8) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb10, bb22]
  succs [bb25]

bb24
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:134:37-134:38)
      kind: drop(_9) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(src/write/encoder.rs:126:5-139:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb8, bb11, bb14, bb16, bb19, bb20, bb23, bb24]
  succs []

