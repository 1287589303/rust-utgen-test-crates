bb0
  0: StorageLive(_4)
    SourceInfo(src/decode.rs:128:5-128:11)
  1: _4 = &(*_3)
    SourceInfo(src/decode.rs:128:5-128:11)
  2: StorageLive(_5)
    SourceInfo(src/decode.rs:128:25-128:30)
  3: _5 = move _1
    SourceInfo(src/decode.rs:128:25-128:30)
  4: StorageLive(_6)
    SourceInfo(src/decode.rs:128:32-128:38)
  5: _6 = &mut (*_2)
    SourceInfo(src/decode.rs:128:32-128:38)
  Terminator {
      source_info: SourceInfo(src/decode.rs:128:5-128:39)
      kind: _0 = <E as engine::Engine>::decode_slice::<T>(move _4, move _5, move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_6)
    SourceInfo(src/decode.rs:128:38-128:39)
  1: StorageDead(_5)
    SourceInfo(src/decode.rs:128:38-128:39)
  2: StorageDead(_4)
    SourceInfo(src/decode.rs:128:38-128:39)
  Terminator {
      source_info: SourceInfo(src/decode.rs:129:1-129:2)
      kind: drop(_1) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(src/decode.rs:129:2-129:2)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/decode.rs:128:38-128:39)
      kind: drop(_5) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/decode.rs:129:1-129:2)
      kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/decode.rs:123:1-129:2)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

