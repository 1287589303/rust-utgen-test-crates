{
  "src/engine/general_purpose/decode.rs:155:47:155:99": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(input.len() - input_complete_nonterminal_quads_len)",
          "lhs": "input.len()",
          "rhs": "input_complete_nonterminal_quads_len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:155:29:155:100": [
    {
      "Bool": {
        "Other": "(1..=4).contains(&(input.len() - input_complete_nonterminal_quads_len))"
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:137:19:137:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "input.len() % 4 == input_len_rem",
          "lhs": "input.len() % 4",
          "rhs": "input_len_rem",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:140:8:140:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "input_len_rem == 1",
          "lhs": "input_len_rem",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:137:19:137:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "input.len() % 4",
          "lhs": "input.len()",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:153:25:153:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "usize::from(input_len_rem == 0) * 4",
          "lhs": "usize::from(input_len_rem == 0)",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:159:8:159:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "output_len < input_complete_nonterminal_quads_len / 4 * 3",
          "lhs": "output_len",
          "rhs": "input_complete_nonterminal_quads_len / 4 * 3",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:159:21:159:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "input_complete_nonterminal_quads_len / 4 * 3",
          "lhs": "input_complete_nonterminal_quads_len / 4",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:143:37:143:90": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "decode_table[usize::from(last_byte)] == INVALID_VALUE",
          "lhs": "decode_table[usize::from(last_byte)]",
          "rhs": "INVALID_VALUE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:144:49:144:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "input.len() - 1",
          "lhs": "input.len()",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:153:37:153:55": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "input_len_rem == 0",
          "lhs": "input_len_rem",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:141:31:141:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "input.len() - 1",
          "lhs": "input.len()",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:143:12:143:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "last_byte != PAD_BYTE",
          "lhs": "last_byte",
          "rhs": "PAD_BYTE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:159:21:159:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "input_complete_nonterminal_quads_len / 4",
          "lhs": "input_complete_nonterminal_quads_len",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/engine/general_purpose/decode.rs:155:9:155:25": [
    {
      "Bool": {
        "Other": "input.is_empty()"
      }
    }
  ]
}