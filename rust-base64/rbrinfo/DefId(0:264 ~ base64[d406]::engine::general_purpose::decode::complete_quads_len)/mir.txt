bb0
  0: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  1: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  2: _6 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _6) -> [0: bb6, otherwise: bb1]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:51)
  2: StorageLive(_9)
    SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:34)
  3: StorageLive(_10)
    SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:30)
  4: StorageLive(_11)
    SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:24)
  5: _11 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:24)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:30)
      kind: _10 = core::slice::<impl [u8]>::len(move _11) -> [return: bb2, unwind: bb47]
  }
  preds [bb0]
  succs [bb2, bb47]

bb2
  0: StorageDead(_11)
    SourceInfo(src/engine/general_purpose/decode.rs:137:29-137:30)
  1: _12 = Eq(const 4_usize, const 0_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:34)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:34)
      kind: assert(!move _12, "attempt to calculate the remainder of `{}` with a divisor of zero", _10) -> [success: bb3, unwind: bb47]
  }
  preds [bb1]
  succs [bb3, bb47]

bb3
  0: _9 = Rem(move _10, const 4_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:34)
  1: StorageDead(_10)
    SourceInfo(src/engine/general_purpose/decode.rs:137:33-137:34)
  2: StorageLive(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:137:38-137:51)
  3: _13 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:137:38-137:51)
  4: _8 = Eq(move _9, move _13)
    SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:137:19-137:51)
      kind: switchInt(move _8) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:137:50-137:51)
  1: StorageDead(_9)
    SourceInfo(src/engine/general_purpose/decode.rs:137:50-137:51)
  2: _7 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  3: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  5: _5 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb5
  0: StorageDead(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:137:50-137:51)
  1: StorageDead(_9)
    SourceInfo(src/engine/general_purpose/decode.rs:137:50-137:51)
  2: StorageLive(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _14 = core::panicking::panic(const "assertion failed: input.len() % 4 == input_len_rem") -> bb47
  }
  preds [bb3]
  succs [bb47]

bb6
  0: _5 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb7
  }
  preds [bb0]
  succs [bb7]

bb7
  0: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_15)
    SourceInfo(src/engine/general_purpose/decode.rs:140:5-146:6)
  3: StorageLive(_16)
    SourceInfo(src/engine/general_purpose/decode.rs:140:8-140:26)
  4: StorageLive(_17)
    SourceInfo(src/engine/general_purpose/decode.rs:140:8-140:21)
  5: _17 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:140:8-140:21)
  6: _16 = Eq(move _17, const 1_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:140:8-140:26)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:140:8-140:26)
      kind: switchInt(move _16) -> [0: bb22, otherwise: bb8]
  }
  preds [bb4, bb6]
  succs [bb8, bb22]

bb8
  0: StorageDead(_17)
    SourceInfo(src/engine/general_purpose/decode.rs:140:25-140:26)
  1: StorageLive(_18)
    SourceInfo(src/engine/general_purpose/decode.rs:141:13-141:22)
  2: StorageLive(_19)
    SourceInfo(src/engine/general_purpose/decode.rs:141:31-141:46)
  3: StorageLive(_20)
    SourceInfo(src/engine/general_purpose/decode.rs:141:31-141:42)
  4: StorageLive(_21)
    SourceInfo(src/engine/general_purpose/decode.rs:141:31-141:36)
  5: _21 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:141:31-141:36)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:141:31-141:42)
      kind: _20 = core::slice::<impl [u8]>::len(move _21) -> [return: bb9, unwind: bb47]
  }
  preds [bb7]
  succs [bb9, bb47]

bb9
  0: StorageDead(_21)
    SourceInfo(src/engine/general_purpose/decode.rs:141:41-141:42)
  1: _22 = SubWithOverflow(_20, const 1_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:141:31-141:46)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:141:31-141:46)
      kind: assert(!move (_22.1: bool), "attempt to compute `{} - {}`, which would overflow", move _20, const 1_usize) -> [success: bb10, unwind: bb47]
  }
  preds [bb8]
  succs [bb10, bb47]

bb10
  0: _19 = move (_22.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:141:31-141:46)
  1: StorageDead(_20)
    SourceInfo(src/engine/general_purpose/decode.rs:141:45-141:46)
  2: _23 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:141:25-141:47)
  3: _24 = Lt(_19, _23)
    SourceInfo(src/engine/general_purpose/decode.rs:141:25-141:47)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:141:25-141:47)
      kind: assert(move _24, "index out of bounds: the length is {} but the index is {}", move _23, _19) -> [success: bb11, unwind: bb47]
  }
  preds [bb9]
  succs [bb11, bb47]

bb11
  0: _18 = (*_1)[_19]
    SourceInfo(src/engine/general_purpose/decode.rs:141:25-141:47)
  1: FakeRead(ForLet(None), _18)
    SourceInfo(src/engine/general_purpose/decode.rs:141:13-141:22)
  2: StorageDead(_19)
    SourceInfo(src/engine/general_purpose/decode.rs:141:47-141:48)
  3: StorageLive(_25)
    SourceInfo(src/engine/general_purpose/decode.rs:143:12-143:33)
  4: StorageLive(_26)
    SourceInfo(src/engine/general_purpose/decode.rs:143:12-143:21)
  5: _26 = _18
    SourceInfo(src/engine/general_purpose/decode.rs:143:12-143:21)
  6: _25 = Ne(move _26, const PAD_BYTE)
    SourceInfo(src/engine/general_purpose/decode.rs:143:12-143:33)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:143:12-143:33)
      kind: switchInt(move _25) -> [0: bb20, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb20]

bb12
  0: StorageDead(_26)
    SourceInfo(src/engine/general_purpose/decode.rs:143:32-143:33)
  1: StorageLive(_27)
    SourceInfo(src/engine/general_purpose/decode.rs:143:37-143:90)
  2: StorageLive(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:143:37-143:73)
  3: StorageLive(_29)
    SourceInfo(src/engine/general_purpose/decode.rs:143:50-143:72)
  4: StorageLive(_30)
    SourceInfo(src/engine/general_purpose/decode.rs:143:62-143:71)
  5: _30 = _18
    SourceInfo(src/engine/general_purpose/decode.rs:143:62-143:71)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:143:50-143:72)
      kind: _29 = <usize as std::convert::From<u8>>::from(move _30) -> [return: bb13, unwind: bb47]
  }
  preds [bb11]
  succs [bb13, bb47]

bb13
  0: StorageDead(_30)
    SourceInfo(src/engine/general_purpose/decode.rs:143:71-143:72)
  1: _31 = Len((*_4))
    SourceInfo(src/engine/general_purpose/decode.rs:143:37-143:73)
  2: _32 = Lt(_29, _31)
    SourceInfo(src/engine/general_purpose/decode.rs:143:37-143:73)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:143:37-143:73)
      kind: assert(move _32, "index out of bounds: the length is {} but the index is {}", move _31, _29) -> [success: bb14, unwind: bb47]
  }
  preds [bb12]
  succs [bb14, bb47]

bb14
  0: _28 = (*_4)[_29]
    SourceInfo(src/engine/general_purpose/decode.rs:143:37-143:73)
  1: _27 = Eq(move _28, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:143:37-143:90)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:143:37-143:90)
      kind: switchInt(move _27) -> [0: bb19, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb19]

bb15
  0: StorageDead(_29)
    SourceInfo(src/engine/general_purpose/decode.rs:143:89-143:90)
  1: StorageDead(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:143:89-143:90)
  2: StorageLive(_34)
    SourceInfo(src/engine/general_purpose/decode.rs:144:24-144:83)
  3: StorageLive(_35)
    SourceInfo(src/engine/general_purpose/decode.rs:144:24-144:76)
  4: StorageLive(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:144:49-144:64)
  5: StorageLive(_37)
    SourceInfo(src/engine/general_purpose/decode.rs:144:49-144:60)
  6: StorageLive(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:144:49-144:54)
  7: _38 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:144:49-144:54)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:144:49-144:60)
      kind: _37 = core::slice::<impl [u8]>::len(move _38) -> [return: bb16, unwind: bb47]
  }
  preds [bb14]
  succs [bb16, bb47]

bb16
  0: StorageDead(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:144:59-144:60)
  1: _39 = SubWithOverflow(_37, const 1_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:144:49-144:64)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:144:49-144:64)
      kind: assert(!move (_39.1: bool), "attempt to compute `{} - {}`, which would overflow", move _37, const 1_usize) -> [success: bb17, unwind: bb47]
  }
  preds [bb15]
  succs [bb17, bb47]

bb17
  0: _36 = move (_39.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:144:49-144:64)
  1: StorageDead(_37)
    SourceInfo(src/engine/general_purpose/decode.rs:144:63-144:64)
  2: StorageLive(_40)
    SourceInfo(src/engine/general_purpose/decode.rs:144:66-144:75)
  3: _40 = _18
    SourceInfo(src/engine/general_purpose/decode.rs:144:66-144:75)
  4: _35 = decode::DecodeError::InvalidByte(move _36, move _40)
    SourceInfo(src/engine/general_purpose/decode.rs:144:24-144:76)
  5: StorageDead(_40)
    SourceInfo(src/engine/general_purpose/decode.rs:144:75-144:76)
  6: StorageDead(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:144:75-144:76)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:144:24-144:83)
      kind: _34 = <decode::DecodeError as std::convert::Into<decode::DecodeSliceError>>::into(move _35) -> [return: bb18, unwind: bb47]
  }
  preds [bb16]
  succs [bb18, bb47]

bb18
  0: StorageDead(_35)
    SourceInfo(src/engine/general_purpose/decode.rs:144:82-144:83)
  1: _0 = std::result::Result::<usize, decode::DecodeSliceError>::Err(move _34)
    SourceInfo(src/engine/general_purpose/decode.rs:144:20-144:84)
  2: StorageDead(_34)
    SourceInfo(src/engine/general_purpose/decode.rs:144:83-144:84)
  3: StorageDead(_27)
    SourceInfo(src/engine/general_purpose/decode.rs:145:9-145:10)
  4: StorageDead(_25)
    SourceInfo(src/engine/general_purpose/decode.rs:145:9-145:10)
  5: StorageDead(_18)
    SourceInfo(src/engine/general_purpose/decode.rs:146:5-146:6)
  6: StorageDead(_16)
    SourceInfo(src/engine/general_purpose/decode.rs:146:5-146:6)
  7: StorageDead(_15)
    SourceInfo(src/engine/general_purpose/decode.rs:146:6-146:7)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb17]
  succs [bb46]

bb19
  0: StorageDead(_29)
    SourceInfo(src/engine/general_purpose/decode.rs:143:89-143:90)
  1: StorageDead(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:143:89-143:90)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb21
  }
  preds [bb14]
  succs [bb21]

bb20
  0: StorageDead(_26)
    SourceInfo(src/engine/general_purpose/decode.rs:143:32-143:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb21
  }
  preds [bb11]
  succs [bb21]

bb21
  0: _15 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:145:10-145:10)
  1: StorageDead(_27)
    SourceInfo(src/engine/general_purpose/decode.rs:145:9-145:10)
  2: StorageDead(_25)
    SourceInfo(src/engine/general_purpose/decode.rs:145:9-145:10)
  3: StorageDead(_18)
    SourceInfo(src/engine/general_purpose/decode.rs:146:5-146:6)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:140:5-146:6)
      kind: goto -> bb23
  }
  preds [bb19, bb20]
  succs [bb23]

bb22
  0: StorageDead(_17)
    SourceInfo(src/engine/general_purpose/decode.rs:140:25-140:26)
  1: _15 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:146:6-146:6)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:140:5-146:6)
      kind: goto -> bb23
  }
  preds [bb7]
  succs [bb23]

bb23
  0: StorageDead(_16)
    SourceInfo(src/engine/general_purpose/decode.rs:146:5-146:6)
  1: StorageDead(_15)
    SourceInfo(src/engine/general_purpose/decode.rs:146:6-146:7)
  2: StorageLive(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:149:9-149:45)
  3: StorageLive(_42)
    SourceInfo(src/engine/general_purpose/decode.rs:149:48-151:39)
  4: StorageLive(_43)
    SourceInfo(src/engine/general_purpose/decode.rs:149:48-150:15)
  5: StorageLive(_44)
    SourceInfo(src/engine/general_purpose/decode.rs:149:48-149:53)
  6: _44 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:149:48-149:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:149:48-150:15)
      kind: _43 = core::slice::<impl [u8]>::len(move _44) -> [return: bb24, unwind: bb47]
  }
  preds [bb21, bb22]
  succs [bb24, bb47]

bb24
  0: StorageDead(_44)
    SourceInfo(src/engine/general_purpose/decode.rs:150:14-150:15)
  1: StorageLive(_45)
    SourceInfo(src/engine/general_purpose/decode.rs:151:25-151:38)
  2: _45 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:151:25-151:38)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:149:48-151:39)
      kind: _42 = core::num::<impl usize>::saturating_sub(move _43, move _45) -> [return: bb25, unwind: bb47]
  }
  preds [bb23]
  succs [bb25, bb47]

bb25
  0: StorageDead(_45)
    SourceInfo(src/engine/general_purpose/decode.rs:151:38-151:39)
  1: StorageDead(_43)
    SourceInfo(src/engine/general_purpose/decode.rs:151:38-151:39)
  2: StorageLive(_46)
    SourceInfo(src/engine/general_purpose/decode.rs:153:25-153:60)
  3: StorageLive(_47)
    SourceInfo(src/engine/general_purpose/decode.rs:153:25-153:56)
  4: StorageLive(_48)
    SourceInfo(src/engine/general_purpose/decode.rs:153:37-153:55)
  5: StorageLive(_49)
    SourceInfo(src/engine/general_purpose/decode.rs:153:37-153:50)
  6: _49 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:153:37-153:50)
  7: _48 = Eq(move _49, const 0_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:153:37-153:55)
  8: StorageDead(_49)
    SourceInfo(src/engine/general_purpose/decode.rs:153:54-153:55)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:153:25-153:56)
      kind: _47 = <usize as std::convert::From<bool>>::from(move _48) -> [return: bb26, unwind: bb47]
  }
  preds [bb24]
  succs [bb26, bb47]

bb26
  0: StorageDead(_48)
    SourceInfo(src/engine/general_purpose/decode.rs:153:55-153:56)
  1: _50 = MulWithOverflow(_47, const 4_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:153:25-153:60)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:153:25-153:60)
      kind: assert(!move (_50.1: bool), "attempt to compute `{} * {}`, which would overflow", move _47, const 4_usize) -> [success: bb27, unwind: bb47]
  }
  preds [bb25]
  succs [bb27, bb47]

bb27
  0: _46 = move (_50.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:153:25-153:60)
  1: StorageDead(_47)
    SourceInfo(src/engine/general_purpose/decode.rs:153:59-153:60)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:149:48-153:61)
      kind: _41 = core::num::<impl usize>::saturating_sub(move _42, move _46) -> [return: bb28, unwind: bb47]
  }
  preds [bb26]
  succs [bb28, bb47]

bb28
  0: StorageDead(_46)
    SourceInfo(src/engine/general_purpose/decode.rs:153:60-153:61)
  1: StorageDead(_42)
    SourceInfo(src/engine/general_purpose/decode.rs:153:60-153:61)
  2: FakeRead(ForLet(None), _41)
    SourceInfo(src/engine/general_purpose/decode.rs:149:9-149:45)
  3: StorageLive(_51)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  4: StorageLive(_52)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  5: _52 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _52) -> [0: bb40, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb40]

bb29
  0: StorageLive(_53)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_54)
    SourceInfo(src/engine/general_purpose/decode.rs:155:9-155:25)
  2: StorageLive(_55)
    SourceInfo(src/engine/general_purpose/decode.rs:155:9-155:14)
  3: _55 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:155:9-155:14)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:155:9-155:25)
      kind: _54 = core::slice::<impl [u8]>::is_empty(move _55) -> [return: bb30, unwind: bb47]
  }
  preds [bb28]
  succs [bb30, bb47]

bb30
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:155:9-155:25)
      kind: switchInt(move _54) -> [0: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32]

bb31
  0: StorageDead(_55)
    SourceInfo(src/engine/general_purpose/decode.rs:155:24-155:25)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: goto -> bb39
  }
  preds [bb30]
  succs [bb39]

bb32
  0: StorageDead(_55)
    SourceInfo(src/engine/general_purpose/decode.rs:155:24-155:25)
  1: StorageLive(_56)
    SourceInfo(src/engine/general_purpose/decode.rs:155:29-155:100)
  2: StorageLive(_57)
    SourceInfo(src/engine/general_purpose/decode.rs:155:29-155:36)
  3: StorageLive(_58)
    SourceInfo(src/engine/general_purpose/decode.rs:155:29-155:36)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:155:29-155:36)
      kind: _58 = std::ops::RangeInclusive::<usize>::new(const 1_usize, const 4_usize) -> [return: bb33, unwind: bb47]
  }
  preds [bb30]
  succs [bb33, bb47]

bb33
  0: _57 = &_58
    SourceInfo(src/engine/general_purpose/decode.rs:155:29-155:36)
  1: StorageLive(_59)
    SourceInfo(src/engine/general_purpose/decode.rs:155:46-155:99)
  2: StorageLive(_60)
    SourceInfo(src/engine/general_purpose/decode.rs:155:46-155:99)
  3: StorageLive(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:155:47-155:99)
  4: StorageLive(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:155:48-155:59)
  5: StorageLive(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:155:48-155:53)
  6: _63 = &(*_1)
    SourceInfo(src/engine/general_purpose/decode.rs:155:48-155:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:155:48-155:59)
      kind: _62 = core::slice::<impl [u8]>::len(move _63) -> [return: bb34, unwind: bb47]
  }
  preds [bb32]
  succs [bb34, bb47]

bb34
  0: StorageDead(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:155:58-155:59)
  1: StorageLive(_64)
    SourceInfo(src/engine/general_purpose/decode.rs:155:62-155:98)
  2: _64 = _41
    SourceInfo(src/engine/general_purpose/decode.rs:155:62-155:98)
  3: _65 = SubWithOverflow(_62, _64)
    SourceInfo(src/engine/general_purpose/decode.rs:155:47-155:99)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:155:47-155:99)
      kind: assert(!move (_65.1: bool), "attempt to compute `{} - {}`, which would overflow", move _62, move _64) -> [success: bb35, unwind: bb47]
  }
  preds [bb33]
  succs [bb35, bb47]

bb35
  0: _61 = move (_65.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:155:47-155:99)
  1: StorageDead(_64)
    SourceInfo(src/engine/general_purpose/decode.rs:155:98-155:99)
  2: StorageDead(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:155:98-155:99)
  3: _60 = &_61
    SourceInfo(src/engine/general_purpose/decode.rs:155:46-155:99)
  4: _59 = &(*_60)
    SourceInfo(src/engine/general_purpose/decode.rs:155:46-155:99)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:155:29-155:100)
      kind: _56 = std::ops::RangeInclusive::<usize>::contains::<usize>(move _57, move _59) -> [return: bb36, unwind: bb47]
  }
  preds [bb34]
  succs [bb36, bb47]

bb36
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:155:29-155:100)
      kind: switchInt(move _56) -> [0: bb38, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb38]

bb37
  0: StorageDead(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  1: StorageDead(_60)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  2: StorageDead(_59)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  3: StorageDead(_58)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  4: StorageDead(_57)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: goto -> bb39
  }
  preds [bb36]
  succs [bb39]

bb38
  0: StorageDead(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  1: StorageDead(_60)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  2: StorageDead(_59)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  3: StorageDead(_58)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  4: StorageDead(_57)
    SourceInfo(src/engine/general_purpose/decode.rs:155:99-155:100)
  5: StorageLive(_66)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _66 = core::panicking::panic(const "assertion failed: input.is_empty() ||\n    (1..=4).contains(&(input.len() - input_complete_nonterminal_quads_len))") -> bb47
  }
  preds [bb36]
  succs [bb47]

bb39
  0: _53 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  1: StorageDead(_56)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  2: StorageDead(_54)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_53)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _51 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb41
  }
  preds [bb31, bb37]
  succs [bb41]

bb40
  0: _51 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb41
  }
  preds [bb28]
  succs [bb41]

bb41
  0: StorageDead(_52)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_51)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_67)
    SourceInfo(src/engine/general_purpose/decode.rs:159:5-161:6)
  3: StorageLive(_68)
    SourceInfo(src/engine/general_purpose/decode.rs:159:8-159:65)
  4: StorageLive(_69)
    SourceInfo(src/engine/general_purpose/decode.rs:159:8-159:18)
  5: _69 = _3
    SourceInfo(src/engine/general_purpose/decode.rs:159:8-159:18)
  6: StorageLive(_70)
    SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:65)
  7: StorageLive(_71)
    SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:61)
  8: StorageLive(_72)
    SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:57)
  9: _72 = _41
    SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:57)
  10: _73 = Eq(const 4_usize, const 0_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:61)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:61)
      kind: assert(!move _73, "attempt to divide `{}` by zero", _72) -> [success: bb42, unwind: bb47]
  }
  preds [bb39, bb40]
  succs [bb42, bb47]

bb42
  0: _71 = Div(move _72, const 4_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:61)
  1: StorageDead(_72)
    SourceInfo(src/engine/general_purpose/decode.rs:159:60-159:61)
  2: _74 = MulWithOverflow(_71, const 3_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:65)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:65)
      kind: assert(!move (_74.1: bool), "attempt to compute `{} * {}`, which would overflow", move _71, const 3_usize) -> [success: bb43, unwind: bb47]
  }
  preds [bb41]
  succs [bb43, bb47]

bb43
  0: _70 = move (_74.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:159:21-159:65)
  1: StorageDead(_71)
    SourceInfo(src/engine/general_purpose/decode.rs:159:64-159:65)
  2: _68 = Lt(move _69, move _70)
    SourceInfo(src/engine/general_purpose/decode.rs:159:8-159:65)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:159:8-159:65)
      kind: switchInt(move _68) -> [0: bb45, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb45]

bb44
  0: StorageDead(_70)
    SourceInfo(src/engine/general_purpose/decode.rs:159:64-159:65)
  1: StorageDead(_69)
    SourceInfo(src/engine/general_purpose/decode.rs:159:64-159:65)
  2: StorageLive(_76)
    SourceInfo(src/engine/general_purpose/decode.rs:160:20-160:57)
  3: _76 = decode::DecodeSliceError::OutputSliceTooSmall
    SourceInfo(src/engine/general_purpose/decode.rs:160:20-160:57)
  4: _0 = std::result::Result::<usize, decode::DecodeSliceError>::Err(move _76)
    SourceInfo(src/engine/general_purpose/decode.rs:160:16-160:58)
  5: StorageDead(_76)
    SourceInfo(src/engine/general_purpose/decode.rs:160:57-160:58)
  6: StorageDead(_68)
    SourceInfo(src/engine/general_purpose/decode.rs:161:5-161:6)
  7: StorageDead(_67)
    SourceInfo(src/engine/general_purpose/decode.rs:161:6-161:7)
  8: StorageDead(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:163:1-163:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb43]
  succs [bb46]

bb45
  0: StorageDead(_70)
    SourceInfo(src/engine/general_purpose/decode.rs:159:64-159:65)
  1: StorageDead(_69)
    SourceInfo(src/engine/general_purpose/decode.rs:159:64-159:65)
  2: _67 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:161:6-161:6)
  3: StorageDead(_68)
    SourceInfo(src/engine/general_purpose/decode.rs:161:5-161:6)
  4: StorageDead(_67)
    SourceInfo(src/engine/general_purpose/decode.rs:161:6-161:7)
  5: StorageLive(_77)
    SourceInfo(src/engine/general_purpose/decode.rs:162:8-162:44)
  6: _77 = _41
    SourceInfo(src/engine/general_purpose/decode.rs:162:8-162:44)
  7: _0 = std::result::Result::<usize, decode::DecodeSliceError>::Ok(move _77)
    SourceInfo(src/engine/general_purpose/decode.rs:162:5-162:45)
  8: StorageDead(_77)
    SourceInfo(src/engine/general_purpose/decode.rs:162:44-162:45)
  9: StorageDead(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:163:1-163:2)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:163:2-163:2)
      kind: goto -> bb46
  }
  preds [bb43]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:163:2-163:2)
      kind: return
  }
  preds [bb18, bb44, bb45]
  succs []

bb47
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:131:1-163:2)
      kind: resume
  }
  preds [bb1, bb2, bb5, bb8, bb9, bb10, bb12, bb13, bb15, bb16, bb17, bb23, bb24, bb25, bb26, bb27, bb29, bb32, bb33, bb34, bb35, bb38, bb41, bb42]
  succs []

