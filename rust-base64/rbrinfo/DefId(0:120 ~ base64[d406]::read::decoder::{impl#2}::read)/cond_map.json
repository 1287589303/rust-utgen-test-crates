{
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12:346:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "src/read/decoder.rs:304:31:304:85": [
    {
      "Try": "self.decode_to_buf(to_decode, &mut decoded_chunk[..])?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9:48:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "src/read/decoder.rs:271:28:271:54": [
    {
      "Try": "self.read_from_delegate()?"
    }
  ],
  "src/read/decoder.rs:256:23:256:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "self.decoded_len < DECODED_CHUNK_SIZE",
          "lhs": "self.decoded_len",
          "rhs": "DECODED_CHUNK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:318:31:318:86": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "b64_bytes_that_can_decode_into_buf >= BASE64_CHUNK_SIZE",
          "lhs": "b64_bytes_that_can_decode_into_buf",
          "rhs": "BASE64_CHUNK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:287:17:287:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "self.b64_len > 0",
          "lhs": "self.b64_len",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/read/decoder.rs:279:16:279:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.b64_len == 0",
          "lhs": "self.b64_len",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/read/decoder.rs:257:23:257:61": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.decoded_len + self.decoded_offset",
          "lhs": "self.decoded_len",
          "rhs": "self.decoded_offset",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:324:21:324:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.b64_len - self.b64_len % 4",
          "lhs": "self.b64_len",
          "rhs": "self.b64_len % 4",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:280:31:280:37": [
    {
      "Bool": {
        "Other": "at_eof"
      }
    }
  ],
  "src/read/decoder.rs:324:36:324:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.b64_len % 4",
          "lhs": "self.b64_len",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/read/decoder.rs:272:20:272:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "read == 0",
          "lhs": "read",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/read/decoder.rs:295:16:295:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "buf.len() < DECODED_CHUNK_SIZE",
          "lhs": "buf.len()",
          "rhs": "DECODED_CHUNK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21:40:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:257:23:257:83": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "self.decoded_len + self.decoded_offset <= DECODED_CHUNK_SIZE",
          "lhs": "self.decoded_len + self.decoded_offset",
          "rhs": "DECODED_CHUNK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "src/read/decoder.rs:241:13:241:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.b64_len == 0",
          "lhs": "self.b64_len",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/read/decoder.rs:233:12:233:26": [
    {
      "Bool": {
        "Other": "buf.is_empty()"
      }
    }
  ],
  "src/read/decoder.rs:246:26:246:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.decoded_len == 0",
          "lhs": "self.decoded_len",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/read/decoder.rs:239:23:239:65": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "self.b64_offset + self.b64_len <= BUF_SIZE",
          "lhs": "self.b64_offset + self.b64_len",
          "rhs": "BUF_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:285:30:285:36": [
    {
      "Bool": {
        "Other": "at_eof"
      }
    }
  ],
  "src/read/decoder.rs:290:17:290:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "self.b64_len >= BASE64_CHUNK_SIZE",
          "lhs": "self.b64_len",
          "rhs": "BASE64_CHUNK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:250:13:250:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "self.decoded_offset < DECODED_CHUNK_SIZE",
          "lhs": "self.decoded_offset",
          "rhs": "DECODED_CHUNK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:267:51:267:81": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.b64_offset + self.b64_len",
          "lhs": "self.b64_offset",
          "rhs": "self.b64_len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:264:19:264:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "self.b64_len < BASE64_CHUNK_SIZE",
          "lhs": "self.b64_len",
          "rhs": "BASE64_CHUNK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:238:23:238:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "self.b64_offset <= BUF_SIZE",
          "lhs": "self.b64_offset",
          "rhs": "BUF_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:239:23:239:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.b64_offset + self.b64_len",
          "lhs": "self.b64_offset",
          "rhs": "self.b64_len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:259:12:259:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "self.decoded_len > 0",
          "lhs": "self.decoded_len",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/read/decoder.rs:315:58:315:90": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(buf.len() / DECODED_CHUNK_SIZE)",
          "lhs": "buf.len()",
          "rhs": "DECODED_CHUNK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:311:31:311:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "decoded <= 3",
          "lhs": "decoded",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/read/decoder.rs:240:26:240:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.b64_offset == BUF_SIZE",
          "lhs": "self.b64_offset",
          "rhs": "BUF_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:243:13:243:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "self.b64_len <= BUF_SIZE",
          "lhs": "self.b64_len",
          "rhs": "BUF_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/read/decoder.rs:320:56:320:62": [
    {
      "Bool": {
        "Other": "at_eof"
      }
    }
  ],
  "src/read/decoder.rs:248:13:248:54": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "self.decoded_offset <= DECODED_CHUNK_SIZE",
          "lhs": "self.decoded_offset",
          "rhs": "DECODED_CHUNK_SIZE",
          "cmp_with_int": false
        }
      }
    }
  ]
}