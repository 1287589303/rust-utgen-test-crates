{
  "src/encode.rs:101:33:101:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "bytes_len / 3",
          "lhs": "bytes_len",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/encode.rs:112:12:112:19": [
    {
      "Bool": {
        "Other": "padding"
      }
    }
  ],
  "src/encode.rs:99:15:99:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "bytes_len % 3",
          "lhs": "bytes_len",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/encode.rs:111:8:111:15": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "rem > 0",
          "lhs": "rem",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/encode.rs:115:37:115:40": [
    {
      "Match": {
        "match_source": "src/encode.rs:115:37:115:40",
        "match_str": "rem",
        "match_kind": "Other",
        "arms": {
          "src/encode.rs:119:17:119:18": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "src/encode.rs:119:22:119:23"
          },
          "src/encode.rs:116:17:116:18": {
            "pat": {
              "pat_str": "1",
              "kind": {
                "Other": 1
              }
            },
            "guard": null,
            "body_source": "src/encode.rs:116:22:116:23"
          }
        }
      }
    }
  ],
  "src/encode.rs:105:12:105:82": [
    {
      "Bool": {
        "Other": "let Some(complete_chunk_output) = complete_input_chunks.checked_mul(4)"
      }
    }
  ]
}