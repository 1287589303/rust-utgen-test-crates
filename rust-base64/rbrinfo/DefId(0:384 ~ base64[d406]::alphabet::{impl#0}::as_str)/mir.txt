bb0
  0: StorageLive(_2)
    SourceInfo(src/alphabet.rs:130:9-130:53)
  1: StorageLive(_3)
    SourceInfo(src/alphabet.rs:130:9-130:44)
  2: StorageLive(_4)
    SourceInfo(src/alphabet.rs:130:30-130:43)
  3: StorageLive(_5)
    SourceInfo(src/alphabet.rs:130:30-130:43)
  4: StorageLive(_6)
    SourceInfo(src/alphabet.rs:130:30-130:43)
  5: _6 = &((*_1).0: [u8; 64])
    SourceInfo(src/alphabet.rs:130:30-130:43)
  6: _5 = &(*_6)
    SourceInfo(src/alphabet.rs:130:30-130:43)
  7: _4 = move _5 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/alphabet.rs:130:30-130:43)
  8: StorageDead(_5)
    SourceInfo(src/alphabet.rs:130:42-130:43)
  Terminator {
      source_info: SourceInfo(src/alphabet.rs:130:9-130:44)
      kind: _3 = std::str::from_utf8(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(src/alphabet.rs:130:43-130:44)
  Terminator {
      source_info: SourceInfo(src/alphabet.rs:130:9-130:53)
      kind: _2 = std::result::Result::<&str, std::str::Utf8Error>::unwrap(move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: _0 = &(*_2)
    SourceInfo(src/alphabet.rs:130:9-130:53)
  1: StorageDead(_3)
    SourceInfo(src/alphabet.rs:130:52-130:53)
  2: StorageDead(_6)
    SourceInfo(src/alphabet.rs:131:5-131:6)
  3: StorageDead(_2)
    SourceInfo(src/alphabet.rs:131:5-131:6)
  Terminator {
      source_info: SourceInfo(src/alphabet.rs:131:6-131:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/alphabet.rs:129:5-131:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

