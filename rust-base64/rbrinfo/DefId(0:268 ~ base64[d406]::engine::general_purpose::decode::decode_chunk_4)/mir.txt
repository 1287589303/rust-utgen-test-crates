bb0
  0: StorageLive(_5)
    SourceInfo(src/engine/general_purpose/decode.rs:262:9-262:15)
  1: StorageLive(_6)
    SourceInfo(src/engine/general_purpose/decode.rs:262:31-262:52)
  2: StorageLive(_7)
    SourceInfo(src/engine/general_purpose/decode.rs:262:43-262:51)
  3: StorageLive(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:262:49-262:50)
  4: _8 = const 0_usize
    SourceInfo(src/engine/general_purpose/decode.rs:262:49-262:50)
  5: _9 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:262:43-262:51)
  6: _10 = Lt(_8, _9)
    SourceInfo(src/engine/general_purpose/decode.rs:262:43-262:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:262:43-262:51)
      kind: assert(move _10, "index out of bounds: the length is {} but the index is {}", move _9, _8) -> [success: bb1, unwind: bb44]
  }
  preds []
  succs [bb1, bb44]

bb1
  0: _7 = (*_1)[_8]
    SourceInfo(src/engine/general_purpose/decode.rs:262:43-262:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:262:31-262:52)
      kind: _6 = <usize as std::convert::From<u8>>::from(move _7) -> [return: bb2, unwind: bb44]
  }
  preds [bb0]
  succs [bb2, bb44]

bb2
  0: StorageDead(_7)
    SourceInfo(src/engine/general_purpose/decode.rs:262:51-262:52)
  1: _11 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:262:18-262:53)
  2: _12 = Lt(_6, _11)
    SourceInfo(src/engine/general_purpose/decode.rs:262:18-262:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:262:18-262:53)
      kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _6) -> [success: bb3, unwind: bb44]
  }
  preds [bb1]
  succs [bb3, bb44]

bb3
  0: _5 = (*_3)[_6]
    SourceInfo(src/engine/general_purpose/decode.rs:262:18-262:53)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(src/engine/general_purpose/decode.rs:262:9-262:15)
  2: StorageDead(_8)
    SourceInfo(src/engine/general_purpose/decode.rs:262:53-262:54)
  3: StorageDead(_6)
    SourceInfo(src/engine/general_purpose/decode.rs:262:53-262:54)
  4: StorageLive(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:263:5-265:6)
  5: StorageLive(_14)
    SourceInfo(src/engine/general_purpose/decode.rs:263:8-263:31)
  6: StorageLive(_15)
    SourceInfo(src/engine/general_purpose/decode.rs:263:8-263:14)
  7: _15 = _5
    SourceInfo(src/engine/general_purpose/decode.rs:263:8-263:14)
  8: _14 = Eq(move _15, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:263:8-263:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:263:8-263:31)
      kind: switchInt(move _14) -> [0: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_15)
    SourceInfo(src/engine/general_purpose/decode.rs:263:30-263:31)
  1: StorageLive(_17)
    SourceInfo(src/engine/general_purpose/decode.rs:264:20-264:79)
  2: StorageLive(_18)
    SourceInfo(src/engine/general_purpose/decode.rs:264:45-264:68)
  3: _18 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:264:45-264:68)
  4: StorageLive(_19)
    SourceInfo(src/engine/general_purpose/decode.rs:264:70-264:78)
  5: StorageLive(_20)
    SourceInfo(src/engine/general_purpose/decode.rs:264:76-264:77)
  6: _20 = const 0_usize
    SourceInfo(src/engine/general_purpose/decode.rs:264:76-264:77)
  7: _21 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:264:70-264:78)
  8: _22 = Lt(_20, _21)
    SourceInfo(src/engine/general_purpose/decode.rs:264:70-264:78)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:264:70-264:78)
      kind: assert(move _22, "index out of bounds: the length is {} but the index is {}", move _21, _20) -> [success: bb5, unwind: bb44]
  }
  preds [bb3]
  succs [bb5, bb44]

bb5
  0: _19 = (*_1)[_20]
    SourceInfo(src/engine/general_purpose/decode.rs:264:70-264:78)
  1: _17 = decode::DecodeError::InvalidByte(move _18, move _19)
    SourceInfo(src/engine/general_purpose/decode.rs:264:20-264:79)
  2: StorageDead(_19)
    SourceInfo(src/engine/general_purpose/decode.rs:264:78-264:79)
  3: StorageDead(_18)
    SourceInfo(src/engine/general_purpose/decode.rs:264:78-264:79)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _17)
    SourceInfo(src/engine/general_purpose/decode.rs:264:16-264:80)
  5: StorageDead(_17)
    SourceInfo(src/engine/general_purpose/decode.rs:264:79-264:80)
  6: StorageDead(_20)
    SourceInfo(src/engine/general_purpose/decode.rs:264:80-264:81)
  7: StorageDead(_14)
    SourceInfo(src/engine/general_purpose/decode.rs:265:5-265:6)
  8: StorageDead(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:265:5-265:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb42
  }
  preds [bb4]
  succs [bb42]

bb6
  0: StorageDead(_15)
    SourceInfo(src/engine/general_purpose/decode.rs:263:30-263:31)
  1: _13 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:265:6-265:6)
  2: StorageDead(_14)
    SourceInfo(src/engine/general_purpose/decode.rs:265:5-265:6)
  3: StorageDead(_13)
    SourceInfo(src/engine/general_purpose/decode.rs:265:5-265:6)
  4: StorageLive(_23)
    SourceInfo(src/engine/general_purpose/decode.rs:266:9-266:18)
  5: StorageLive(_24)
    SourceInfo(src/engine/general_purpose/decode.rs:266:21-266:38)
  6: StorageLive(_25)
    SourceInfo(src/engine/general_purpose/decode.rs:266:31-266:37)
  7: _25 = _5
    SourceInfo(src/engine/general_purpose/decode.rs:266:31-266:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:266:21-266:38)
      kind: _24 = <u32 as std::convert::From<u8>>::from(move _25) -> [return: bb7, unwind: bb44]
  }
  preds [bb3]
  succs [bb7, bb44]

bb7
  0: StorageDead(_25)
    SourceInfo(src/engine/general_purpose/decode.rs:266:37-266:38)
  1: _26 = const 26_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:266:21-266:44)
  2: _27 = Lt(move _26, const 32_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:266:21-266:44)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:266:21-266:44)
      kind: assert(move _27, "attempt to shift left by `{}`, which would overflow", const 26_i32) -> [success: bb8, unwind: bb44]
  }
  preds [bb6]
  succs [bb8, bb44]

bb8
  0: _23 = Shl(move _24, const 26_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:266:21-266:44)
  1: StorageDead(_24)
    SourceInfo(src/engine/general_purpose/decode.rs:266:43-266:44)
  2: FakeRead(ForLet(None), _23)
    SourceInfo(src/engine/general_purpose/decode.rs:266:9-266:18)
  3: StorageLive(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:268:9-268:15)
  4: StorageLive(_29)
    SourceInfo(src/engine/general_purpose/decode.rs:268:31-268:52)
  5: StorageLive(_30)
    SourceInfo(src/engine/general_purpose/decode.rs:268:43-268:51)
  6: StorageLive(_31)
    SourceInfo(src/engine/general_purpose/decode.rs:268:49-268:50)
  7: _31 = const 1_usize
    SourceInfo(src/engine/general_purpose/decode.rs:268:49-268:50)
  8: _32 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:268:43-268:51)
  9: _33 = Lt(_31, _32)
    SourceInfo(src/engine/general_purpose/decode.rs:268:43-268:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:268:43-268:51)
      kind: assert(move _33, "index out of bounds: the length is {} but the index is {}", move _32, _31) -> [success: bb9, unwind: bb44]
  }
  preds [bb7]
  succs [bb9, bb44]

bb9
  0: _30 = (*_1)[_31]
    SourceInfo(src/engine/general_purpose/decode.rs:268:43-268:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:268:31-268:52)
      kind: _29 = <usize as std::convert::From<u8>>::from(move _30) -> [return: bb10, unwind: bb44]
  }
  preds [bb8]
  succs [bb10, bb44]

bb10
  0: StorageDead(_30)
    SourceInfo(src/engine/general_purpose/decode.rs:268:51-268:52)
  1: _34 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:268:18-268:53)
  2: _35 = Lt(_29, _34)
    SourceInfo(src/engine/general_purpose/decode.rs:268:18-268:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:268:18-268:53)
      kind: assert(move _35, "index out of bounds: the length is {} but the index is {}", move _34, _29) -> [success: bb11, unwind: bb44]
  }
  preds [bb9]
  succs [bb11, bb44]

bb11
  0: _28 = (*_3)[_29]
    SourceInfo(src/engine/general_purpose/decode.rs:268:18-268:53)
  1: FakeRead(ForLet(None), _28)
    SourceInfo(src/engine/general_purpose/decode.rs:268:9-268:15)
  2: StorageDead(_31)
    SourceInfo(src/engine/general_purpose/decode.rs:268:53-268:54)
  3: StorageDead(_29)
    SourceInfo(src/engine/general_purpose/decode.rs:268:53-268:54)
  4: StorageLive(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:269:5-274:6)
  5: StorageLive(_37)
    SourceInfo(src/engine/general_purpose/decode.rs:269:8-269:31)
  6: StorageLive(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:269:8-269:14)
  7: _38 = _28
    SourceInfo(src/engine/general_purpose/decode.rs:269:8-269:14)
  8: _37 = Eq(move _38, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:269:8-269:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:269:8-269:31)
      kind: switchInt(move _37) -> [0: bb15, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb15]

bb12
  0: StorageDead(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:269:30-269:31)
  1: StorageLive(_40)
    SourceInfo(src/engine/general_purpose/decode.rs:270:20-273:10)
  2: StorageLive(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:271:13-271:40)
  3: StorageLive(_42)
    SourceInfo(src/engine/general_purpose/decode.rs:271:13-271:36)
  4: _42 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:271:13-271:36)
  5: _43 = AddWithOverflow(_42, const 1_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:271:13-271:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:271:13-271:40)
      kind: assert(!move (_43.1: bool), "attempt to compute `{} + {}`, which would overflow", move _42, const 1_usize) -> [success: bb13, unwind: bb44]
  }
  preds [bb11]
  succs [bb13, bb44]

bb13
  0: _41 = move (_43.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:271:13-271:40)
  1: StorageDead(_42)
    SourceInfo(src/engine/general_purpose/decode.rs:271:39-271:40)
  2: StorageLive(_44)
    SourceInfo(src/engine/general_purpose/decode.rs:272:13-272:21)
  3: StorageLive(_45)
    SourceInfo(src/engine/general_purpose/decode.rs:272:19-272:20)
  4: _45 = const 1_usize
    SourceInfo(src/engine/general_purpose/decode.rs:272:19-272:20)
  5: _46 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:272:13-272:21)
  6: _47 = Lt(_45, _46)
    SourceInfo(src/engine/general_purpose/decode.rs:272:13-272:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:272:13-272:21)
      kind: assert(move _47, "index out of bounds: the length is {} but the index is {}", move _46, _45) -> [success: bb14, unwind: bb44]
  }
  preds [bb12]
  succs [bb14, bb44]

bb14
  0: _44 = (*_1)[_45]
    SourceInfo(src/engine/general_purpose/decode.rs:272:13-272:21)
  1: _40 = decode::DecodeError::InvalidByte(move _41, move _44)
    SourceInfo(src/engine/general_purpose/decode.rs:270:20-273:10)
  2: StorageDead(_44)
    SourceInfo(src/engine/general_purpose/decode.rs:273:9-273:10)
  3: StorageDead(_41)
    SourceInfo(src/engine/general_purpose/decode.rs:273:9-273:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _40)
    SourceInfo(src/engine/general_purpose/decode.rs:270:16-273:11)
  5: StorageDead(_40)
    SourceInfo(src/engine/general_purpose/decode.rs:273:10-273:11)
  6: StorageDead(_45)
    SourceInfo(src/engine/general_purpose/decode.rs:273:11-273:12)
  7: StorageDead(_37)
    SourceInfo(src/engine/general_purpose/decode.rs:274:5-274:6)
  8: StorageDead(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:274:5-274:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb41
  }
  preds [bb13]
  succs [bb41]

bb15
  0: StorageDead(_38)
    SourceInfo(src/engine/general_purpose/decode.rs:269:30-269:31)
  1: _36 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:274:6-274:6)
  2: StorageDead(_37)
    SourceInfo(src/engine/general_purpose/decode.rs:274:5-274:6)
  3: StorageDead(_36)
    SourceInfo(src/engine/general_purpose/decode.rs:274:5-274:6)
  4: StorageLive(_48)
    SourceInfo(src/engine/general_purpose/decode.rs:275:14-275:37)
  5: StorageLive(_49)
    SourceInfo(src/engine/general_purpose/decode.rs:275:14-275:31)
  6: StorageLive(_50)
    SourceInfo(src/engine/general_purpose/decode.rs:275:24-275:30)
  7: _50 = _28
    SourceInfo(src/engine/general_purpose/decode.rs:275:24-275:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:275:14-275:31)
      kind: _49 = <u32 as std::convert::From<u8>>::from(move _50) -> [return: bb16, unwind: bb44]
  }
  preds [bb11]
  succs [bb16, bb44]

bb16
  0: StorageDead(_50)
    SourceInfo(src/engine/general_purpose/decode.rs:275:30-275:31)
  1: _51 = const 20_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:275:14-275:37)
  2: _52 = Lt(move _51, const 32_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:275:14-275:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:275:14-275:37)
      kind: assert(move _52, "attempt to shift left by `{}`, which would overflow", const 20_i32) -> [success: bb17, unwind: bb44]
  }
  preds [bb15]
  succs [bb17, bb44]

bb17
  0: _48 = Shl(move _49, const 20_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:275:14-275:37)
  1: StorageDead(_49)
    SourceInfo(src/engine/general_purpose/decode.rs:275:36-275:37)
  2: _23 = BitOr(_23, move _48)
    SourceInfo(src/engine/general_purpose/decode.rs:275:5-275:37)
  3: StorageDead(_48)
    SourceInfo(src/engine/general_purpose/decode.rs:275:36-275:37)
  4: StorageLive(_53)
    SourceInfo(src/engine/general_purpose/decode.rs:277:9-277:15)
  5: StorageLive(_54)
    SourceInfo(src/engine/general_purpose/decode.rs:277:31-277:52)
  6: StorageLive(_55)
    SourceInfo(src/engine/general_purpose/decode.rs:277:43-277:51)
  7: StorageLive(_56)
    SourceInfo(src/engine/general_purpose/decode.rs:277:49-277:50)
  8: _56 = const 2_usize
    SourceInfo(src/engine/general_purpose/decode.rs:277:49-277:50)
  9: _57 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:277:43-277:51)
  10: _58 = Lt(_56, _57)
    SourceInfo(src/engine/general_purpose/decode.rs:277:43-277:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:277:43-277:51)
      kind: assert(move _58, "index out of bounds: the length is {} but the index is {}", move _57, _56) -> [success: bb18, unwind: bb44]
  }
  preds [bb16]
  succs [bb18, bb44]

bb18
  0: _55 = (*_1)[_56]
    SourceInfo(src/engine/general_purpose/decode.rs:277:43-277:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:277:31-277:52)
      kind: _54 = <usize as std::convert::From<u8>>::from(move _55) -> [return: bb19, unwind: bb44]
  }
  preds [bb17]
  succs [bb19, bb44]

bb19
  0: StorageDead(_55)
    SourceInfo(src/engine/general_purpose/decode.rs:277:51-277:52)
  1: _59 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:277:18-277:53)
  2: _60 = Lt(_54, _59)
    SourceInfo(src/engine/general_purpose/decode.rs:277:18-277:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:277:18-277:53)
      kind: assert(move _60, "index out of bounds: the length is {} but the index is {}", move _59, _54) -> [success: bb20, unwind: bb44]
  }
  preds [bb18]
  succs [bb20, bb44]

bb20
  0: _53 = (*_3)[_54]
    SourceInfo(src/engine/general_purpose/decode.rs:277:18-277:53)
  1: FakeRead(ForLet(None), _53)
    SourceInfo(src/engine/general_purpose/decode.rs:277:9-277:15)
  2: StorageDead(_56)
    SourceInfo(src/engine/general_purpose/decode.rs:277:53-277:54)
  3: StorageDead(_54)
    SourceInfo(src/engine/general_purpose/decode.rs:277:53-277:54)
  4: StorageLive(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:278:5-283:6)
  5: StorageLive(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:278:8-278:31)
  6: StorageLive(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:278:8-278:14)
  7: _63 = _53
    SourceInfo(src/engine/general_purpose/decode.rs:278:8-278:14)
  8: _62 = Eq(move _63, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:278:8-278:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:278:8-278:31)
      kind: switchInt(move _62) -> [0: bb24, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb24]

bb21
  0: StorageDead(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:278:30-278:31)
  1: StorageLive(_65)
    SourceInfo(src/engine/general_purpose/decode.rs:279:20-282:10)
  2: StorageLive(_66)
    SourceInfo(src/engine/general_purpose/decode.rs:280:13-280:40)
  3: StorageLive(_67)
    SourceInfo(src/engine/general_purpose/decode.rs:280:13-280:36)
  4: _67 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:280:13-280:36)
  5: _68 = AddWithOverflow(_67, const 2_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:280:13-280:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:280:13-280:40)
      kind: assert(!move (_68.1: bool), "attempt to compute `{} + {}`, which would overflow", move _67, const 2_usize) -> [success: bb22, unwind: bb44]
  }
  preds [bb20]
  succs [bb22, bb44]

bb22
  0: _66 = move (_68.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:280:13-280:40)
  1: StorageDead(_67)
    SourceInfo(src/engine/general_purpose/decode.rs:280:39-280:40)
  2: StorageLive(_69)
    SourceInfo(src/engine/general_purpose/decode.rs:281:13-281:21)
  3: StorageLive(_70)
    SourceInfo(src/engine/general_purpose/decode.rs:281:19-281:20)
  4: _70 = const 2_usize
    SourceInfo(src/engine/general_purpose/decode.rs:281:19-281:20)
  5: _71 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:281:13-281:21)
  6: _72 = Lt(_70, _71)
    SourceInfo(src/engine/general_purpose/decode.rs:281:13-281:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:281:13-281:21)
      kind: assert(move _72, "index out of bounds: the length is {} but the index is {}", move _71, _70) -> [success: bb23, unwind: bb44]
  }
  preds [bb21]
  succs [bb23, bb44]

bb23
  0: _69 = (*_1)[_70]
    SourceInfo(src/engine/general_purpose/decode.rs:281:13-281:21)
  1: _65 = decode::DecodeError::InvalidByte(move _66, move _69)
    SourceInfo(src/engine/general_purpose/decode.rs:279:20-282:10)
  2: StorageDead(_69)
    SourceInfo(src/engine/general_purpose/decode.rs:282:9-282:10)
  3: StorageDead(_66)
    SourceInfo(src/engine/general_purpose/decode.rs:282:9-282:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _65)
    SourceInfo(src/engine/general_purpose/decode.rs:279:16-282:11)
  5: StorageDead(_65)
    SourceInfo(src/engine/general_purpose/decode.rs:282:10-282:11)
  6: StorageDead(_70)
    SourceInfo(src/engine/general_purpose/decode.rs:282:11-282:12)
  7: StorageDead(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:283:5-283:6)
  8: StorageDead(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:283:5-283:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb22]
  succs [bb40]

bb24
  0: StorageDead(_63)
    SourceInfo(src/engine/general_purpose/decode.rs:278:30-278:31)
  1: _61 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:283:6-283:6)
  2: StorageDead(_62)
    SourceInfo(src/engine/general_purpose/decode.rs:283:5-283:6)
  3: StorageDead(_61)
    SourceInfo(src/engine/general_purpose/decode.rs:283:5-283:6)
  4: StorageLive(_73)
    SourceInfo(src/engine/general_purpose/decode.rs:284:14-284:37)
  5: StorageLive(_74)
    SourceInfo(src/engine/general_purpose/decode.rs:284:14-284:31)
  6: StorageLive(_75)
    SourceInfo(src/engine/general_purpose/decode.rs:284:24-284:30)
  7: _75 = _53
    SourceInfo(src/engine/general_purpose/decode.rs:284:24-284:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:284:14-284:31)
      kind: _74 = <u32 as std::convert::From<u8>>::from(move _75) -> [return: bb25, unwind: bb44]
  }
  preds [bb20]
  succs [bb25, bb44]

bb25
  0: StorageDead(_75)
    SourceInfo(src/engine/general_purpose/decode.rs:284:30-284:31)
  1: _76 = const 14_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:284:14-284:37)
  2: _77 = Lt(move _76, const 32_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:284:14-284:37)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:284:14-284:37)
      kind: assert(move _77, "attempt to shift left by `{}`, which would overflow", const 14_i32) -> [success: bb26, unwind: bb44]
  }
  preds [bb24]
  succs [bb26, bb44]

bb26
  0: _73 = Shl(move _74, const 14_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:284:14-284:37)
  1: StorageDead(_74)
    SourceInfo(src/engine/general_purpose/decode.rs:284:36-284:37)
  2: _23 = BitOr(_23, move _73)
    SourceInfo(src/engine/general_purpose/decode.rs:284:5-284:37)
  3: StorageDead(_73)
    SourceInfo(src/engine/general_purpose/decode.rs:284:36-284:37)
  4: StorageLive(_78)
    SourceInfo(src/engine/general_purpose/decode.rs:286:9-286:15)
  5: StorageLive(_79)
    SourceInfo(src/engine/general_purpose/decode.rs:286:31-286:52)
  6: StorageLive(_80)
    SourceInfo(src/engine/general_purpose/decode.rs:286:43-286:51)
  7: StorageLive(_81)
    SourceInfo(src/engine/general_purpose/decode.rs:286:49-286:50)
  8: _81 = const 3_usize
    SourceInfo(src/engine/general_purpose/decode.rs:286:49-286:50)
  9: _82 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:286:43-286:51)
  10: _83 = Lt(_81, _82)
    SourceInfo(src/engine/general_purpose/decode.rs:286:43-286:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:286:43-286:51)
      kind: assert(move _83, "index out of bounds: the length is {} but the index is {}", move _82, _81) -> [success: bb27, unwind: bb44]
  }
  preds [bb25]
  succs [bb27, bb44]

bb27
  0: _80 = (*_1)[_81]
    SourceInfo(src/engine/general_purpose/decode.rs:286:43-286:51)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:286:31-286:52)
      kind: _79 = <usize as std::convert::From<u8>>::from(move _80) -> [return: bb28, unwind: bb44]
  }
  preds [bb26]
  succs [bb28, bb44]

bb28
  0: StorageDead(_80)
    SourceInfo(src/engine/general_purpose/decode.rs:286:51-286:52)
  1: _84 = Len((*_3))
    SourceInfo(src/engine/general_purpose/decode.rs:286:18-286:53)
  2: _85 = Lt(_79, _84)
    SourceInfo(src/engine/general_purpose/decode.rs:286:18-286:53)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:286:18-286:53)
      kind: assert(move _85, "index out of bounds: the length is {} but the index is {}", move _84, _79) -> [success: bb29, unwind: bb44]
  }
  preds [bb27]
  succs [bb29, bb44]

bb29
  0: _78 = (*_3)[_79]
    SourceInfo(src/engine/general_purpose/decode.rs:286:18-286:53)
  1: FakeRead(ForLet(None), _78)
    SourceInfo(src/engine/general_purpose/decode.rs:286:9-286:15)
  2: StorageDead(_81)
    SourceInfo(src/engine/general_purpose/decode.rs:286:53-286:54)
  3: StorageDead(_79)
    SourceInfo(src/engine/general_purpose/decode.rs:286:53-286:54)
  4: StorageLive(_86)
    SourceInfo(src/engine/general_purpose/decode.rs:287:5-292:6)
  5: StorageLive(_87)
    SourceInfo(src/engine/general_purpose/decode.rs:287:8-287:31)
  6: StorageLive(_88)
    SourceInfo(src/engine/general_purpose/decode.rs:287:8-287:14)
  7: _88 = _78
    SourceInfo(src/engine/general_purpose/decode.rs:287:8-287:14)
  8: _87 = Eq(move _88, const engine::general_purpose::INVALID_VALUE)
    SourceInfo(src/engine/general_purpose/decode.rs:287:8-287:31)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:287:8-287:31)
      kind: switchInt(move _87) -> [0: bb33, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb33]

bb30
  0: StorageDead(_88)
    SourceInfo(src/engine/general_purpose/decode.rs:287:30-287:31)
  1: StorageLive(_90)
    SourceInfo(src/engine/general_purpose/decode.rs:288:20-291:10)
  2: StorageLive(_91)
    SourceInfo(src/engine/general_purpose/decode.rs:289:13-289:40)
  3: StorageLive(_92)
    SourceInfo(src/engine/general_purpose/decode.rs:289:13-289:36)
  4: _92 = _2
    SourceInfo(src/engine/general_purpose/decode.rs:289:13-289:36)
  5: _93 = AddWithOverflow(_92, const 3_usize)
    SourceInfo(src/engine/general_purpose/decode.rs:289:13-289:40)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:289:13-289:40)
      kind: assert(!move (_93.1: bool), "attempt to compute `{} + {}`, which would overflow", move _92, const 3_usize) -> [success: bb31, unwind: bb44]
  }
  preds [bb29]
  succs [bb31, bb44]

bb31
  0: _91 = move (_93.0: usize)
    SourceInfo(src/engine/general_purpose/decode.rs:289:13-289:40)
  1: StorageDead(_92)
    SourceInfo(src/engine/general_purpose/decode.rs:289:39-289:40)
  2: StorageLive(_94)
    SourceInfo(src/engine/general_purpose/decode.rs:290:13-290:21)
  3: StorageLive(_95)
    SourceInfo(src/engine/general_purpose/decode.rs:290:19-290:20)
  4: _95 = const 3_usize
    SourceInfo(src/engine/general_purpose/decode.rs:290:19-290:20)
  5: _96 = Len((*_1))
    SourceInfo(src/engine/general_purpose/decode.rs:290:13-290:21)
  6: _97 = Lt(_95, _96)
    SourceInfo(src/engine/general_purpose/decode.rs:290:13-290:21)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:290:13-290:21)
      kind: assert(move _97, "index out of bounds: the length is {} but the index is {}", move _96, _95) -> [success: bb32, unwind: bb44]
  }
  preds [bb30]
  succs [bb32, bb44]

bb32
  0: _94 = (*_1)[_95]
    SourceInfo(src/engine/general_purpose/decode.rs:290:13-290:21)
  1: _90 = decode::DecodeError::InvalidByte(move _91, move _94)
    SourceInfo(src/engine/general_purpose/decode.rs:288:20-291:10)
  2: StorageDead(_94)
    SourceInfo(src/engine/general_purpose/decode.rs:291:9-291:10)
  3: StorageDead(_91)
    SourceInfo(src/engine/general_purpose/decode.rs:291:9-291:10)
  4: _0 = std::result::Result::<(), decode::DecodeError>::Err(move _90)
    SourceInfo(src/engine/general_purpose/decode.rs:288:16-291:11)
  5: StorageDead(_90)
    SourceInfo(src/engine/general_purpose/decode.rs:291:10-291:11)
  6: StorageDead(_95)
    SourceInfo(src/engine/general_purpose/decode.rs:291:11-291:12)
  7: StorageDead(_87)
    SourceInfo(src/engine/general_purpose/decode.rs:292:5-292:6)
  8: StorageDead(_86)
    SourceInfo(src/engine/general_purpose/decode.rs:292:5-292:6)
  9: StorageDead(_78)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb31]
  succs [bb40]

bb33
  0: StorageDead(_88)
    SourceInfo(src/engine/general_purpose/decode.rs:287:30-287:31)
  1: _86 = const ()
    SourceInfo(src/engine/general_purpose/decode.rs:292:6-292:6)
  2: StorageDead(_87)
    SourceInfo(src/engine/general_purpose/decode.rs:292:5-292:6)
  3: StorageDead(_86)
    SourceInfo(src/engine/general_purpose/decode.rs:292:5-292:6)
  4: StorageLive(_98)
    SourceInfo(src/engine/general_purpose/decode.rs:293:14-293:36)
  5: StorageLive(_99)
    SourceInfo(src/engine/general_purpose/decode.rs:293:14-293:31)
  6: StorageLive(_100)
    SourceInfo(src/engine/general_purpose/decode.rs:293:24-293:30)
  7: _100 = _78
    SourceInfo(src/engine/general_purpose/decode.rs:293:24-293:30)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:293:14-293:31)
      kind: _99 = <u32 as std::convert::From<u8>>::from(move _100) -> [return: bb34, unwind: bb44]
  }
  preds [bb29]
  succs [bb34, bb44]

bb34
  0: StorageDead(_100)
    SourceInfo(src/engine/general_purpose/decode.rs:293:30-293:31)
  1: _101 = const 8_i32 as u32 (IntToInt)
    SourceInfo(src/engine/general_purpose/decode.rs:293:14-293:36)
  2: _102 = Lt(move _101, const 32_u32)
    SourceInfo(src/engine/general_purpose/decode.rs:293:14-293:36)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:293:14-293:36)
      kind: assert(move _102, "attempt to shift left by `{}`, which would overflow", const 8_i32) -> [success: bb35, unwind: bb44]
  }
  preds [bb33]
  succs [bb35, bb44]

bb35
  0: _98 = Shl(move _99, const 8_i32)
    SourceInfo(src/engine/general_purpose/decode.rs:293:14-293:36)
  1: StorageDead(_99)
    SourceInfo(src/engine/general_purpose/decode.rs:293:35-293:36)
  2: _23 = BitOr(_23, move _98)
    SourceInfo(src/engine/general_purpose/decode.rs:293:5-293:36)
  3: StorageDead(_98)
    SourceInfo(src/engine/general_purpose/decode.rs:293:35-293:36)
  4: StorageLive(_103)
    SourceInfo(src/engine/general_purpose/decode.rs:295:5-295:59)
  5: StorageLive(_104)
    SourceInfo(src/engine/general_purpose/decode.rs:295:5-295:16)
  6: StorageLive(_105)
    SourceInfo(src/engine/general_purpose/decode.rs:295:11-295:16)
  7: StorageLive(_106)
    SourceInfo(src/engine/general_purpose/decode.rs:295:5-295:11)
  8: _106 = &mut (*_4)
    SourceInfo(src/engine/general_purpose/decode.rs:295:5-295:11)
  9: StorageLive(_107)
    SourceInfo(src/engine/general_purpose/decode.rs:295:12-295:15)
  10: _107 = std::ops::RangeTo::<usize> { end: const 3_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:295:12-295:15)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:295:11-295:16)
      kind: _105 = <[u8] as std::ops::IndexMut<std::ops::RangeTo<usize>>>::index_mut(move _106, move _107) -> [return: bb36, unwind: bb44]
  }
  preds [bb34]
  succs [bb36, bb44]

bb36
  0: _104 = &mut (*_105)
    SourceInfo(src/engine/general_purpose/decode.rs:295:5-295:16)
  1: StorageDead(_107)
    SourceInfo(src/engine/general_purpose/decode.rs:295:15-295:16)
  2: StorageDead(_106)
    SourceInfo(src/engine/general_purpose/decode.rs:295:15-295:16)
  3: StorageLive(_108)
    SourceInfo(src/engine/general_purpose/decode.rs:295:33-295:58)
  4: StorageLive(_109)
    SourceInfo(src/engine/general_purpose/decode.rs:295:33-295:58)
  5: StorageLive(_110)
    SourceInfo(src/engine/general_purpose/decode.rs:295:53-295:58)
  6: StorageLive(_111)
    SourceInfo(src/engine/general_purpose/decode.rs:295:34-295:53)
  7: StorageLive(_112)
    SourceInfo(src/engine/general_purpose/decode.rs:295:34-295:53)
  8: StorageLive(_113)
    SourceInfo(src/engine/general_purpose/decode.rs:295:34-295:39)
  9: _113 = _23
    SourceInfo(src/engine/general_purpose/decode.rs:295:34-295:39)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:295:34-295:53)
      kind: _112 = core::num::<impl u32>::to_be_bytes(move _113) -> [return: bb37, unwind: bb44]
  }
  preds [bb35]
  succs [bb37, bb44]

bb37
  0: _111 = &_112
    SourceInfo(src/engine/general_purpose/decode.rs:295:34-295:53)
  1: StorageDead(_113)
    SourceInfo(src/engine/general_purpose/decode.rs:295:52-295:53)
  2: StorageLive(_114)
    SourceInfo(src/engine/general_purpose/decode.rs:295:54-295:57)
  3: _114 = std::ops::RangeTo::<usize> { end: const 3_usize }
    SourceInfo(src/engine/general_purpose/decode.rs:295:54-295:57)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:295:53-295:58)
      kind: _110 = <[u8; 4] as std::ops::Index<std::ops::RangeTo<usize>>>::index(move _111, move _114) -> [return: bb38, unwind: bb44]
  }
  preds [bb36]
  succs [bb38, bb44]

bb38
  0: StorageDead(_114)
    SourceInfo(src/engine/general_purpose/decode.rs:295:57-295:58)
  1: StorageDead(_111)
    SourceInfo(src/engine/general_purpose/decode.rs:295:57-295:58)
  2: _109 = &(*_110)
    SourceInfo(src/engine/general_purpose/decode.rs:295:33-295:58)
  3: _108 = &(*_109)
    SourceInfo(src/engine/general_purpose/decode.rs:295:33-295:58)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:295:5-295:59)
      kind: _103 = core::slice::<impl [u8]>::copy_from_slice(move _104, move _108) -> [return: bb39, unwind: bb44]
  }
  preds [bb37]
  succs [bb39, bb44]

bb39
  0: StorageDead(_108)
    SourceInfo(src/engine/general_purpose/decode.rs:295:58-295:59)
  1: StorageDead(_104)
    SourceInfo(src/engine/general_purpose/decode.rs:295:58-295:59)
  2: StorageDead(_112)
    SourceInfo(src/engine/general_purpose/decode.rs:295:59-295:60)
  3: StorageDead(_110)
    SourceInfo(src/engine/general_purpose/decode.rs:295:59-295:60)
  4: StorageDead(_109)
    SourceInfo(src/engine/general_purpose/decode.rs:295:59-295:60)
  5: StorageDead(_105)
    SourceInfo(src/engine/general_purpose/decode.rs:295:59-295:60)
  6: StorageDead(_103)
    SourceInfo(src/engine/general_purpose/decode.rs:295:59-295:60)
  7: StorageLive(_115)
    SourceInfo(src/engine/general_purpose/decode.rs:297:8-297:10)
  8: _115 = ()
    SourceInfo(src/engine/general_purpose/decode.rs:297:8-297:10)
  9: _0 = std::result::Result::<(), decode::DecodeError>::Ok(move _115)
    SourceInfo(src/engine/general_purpose/decode.rs:297:5-297:11)
  10: StorageDead(_115)
    SourceInfo(src/engine/general_purpose/decode.rs:297:10-297:11)
  11: StorageDead(_78)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  12: StorageDead(_53)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  13: StorageDead(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  14: StorageDead(_23)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  15: StorageDead(_5)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:298:2-298:2)
      kind: goto -> bb43
  }
  preds [bb38]
  succs [bb43]

bb40
  0: StorageDead(_53)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb41
  }
  preds [bb23, bb32]
  succs [bb41]

bb41
  0: StorageDead(_28)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  1: StorageDead(_23)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb42
  }
  preds [bb14, bb40]
  succs [bb42]

bb42
  0: StorageDead(_5)
    SourceInfo(src/engine/general_purpose/decode.rs:298:1-298:2)
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:298:2-298:2)
      kind: goto -> bb43
  }
  preds [bb5, bb41]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:298:2-298:2)
      kind: return
  }
  preds [bb39, bb42]
  succs []

bb44
  Terminator {
      source_info: SourceInfo(src/engine/general_purpose/decode.rs:256:1-298:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb6, bb7, bb8, bb9, bb10, bb12, bb13, bb15, bb16, bb17, bb18, bb19, bb21, bb22, bb24, bb25, bb26, bb27, bb28, bb30, bb31, bb33, bb34, bb35, bb36, bb37, bb38]
  succs []

