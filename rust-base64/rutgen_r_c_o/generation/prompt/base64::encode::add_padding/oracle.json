{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// src/encode.rs\n// crate name is base64\n#[cfg(any(feature = \"alloc\", test))]\nuse alloc::string::String;\nuse core::fmt;\n#[cfg(any(feature = \"std\", test))]\nuse std::error;\n#[cfg(any(feature = \"alloc\", test))]\nuse crate::engine::general_purpose::STANDARD;\nuse crate::engine::{Config, Engine};\nuse crate::PAD_BYTE;\npub(crate) fn add_padding(unpadded_output_len: usize, output: &mut [u8]) -> usize {\n    let pad_bytes = (4 - (unpadded_output_len % 4)) % 4;\n    #[allow(clippy::needless_range_loop)]\n    for i in 0..pad_bytes {\n        output[i] = PAD_BYTE;\n    }\n    pad_bytes\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Write padding characters.\n/// `unpadded_output_len` is the size of the unpadded but base64 encoded data.\n/// `output` is the slice where padding should be written, of length at least 2.\n///\n/// Returns the number of padding bytes written.\n133 pub(crate) fn add_padding(unpadded_output_len: usize, output: &mut [u8]) -> usize {\n134     let pad_bytes = (4 - (unpadded_output_len % 4)) % 4;\n135     // for just a couple bytes, this has better performance than using\n136     // .fill(), or iterating over mutable refs, which call memset()\n137     #[allow(clippy::needless_range_loop)]\n138     for i in 0..pad_bytes {\n139         output[i] = PAD_BYTE;\n140     }\n141 \n142     pad_bytes\n143 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}