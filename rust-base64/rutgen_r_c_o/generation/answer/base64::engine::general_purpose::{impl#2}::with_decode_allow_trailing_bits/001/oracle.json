[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let original_config = GeneralPurposeConfig::new();",
          "    let updated_config = original_config.with_decode_allow_trailing_bits(true);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(updated_config.decode_allow_trailing_bits, true);",
          "    assert_eq!(updated_config.encode_padding, original_config.encode_padding);",
          "    assert_eq!(updated_config.decode_padding_mode, original_config.decode_padding_mode);"
        ],
        "code": [
          "{",
          "    let original_config = GeneralPurposeConfig::new();",
          "    let updated_config = original_config.with_decode_allow_trailing_bits(true);",
          "    assert_eq!(updated_config.decode_allow_trailing_bits, true);",
          "    assert_eq!(updated_config.encode_padding, original_config.encode_padding);",
          "    assert_eq!(updated_config.decode_padding_mode, original_config.decode_padding_mode);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let original_config = GeneralPurposeConfig::new();",
          "    let updated_config = original_config.with_decode_allow_trailing_bits(false);",
          "}"
        ],
        "oracle": [
          "    let original_config = GeneralPurposeConfig::new();",
          "    let updated_config = original_config.with_decode_allow_trailing_bits(false);",
          "    assert_eq!(updated_config.decode_allow_trailing_bits, false);",
          "    let new_config = original_config.with_decode_allow_trailing_bits(true);",
          "    assert_eq!(new_config.decode_allow_trailing_bits, true);",
          "    let another_updated_config = original_config.with_decode_allow_trailing_bits(false);",
          "    assert_eq!(another_updated_config.decode_allow_trailing_bits, false);",
          "    assert_eq!(another_updated_config.encode_padding, original_config.encode_padding);",
          "    assert_eq!(another_updated_config.decode_padding_mode, original_config.decode_padding_mode);"
        ],
        "code": [
          "{",
          "    let original_config = GeneralPurposeConfig::new();",
          "    let updated_config = original_config.with_decode_allow_trailing_bits(false);",
          "    let original_config = GeneralPurposeConfig::new();",
          "    let updated_config = original_config.with_decode_allow_trailing_bits(false);",
          "    assert_eq!(updated_config.decode_allow_trailing_bits, false);",
          "    let new_config = original_config.with_decode_allow_trailing_bits(true);",
          "    assert_eq!(new_config.decode_allow_trailing_bits, true);",
          "    let another_updated_config = original_config.with_decode_allow_trailing_bits(false);",
          "    assert_eq!(another_updated_config.decode_allow_trailing_bits, false);",
          "    assert_eq!(another_updated_config.encode_padding, original_config.encode_padding);",
          "    assert_eq!(another_updated_config.decode_padding_mode, original_config.decode_padding_mode);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let original_config = GeneralPurposeConfig::new()",
          "        .with_decode_allow_trailing_bits(true);",
          "    let updated_config = original_config.with_decode_allow_trailing_bits(false);",
          "}"
        ],
        "oracle": [
          "    let original_config = GeneralPurposeConfig::new().with_decode_allow_trailing_bits(true);",
          "    let expected_config = GeneralPurposeConfig::new().with_decode_allow_trailing_bits(false);",
          "    assert_eq!(updated_config.decode_allow_trailing_bits, false);",
          "    assert_eq!(updated_config.encode_padding, original_config.encode_padding);",
          "    assert_eq!(updated_config.decode_padding_mode, original_config.decode_padding_mode);",
          "    assert_ne!(updated_config.decode_allow_trailing_bits, original_config.decode_allow_trailing_bits);"
        ],
        "code": [
          "{",
          "    let original_config = GeneralPurposeConfig::new()",
          "        .with_decode_allow_trailing_bits(true);",
          "    let updated_config = original_config.with_decode_allow_trailing_bits(false);",
          "    let original_config = GeneralPurposeConfig::new().with_decode_allow_trailing_bits(true);",
          "    let expected_config = GeneralPurposeConfig::new().with_decode_allow_trailing_bits(false);",
          "    assert_eq!(updated_config.decode_allow_trailing_bits, false);",
          "    assert_eq!(updated_config.encode_padding, original_config.encode_padding);",
          "    assert_eq!(updated_config.decode_padding_mode, original_config.decode_padding_mode);",
          "    assert_ne!(updated_config.decode_allow_trailing_bits, original_config.decode_allow_trailing_bits);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]