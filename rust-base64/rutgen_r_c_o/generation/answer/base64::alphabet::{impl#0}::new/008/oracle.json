[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let alphabet = \"\\u{00}ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";",
          "    let result = Alphabet::new(alphabet);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), ParseAlphabetError::UnprintableByte(0));"
        ],
        "code": [
          "{",
          "    let alphabet = \"\\u{00}ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";",
          "    let result = Alphabet::new(alphabet);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), ParseAlphabetError::UnprintableByte(0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\u{7F}\";",
          "    let result = Alphabet::new(alphabet);",
          "}"
        ],
        "oracle": [
          "    let alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\u{7F}\";",
          "    let result = Alphabet::new(alphabet);",
          "    assert_eq!(result, Err(ParseAlphabetError::UnprintableByte(127)));"
        ],
        "code": [
          "{",
          "    let alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\u{7F}\";",
          "    let result = Alphabet::new(alphabet);",
          "    let alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\u{7F}\";",
          "    let result = Alphabet::new(alphabet);",
          "    assert_eq!(result, Err(ParseAlphabetError::UnprintableByte(127)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]