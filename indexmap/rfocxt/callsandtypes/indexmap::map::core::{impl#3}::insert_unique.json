{"mod_name":"map::core","calls":["core::panicking::assert_failed::<usize, usize>","hashbrown::HashTable::<usize>::insert_unique::<impl for<'a> Fn","HashValue::get","alloc::vec::Vec::<Bucket<K, V>>::len","<alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref","alloc::vec::Vec::<Bucket<K, V>>::capacity","map::core::reserve_entries::<K, V>","alloc::vec::Vec::<Bucket<K, V>>::push","map::core::entry::OccupiedEntry::<'_, K, V>::new","hashbrown::HashTable::<usize>::len","map::core::get_hash::<K, V>"],"types":["HashValue","core::fmt::Arguments<'_>","hashbrown::HashTable<usize>","()","core::option::Option<core::fmt::Arguments<'_>>","impl for<'a> Fn(&'a usize) -> u64 + '_","usize","[Bucket<K, V>]","(&usize, &usize)","hashbrown::raw::alloc::inner::Global","hashbrown::hash_table::OccupiedEntry<'_, usize>","Bucket<K, V>","bool","(usize, bool)","alloc::vec::Vec<Bucket<K, V>>","K","core::panicking::AssertKind","alloc::alloc::Global","V","map::core::entry::OccupiedEntry<'_, K, V>","u64","!","map::core::RefMut<'_, K, V>"]}