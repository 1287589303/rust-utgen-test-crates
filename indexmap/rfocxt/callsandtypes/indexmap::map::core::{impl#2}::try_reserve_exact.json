{"mod_name":"map::core","calls":["<alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref","core::result::Result::<","alloc::vec::Vec::<Bucket<K, V>>::try_reserve_exact","hashbrown::HashTable::<usize>::try_reserve::<impl for<'a> Fn","<core::result::Result<","map::core::get_hash::<K, V>"],"types":["core::result::Result<(), alloc::collections::TryReserveError>","hashbrown::HashTable<usize>","[Bucket<K, V>]","()","core::result::Result<core::convert::Infallible, TryReserveError>","V","alloc::vec::Vec<Bucket<K, V>>","alloc::alloc::Global","isize","core::convert::Infallible","core::result::Result<(), TryReserveError>","K","fn(alloc::collections::TryReserveError) -> TryReserveError {TryReserveError::from_alloc}","usize","core::result::Result<(), hashbrown::TryReserveError>","map::core::IndexMapCore<K, V>","fn(hashbrown::TryReserveError) -> TryReserveError {TryReserveError::from_hashbrown}","TryReserveError","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, TryReserveError>>","Bucket<K, V>","!","hashbrown::TryReserveError","hashbrown::raw::alloc::inner::Global","impl for<'a> Fn(&'a usize) -> u64 + '_","alloc::collections::TryReserveError"]}