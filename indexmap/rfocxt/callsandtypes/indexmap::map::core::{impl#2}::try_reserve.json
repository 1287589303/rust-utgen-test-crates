{"mod_name":"map::core","calls":["map::core::get_hash::<K, V>","hashbrown::HashTable::<usize>::try_reserve::<impl for<'a> Fn","<alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref","<core::result::Result<","alloc::vec::Vec::<Bucket<K, V>>::capacity","alloc::vec::Vec::<Bucket<K, V>>::len","core::result::Result::<","map::core::IndexMapCore::<K, V>::try_reserve_entries"],"types":["impl for<'a> Fn(&'a usize) -> u64 + '_","alloc::vec::Vec<Bucket<K, V>>","core::result::Result<(), TryReserveError>","core::result::Result<core::convert::Infallible, TryReserveError>","alloc::alloc::Global","map::core::IndexMapCore<K, V>","TryReserveError","core::result::Result<(), hashbrown::TryReserveError>","bool","fn(hashbrown::TryReserveError) -> TryReserveError {TryReserveError::from_hashbrown}","usize","isize","hashbrown::raw::alloc::inner::Global","core::convert::Infallible","hashbrown::TryReserveError","!","()","hashbrown::HashTable<usize>","Bucket<K, V>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, TryReserveError>>","K","[Bucket<K, V>]","(usize, bool)","V"]}