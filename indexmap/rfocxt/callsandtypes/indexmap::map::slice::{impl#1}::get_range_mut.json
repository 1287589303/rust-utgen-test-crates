{"mod_name":"map::slice","calls":["core::option::Option::<&mut [Bucket<K, V>]>::map::<&mut map::slice::Slice<K, V>, for<'a> fn","<core::option::Option<core::ops::Range<usize>> as core::ops::Try>::branch","core::slice::<impl [Bucket<K, V>]>::len","util::try_simplify_range::<R>","core::slice::<impl [Bucket<K, V>]>::get_mut::<core::ops::Range<usize>>","<core::option::Option<&mut map::slice::Slice<K, V>> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual"],"types":["core::ops::Range<usize>","[Bucket<K, V>]","core::option::Option<core::convert::Infallible>","for<'a> fn(&'a mut [Bucket<K, V>]) -> &'a mut map::slice::Slice<K, V> {map::slice::Slice::<K, V>::from_mut_slice}","R","map::slice::Slice<K, V>","K","usize","Bucket<K, V>","core::option::Option<&mut [Bucket<K, V>]>","core::option::Option<&mut map::slice::Slice<K, V>>","V","core::option::Option<core::ops::Range<usize>>","core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, core::ops::Range<usize>>","!","isize","core::convert::Infallible"]}