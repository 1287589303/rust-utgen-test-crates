{"mod_name":"map::core","calls":["HashValue::get","alloc::vec::Vec::<Bucket<K, V>>::len","core::mem::replace::<V>","hashbrown::HashTable::<usize>::len","<alloc::vec::Vec<Bucket<K, V>> as core::ops::IndexMut<usize>>::index_mut","map::core::get_hash::<K, V>","map::core::equivalent::<K, V, K>","core::panicking::assert_failed::<usize, usize>","hashbrown::hash_table::VacantEntry::<'_, usize>::insert","map::core::IndexMapCore::<K, V>::push_entry","hashbrown::hash_table::OccupiedEntry::<'_, usize>::get","hashbrown::HashTable::<usize>::entry::<impl for<'a> Fn","<alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref"],"types":["HashValue","core::panicking::AssertKind","impl for<'a> Fn(&'a usize) -> u64 + '_","hashbrown::hash_table::VacantEntry<'_, usize>","hashbrown::hash_table::Entry<'_, usize>","alloc::alloc::Global","()","core::option::Option<core::fmt::Arguments<'_>>","usize","core::option::Option<V>","!","[Bucket<K, V>]","core::fmt::Arguments<'_>","V","hashbrown::raw::alloc::inner::Global","u64","K","impl for<'a> Fn(&'a usize) -> bool + '_","map::core::IndexMapCore<K, V>","alloc::vec::Vec<Bucket<K, V>>","Bucket<K, V>","bool","isize","hashbrown::HashTable<usize>","(usize, core::option::Option<V>)","hashbrown::hash_table::OccupiedEntry<'_, usize>","(&usize, &usize)"]}