[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1124:20: 1124:40 (#0),
                    scope: scope[0],
                },
                kind: _3 = <I as core::iter::IntoIterator>::into_iter(move _4) -> [return: bb1, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_5),
            _5 = {closure@src/set.rs:1124:45: 1124:48},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1124:20: 1124:57 (#0),
                    scope: scope[0],
                },
                kind: _2 = <<I as core::iter::IntoIterator>::IntoIter as core::iter::Iterator>::map::<(T, ()), {closure@src/set.rs:1124:45: 1124:48}>(move _3, move _5) -> [return: bb2, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_6),
            StorageLive(_7),
            _7 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1126:18: 1126:43 (#0),
                    scope: scope[1],
                },
                kind: _6 = <map::IndexMap<T, (), S> as core::iter::FromIterator<(T, ())>>::from_iter::<core::iter::Map<<I as core::iter::IntoIterator>::IntoIter, {closure@src/set.rs:1124:45: 1124:48}>>(move _7) -> [return: bb3, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            _0 = set::IndexSet::<T, S> { map: move _6 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1127:9: 1127:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_6) -> [return: bb4, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1128:5: 1128:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb5, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1128:5: 1128:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb6, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1128:6: 1128:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1126:42: 1126:43 (#0),
                    scope: scope[1],
                },
                kind: drop(_7) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1128:5: 1128:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1124:56: 1124:57 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1124:39: 1124:40 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1128:5: 1128:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb12, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1123:5: 1128:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: set::IndexSet<T/#0, S/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1123:61: 1123:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set.rs:1123:55: 1123:56 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set.rs:1123:45: 1123:53 (#0),
                            ),
                        ),
                        pat_span: src/set.rs:1123:45: 1123:53 (#0),
                    },
                ),
            ),
        ),
        ty: I/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1123:45: 1123:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/set.rs:1124:20: 1124:57 (#0),
                            ),
                        ),
                        pat_span: src/set.rs:1124:13: 1124:17 (#0),
                    },
                ),
            ),
        ),
        ty: core::iter::Map<Alias(Projection, AliasTy { args: [I/#2], def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter) }), Closure(DefId(0:2131 ~ indexmap[dd33]::set::{impl#9}::from_iter::{closure#0}), [T/#0, S/#1, I/#2, i16, Binder { value: extern "RustCall" fn((T/#0,)) -> (T/#0, ()), bound_vars: [] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1124:13: 1124:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    I/#2,
                ],
                def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1124:20: 1124:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: I/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1124:20: 1124:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:2131 ~ indexmap[dd33]::set::{impl#9}::from_iter::{closure#0}),
            [
                T/#0,
                S/#1,
                I/#2,
                i16,
                Binder { value: extern "RustCall" fn((T/#0,)) -> (T/#0, ()), bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1124:45: 1124:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: map::IndexMap<T/#0, (), S/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1126:18: 1126:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set.rs:1125:9: 1127:10 (#0),
                },
            ),
        ),
        ty: core::iter::Map<Alias(Projection, AliasTy { args: [I/#2], def_id: DefId(1:8327 ~ core[a245]::iter::traits::collect::IntoIterator::IntoIter) }), Closure(DefId(0:2131 ~ indexmap[dd33]::set::{impl#9}::from_iter::{closure#0}), [T/#0, S/#1, I/#2, i16, Binder { value: extern "RustCall" fn((T/#0,)) -> (T/#0, ()), bound_vars: [] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1126:38: 1126:42 (#0),
            scope: scope[0],
        },
    },
]