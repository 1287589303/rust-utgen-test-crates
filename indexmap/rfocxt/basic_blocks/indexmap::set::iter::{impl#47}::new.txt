[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            _5 = &mut ((*_1).0: map::IndexMap<T, (), S>),
            StorageLive(_6),
            _6 = move _2,
            StorageLive(_7),
            StorageLive(_8),
            _8 = move _3,
            _7 = set::iter::UnitValue::<I>(move _8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:551:63: 551:64 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:551:19: 551:65 (#0),
                    scope: scope[0],
                },
                kind: _4 = map::IndexMap::<T, (), S>::splice::<R, set::iter::UnitValue<I>>(move _5, move _6, move _7) -> [return: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_5),
            _0 = set::iter::Splice::<'_, I, T, S> { iter: move _4 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:552:9: 552:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:553:5: 553:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb4, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:553:5: 553:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb5, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:553:6: 553:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:551:64: 551:65 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:551:64: 551:65 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:553:5: 553:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:553:5: 553:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:546:5: 553:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: set::iter::Splice<'{erased}, I/#1, T/#2, S/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:546:85: 546:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set/iter.rs:546:31: 546:53 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set/iter.rs:546:26: 546:29 (#0),
                            ),
                        ),
                        pat_span: src/set/iter.rs:546:26: 546:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut set::IndexSet<T/#2, S/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:546:26: 546:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set/iter.rs:546:62: 546:63 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set/iter.rs:546:55: 546:60 (#0),
                            ),
                        ),
                        pat_span: src/set/iter.rs:546:55: 546:60 (#0),
                    },
                ),
            ),
        ),
        ty: R/#4,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:546:55: 546:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set/iter.rs:546:79: 546:80 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set/iter.rs:546:65: 546:77 (#0),
                            ),
                        ),
                        pat_span: src/set/iter.rs:546:65: 546:77 (#0),
                    },
                ),
            ),
        ),
        ty: I/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:546:65: 546:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: map::iter::Splice<'{erased}, set::iter::UnitValue<I/#1>, T/#2, (), S/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:551:19: 551:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/iter.rs:550:9: 552:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut map::IndexMap<T/#2, (), S/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:551:19: 551:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/iter.rs:550:9: 552:10 (#0),
                },
            ),
        ),
        ty: R/#4,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:551:34: 551:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/iter.rs:550:9: 552:10 (#0),
                },
            ),
        ),
        ty: set::iter::UnitValue<I/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:551:41: 551:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: I/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:551:51: 551:63 (#0),
            scope: scope[0],
        },
    },
]