[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
            StorageLive(_5),
            _5 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:361:21: 361:42 (#0),
                    scope: scope[0],
                },
                kind: _3 = set::IndexSet::<T, S1>::difference::<S2>(move _4, move _5) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_2),
            StorageLive(_8),
            _8 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:362:21: 362:42 (#0),
                    scope: scope[1],
                },
                kind: _6 = set::IndexSet::<T, S2>::difference::<S1>(move _7, move _8) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            FakeRead(ForLet(None), _6),
            StorageLive(_9),
            StorageLive(_10),
            _10 = move _3,
            StorageLive(_11),
            _11 = move _6,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:364:19: 364:37 (#0),
                    scope: scope[2],
                },
                kind: _9 = <set::iter::Difference<'_, T, S2> as core::iter::Iterator>::chain::<set::iter::Difference<'_, T, S1>>(move _10, move _11) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            _0 = set::iter::SymmetricDifference::<'_, T, S1, S2> { iter: move _9 },
            StorageDead(_9),
            StorageDead(_6),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:366:6: 366:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:360:5: 366:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: set::iter::SymmetricDifference<'{erased}, T/#1, S1/#2, S2/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:360:80: 360:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set/iter.rs:360:29: 360:48 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set/iter.rs:360:23: 360:27 (#0),
                            ),
                        ),
                        pat_span: src/set/iter.rs:360:23: 360:27 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} set::IndexSet<T/#1, S1/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:360:23: 360:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set/iter.rs:360:56: 360:75 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set/iter.rs:360:50: 360:54 (#0),
                            ),
                        ),
                        pat_span: src/set/iter.rs:360:50: 360:54 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} set::IndexSet<T/#1, S2/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:360:50: 360:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/set/iter.rs:361:21: 361:42 (#0),
                            ),
                        ),
                        pat_span: src/set/iter.rs:361:13: 361:18 (#0),
                    },
                ),
            ),
        ),
        ty: set::iter::Difference<'{erased}, T/#1, S2/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:361:13: 361:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} set::IndexSet<T/#1, S1/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:361:21: 361:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} set::IndexSet<T/#1, S2/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:361:37: 361:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/set/iter.rs:362:21: 362:42 (#0),
                            ),
                        ),
                        pat_span: src/set/iter.rs:362:13: 362:18 (#0),
                    },
                ),
            ),
        ),
        ty: set::iter::Difference<'{erased}, T/#1, S1/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:362:13: 362:18 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} set::IndexSet<T/#1, S2/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:362:21: 362:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} set::IndexSet<T/#1, S1/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:362:37: 362:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::iter::Chain<set::iter::Difference<'{erased}, T/#1, S2/#3>, set::iter::Difference<'{erased}, T/#1, S1/#2>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:364:19: 364:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/iter.rs:363:9: 365:10 (#0),
                },
            ),
        ),
        ty: set::iter::Difference<'{erased}, T/#1, S2/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:364:19: 364:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/iter.rs:363:9: 365:10 (#0),
                },
            ),
        ),
        ty: set::iter::Difference<'{erased}, T/#1, S1/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:364:31: 364:36 (#0),
            scope: scope[0],
        },
    },
]