[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &mut (*_1),
            StorageLive(_8),
            StorageLive(_9),
            _9 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:74:19: 74:29 (#0),
                    scope: scope[0],
                },
                kind: _8 = HashValue::get(move _9) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageLive(_10),
            _10 = {closure@src/map/core.rs:74:31: 74:40} { old: _3 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:73:17: 74:50 (#0),
                    scope: scope[0],
                },
                kind: _6 = hashbrown::HashTable::<usize>::find_mut::<{closure@src/map/core.rs:74:31: 74:40}>(move _7, move _8, move _10) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_11),
            StorageLive(_12),
            _12 = const "index not found",
            _11 = &(*_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:73:17: 75:35 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::option::Option::<&mut usize>::expect(move _6, move _11) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageDead(_12),
            StorageLive(_13),
            _13 = _4,
            (*_5) = move _13,
            StorageDead(_13),
            _0 = const (),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:77:2: 77:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:72:1: 77:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:72:78: 72:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core.rs:72:24: 72:36 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:72:17: 72:22 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:72:17: 72:22 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut hashbrown::HashTable<usize, hashbrown::raw::alloc::inner::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:72:17: 72:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core.rs:72:44: 72:53 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:72:38: 72:42 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:72:38: 72:42 (#0),
                    },
                ),
            ),
        ),
        ty: HashValue,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:72:38: 72:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core.rs:72:60: 72:65 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:72:55: 72:58 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:72:55: 72:58 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:72:55: 72:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core.rs:72:72: 72:77 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:72:67: 72:70 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:72:67: 72:70 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:72:67: 72:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:73:17: 75:35 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:73:9: 73:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:73:9: 73:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} mut usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:73:17: 74:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hashbrown::HashTable<usize, hashbrown::raw::alloc::inner::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:73:17: 73:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:74:19: 74:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: HashValue,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:74:19: 74:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:386 ~ indexmap[dd33]::map::core::update_index::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'^0 usize,)) -> bool, bound_vars: [Region(BrAnon)] },
                (usize,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:74:31: 74:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:75:17: 75:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:75:17: 75:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:76:14: 76:17 (#0),
            scope: scope[0],
        },
    },
]