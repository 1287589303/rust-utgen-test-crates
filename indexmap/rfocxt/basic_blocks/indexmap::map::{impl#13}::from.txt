[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:1524:9: 1524:29 (#0),
                    scope: scope[0],
                },
                kind: _0 = <map::IndexMap<K, V> as core::iter::FromIterator<(K, V)>>::from_iter::<[(K, V); N]>(move _2) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:1525:5: 1525:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:1525:6: 1525:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:1524:28: 1524:29 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:1525:5: 1525:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:1523:5: 1525:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: map::IndexMap<K/#0, V/#1, std::hash::RandomState>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:1523:34: 1523:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map.rs:1523:18: 1523:29 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map.rs:1523:13: 1523:16 (#0),
                            ),
                        ),
                        pat_span: src/map.rs:1523:13: 1523:16 (#0),
                    },
                ),
            ),
        ),
        ty: [(K/#0, V/#1); N/#2],
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:1523:13: 1523:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:1524:9: 1524:29 (#0),
                },
            ),
        ),
        ty: [(K/#0, V/#1); N/#2],
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:1524:25: 1524:28 (#0),
            scope: scope[0],
        },
    },
]