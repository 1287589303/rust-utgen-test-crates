[
    BasicBlockData {
        statements: [
            StorageLive(_6),
            StorageLive(_7),
            _7 = &mut ((*_1).0: map::core::IndexMapCore<K, V>),
            StorageLive(_8),
            _8 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:675:29: 675:57 (#0),
                    scope: scope[0],
                },
                kind: _6 = map::core::IndexMapCore::<K, V>::split_splice::<R>(move _7, move _8) -> [return: bb1, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            PlaceMention(_6),
            StorageLive(_4),
            _4 = move (_6.0: map::core::IndexMapCore<K, V>),
            StorageLive(_5),
            _5 = move (_6.1: alloc::vec::IntoIter<Bucket<K, V>>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:675:57: 675:58 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb2, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_9),
            _9 = &mut (*_1),
            StorageLive(_10),
            _10 = move _4,
            StorageLive(_11),
            _11 = move _5,
            StorageLive(_12),
            _12 = move _3,
            _0 = map::iter::Splice::<'_, I, K, V, S> { map: move _9, tail: move _10, drain: move _11, replace_with: move _12 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:681:9: 681:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_12) -> [return: bb3, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:681:9: 681:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb4, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:681:9: 681:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb5, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:682:5: 682:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb6, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:682:5: 682:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb7, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:682:5: 682:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb8, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:682:5: 682:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb9, unwind: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:682:6: 682:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:681:9: 681:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:681:9: 681:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb12, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:682:5: 682:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb13, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:682:5: 682:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb15, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:675:56: 675:57 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb15, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:682:5: 682:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb16, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:682:5: 682:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb17, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:671:5: 682:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: map::iter::Splice<'{erased}, I/#1, K/#2, V/#3, S/#4>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:671:88: 671:92 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/iter.rs:671:31: 671:56 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/iter.rs:671:26: 671:29 (#0),
                            ),
                        ),
                        pat_span: src/map/iter.rs:671:26: 671:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut map::IndexMap<K/#2, V/#3, S/#4>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:671:26: 671:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/iter.rs:671:65: 671:66 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/iter.rs:671:58: 671:63 (#0),
                            ),
                        ),
                        pat_span: src/map/iter.rs:671:58: 671:63 (#0),
                    },
                ),
            ),
        ),
        ty: R/#5,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:671:58: 671:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/iter.rs:671:82: 671:83 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/iter.rs:671:68: 671:80 (#0),
                            ),
                        ),
                        pat_span: src/map/iter.rs:671:68: 671:80 (#0),
                    },
                ),
            ),
        ),
        ty: I/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:671:68: 671:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _6,
                                ),
                                src/map/iter.rs:675:29: 675:57 (#0),
                            ),
                        ),
                        pat_span: src/map/iter.rs:675:13: 675:26 (#0),
                    },
                ),
            ),
        ),
        ty: map::core::IndexMapCore<K/#2, V/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:675:14: 675:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _6,
                                ),
                                src/map/iter.rs:675:29: 675:57 (#0),
                            ),
                        ),
                        pat_span: src/map/iter.rs:675:13: 675:26 (#0),
                    },
                ),
            ),
        ),
        ty: alloc::vec::IntoIter<Bucket<K/#2, V/#3>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:675:20: 675:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (map::core::IndexMapCore<K/#2, V/#3>, alloc::vec::IntoIter<Bucket<K/#2, V/#3>, alloc::alloc::Global>),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:675:29: 675:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut map::core::IndexMapCore<K/#2, V/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:675:29: 675:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: R/#5,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:675:51: 675:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} mut map::IndexMap<K/#2, V/#3, S/#4>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:677:13: 677:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: map::core::IndexMapCore<K/#2, V/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:678:13: 678:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: alloc::vec::IntoIter<Bucket<K/#2, V/#3>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:679:13: 679:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: I/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:680:13: 680:25 (#0),
            scope: scope[0],
        },
    },
]