[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &raw const (*_1),
            _3 = move _4 as *const map::slice::Slice<K, V> (PtrToPtr),
            StorageDead(_4),
            _2 = &(*_3),
            _0 = &(*_2),
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/slice.rs:32:6: 32:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} map::slice::Slice<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/slice.rs:30:65: 30:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/slice.rs:30:45: 30:60 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/slice.rs:30:36: 30:43 (#0),
                            ),
                        ),
                        pat_span: src/map/slice.rs:30:36: 30:43 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [Bucket<K/#0, V/#1>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/slice.rs:30:36: 30:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/slice.rs:31:18: 31:69 (#0),
                },
            ),
        ),
        ty: &'{erased} map::slice::Slice<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/slice.rs:31:18: 31:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/slice.rs:31:18: 31:69 (#0),
                },
            ),
        ),
        ty: *const map::slice::Slice<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/slice.rs:31:20: 31:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/slice.rs:31:18: 31:69 (#0),
                },
            ),
        ),
        ty: *const [Bucket<K/#0, V/#1>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/slice.rs:31:21: 31:53 (#0),
            scope: scope[0],
        },
    },
]