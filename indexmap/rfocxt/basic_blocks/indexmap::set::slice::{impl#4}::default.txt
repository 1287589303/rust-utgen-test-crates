[
    BasicBlockData {
        statements: [
            StorageLive(_1),
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = [],
            _4 = &_5,
            _3 = &(*_4),
            _2 = move _3 as &[Bucket<T, ()>] (PointerCoercion(Unsize)),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/slice.rs:197:9: 197:31 (#0),
                    scope: scope[0],
                },
                kind: _1 = set::slice::Slice::<T>::from_slice(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = &(*_1),
            StorageDead(_2),
            StorageDead(_5),
            StorageDead(_4),
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/slice.rs:198:6: 198:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/slice.rs:196:5: 198:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} set::slice::Slice<T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/slice.rs:196:21: 196:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/slice.rs:197:9: 197:31 (#0),
                },
            ),
        ),
        ty: &'{erased} set::slice::Slice<T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/slice.rs:197:9: 197:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/slice.rs:197:9: 197:31 (#0),
                },
            ),
        ),
        ty: &'{erased} [Bucket<T/#1, ()>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/slice.rs:197:27: 197:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/slice.rs:197:9: 197:31 (#0),
                },
            ),
        ),
        ty: &'{erased} [Bucket<T/#1, ()>; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/slice.rs:197:27: 197:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/slice.rs:197:9: 197:31 (#0),
                },
            ),
        ),
        ty: &'{erased} [Bucket<T/#1, ()>; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/slice.rs:197:27: 197:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/slice.rs:197:9: 197:31 (#0),
                },
            ),
        ),
        ty: [Bucket<T/#1, ()>; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/slice.rs:197:28: 197:30 (#0),
            scope: scope[0],
        },
    },
]