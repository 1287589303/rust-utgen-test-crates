[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/entry.rs:436:18: 436:34 (#0),
                    scope: scope[0],
                },
                kind: _3 = map::core::IndexMapCore::<K, V>::borrow_mut(move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_5),
            _5 = _2,
            _0 = map::core::entry::IndexedEntry::<'_, K, V> { map: move _3, index: move _5 },
            StorageDead(_5),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/entry.rs:439:6: 439:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/entry.rs:434:5: 439:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: map::core::entry::IndexedEntry<'{erased}, K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:434:73: 434:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core/entry.rs:434:28: 434:54 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core/entry.rs:434:23: 434:26 (#0),
                            ),
                        ),
                        pat_span: src/map/core/entry.rs:434:23: 434:26 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut map::core::IndexMapCore<K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:434:23: 434:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core/entry.rs:434:63: 434:68 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core/entry.rs:434:56: 434:61 (#0),
                            ),
                        ),
                        pat_span: src/map/core/entry.rs:434:56: 434:61 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:434:56: 434:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: map::core::RefMut<'{erased}, K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:436:18: 436:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core/entry.rs:435:9: 438:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut map::core::IndexMapCore<K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:436:18: 436:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:437:13: 437:18 (#0),
            scope: scope[0],
        },
    },
]