[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = move _1,
            _0 = set::iter::Drain::<'_, T> { iter: move _2 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:152:21: 152:22 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:153:5: 153:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:153:6: 153:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:153:5: 153:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:151:5: 153:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: set::iter::Drain<'{erased}, T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:151:59: 151:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set/iter.rs:151:29: 151:54 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set/iter.rs:151:23: 151:27 (#0),
                            ),
                        ),
                        pat_span: src/set/iter.rs:151:23: 151:27 (#0),
                    },
                ),
            ),
        ),
        ty: alloc::vec::Drain<'{erased}, Bucket<T/#1, ()>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:151:23: 151:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: alloc::vec::Drain<'{erased}, Bucket<T/#1, ()>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:152:16: 152:20 (#0),
            scope: scope[0],
        },
    },
]