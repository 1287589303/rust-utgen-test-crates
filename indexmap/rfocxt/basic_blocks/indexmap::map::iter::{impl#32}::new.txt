[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = move _1,
            _0 = map::iter::Drain::<'_, K, V> { iter: move _2 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:290:21: 290:22 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:291:5: 291:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:291:6: 291:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:291:5: 291:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:289:5: 291:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: map::iter::Drain<'{erased}, K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:289:62: 289:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/iter.rs:289:29: 289:57 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/iter.rs:289:23: 289:27 (#0),
                            ),
                        ),
                        pat_span: src/map/iter.rs:289:23: 289:27 (#0),
                    },
                ),
            ),
        ),
        ty: alloc::vec::Drain<'{erased}, Bucket<K/#1, V/#2>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:289:23: 289:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: alloc::vec::Drain<'{erased}, Bucket<K/#1, V/#2>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:290:16: 290:20 (#0),
            scope: scope[0],
        },
    },
]