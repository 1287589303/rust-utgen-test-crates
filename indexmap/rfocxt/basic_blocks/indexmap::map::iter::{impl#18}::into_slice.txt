[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = move (_1.0: core::slice::IterMut<'_, Bucket<K, V>>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:183:31: 183:53 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::slice::IterMut::<'_, Bucket<K, V>>::into_slice(move _6) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = &mut (*_5),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:183:9: 183:54 (#0),
                    scope: scope[0],
                },
                kind: _3 = map::slice::Slice::<K, V>::from_mut_slice(move _4) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _2 = &mut (*_3),
            StorageDead(_4),
            _0 = &mut (*_2),
            StorageDead(_5),
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:184:6: 184:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/iter.rs:182:5: 184:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut map::slice::Slice<K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:182:32: 182:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: map::iter::IterMut2<'{erased}, K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:182:23: 182:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut map::slice::Slice<K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:183:9: 183:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/iter.rs:183:9: 183:54 (#0),
                },
            ),
        ),
        ty: &'{erased} mut map::slice::Slice<K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:183:9: 183:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/iter.rs:183:9: 183:54 (#0),
                },
            ),
        ),
        ty: &'{erased} mut [Bucket<K/#1, V/#2>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:183:31: 183:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/iter.rs:183:9: 183:54 (#0),
                },
            ),
        ),
        ty: &'{erased} mut [Bucket<K/#1, V/#2>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:183:31: 183:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/iter.rs:183:9: 183:54 (#0),
                },
            ),
        ),
        ty: core::slice::IterMut<'{erased}, Bucket<K/#1, V/#2>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/iter.rs:183:31: 183:40 (#0),
            scope: scope[0],
        },
    },
]