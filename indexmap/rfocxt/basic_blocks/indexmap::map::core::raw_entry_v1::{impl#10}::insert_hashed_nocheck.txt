[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = _2,
            _6 = move _7 as usize (IntToInt),
            StorageDead(_7),
            _5 = HashValue(move _6),
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageLive(_8),
            StorageLive(_9),
            _9 = move (_1.0: map::core::RefMut<'_, K, V>),
            StorageLive(_10),
            _10 = _5,
            StorageLive(_11),
            _11 = move _3,
            StorageLive(_12),
            _12 = move _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:623:9: 623:49 (#0),
                    scope: scope[1],
                },
                kind: _8 = map::core::RefMut::<'_, K, V>::insert_unique(move _9, move _10, move _11, move _12) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:623:9: 623:61 (#0),
                    scope: scope[1],
                },
                kind: _0 = map::core::entry::OccupiedEntry::<'_, K, V>::into_muts(move _8) -> [return: bb2, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:624:5: 624:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:624:5: 624:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb4, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:624:6: 624:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:623:48: 623:49 (#0),
                    scope: scope[1],
                },
                kind: drop(_12) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:623:48: 623:49 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:624:5: 624:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:624:5: 624:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:621:5: 624:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} mut K/#1, &'{erased} mut V/#2),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:621:72: 621:94 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: map::core::raw_entry_v1::RawVacantEntryMut<'{erased}, K/#1, V/#2, S/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:621:34: 621:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core/raw_entry_v1.rs:621:46: 621:49 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core/raw_entry_v1.rs:621:40: 621:44 (#0),
                            ),
                        ),
                        pat_span: src/map/core/raw_entry_v1.rs:621:40: 621:44 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:621:40: 621:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core/raw_entry_v1.rs:621:56: 621:57 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core/raw_entry_v1.rs:621:51: 621:54 (#0),
                            ),
                        ),
                        pat_span: src/map/core/raw_entry_v1.rs:621:51: 621:54 (#0),
                    },
                ),
            ),
        ),
        ty: K/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:621:51: 621:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core/raw_entry_v1.rs:621:66: 621:67 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core/raw_entry_v1.rs:621:59: 621:64 (#0),
                            ),
                        ),
                        pat_span: src/map/core/raw_entry_v1.rs:621:59: 621:64 (#0),
                    },
                ),
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:621:59: 621:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core/raw_entry_v1.rs:622:20: 622:44 (#0),
                            ),
                        ),
                        pat_span: src/map/core/raw_entry_v1.rs:622:13: 622:17 (#0),
                    },
                ),
            ),
        ),
        ty: HashValue,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:622:13: 622:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:622:30: 622:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:622:30: 622:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core/raw_entry_v1.rs:623:9: 623:61 (#0),
                },
            ),
        ),
        ty: map::core::entry::OccupiedEntry<'{erased}, K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:623:9: 623:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core/raw_entry_v1.rs:623:9: 623:61 (#0),
                },
            ),
        ),
        ty: map::core::RefMut<'{erased}, K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:623:9: 623:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core/raw_entry_v1.rs:623:9: 623:61 (#0),
                },
            ),
        ),
        ty: HashValue,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:623:32: 623:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core/raw_entry_v1.rs:623:9: 623:61 (#0),
                },
            ),
        ),
        ty: K/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:623:38: 623:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core/raw_entry_v1.rs:623:9: 623:61 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:623:43: 623:48 (#0),
            scope: scope[0],
        },
    },
]