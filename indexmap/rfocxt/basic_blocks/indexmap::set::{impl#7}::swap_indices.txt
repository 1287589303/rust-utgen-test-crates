[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &mut ((*_1).0: map::IndexMap<T, (), S>),
            StorageLive(_5),
            _5 = _2,
            StorageLive(_6),
            _6 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1070:9: 1070:36 (#0),
                    scope: scope[0],
                },
                kind: _0 = map::IndexMap::<T, (), S>::swap_indices(move _4, move _5, move _6) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1071:6: 1071:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1069:5: 1071:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1069:55: 1069:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut set::IndexSet<T/#0, S/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1069:25: 1069:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set.rs:1069:39: 1069:44 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set.rs:1069:36: 1069:37 (#0),
                            ),
                        ),
                        pat_span: src/set.rs:1069:36: 1069:37 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1069:36: 1069:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set.rs:1069:49: 1069:54 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set.rs:1069:46: 1069:47 (#0),
                            ),
                        ),
                        pat_span: src/set.rs:1069:46: 1069:47 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1069:46: 1069:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/set.rs:1070:9: 1070:36 (#0),
                },
            ),
        ),
        ty: &'{erased} mut map::IndexMap<T/#0, (), S/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1070:9: 1070:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/set.rs:1070:9: 1070:36 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1070:31: 1070:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/set.rs:1070:9: 1070:36 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1070:34: 1070:35 (#0),
            scope: scope[0],
        },
    },
]