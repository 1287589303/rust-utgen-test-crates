[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &((*_1).0: map::iter::Splice<'_, set::iter::UnitValue<I>, T, (), S>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:591:9: 591:24 (#0),
                    scope: scope[0],
                },
                kind: _0 = <map::iter::Splice<'_, set::iter::UnitValue<I>, T, (), S> as core::iter::ExactSizeIterator>::len(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:592:6: 592:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set/iter.rs:590:5: 592:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:590:22: 590:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} set::iter::Splice<'{erased}, I/#1, T/#2, S/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:590:12: 590:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set/iter.rs:591:9: 591:24 (#0),
                },
            ),
        ),
        ty: &'{erased} map::iter::Splice<'{erased}, set::iter::UnitValue<I/#1>, T/#2, (), S/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set/iter.rs:591:9: 591:18 (#0),
            scope: scope[0],
        },
    },
]