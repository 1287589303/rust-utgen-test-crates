[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &((*_1).1: hashbrown::hash_table::OccupiedEntry<'_, usize>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:400:10: 400:26 (#0),
                    scope: scope[0],
                },
                kind: _2 = hashbrown::hash_table::OccupiedEntry::<'_, usize>::get(move _3) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            _0 = (*_2),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:401:6: 401:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/raw_entry_v1.rs:399:5: 401:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:399:28: 399:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} map::core::raw_entry_v1::RawOccupiedEntryMut<'{erased}, K/#1, V/#2, S/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:399:18: 399:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core/raw_entry_v1.rs:400:9: 400:26 (#0),
                },
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:400:10: 400:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core/raw_entry_v1.rs:400:9: 400:26 (#0),
                },
            ),
        ),
        ty: &'{erased} hashbrown::hash_table::OccupiedEntry<'{erased}, usize, hashbrown::raw::alloc::inner::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/raw_entry_v1.rs:400:10: 400:20 (#0),
            scope: scope[0],
        },
    },
]