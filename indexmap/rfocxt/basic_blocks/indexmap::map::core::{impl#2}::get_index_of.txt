[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_3),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>),
            _8 = &(*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:323:34: 323:47 (#0),
                    scope: scope[0],
                },
                kind: _7 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _8) -> [return: bb1, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = &(*_7),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:323:18: 323:48 (#0),
                    scope: scope[0],
                },
                kind: _4 = map::core::equivalent::<K, V, Q>(move _5, move _6) -> [return: bb2, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            StorageDead(_9),
            StorageDead(_7),
            StorageLive(_10),
            StorageLive(_11),
            _11 = &((*_1).0: hashbrown::HashTable<usize>),
            StorageLive(_12),
            StorageLive(_13),
            _13 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:324:27: 324:37 (#0),
                    scope: scope[1],
                },
                kind: _12 = HashValue::get(move _13) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageLive(_14),
            _14 = move _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:324:9: 324:42 (#0),
                    scope: scope[1],
                },
                kind: _10 = hashbrown::HashTable::<usize>::find::<impl for<'a> Fn(&'a usize) -> bool + '_>(move _11, move _12, move _14) -> [return: bb4, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_12),
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:324:9: 324:51 (#0),
                    scope: scope[1],
                },
                kind: _0 = core::option::Option::<&usize>::copied(move _10) -> [return: bb5, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:325:5: 325:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb6, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:325:6: 325:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:324:41: 324:42 (#0),
                    scope: scope[1],
                },
                kind: drop(_14) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:325:5: 325:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb9, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:319:5: 325:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:319:71: 319:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} map::core::IndexMapCore<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:319:35: 319:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core.rs:319:48: 319:57 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:319:42: 319:46 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:319:42: 319:46 (#0),
                    },
                ),
            ),
        ),
        ty: HashValue,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:319:42: 319:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core.rs:319:64: 319:66 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:319:59: 319:62 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:319:59: 319:62 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} Q/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:319:59: 319:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:323:18: 323:48 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:323:13: 323:15 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [
                    K/#0,
                    V/#1,
                    Q/#2,
                    '{erased},
                ],
                def_id: DefId(0:2718 ~ indexmap[dd33]::map::core::equivalent::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:323:13: 323:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} Q/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:323:29: 323:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [Bucket<K/#0, V/#1>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:323:34: 323:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [Bucket<K/#0, V/#1>],
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:323:34: 323:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<Bucket<K/#0, V/#1>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:323:34: 323:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<Bucket<K/#0, V/#1>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:323:34: 323:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core.rs:324:9: 324:51 (#0),
                },
            ),
        ),
        ty: core::option::Option<&'{erased} usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:324:9: 324:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core.rs:324:9: 324:51 (#0),
                },
            ),
        ),
        ty: &'{erased} hashbrown::HashTable<usize, hashbrown::raw::alloc::inner::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:324:9: 324:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core.rs:324:9: 324:51 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:324:27: 324:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core.rs:324:9: 324:51 (#0),
                },
            ),
        ),
        ty: HashValue,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:324:27: 324:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core.rs:324:9: 324:51 (#0),
                },
            ),
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [
                    K/#0,
                    V/#1,
                    Q/#2,
                    '{erased},
                ],
                def_id: DefId(0:2718 ~ indexmap[dd33]::map::core::equivalent::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:324:39: 324:41 (#0),
            scope: scope[0],
        },
    },
]