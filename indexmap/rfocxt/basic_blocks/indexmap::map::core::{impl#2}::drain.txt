[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = move _2,
            StorageLive(_5),
            StorageLive(_6),
            _6 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:191:43: 191:61 (#0),
                    scope: scope[0],
                },
                kind: _5 = alloc::vec::Vec::<Bucket<K, V>>::len(move _6) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:191:21: 191:62 (#0),
                    scope: scope[0],
                },
                kind: _3 = util::simplify_range::<R>(move _4, move _5) -> [return: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &mut (*_1),
            StorageLive(_9),
            _9 = (_3.0: usize),
            StorageLive(_10),
            _10 = (_3.1: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:192:9: 192:51 (#0),
                    scope: scope[1],
                },
                kind: _7 = map::core::IndexMapCore::<K, V>::erase_indices(move _8, move _9, move _10) -> [return: bb3, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_11),
            _11 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>),
            StorageLive(_12),
            _12 = move _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:193:9: 193:34 (#0),
                    scope: scope[1],
                },
                kind: _0 = alloc::vec::Vec::<Bucket<K, V>>::drain::<core::ops::Range<usize>>(move _11, move _12) -> [return: bb4, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:194:5: 194:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb5, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:194:6: 194:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:191:61: 191:62 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:194:5: 194:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:187:5: 194:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: alloc::vec::Drain<'{erased}, Bucket<K/#0, V/#1>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:187:52: 187:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut map::core::IndexMapCore<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:187:28: 187:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core.rs:187:46: 187:47 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:187:39: 187:44 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:187:39: 187:44 (#0),
                    },
                ),
            ),
        ),
        ty: R/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:187:39: 187:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:191:21: 191:62 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:191:13: 191:18 (#0),
                    },
                ),
            ),
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:191:13: 191:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: R/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:191:36: 191:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:191:43: 191:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<Bucket<K/#0, V/#1>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:191:43: 191:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:192:9: 192:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut map::core::IndexMapCore<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:192:9: 192:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:192:28: 192:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:192:41: 192:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core.rs:193:9: 193:34 (#0),
                },
            ),
        ),
        ty: &'{erased} mut alloc::vec::Vec<Bucket<K/#0, V/#1>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:193:9: 193:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map/core.rs:193:9: 193:34 (#0),
                },
            ),
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:193:28: 193:33 (#0),
            scope: scope[0],
        },
    },
]