[
    BasicBlockData {
        statements: [
            StorageLive(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:96:23: 96:34 (#0),
                    scope: scope[0],
                },
                kind: _2 = map::core::IndexMapCore::<K, V>::new() -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &mut _2,
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:97:9: 97:29 (#0),
                    scope: scope[1],
                },
                kind: _3 = <map::core::IndexMapCore<K, V> as core::clone::Clone>::clone_from(move _4, move _5) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            StorageDead(_3),
            _0 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:99:5: 99:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:99:6: 99:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:99:5: 99:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core.rs:95:5: 99:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: map::core::IndexMapCore<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:95:24: 95:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} map::core::IndexMapCore<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:95:14: 95:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core.rs:96:23: 96:34 (#0),
                            ),
                        ),
                        pat_span: src/map/core.rs:96:13: 96:20 (#0),
                    },
                ),
            ),
        ),
        ty: map::core::IndexMapCore<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:96:13: 96:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:97:9: 97:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut map::core::IndexMapCore<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:97:9: 97:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} map::core::IndexMapCore<K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core.rs:97:24: 97:28 (#0),
            scope: scope[0],
        },
    },
]