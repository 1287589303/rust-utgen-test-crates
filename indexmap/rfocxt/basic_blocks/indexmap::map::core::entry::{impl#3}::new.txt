[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &mut (*_1),
            StorageLive(_4),
            _4 = move _2,
            _0 = map::core::entry::OccupiedEntry::<'_, K, V> { entries: move _3, index: move _4 },
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map/core/entry.rs:157:6: 157:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: map::core::entry::OccupiedEntry<'{erased}, K/#1, V/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:155:10: 155:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core/entry.rs:153:18: 153:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core/entry.rs:153:9: 153:16 (#0),
                            ),
                        ),
                        pat_span: src/map/core/entry.rs:153:9: 153:16 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut alloc::vec::Vec<Bucket<K/#1, V/#2>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:153:9: 153:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map/core/entry.rs:154:16: 154:52 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map/core/entry.rs:154:9: 154:14 (#0),
                            ),
                        ),
                        pat_span: src/map/core/entry.rs:154:9: 154:14 (#0),
                    },
                ),
            ),
        ),
        ty: hashbrown::hash_table::OccupiedEntry<'{erased}, usize, hashbrown::raw::alloc::inner::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:154:9: 154:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} mut alloc::vec::Vec<Bucket<K/#1, V/#2>, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:156:16: 156:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hashbrown::hash_table::OccupiedEntry<'{erased}, usize, hashbrown::raw::alloc::inner::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map/core/entry.rs:156:25: 156:30 (#0),
            scope: scope[0],
        },
    },
]