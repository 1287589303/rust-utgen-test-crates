bb0
  0: StorageLive(_3)
    SourceInfo(src/map/slice.rs:241:9-241:21)
  1: _3 = &((*_1).0: [Bucket<K, V>])
    SourceInfo(src/map/slice.rs:241:9-241:21)
  2: StorageLive(_4)
    SourceInfo(src/map/slice.rs:241:39-241:67)
  3: _4 = {closure@src/map/slice.rs:241:39: 241:47} { f: move _2 }
    SourceInfo(src/map/slice.rs:241:39-241:67)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:241:9-241:68)
      kind: _0 = core::slice::<impl [Bucket<K, V>]>::binary_search_by::<'_, {closure@src/map/slice.rs:241:39: 241:47}>(move _3, move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(src/map/slice.rs:241:67-241:68)
  1: StorageDead(_3)
    SourceInfo(src/map/slice.rs:241:67-241:68)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:242:5-242:6)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:242:6-242:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:241:67-241:68)
      kind: drop(_4) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:242:5-242:6)
      kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:237:5-242:6)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

