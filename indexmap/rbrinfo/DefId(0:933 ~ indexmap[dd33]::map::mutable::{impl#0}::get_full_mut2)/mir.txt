bb0
  0: StorageLive(_3)
    SourceInfo(src/map/mutable.rs:69:26-69:48)
  1: StorageLive(_4)
    SourceInfo(src/map/mutable.rs:69:26-69:30)
  2: _4 = &(*_1)
    SourceInfo(src/map/mutable.rs:69:26-69:30)
  3: StorageLive(_5)
    SourceInfo(src/map/mutable.rs:69:44-69:47)
  4: _5 = &(*_2)
    SourceInfo(src/map/mutable.rs:69:44-69:47)
  Terminator {
      source_info: SourceInfo(src/map/mutable.rs:69:26-69:48)
      kind: _3 = map::IndexMap::<K, V, S>::get_index_of::<Q>(move _4, move _5) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_5)
    SourceInfo(src/map/mutable.rs:69:47-69:48)
  1: StorageDead(_4)
    SourceInfo(src/map/mutable.rs:69:47-69:48)
  2: PlaceMention(_3)
    SourceInfo(src/map/mutable.rs:69:26-69:48)
  3: _6 = discriminant(_3)
    SourceInfo(src/map/mutable.rs:69:26-69:48)
  Terminator {
      source_info: SourceInfo(src/map/mutable.rs:69:16-69:23)
      kind: switchInt(move _6) -> [1: bb2, otherwise: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  Terminator {
      source_info: SourceInfo(src/map/mutable.rs:69:16-69:23)
      kind: falseEdge -> [real: bb3, imaginary: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageLive(_7)
    SourceInfo(src/map/mutable.rs:69:21-69:22)
  1: _7 = ((_3 as Some).0: usize)
    SourceInfo(src/map/mutable.rs:69:21-69:22)
  2: StorageLive(_8)
    SourceInfo(src/map/mutable.rs:70:17-70:22)
  3: StorageLive(_9)
    SourceInfo(src/map/mutable.rs:70:30-70:51)
  4: StorageLive(_10)
    SourceInfo(src/map/mutable.rs:70:30-70:34)
  5: _10 = &mut (*_1)
    SourceInfo(src/map/mutable.rs:70:30-70:34)
  Terminator {
      source_info: SourceInfo(src/map/mutable.rs:70:30-70:51)
      kind: _9 = <map::IndexMap<K, V, S> as Entries>::as_entries_mut(move _10) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_10)
    SourceInfo(src/map/mutable.rs:70:50-70:51)
  1: StorageLive(_11)
    SourceInfo(src/map/mutable.rs:70:52-70:53)
  2: _11 = _7
    SourceInfo(src/map/mutable.rs:70:52-70:53)
  3: _12 = Len((*_9))
    SourceInfo(src/map/mutable.rs:70:30-70:54)
  4: _13 = Lt(_11, _12)
    SourceInfo(src/map/mutable.rs:70:30-70:54)
  Terminator {
      source_info: SourceInfo(src/map/mutable.rs:70:30-70:54)
      kind: assert(move _13, "index out of bounds: the length is {} but the index is {}", move _12, _11) -> [success: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: _8 = &mut (*_9)[_11]
    SourceInfo(src/map/mutable.rs:70:25-70:54)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(src/map/mutable.rs:70:17-70:22)
  2: StorageLive(_14)
    SourceInfo(src/map/mutable.rs:71:18-71:55)
  3: StorageLive(_15)
    SourceInfo(src/map/mutable.rs:71:19-71:20)
  4: _15 = _7
    SourceInfo(src/map/mutable.rs:71:19-71:20)
  5: StorageLive(_16)
    SourceInfo(src/map/mutable.rs:71:22-71:36)
  6: StorageLive(_17)
    SourceInfo(src/map/mutable.rs:71:22-71:36)
  7: _17 = &mut ((*_8).1: K)
    SourceInfo(src/map/mutable.rs:71:22-71:36)
  8: _16 = &mut (*_17)
    SourceInfo(src/map/mutable.rs:71:22-71:36)
  9: StorageLive(_18)
    SourceInfo(src/map/mutable.rs:71:38-71:54)
  10: StorageLive(_19)
    SourceInfo(src/map/mutable.rs:71:38-71:54)
  11: _19 = &mut ((*_8).2: V)
    SourceInfo(src/map/mutable.rs:71:38-71:54)
  12: _18 = &mut (*_19)
    SourceInfo(src/map/mutable.rs:71:38-71:54)
  13: _14 = (move _15, move _16, move _18)
    SourceInfo(src/map/mutable.rs:71:18-71:55)
  14: StorageDead(_18)
    SourceInfo(src/map/mutable.rs:71:54-71:55)
  15: StorageDead(_16)
    SourceInfo(src/map/mutable.rs:71:54-71:55)
  16: StorageDead(_15)
    SourceInfo(src/map/mutable.rs:71:54-71:55)
  17: _0 = core::option::Option::<(usize, &mut K, &mut V)>::Some(move _14)
    SourceInfo(src/map/mutable.rs:71:13-71:56)
  18: StorageDead(_14)
    SourceInfo(src/map/mutable.rs:71:55-71:56)
  19: StorageDead(_11)
    SourceInfo(src/map/mutable.rs:72:9-72:10)
  20: StorageDead(_9)
    SourceInfo(src/map/mutable.rs:72:9-72:10)
  21: StorageDead(_8)
    SourceInfo(src/map/mutable.rs:72:9-72:10)
  22: StorageDead(_19)
    SourceInfo(src/map/mutable.rs:72:9-72:10)
  23: StorageDead(_17)
    SourceInfo(src/map/mutable.rs:72:9-72:10)
  24: StorageDead(_7)
    SourceInfo(src/map/mutable.rs:72:9-72:10)
  Terminator {
      source_info: SourceInfo(src/map/mutable.rs:69:9-74:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: _0 = core::option::Option::<(usize, &mut K, &mut V)>::None
    SourceInfo(src/map/mutable.rs:73:13-73:17)
  Terminator {
      source_info: SourceInfo(src/map/mutable.rs:69:9-74:10)
      kind: goto -> bb7
  }
  preds [bb1, bb2]
  succs [bb7]

bb7
  0: StorageDead(_3)
    SourceInfo(src/map/mutable.rs:75:5-75:6)
  Terminator {
      source_info: SourceInfo(src/map/mutable.rs:75:6-75:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/map/mutable.rs:65:5-75:6)
      kind: resume
  }
  preds [bb0, bb3, bb4]
  succs []

