bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core.rs:134:9-134:29)
  1: StorageLive(_4)
    SourceInfo(src/map/core.rs:134:9-134:10)
  2: _4 = move _2
    SourceInfo(src/map/core.rs:134:9-134:10)
  3: StorageLive(_5)
    SourceInfo(src/map/core.rs:134:9-134:29)
  4: StorageLive(_6)
    SourceInfo(src/map/core.rs:134:11-134:28)
  5: StorageLive(_7)
    SourceInfo(src/map/core.rs:134:11-134:28)
  6: StorageLive(_8)
    SourceInfo(src/map/core.rs:134:11-134:28)
  7: StorageLive(_9)
    SourceInfo(src/map/core.rs:134:11-134:28)
  8: _9 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:134:11-134:28)
  9: _8 = &mut (*_9)
    SourceInfo(src/map/core.rs:134:11-134:28)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:134:11-134:28)
      kind: _7 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::DerefMut>::deref_mut(move _8) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _6 = &mut (*_7)
    SourceInfo(src/map/core.rs:134:11-134:28)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:134:27-134:28)
  2: _5 = (move _6,)
    SourceInfo(src/map/core.rs:134:9-134:29)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:134:9-134:29)
      kind: _3 = <F as core::ops::FnOnce<(&mut [Bucket<K, V>],)>>::call_once(move _4, move _5) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_6)
    SourceInfo(src/map/core.rs:134:28-134:29)
  1: StorageDead(_5)
    SourceInfo(src/map/core.rs:134:28-134:29)
  2: StorageDead(_4)
    SourceInfo(src/map/core.rs:134:28-134:29)
  3: StorageDead(_9)
    SourceInfo(src/map/core.rs:134:29-134:30)
  4: StorageDead(_7)
    SourceInfo(src/map/core.rs:134:29-134:30)
  5: StorageDead(_3)
    SourceInfo(src/map/core.rs:134:29-134:30)
  6: StorageLive(_10)
    SourceInfo(src/map/core.rs:135:9-135:34)
  7: StorageLive(_11)
    SourceInfo(src/map/core.rs:135:9-135:13)
  8: _11 = &mut (*_1)
    SourceInfo(src/map/core.rs:135:9-135:13)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:135:9-135:34)
      kind: _10 = map::core::IndexMapCore::<K, V>::rebuild_hash_table(move _11) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_11)
    SourceInfo(src/map/core.rs:135:33-135:34)
  1: StorageDead(_10)
    SourceInfo(src/map/core.rs:135:34-135:35)
  2: _0 = const ()
    SourceInfo(src/map/core.rs:133:5-136:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:136:5-136:6)
      kind: drop(_2) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  Terminator {
      source_info: SourceInfo(src/map/core.rs:136:6-136:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/map/core.rs:134:28-134:29)
      kind: drop(_4) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map/core.rs:136:5-136:6)
      kind: drop(_2) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb2, bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/map/core.rs:130:5-136:6)
      kind: resume
  }
  preds [bb3, bb6]
  succs []

