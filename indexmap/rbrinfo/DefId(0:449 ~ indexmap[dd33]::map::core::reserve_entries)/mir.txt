bb0
  0: StorageLive(_4)
    SourceInfo(src/map/core.rs:529:9-529:21)
  1: StorageLive(_5)
    SourceInfo(src/map/core.rs:529:24-529:36)
  2: _5 = _3
    SourceInfo(src/map/core.rs:529:24-529:36)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:529:24-529:84)
      kind: _4 = <usize as core::cmp::Ord>::min(move _5, const map::core::IndexMapCore::<K, V>::MAX_ENTRIES_CAPACITY) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  0: StorageDead(_5)
    SourceInfo(src/map/core.rs:529:83-529:84)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(src/map/core.rs:529:9-529:21)
  2: StorageLive(_6)
    SourceInfo(src/map/core.rs:530:9-530:16)
  3: StorageLive(_7)
    SourceInfo(src/map/core.rs:530:19-530:31)
  4: _7 = _4
    SourceInfo(src/map/core.rs:530:19-530:31)
  5: StorageLive(_8)
    SourceInfo(src/map/core.rs:530:34-530:47)
  6: StorageLive(_9)
    SourceInfo(src/map/core.rs:530:34-530:41)
  7: _9 = &(*_1)
    SourceInfo(src/map/core.rs:530:34-530:41)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:530:34-530:47)
      kind: _8 = alloc::vec::Vec::<Bucket<K, V>>::len(move _9) -> [return: bb2, unwind: bb13]
  }
  preds [bb0]
  succs [bb2, bb13]

bb2
  0: StorageDead(_9)
    SourceInfo(src/map/core.rs:530:46-530:47)
  1: _10 = SubWithOverflow(_7, _8)
    SourceInfo(src/map/core.rs:530:19-530:47)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:530:19-530:47)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} - {}`, which would overflow", move _7, move _8) -> [success: bb3, unwind: bb13]
  }
  preds [bb1]
  succs [bb3, bb13]

bb3
  0: _6 = move (_10.0: usize)
    SourceInfo(src/map/core.rs:530:19-530:47)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:530:46-530:47)
  2: StorageDead(_7)
    SourceInfo(src/map/core.rs:530:46-530:47)
  3: FakeRead(ForLet(None), _6)
    SourceInfo(src/map/core.rs:530:9-530:16)
  4: StorageLive(_11)
    SourceInfo(src/map/core.rs:531:5-533:6)
  5: StorageLive(_12)
    SourceInfo(src/map/core.rs:531:8-531:28)
  6: StorageLive(_13)
    SourceInfo(src/map/core.rs:531:8-531:15)
  7: _13 = _6
    SourceInfo(src/map/core.rs:531:8-531:15)
  8: StorageLive(_14)
    SourceInfo(src/map/core.rs:531:18-531:28)
  9: _14 = _2
    SourceInfo(src/map/core.rs:531:18-531:28)
  10: _12 = Gt(move _13, move _14)
    SourceInfo(src/map/core.rs:531:8-531:28)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:531:8-531:28)
      kind: switchInt(move _12) -> [0: bb9, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_14)
    SourceInfo(src/map/core.rs:531:27-531:28)
  1: StorageDead(_13)
    SourceInfo(src/map/core.rs:531:27-531:28)
  2: StorageLive(_15)
    SourceInfo(src/map/core.rs:531:32-531:74)
  3: StorageLive(_16)
    SourceInfo(src/map/core.rs:531:32-531:66)
  4: StorageLive(_17)
    SourceInfo(src/map/core.rs:531:32-531:66)
  5: StorageLive(_18)
    SourceInfo(src/map/core.rs:531:32-531:39)
  6: _18 = &mut (*_1)
    SourceInfo(src/map/core.rs:531:32-531:39)
  7: StorageLive(_19)
    SourceInfo(src/map/core.rs:531:58-531:65)
  8: _19 = _6
    SourceInfo(src/map/core.rs:531:58-531:65)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:531:32-531:66)
      kind: _17 = alloc::vec::Vec::<Bucket<K, V>>::try_reserve_exact(move _18, move _19) -> [return: bb5, unwind: bb13]
  }
  preds [bb3]
  succs [bb5, bb13]

bb5
  0: _16 = &_17
    SourceInfo(src/map/core.rs:531:32-531:66)
  1: StorageDead(_19)
    SourceInfo(src/map/core.rs:531:65-531:66)
  2: StorageDead(_18)
    SourceInfo(src/map/core.rs:531:65-531:66)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:531:32-531:74)
      kind: _15 = core::result::Result::<(), alloc::collections::TryReserveError>::is_ok(move _16) -> [return: bb6, unwind: bb13]
  }
  preds [bb4]
  succs [bb6, bb13]

bb6
  Terminator {
      source_info: SourceInfo(src/map/core.rs:531:32-531:74)
      kind: switchInt(move _15) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_17)
    SourceInfo(src/map/core.rs:531:73-531:74)
  1: StorageDead(_16)
    SourceInfo(src/map/core.rs:531:73-531:74)
  2: _0 = const ()
    SourceInfo(src/map/core.rs:532:9-532:15)
  3: StorageDead(_15)
    SourceInfo(src/map/core.rs:533:5-533:6)
  4: StorageDead(_12)
    SourceInfo(src/map/core.rs:533:5-533:6)
  5: StorageDead(_11)
    SourceInfo(src/map/core.rs:533:5-533:6)
  6: StorageDead(_6)
    SourceInfo(src/map/core.rs:535:1-535:2)
  7: StorageDead(_4)
    SourceInfo(src/map/core.rs:535:1-535:2)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:535:2-535:2)
      kind: goto -> bb12
  }
  preds [bb6]
  succs [bb12]

bb8
  0: StorageDead(_17)
    SourceInfo(src/map/core.rs:531:73-531:74)
  1: StorageDead(_16)
    SourceInfo(src/map/core.rs:531:73-531:74)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb9
  0: StorageDead(_14)
    SourceInfo(src/map/core.rs:531:27-531:28)
  1: StorageDead(_13)
    SourceInfo(src/map/core.rs:531:27-531:28)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb10
  }
  preds [bb3]
  succs [bb10]

bb10
  0: _11 = const ()
    SourceInfo(src/map/core.rs:533:6-533:6)
  1: StorageDead(_15)
    SourceInfo(src/map/core.rs:533:5-533:6)
  2: StorageDead(_12)
    SourceInfo(src/map/core.rs:533:5-533:6)
  3: StorageDead(_11)
    SourceInfo(src/map/core.rs:533:5-533:6)
  4: StorageLive(_21)
    SourceInfo(src/map/core.rs:534:5-534:38)
  5: StorageLive(_22)
    SourceInfo(src/map/core.rs:534:5-534:12)
  6: _22 = &mut (*_1)
    SourceInfo(src/map/core.rs:534:5-534:12)
  7: StorageLive(_23)
    SourceInfo(src/map/core.rs:534:27-534:37)
  8: _23 = _2
    SourceInfo(src/map/core.rs:534:27-534:37)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:534:5-534:38)
      kind: _21 = alloc::vec::Vec::<Bucket<K, V>>::reserve_exact(move _22, move _23) -> [return: bb11, unwind: bb13]
  }
  preds [bb8, bb9]
  succs [bb11, bb13]

bb11
  0: StorageDead(_23)
    SourceInfo(src/map/core.rs:534:37-534:38)
  1: StorageDead(_22)
    SourceInfo(src/map/core.rs:534:37-534:38)
  2: StorageDead(_21)
    SourceInfo(src/map/core.rs:534:38-534:39)
  3: _0 = const ()
    SourceInfo(src/map/core.rs:526:95-535:2)
  4: StorageDead(_6)
    SourceInfo(src/map/core.rs:535:1-535:2)
  5: StorageDead(_4)
    SourceInfo(src/map/core.rs:535:1-535:2)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:535:2-535:2)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/map/core.rs:535:2-535:2)
      kind: return
  }
  preds [bb7, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/map/core.rs:526:1-535:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb5, bb10]
  succs []

