bb0
  0: StorageLive(_2)
    SourceInfo(src/set.rs:1020:9-1020:33)
  1: StorageLive(_3)
    SourceInfo(src/set.rs:1020:9-1020:26)
  2: StorageLive(_4)
    SourceInfo(src/set.rs:1020:9-1020:26)
  3: StorageLive(_5)
    SourceInfo(src/set.rs:1020:9-1020:13)
  4: _5 = &(*_1)
    SourceInfo(src/set.rs:1020:9-1020:13)
  Terminator {
      source_info: SourceInfo(src/set.rs:1020:9-1020:26)
      kind: _4 = <set::IndexSet<T, S> as Entries>::as_entries(move _5) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _3 = &(*_4)
    SourceInfo(src/set.rs:1020:9-1020:26)
  1: StorageDead(_5)
    SourceInfo(src/set.rs:1020:25-1020:26)
  Terminator {
      source_info: SourceInfo(src/set.rs:1020:9-1020:33)
      kind: _2 = core::slice::<impl [Bucket<T, ()>]>::last(move _3) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_3)
    SourceInfo(src/set.rs:1020:32-1020:33)
  Terminator {
      source_info: SourceInfo(src/set.rs:1020:9-1020:54)
      kind: _0 = core::option::Option::<&Bucket<T, ()>>::map::<&T, for<'a> fn(&'a Bucket<T, ()>) -> &'a T {Bucket::<T, ()>::key_ref}>(move _2, Bucket::<T, ()>::key_ref) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_2)
    SourceInfo(src/set.rs:1020:53-1020:54)
  1: StorageDead(_4)
    SourceInfo(src/set.rs:1021:5-1021:6)
  Terminator {
      source_info: SourceInfo(src/set.rs:1021:6-1021:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/set.rs:1019:5-1021:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

