bb0
  0: StorageLive(_3)
    SourceInfo(src/set/iter.rs:361:13-361:18)
  1: StorageLive(_4)
    SourceInfo(src/set/iter.rs:361:21-361:25)
  2: _4 = &(*_1)
    SourceInfo(src/set/iter.rs:361:21-361:25)
  3: StorageLive(_5)
    SourceInfo(src/set/iter.rs:361:37-361:41)
  4: _5 = &(*_2)
    SourceInfo(src/set/iter.rs:361:37-361:41)
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:361:21-361:42)
      kind: _3 = set::IndexSet::<T, S1>::difference::<S2>(move _4, move _5) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_5)
    SourceInfo(src/set/iter.rs:361:41-361:42)
  1: StorageDead(_4)
    SourceInfo(src/set/iter.rs:361:41-361:42)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/set/iter.rs:361:13-361:18)
  3: StorageLive(_6)
    SourceInfo(src/set/iter.rs:362:13-362:18)
  4: StorageLive(_7)
    SourceInfo(src/set/iter.rs:362:21-362:25)
  5: _7 = &(*_2)
    SourceInfo(src/set/iter.rs:362:21-362:25)
  6: StorageLive(_8)
    SourceInfo(src/set/iter.rs:362:37-362:41)
  7: _8 = &(*_1)
    SourceInfo(src/set/iter.rs:362:37-362:41)
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:362:21-362:42)
      kind: _6 = set::IndexSet::<T, S2>::difference::<S1>(move _7, move _8) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_8)
    SourceInfo(src/set/iter.rs:362:41-362:42)
  1: StorageDead(_7)
    SourceInfo(src/set/iter.rs:362:41-362:42)
  2: FakeRead(ForLet(None), _6)
    SourceInfo(src/set/iter.rs:362:13-362:18)
  3: StorageLive(_9)
    SourceInfo(src/set/iter.rs:364:19-364:37)
  4: StorageLive(_10)
    SourceInfo(src/set/iter.rs:364:19-364:24)
  5: _10 = move _3
    SourceInfo(src/set/iter.rs:364:19-364:24)
  6: StorageLive(_11)
    SourceInfo(src/set/iter.rs:364:31-364:36)
  7: _11 = move _6
    SourceInfo(src/set/iter.rs:364:31-364:36)
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:364:19-364:37)
      kind: _9 = <set::iter::Difference<'_, T, S2> as core::iter::Iterator>::chain::<set::iter::Difference<'_, T, S1>>(move _10, move _11) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_11)
    SourceInfo(src/set/iter.rs:364:36-364:37)
  1: StorageDead(_10)
    SourceInfo(src/set/iter.rs:364:36-364:37)
  2: _0 = set::iter::SymmetricDifference::<'_, T, S1, S2> { iter: move _9 }
    SourceInfo(src/set/iter.rs:363:9-365:10)
  3: StorageDead(_9)
    SourceInfo(src/set/iter.rs:365:9-365:10)
  4: StorageDead(_6)
    SourceInfo(src/set/iter.rs:366:5-366:6)
  5: StorageDead(_3)
    SourceInfo(src/set/iter.rs:366:5-366:6)
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:366:6-366:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:360:5-366:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

