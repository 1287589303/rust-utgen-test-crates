bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core.rs:302:9-303:62)
  1: StorageLive(_4)
    SourceInfo(src/map/core.rs:302:9-302:21)
  2: _4 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:302:9-302:21)
  3: StorageLive(_5)
    SourceInfo(src/map/core.rs:303:24-303:36)
  4: _5 = _2
    SourceInfo(src/map/core.rs:303:24-303:36)
  5: StorageLive(_6)
    SourceInfo(src/map/core.rs:303:38-303:61)
  6: StorageLive(_7)
    SourceInfo(src/map/core.rs:303:47-303:60)
  7: StorageLive(_8)
    SourceInfo(src/map/core.rs:303:47-303:60)
  8: StorageLive(_9)
    SourceInfo(src/map/core.rs:303:47-303:60)
  9: StorageLive(_10)
    SourceInfo(src/map/core.rs:303:47-303:60)
  10: _10 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:303:47-303:60)
  11: _9 = &(*_10)
    SourceInfo(src/map/core.rs:303:47-303:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:303:47-303:60)
      kind: _8 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _9) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _7 = &(*_8)
    SourceInfo(src/map/core.rs:303:47-303:60)
  1: StorageDead(_9)
    SourceInfo(src/map/core.rs:303:59-303:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:303:38-303:61)
      kind: _6 = map::core::get_hash::<K, V>(move _7) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_7)
    SourceInfo(src/map/core.rs:303:60-303:61)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:302:9-303:62)
      kind: _3 = hashbrown::HashTable::<usize>::shrink_to::<impl for<'a> Fn(&'a usize) -> u64 + '_>(move _4, move _5, move _6) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_6)
    SourceInfo(src/map/core.rs:303:61-303:62)
  1: StorageDead(_5)
    SourceInfo(src/map/core.rs:303:61-303:62)
  2: StorageDead(_4)
    SourceInfo(src/map/core.rs:303:61-303:62)
  3: StorageDead(_10)
    SourceInfo(src/map/core.rs:303:62-303:63)
  4: StorageDead(_8)
    SourceInfo(src/map/core.rs:303:62-303:63)
  5: StorageDead(_3)
    SourceInfo(src/map/core.rs:303:62-303:63)
  6: StorageLive(_11)
    SourceInfo(src/map/core.rs:304:9-304:45)
  7: StorageLive(_12)
    SourceInfo(src/map/core.rs:304:9-304:21)
  8: _12 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:304:9-304:21)
  9: StorageLive(_13)
    SourceInfo(src/map/core.rs:304:32-304:44)
  10: _13 = _2
    SourceInfo(src/map/core.rs:304:32-304:44)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:304:9-304:45)
      kind: _11 = alloc::vec::Vec::<Bucket<K, V>>::shrink_to(move _12, move _13) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_13)
    SourceInfo(src/map/core.rs:304:44-304:45)
  1: StorageDead(_12)
    SourceInfo(src/map/core.rs:304:44-304:45)
  2: StorageDead(_11)
    SourceInfo(src/map/core.rs:304:45-304:46)
  3: _0 = const ()
    SourceInfo(src/map/core.rs:301:61-305:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:305:6-305:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/map/core.rs:303:61-303:62)
      kind: drop(_6) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map/core.rs:301:5-305:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5]
  succs []

