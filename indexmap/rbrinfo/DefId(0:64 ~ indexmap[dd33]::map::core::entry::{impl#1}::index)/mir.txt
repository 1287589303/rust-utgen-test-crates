bb0
  0: PlaceMention((*_1))
    SourceInfo(src/map/core/entry.rs:36:15-36:20)
  1: _2 = discriminant((*_1))
    SourceInfo(src/map/core/entry.rs:36:15-36:20)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:36:9-36:20)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(src/map/core/entry.rs:36:15-36:20)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:36:15-36:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:37:13-37:39)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_5)
    SourceInfo(src/map/core/entry.rs:38:27-38:36)
  1: _5 = &(((*_1) as Vacant).0: map::core::entry::VacantEntry<'_, K, V>)
    SourceInfo(src/map/core/entry.rs:38:27-38:36)
  2: StorageLive(_6)
    SourceInfo(src/map/core/entry.rs:38:41-38:46)
  3: _6 = &(*_5)
    SourceInfo(src/map/core/entry.rs:38:41-38:46)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:38:41-38:54)
      kind: _0 = map::core::entry::VacantEntry::<'_, K, V>::index(move _6) -> [return: bb6, unwind: bb8]
  }
  preds [bb0, bb2]
  succs [bb6, bb8]

bb4
  0: StorageLive(_3)
    SourceInfo(src/map/core/entry.rs:37:29-37:38)
  1: _3 = &(((*_1) as Occupied).0: map::core::entry::OccupiedEntry<'_, K, V>)
    SourceInfo(src/map/core/entry.rs:37:29-37:38)
  2: StorageLive(_4)
    SourceInfo(src/map/core/entry.rs:37:43-37:48)
  3: _4 = &(*_3)
    SourceInfo(src/map/core/entry.rs:37:43-37:48)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:37:43-37:56)
      kind: _0 = map::core::entry::OccupiedEntry::<'_, K, V>::index(move _4) -> [return: bb5, unwind: bb8]
  }
  preds [bb2]
  succs [bb5, bb8]

bb5
  0: StorageDead(_4)
    SourceInfo(src/map/core/entry.rs:37:55-37:56)
  1: StorageDead(_3)
    SourceInfo(src/map/core/entry.rs:37:55-37:56)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:37:55-37:56)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_6)
    SourceInfo(src/map/core/entry.rs:38:53-38:54)
  1: StorageDead(_5)
    SourceInfo(src/map/core/entry.rs:38:53-38:54)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:38:53-38:54)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:40:6-40:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:35:5-40:6)
      kind: resume
  }
  preds [bb3, bb4]
  succs []

