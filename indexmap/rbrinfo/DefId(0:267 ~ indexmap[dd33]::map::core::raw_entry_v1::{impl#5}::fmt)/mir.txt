bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:13-317:22)
  1: StorageLive(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:25-317:26)
  2: _4 = &mut (*_2)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:25-317:26)
  3: StorageLive(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:39-317:52)
  4: StorageLive(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:39-317:52)
  5: _6 = const "RawEntryMut"
    SourceInfo(src/map/core/raw_entry_v1.rs:317:39-317:52)
  6: _5 = &(*_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:39-317:52)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:317:25-317:53)
      kind: _3 = core::fmt::Formatter::<'_>::debug_tuple(move _4, move _5) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:52-317:53)
  1: StorageDead(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:52-317:53)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:13-317:22)
  3: StorageDead(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:317:53-317:54)
  4: StorageLive(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:318:9-321:10)
  5: PlaceMention(_1)
    SourceInfo(src/map/core/raw_entry_v1.rs:318:15-318:19)
  6: _8 = discriminant((*_1))
    SourceInfo(src/map/core/raw_entry_v1.rs:318:15-318:19)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:318:9-318:19)
      kind: switchInt(move _8) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map/core/raw_entry_v1.rs:318:15-318:19)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:318:15-318:19)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:319:13-319:28)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: AscribeUserType((*_1), +, UserTypeProjection { base: UserType(3), projs: [] })
    SourceInfo(src/map/core/raw_entry_v1.rs:320:13-320:30)
  1: StorageLive(_13)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:28-320:29)
  2: _13 = &(((*_1) as Occupied).0: map::core::raw_entry_v1::RawOccupiedEntryMut<'_, K, V, S>)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:28-320:29)
  3: StorageLive(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:34-320:48)
  4: StorageLive(_15)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:34-320:39)
  5: _15 = &mut _3
    SourceInfo(src/map/core/raw_entry_v1.rs:320:34-320:39)
  6: StorageLive(_16)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:46-320:47)
  7: StorageLive(_17)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:46-320:47)
  8: _17 = &(*_13)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:46-320:47)
  9: _16 = move _17 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/map/core/raw_entry_v1.rs:320:46-320:47)
  10: StorageDead(_17)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:46-320:47)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:320:34-320:48)
      kind: _14 = core::fmt::DebugTuple::<'_, '_>::field(move _15, move _16) -> [return: bb7, unwind: bb10]
  }
  preds [bb1, bb3]
  succs [bb7, bb10]

bb5
  0: AscribeUserType((*_1), +, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/map/core/raw_entry_v1.rs:319:13-319:28)
  1: StorageLive(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:26-319:27)
  2: _9 = &(((*_1) as Vacant).0: map::core::raw_entry_v1::RawVacantEntryMut<'_, K, V, S>)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:26-319:27)
  3: StorageLive(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:32-319:37)
  4: _10 = &mut _3
    SourceInfo(src/map/core/raw_entry_v1.rs:319:32-319:37)
  5: StorageLive(_11)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:44-319:45)
  6: StorageLive(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:44-319:45)
  7: _12 = &(*_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:44-319:45)
  8: _11 = move _12 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/map/core/raw_entry_v1.rs:319:44-319:45)
  9: StorageDead(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:44-319:45)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:319:32-319:46)
      kind: _7 = core::fmt::DebugTuple::<'_, '_>::field(move _10, move _11) -> [return: bb6, unwind: bb10]
  }
  preds [bb3]
  succs [bb6, bb10]

bb6
  0: StorageDead(_11)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:45-319:46)
  1: StorageDead(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:45-319:46)
  2: StorageDead(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:319:45-319:46)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:319:45-319:46)
      kind: goto -> bb8
  }
  preds [bb5]
  succs [bb8]

bb7
  0: _7 = &mut (*_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:34-320:48)
  1: StorageDead(_16)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:47-320:48)
  2: StorageDead(_15)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:47-320:48)
  3: StorageDead(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:47-320:48)
  4: StorageDead(_13)
    SourceInfo(src/map/core/raw_entry_v1.rs:320:47-320:48)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:320:47-320:48)
      kind: goto -> bb8
  }
  preds [bb4]
  succs [bb8]

bb8
  0: StorageDead(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:321:10-321:11)
  1: StorageLive(_18)
    SourceInfo(src/map/core/raw_entry_v1.rs:322:9-322:14)
  2: _18 = &mut _3
    SourceInfo(src/map/core/raw_entry_v1.rs:322:9-322:14)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:322:9-322:23)
      kind: _0 = core::fmt::DebugTuple::<'_, '_>::finish(move _18) -> [return: bb9, unwind: bb10]
  }
  preds [bb6, bb7]
  succs [bb9, bb10]

bb9
  0: StorageDead(_18)
    SourceInfo(src/map/core/raw_entry_v1.rs:322:22-322:23)
  1: StorageDead(_3)
    SourceInfo(src/map/core/raw_entry_v1.rs:323:5-323:6)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:323:6-323:6)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:316:5-323:6)
      kind: resume
  }
  preds [bb0, bb4, bb5, bb8]
  succs []

