bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core/raw_entry_v1.rs:371:9-374:10)
  1: StorageLive(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:371:40-371:49)
  2: _4 = &mut _1
    SourceInfo(src/map/core/raw_entry_v1.rs:371:40-371:49)
  3: PlaceMention(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:371:40-371:49)
  4: _5 = discriminant((*_4))
    SourceInfo(src/map/core/raw_entry_v1.rs:371:40-371:49)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:371:16-371:37)
      kind: switchInt(move _5) -> [0: bb1, otherwise: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:371:16-371:37)
      kind: falseEdge -> [real: bb2, imaginary: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: AscribeUserType((*_4), +, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/map/core/raw_entry_v1.rs:371:16-371:37)
  1: StorageLive(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:371:31-371:36)
  2: _6 = &mut (((*_4) as Occupied).0: map::core::raw_entry_v1::RawOccupiedEntryMut<'_, K, V, S>)
    SourceInfo(src/map/core/raw_entry_v1.rs:371:31-371:36)
  3: StorageLive(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:26-372:51)
  4: StorageLive(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:26-372:31)
  5: _10 = &mut (*_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:26-372:31)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:372:26-372:51)
      kind: _9 = map::core::raw_entry_v1::RawOccupiedEntryMut::<'_, K, V, S>::get_key_value_mut(move _10) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:50-372:51)
  1: PlaceMention(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:26-372:51)
  2: StorageLive(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:18-372:19)
  3: _7 = move (_9.0: &mut K)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:18-372:19)
  4: StorageLive(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:21-372:22)
  5: _8 = move (_9.1: &mut V)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:21-372:22)
  6: StorageDead(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:372:51-372:52)
  7: StorageLive(_11)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:13-373:20)
  8: StorageLive(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:13-373:14)
  9: _12 = move _2
    SourceInfo(src/map/core/raw_entry_v1.rs:373:13-373:14)
  10: StorageLive(_13)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:13-373:20)
  11: StorageLive(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:15-373:16)
  12: _14 = &mut (*_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:15-373:16)
  13: StorageLive(_15)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:18-373:19)
  14: _15 = &mut (*_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:18-373:19)
  15: _13 = (move _14, move _15)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:13-373:20)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:373:13-373:20)
      kind: _11 = <F as core::ops::FnOnce<(&mut K, &mut V)>>::call_once(move _12, move _13) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_15)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:19-373:20)
  1: StorageDead(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:19-373:20)
  2: StorageDead(_13)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:19-373:20)
  3: StorageDead(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:19-373:20)
  4: StorageDead(_11)
    SourceInfo(src/map/core/raw_entry_v1.rs:373:20-373:21)
  5: _3 = const ()
    SourceInfo(src/map/core/raw_entry_v1.rs:371:50-374:10)
  6: StorageDead(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:374:9-374:10)
  7: StorageDead(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:374:9-374:10)
  8: StorageDead(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:374:9-374:10)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:371:9-374:10)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: _3 = const ()
    SourceInfo(src/map/core/raw_entry_v1.rs:374:10-374:10)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:371:9-374:10)
      kind: goto -> bb6
  }
  preds [bb0, bb1]
  succs [bb6]

bb6
  0: StorageDead(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:374:9-374:10)
  1: StorageDead(_3)
    SourceInfo(src/map/core/raw_entry_v1.rs:374:9-374:10)
  2: _0 = move _1
    SourceInfo(src/map/core/raw_entry_v1.rs:375:9-375:13)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:376:5-376:6)
      kind: drop(_2) -> [return: bb7, unwind: bb10]
  }
  preds [bb4, bb5]
  succs [bb7, bb10]

bb7
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:376:6-376:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:373:19-373:20)
      kind: drop(_12) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:376:5-376:6)
      kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb2, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:367:5-376:6)
      kind: resume
  }
  preds [bb6, bb9]
  succs []

