bb0
  0: StorageLive(_3)
    SourceInfo(src/set/slice.rs:286:9-286:31)
  1: StorageLive(_4)
    SourceInfo(src/set/slice.rs:286:9-286:19)
  2: StorageLive(_5)
    SourceInfo(src/set/slice.rs:286:9-286:19)
  3: StorageLive(_6)
    SourceInfo(src/set/slice.rs:286:9-286:13)
  4: _6 = &(*_1)
    SourceInfo(src/set/slice.rs:286:9-286:13)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:286:9-286:19)
      kind: _5 = set::slice::Slice::<T>::len(move _6) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: _4 = &_5
    SourceInfo(src/set/slice.rs:286:9-286:19)
  1: StorageDead(_6)
    SourceInfo(src/set/slice.rs:286:18-286:19)
  2: StorageLive(_7)
    SourceInfo(src/set/slice.rs:286:25-286:30)
  3: _7 = &mut (*_2)
    SourceInfo(src/set/slice.rs:286:25-286:30)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:286:9-286:31)
      kind: _3 = <usize as core::hash::Hash>::hash::<H>(move _4, move _7) -> [return: bb2, unwind: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  0: StorageDead(_7)
    SourceInfo(src/set/slice.rs:286:30-286:31)
  1: StorageDead(_4)
    SourceInfo(src/set/slice.rs:286:30-286:31)
  2: StorageDead(_5)
    SourceInfo(src/set/slice.rs:286:31-286:32)
  3: StorageDead(_3)
    SourceInfo(src/set/slice.rs:286:31-286:32)
  4: StorageLive(_8)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  5: StorageLive(_9)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  6: _9 = _1
    SourceInfo(src/set/slice.rs:287:22-287:26)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:287:22-287:26)
      kind: _8 = <&set::slice::Slice<T> as core::iter::IntoIterator>::into_iter(move _9) -> [return: bb3, unwind: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_9)
    SourceInfo(src/set/slice.rs:287:25-287:26)
  1: PlaceMention(_8)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  2: StorageLive(_10)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  3: _10 = move _8
    SourceInfo(src/set/slice.rs:287:22-287:26)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:287:9-289:10)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:287:9-289:10)
      kind: falseUnwind -> [real: bb5, unwind: bb12]
  }
  preds [bb3, bb11]
  succs [bb5, bb12]

bb5
  0: StorageLive(_12)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  1: StorageLive(_13)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  2: StorageLive(_14)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  3: StorageLive(_15)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  4: _15 = &mut _10
    SourceInfo(src/set/slice.rs:287:22-287:26)
  5: _14 = &mut (*_15)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:287:22-287:26)
      kind: _13 = <set::iter::Iter<'_, T> as core::iter::Iterator>::next(move _14) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageDead(_14)
    SourceInfo(src/set/slice.rs:287:25-287:26)
  1: PlaceMention(_13)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  2: _16 = discriminant(_13)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:287:22-287:26)
      kind: switchInt(move _16) -> [0: bb8, 1: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(src/set/slice.rs:287:22-287:26)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:287:22-287:26)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:287:9-289:10)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_18)
    SourceInfo(src/set/slice.rs:287:13-287:18)
  1: _18 = ((_13 as Some).0: &T)
    SourceInfo(src/set/slice.rs:287:13-287:18)
  2: StorageLive(_19)
    SourceInfo(src/set/slice.rs:288:13-288:30)
  3: StorageLive(_20)
    SourceInfo(src/set/slice.rs:288:13-288:18)
  4: _20 = &(*_18)
    SourceInfo(src/set/slice.rs:288:13-288:18)
  5: StorageLive(_21)
    SourceInfo(src/set/slice.rs:288:24-288:29)
  6: _21 = &mut (*_2)
    SourceInfo(src/set/slice.rs:288:24-288:29)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:288:13-288:30)
      kind: _19 = <T as core::hash::Hash>::hash::<H>(move _20, move _21) -> [return: bb11, unwind: bb12]
  }
  preds [bb6, bb8]
  succs [bb11, bb12]

bb10
  0: _0 = const ()
    SourceInfo(src/set/slice.rs:287:9-289:10)
  1: StorageDead(_15)
    SourceInfo(src/set/slice.rs:289:9-289:10)
  2: StorageDead(_13)
    SourceInfo(src/set/slice.rs:289:9-289:10)
  3: StorageDead(_12)
    SourceInfo(src/set/slice.rs:289:9-289:10)
  4: StorageDead(_10)
    SourceInfo(src/set/slice.rs:289:9-289:10)
  5: StorageDead(_8)
    SourceInfo(src/set/slice.rs:289:9-289:10)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:290:6-290:6)
      kind: return
  }
  preds [bb8]
  succs []

bb11
  0: StorageDead(_21)
    SourceInfo(src/set/slice.rs:288:29-288:30)
  1: StorageDead(_20)
    SourceInfo(src/set/slice.rs:288:29-288:30)
  2: StorageDead(_19)
    SourceInfo(src/set/slice.rs:288:30-288:31)
  3: _12 = const ()
    SourceInfo(src/set/slice.rs:287:27-289:10)
  4: StorageDead(_18)
    SourceInfo(src/set/slice.rs:289:9-289:10)
  5: StorageDead(_15)
    SourceInfo(src/set/slice.rs:289:9-289:10)
  6: StorageDead(_13)
    SourceInfo(src/set/slice.rs:289:9-289:10)
  7: StorageDead(_12)
    SourceInfo(src/set/slice.rs:289:9-289:10)
  8: _11 = const ()
    SourceInfo(src/set/slice.rs:287:9-289:10)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:287:9-289:10)
      kind: goto -> bb4
  }
  preds [bb9]
  succs [bb4]

bb12
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:285:5-290:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb5, bb9]
  succs []

