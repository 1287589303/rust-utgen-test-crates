bb0
  0: StorageLive(_4)
    SourceInfo(src/map/core.rs:64:24-64:74)
  1: StorageLive(_5)
    SourceInfo(src/map/core.rs:64:24-64:29)
  2: _5 = &mut (*_1)
    SourceInfo(src/map/core.rs:64:24-64:29)
  3: StorageLive(_6)
    SourceInfo(src/map/core.rs:64:41-64:51)
  4: StorageLive(_7)
    SourceInfo(src/map/core.rs:64:41-64:45)
  5: _7 = _2
    SourceInfo(src/map/core.rs:64:41-64:45)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:64:41-64:51)
      kind: _6 = HashValue::get(move _7) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: StorageDead(_7)
    SourceInfo(src/map/core.rs:64:50-64:51)
  1: StorageLive(_8)
    SourceInfo(src/map/core.rs:64:53-64:73)
  2: _8 = {closure@src/map/core.rs:64:53: 64:62} { index: _3 }
    SourceInfo(src/map/core.rs:64:53-64:73)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:64:24-64:74)
      kind: _4 = hashbrown::HashTable::<usize>::find_entry::<{closure@src/map/core.rs:64:53: 64:62}>(move _5, move _6, move _8) -> [return: bb2, unwind: bb11]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: StorageDead(_8)
    SourceInfo(src/map/core.rs:64:73-64:74)
  1: StorageDead(_6)
    SourceInfo(src/map/core.rs:64:73-64:74)
  2: StorageDead(_5)
    SourceInfo(src/map/core.rs:64:73-64:74)
  3: PlaceMention(_4)
    SourceInfo(src/map/core.rs:64:24-64:74)
  4: _9 = discriminant(_4)
    SourceInfo(src/map/core.rs:64:24-64:74)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:64:12-64:21)
      kind: switchInt(move _9) -> [0: bb3, otherwise: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(src/map/core.rs:64:12-64:21)
      kind: falseEdge -> [real: bb4, imaginary: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageLive(_10)
    SourceInfo(src/map/core.rs:64:15-64:20)
  1: _10 = move ((_4 as Ok).0: hashbrown::hash_table::OccupiedEntry<'_, usize>)
    SourceInfo(src/map/core.rs:64:15-64:20)
  2: StorageLive(_11)
    SourceInfo(src/map/core.rs:65:9-65:23)
  3: StorageLive(_12)
    SourceInfo(src/map/core.rs:65:9-65:14)
  4: _12 = move _10
    SourceInfo(src/map/core.rs:65:9-65:14)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:65:9-65:23)
      kind: _11 = hashbrown::hash_table::OccupiedEntry::<'_, usize>::remove(move _12) -> [return: bb5, unwind: bb11]
  }
  preds [bb3]
  succs [bb5, bb11]

bb5
  0: StorageDead(_12)
    SourceInfo(src/map/core.rs:65:22-65:23)
  1: StorageDead(_11)
    SourceInfo(src/map/core.rs:65:23-65:24)
  2: _0 = const ()
    SourceInfo(src/map/core.rs:64:75-66:6)
  3: StorageDead(_10)
    SourceInfo(src/map/core.rs:66:5-66:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:64:5-68:6)
      kind: goto -> bb10
  }
  preds [bb4]
  succs [bb10]

bb6
  0: StorageLive(_13)
    SourceInfo(src/map/core.rs:66:15-66:37)
  1: _13 = const true
    SourceInfo(src/map/core.rs:66:15-66:37)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:66:15-66:37)
      kind: switchInt(move _13) -> [0: bb9, otherwise: bb7]
  }
  preds [bb2, bb3]
  succs [bb7, bb9]

bb7
  0: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_18)
    SourceInfo(src/map/core.rs:67:16-67:33)
  3: StorageLive(_19)
    SourceInfo(src/map/core.rs:67:16-67:33)
  4: StorageLive(_20)
    SourceInfo(src/map/core.rs:67:16-67:33)
  5: _20 = [const "index not found"]
    SourceInfo(src/map/core.rs:67:16-67:33)
  6: _19 = &_20
    SourceInfo(src/map/core.rs:67:16-67:33)
  7: _18 = &(*_19)
    SourceInfo(src/map/core.rs:67:16-67:33)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _17 = core::fmt::Arguments::<'_>::new_const::<1>(move _18) -> [return: bb8, unwind: bb11]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  0: StorageDead(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _16 = core::panicking::panic_fmt(move _17) -> bb11
  }
  preds [bb7]
  succs [bb11]

bb9
  0: _0 = const ()
    SourceInfo(src/map/core.rs:68:6-68:6)
  1: StorageDead(_13)
    SourceInfo(src/map/core.rs:68:5-68:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:64:5-68:6)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb10
  0: StorageDead(_4)
    SourceInfo(src/map/core.rs:69:1-69:2)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:69:2-69:2)
      kind: return
  }
  preds [bb5, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/map/core.rs:63:1-69:2)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb7, bb8]
  succs []

