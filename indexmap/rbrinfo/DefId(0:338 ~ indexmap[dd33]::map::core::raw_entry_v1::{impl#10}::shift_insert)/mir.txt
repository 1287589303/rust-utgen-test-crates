bb0
  0: StorageLive(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:637:13-637:18)
  1: StorageLive(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:637:21-637:38)
  2: _6 = &(*(_1.1: &S))
    SourceInfo(src/map/core/raw_entry_v1.rs:637:21-637:38)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:637:21-637:53)
      kind: _5 = <S as core::hash::BuildHasher>::build_hasher(move _6) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: StorageDead(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:637:52-637:53)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(src/map/core/raw_entry_v1.rs:637:13-637:18)
  2: StorageLive(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:638:9-638:25)
  3: StorageLive(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:638:9-638:12)
  4: _8 = &_3
    SourceInfo(src/map/core/raw_entry_v1.rs:638:9-638:12)
  5: StorageLive(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:638:18-638:24)
  6: StorageLive(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:638:18-638:24)
  7: _10 = &mut _5
    SourceInfo(src/map/core/raw_entry_v1.rs:638:18-638:24)
  8: _9 = &mut (*_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:638:18-638:24)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:638:9-638:25)
      kind: _7 = <K as core::hash::Hash>::hash::<<S as core::hash::BuildHasher>::Hasher>(move _8, move _9) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:638:24-638:25)
  1: StorageDead(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:638:24-638:25)
  2: StorageDead(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:638:25-638:26)
  3: StorageDead(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:638:25-638:26)
  4: StorageLive(_11)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:9-639:13)
  5: _11 = move _1
    SourceInfo(src/map/core/raw_entry_v1.rs:639:9-639:13)
  6: StorageLive(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:42-639:47)
  7: _12 = _2
    SourceInfo(src/map/core/raw_entry_v1.rs:639:42-639:47)
  8: StorageLive(_13)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:49-639:59)
  9: StorageLive(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:49-639:50)
  10: _14 = &_5
    SourceInfo(src/map/core/raw_entry_v1.rs:639:49-639:50)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:639:49-639:59)
      kind: _13 = <<S as core::hash::BuildHasher>::Hasher as core::hash::Hasher>::finish(move _14) -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:58-639:59)
  1: StorageLive(_15)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:61-639:64)
  2: _15 = move _3
    SourceInfo(src/map/core/raw_entry_v1.rs:639:61-639:64)
  3: StorageLive(_16)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:66-639:71)
  4: _16 = move _4
    SourceInfo(src/map/core/raw_entry_v1.rs:639:66-639:71)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:639:9-639:72)
      kind: _0 = map::core::raw_entry_v1::RawVacantEntryMut::<'_, K, V, S>::shift_insert_hashed_nocheck(move _11, move _12, move _13, move _15, move _16) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_16)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:71-639:72)
  1: StorageDead(_15)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:71-639:72)
  2: StorageDead(_13)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:71-639:72)
  3: StorageDead(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:71-639:72)
  4: StorageDead(_11)
    SourceInfo(src/map/core/raw_entry_v1.rs:639:71-639:72)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:640:5-640:6)
      kind: drop(_5) -> [return: bb5, unwind: bb11]
  }
  preds [bb3]
  succs [bb5, bb11]

bb5
  0: StorageDead(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:640:5-640:6)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:640:5-640:6)
      kind: drop(_4) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:640:5-640:6)
      kind: drop(_3) -> [return: bb7, unwind: bb13]
  }
  preds [bb5]
  succs [bb7, bb13]

bb7
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:640:6-640:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:639:71-639:72)
      kind: drop(_16) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:639:71-639:72)
      kind: drop(_15) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:640:5-640:6)
      kind: drop(_5) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:640:5-640:6)
      kind: drop(_4) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb0, bb4, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:640:5-640:6)
      kind: drop(_3) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb5, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:632:5-640:6)
      kind: resume
  }
  preds [bb6, bb12]
  succs []

