bb0
  0: StorageLive(_3)
    SourceInfo(src/set/slice.rs:71:13-71:18)
  1: StorageLive(_4)
    SourceInfo(src/set/slice.rs:71:21-71:67)
  2: StorageLive(_5)
    SourceInfo(src/set/slice.rs:71:21-71:66)
  3: StorageLive(_6)
    SourceInfo(src/set/slice.rs:71:40-71:45)
  4: _6 = move _2
    SourceInfo(src/set/slice.rs:71:40-71:45)
  5: StorageLive(_7)
    SourceInfo(src/set/slice.rs:71:47-71:65)
  6: StorageLive(_8)
    SourceInfo(src/set/slice.rs:71:47-71:59)
  7: _8 = &((*_1).0: [Bucket<T, ()>])
    SourceInfo(src/set/slice.rs:71:47-71:59)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:71:47-71:65)
      kind: _7 = core::slice::<impl [Bucket<T, ()>]>::len(move _8) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageDead(_8)
    SourceInfo(src/set/slice.rs:71:64-71:65)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:71:21-71:66)
      kind: _5 = util::try_simplify_range::<R>(move _6, move _7) -> [return: bb2, unwind: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  0: StorageDead(_7)
    SourceInfo(src/set/slice.rs:71:65-71:66)
  1: StorageDead(_6)
    SourceInfo(src/set/slice.rs:71:65-71:66)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:71:21-71:67)
      kind: _4 = <core::option::Option<core::ops::Range<usize>> as core::ops::Try>::branch(move _5) -> [return: bb3, unwind: bb13]
  }
  preds [bb1]
  succs [bb3, bb13]

bb3
  0: StorageDead(_5)
    SourceInfo(src/set/slice.rs:71:66-71:67)
  1: PlaceMention(_4)
    SourceInfo(src/set/slice.rs:71:21-71:67)
  2: _9 = discriminant(_4)
    SourceInfo(src/set/slice.rs:71:21-71:67)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:71:21-71:67)
      kind: switchInt(move _9) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/set/slice.rs:71:21-71:67)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:71:21-71:67)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:71:66-71:67)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_13)
    SourceInfo(src/set/slice.rs:71:21-71:67)
  1: _13 = move ((_4 as Continue).0: core::ops::Range<usize>)
    SourceInfo(src/set/slice.rs:71:21-71:67)
  2: _3 = move _13
    SourceInfo(src/set/slice.rs:71:21-71:67)
  3: StorageDead(_13)
    SourceInfo(src/set/slice.rs:71:66-71:67)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(src/set/slice.rs:71:13-71:18)
  5: StorageDead(_4)
    SourceInfo(src/set/slice.rs:71:67-71:68)
  6: StorageLive(_14)
    SourceInfo(src/set/slice.rs:72:9-72:32)
  7: StorageLive(_15)
    SourceInfo(src/set/slice.rs:72:9-72:21)
  8: _15 = &((*_1).0: [Bucket<T, ()>])
    SourceInfo(src/set/slice.rs:72:9-72:21)
  9: StorageLive(_16)
    SourceInfo(src/set/slice.rs:72:26-72:31)
  10: _16 = move _3
    SourceInfo(src/set/slice.rs:72:26-72:31)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:72:9-72:32)
      kind: _14 = core::slice::<impl [Bucket<T, ()>]>::get::<core::ops::Range<usize>>(move _15, move _16) -> [return: bb9, unwind: bb13]
  }
  preds [bb3, bb5]
  succs [bb9, bb13]

bb7
  0: StorageLive(_10)
    SourceInfo(src/set/slice.rs:71:66-71:67)
  1: _10 = ((_4 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/set/slice.rs:71:66-71:67)
  2: StorageLive(_12)
    SourceInfo(src/set/slice.rs:71:66-71:67)
  3: _12 = _10
    SourceInfo(src/set/slice.rs:71:66-71:67)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:71:21-71:67)
      kind: _0 = <core::option::Option<&set::slice::Slice<T>> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _12) -> [return: bb8, unwind: bb13]
  }
  preds [bb5]
  succs [bb8, bb13]

bb8
  0: StorageDead(_12)
    SourceInfo(src/set/slice.rs:71:66-71:67)
  1: StorageDead(_10)
    SourceInfo(src/set/slice.rs:71:66-71:67)
  2: StorageDead(_4)
    SourceInfo(src/set/slice.rs:71:67-71:68)
  3: StorageDead(_3)
    SourceInfo(src/set/slice.rs:73:5-73:6)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:73:5-73:6)
      kind: drop(_2) -> [return: bb11, unwind: bb14]
  }
  preds [bb7]
  succs [bb11, bb14]

bb9
  0: StorageDead(_16)
    SourceInfo(src/set/slice.rs:72:31-72:32)
  1: StorageDead(_15)
    SourceInfo(src/set/slice.rs:72:31-72:32)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:72:9-72:54)
      kind: _0 = core::option::Option::<&[Bucket<T, ()>]>::map::<&set::slice::Slice<T>, for<'a> fn(&'a [Bucket<T, ()>]) -> &'a set::slice::Slice<T> {set::slice::Slice::<T>::from_slice}>(move _14, set::slice::Slice::<T>::from_slice) -> [return: bb10, unwind: bb13]
  }
  preds [bb6]
  succs [bb10, bb13]

bb10
  0: StorageDead(_14)
    SourceInfo(src/set/slice.rs:72:53-72:54)
  1: StorageDead(_3)
    SourceInfo(src/set/slice.rs:73:5-73:6)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:73:5-73:6)
      kind: drop(_2) -> [return: bb11, unwind: bb14]
  }
  preds [bb9]
  succs [bb11, bb14]

bb11
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:73:6-73:6)
      kind: return
  }
  preds [bb8, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:71:65-71:66)
      kind: drop(_6) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:73:5-73:6)
      kind: drop(_2) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb2, bb6, bb7, bb9, bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:70:5-73:6)
      kind: resume
  }
  preds [bb8, bb10, bb13]
  succs []

