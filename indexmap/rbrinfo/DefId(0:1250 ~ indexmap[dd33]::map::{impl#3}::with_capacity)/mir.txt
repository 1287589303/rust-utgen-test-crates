bb0
  0: StorageLive(_2)
    SourceInfo(src/map.rs:176:40-176:41)
  1: _2 = _1
    SourceInfo(src/map.rs:176:40-176:41)
  2: StorageLive(_3)
    SourceInfo(src/map.rs:176:43-176:57)
  Terminator {
      source_info: SourceInfo(src/map.rs:176:43-176:57)
      kind: _3 = <std::hash::RandomState as core::default::Default>::default() -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  Terminator {
      source_info: SourceInfo(src/map.rs:176:9-176:58)
      kind: _0 = map::IndexMap::<K, V>::with_capacity_and_hasher(move _2, move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(src/map.rs:176:57-176:58)
  1: StorageDead(_2)
    SourceInfo(src/map.rs:176:57-176:58)
  Terminator {
      source_info: SourceInfo(src/map.rs:177:6-177:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:175:5-177:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

