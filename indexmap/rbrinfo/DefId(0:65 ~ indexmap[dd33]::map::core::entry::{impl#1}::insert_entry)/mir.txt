bb0
  0: PlaceMention(_1)
    SourceInfo(src/map/core/entry.rs:46:15-46:19)
  1: _3 = discriminant(_1)
    SourceInfo(src/map/core/entry.rs:46:15-46:19)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:46:9-46:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map/core/entry.rs:46:15-46:19)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:46:15-46:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:47:13-47:39)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_8)
    SourceInfo(src/map/core/entry.rs:51:27-51:32)
  1: _8 = move ((_1 as Vacant).0: map::core::entry::VacantEntry<'_, K, V>)
    SourceInfo(src/map/core/entry.rs:51:27-51:32)
  2: StorageLive(_9)
    SourceInfo(src/map/core/entry.rs:51:37-51:42)
  3: _9 = move _8
    SourceInfo(src/map/core/entry.rs:51:37-51:42)
  4: StorageLive(_10)
    SourceInfo(src/map/core/entry.rs:51:56-51:61)
  5: _10 = move _2
    SourceInfo(src/map/core/entry.rs:51:56-51:61)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:51:37-51:62)
      kind: _0 = map::core::entry::VacantEntry::<'_, K, V>::insert_entry(move _9, move _10) -> [return: bb7, unwind: bb12]
  }
  preds [bb0, bb2]
  succs [bb7, bb12]

bb4
  0: StorageLive(_4)
    SourceInfo(src/map/core/entry.rs:47:29-47:38)
  1: _4 = move ((_1 as Occupied).0: map::core::entry::OccupiedEntry<'_, K, V>)
    SourceInfo(src/map/core/entry.rs:47:29-47:38)
  2: StorageLive(_5)
    SourceInfo(src/map/core/entry.rs:48:17-48:36)
  3: StorageLive(_6)
    SourceInfo(src/map/core/entry.rs:48:17-48:22)
  4: _6 = &mut _4
    SourceInfo(src/map/core/entry.rs:48:17-48:22)
  5: StorageLive(_7)
    SourceInfo(src/map/core/entry.rs:48:30-48:35)
  6: _7 = move _2
    SourceInfo(src/map/core/entry.rs:48:30-48:35)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:48:17-48:36)
      kind: _5 = map::core::entry::OccupiedEntry::<'_, K, V>::insert(move _6, move _7) -> [return: bb5, unwind: bb15]
  }
  preds [bb2]
  succs [bb5, bb15]

bb5
  0: StorageDead(_7)
    SourceInfo(src/map/core/entry.rs:48:35-48:36)
  1: StorageDead(_6)
    SourceInfo(src/map/core/entry.rs:48:35-48:36)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:48:36-48:37)
      kind: drop(_5) -> [return: bb6, unwind: bb16]
  }
  preds [bb4]
  succs [bb6, bb16]

bb6
  0: StorageDead(_5)
    SourceInfo(src/map/core/entry.rs:48:36-48:37)
  1: _0 = move _4
    SourceInfo(src/map/core/entry.rs:49:17-49:22)
  2: StorageDead(_4)
    SourceInfo(src/map/core/entry.rs:50:13-50:14)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:50:13-50:14)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: StorageDead(_10)
    SourceInfo(src/map/core/entry.rs:51:61-51:62)
  1: StorageDead(_9)
    SourceInfo(src/map/core/entry.rs:51:61-51:62)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:51:61-51:62)
      kind: drop(_8) -> [return: bb8, unwind: bb16]
  }
  preds [bb3]
  succs [bb8, bb16]

bb8
  0: StorageDead(_8)
    SourceInfo(src/map/core/entry.rs:51:61-51:62)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:51:61-51:62)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:53:5-53:6)
      kind: drop(_2) -> [return: bb10, unwind: bb17]
  }
  preds [bb6, bb8]
  succs [bb10, bb17]

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:53:5-53:6)
      kind: drop(_1) -> [return: bb11, unwind: bb18]
  }
  preds [bb9]
  succs [bb11, bb18]

bb11
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:53:6-53:6)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:51:61-51:62)
      kind: drop(_10) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:51:61-51:62)
      kind: drop(_9) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:51:61-51:62)
      kind: drop(_8) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb16]

bb15
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:48:35-48:36)
      kind: drop(_7) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:53:5-53:6)
      kind: drop(_2) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb14, bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:53:5-53:6)
      kind: drop(_1) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb9, bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:45:5-53:6)
      kind: resume
  }
  preds [bb10, bb17]
  succs []

