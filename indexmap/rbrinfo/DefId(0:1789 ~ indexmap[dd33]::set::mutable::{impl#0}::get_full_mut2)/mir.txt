bb0
  0: StorageLive(_3)
    SourceInfo(src/set/mutable.rs:61:15-61:44)
  1: StorageLive(_4)
    SourceInfo(src/set/mutable.rs:61:15-61:23)
  2: _4 = &mut ((*_1).0: map::IndexMap<T, (), S>)
    SourceInfo(src/set/mutable.rs:61:15-61:23)
  3: StorageLive(_5)
    SourceInfo(src/set/mutable.rs:61:38-61:43)
  4: _5 = &(*_2)
    SourceInfo(src/set/mutable.rs:61:38-61:43)
  Terminator {
      source_info: SourceInfo(src/set/mutable.rs:61:15-61:44)
      kind: _3 = <map::IndexMap<T, (), S> as map::mutable::MutableKeys>::get_full_mut2::<Q>(move _4, move _5) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_5)
    SourceInfo(src/set/mutable.rs:61:43-61:44)
  1: StorageDead(_4)
    SourceInfo(src/set/mutable.rs:61:43-61:44)
  2: PlaceMention(_3)
    SourceInfo(src/set/mutable.rs:61:15-61:44)
  3: _6 = discriminant(_3)
    SourceInfo(src/set/mutable.rs:61:15-61:44)
  Terminator {
      source_info: SourceInfo(src/set/mutable.rs:61:9-61:44)
      kind: switchInt(move _6) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/set/mutable.rs:61:15-61:44)
  Terminator {
      source_info: SourceInfo(src/set/mutable.rs:61:15-61:44)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/set/mutable.rs:62:13-62:37)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: _0 = core::option::Option::<(usize, &mut T)>::None
    SourceInfo(src/set/mutable.rs:63:21-63:25)
  Terminator {
      source_info: SourceInfo(src/set/mutable.rs:63:21-63:25)
      kind: goto -> bb6
  }
  preds [bb1, bb3]
  succs [bb6]

bb5
  0: StorageLive(_7)
    SourceInfo(src/set/mutable.rs:62:19-62:24)
  1: _7 = (((_3 as Some).0: (usize, &mut T, &mut ())).0: usize)
    SourceInfo(src/set/mutable.rs:62:19-62:24)
  2: StorageLive(_8)
    SourceInfo(src/set/mutable.rs:62:26-62:31)
  3: _8 = move (((_3 as Some).0: (usize, &mut T, &mut ())).1: &mut T)
    SourceInfo(src/set/mutable.rs:62:26-62:31)
  4: StorageLive(_9)
    SourceInfo(src/set/mutable.rs:62:46-62:60)
  5: StorageLive(_10)
    SourceInfo(src/set/mutable.rs:62:47-62:52)
  6: _10 = _7
    SourceInfo(src/set/mutable.rs:62:47-62:52)
  7: StorageLive(_11)
    SourceInfo(src/set/mutable.rs:62:54-62:59)
  8: _11 = &mut (*_8)
    SourceInfo(src/set/mutable.rs:62:54-62:59)
  9: _9 = (move _10, move _11)
    SourceInfo(src/set/mutable.rs:62:46-62:60)
  10: StorageDead(_11)
    SourceInfo(src/set/mutable.rs:62:59-62:60)
  11: StorageDead(_10)
    SourceInfo(src/set/mutable.rs:62:59-62:60)
  12: _0 = core::option::Option::<(usize, &mut T)>::Some(move _9)
    SourceInfo(src/set/mutable.rs:62:41-62:61)
  13: StorageDead(_9)
    SourceInfo(src/set/mutable.rs:62:60-62:61)
  14: StorageDead(_8)
    SourceInfo(src/set/mutable.rs:62:60-62:61)
  15: StorageDead(_7)
    SourceInfo(src/set/mutable.rs:62:60-62:61)
  Terminator {
      source_info: SourceInfo(src/set/mutable.rs:62:60-62:61)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb6
  0: StorageDead(_3)
    SourceInfo(src/set/mutable.rs:65:5-65:6)
  Terminator {
      source_info: SourceInfo(src/set/mutable.rs:65:6-65:6)
      kind: return
  }
  preds [bb4, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/set/mutable.rs:57:5-65:6)
      kind: resume
  }
  preds [bb0]
  succs []

