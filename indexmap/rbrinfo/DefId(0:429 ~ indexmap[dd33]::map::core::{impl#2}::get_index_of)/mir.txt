bb0
  0: StorageLive(_4)
    SourceInfo(src/map/core.rs:323:13-323:15)
  1: StorageLive(_5)
    SourceInfo(src/map/core.rs:323:29-323:32)
  2: _5 = &(*_3)
    SourceInfo(src/map/core.rs:323:29-323:32)
  3: StorageLive(_6)
    SourceInfo(src/map/core.rs:323:34-323:47)
  4: StorageLive(_7)
    SourceInfo(src/map/core.rs:323:34-323:47)
  5: StorageLive(_8)
    SourceInfo(src/map/core.rs:323:34-323:47)
  6: StorageLive(_9)
    SourceInfo(src/map/core.rs:323:34-323:47)
  7: _9 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:323:34-323:47)
  8: _8 = &(*_9)
    SourceInfo(src/map/core.rs:323:34-323:47)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:323:34-323:47)
      kind: _7 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _8) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: _6 = &(*_7)
    SourceInfo(src/map/core.rs:323:34-323:47)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:323:46-323:47)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:323:18-323:48)
      kind: _4 = map::core::equivalent::<K, V, Q>(move _5, move _6) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_6)
    SourceInfo(src/map/core.rs:323:47-323:48)
  1: StorageDead(_5)
    SourceInfo(src/map/core.rs:323:47-323:48)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/map/core.rs:323:13-323:15)
  3: StorageDead(_9)
    SourceInfo(src/map/core.rs:323:48-323:49)
  4: StorageDead(_7)
    SourceInfo(src/map/core.rs:323:48-323:49)
  5: StorageLive(_10)
    SourceInfo(src/map/core.rs:324:9-324:42)
  6: StorageLive(_11)
    SourceInfo(src/map/core.rs:324:9-324:21)
  7: _11 = &((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:324:9-324:21)
  8: StorageLive(_12)
    SourceInfo(src/map/core.rs:324:27-324:37)
  9: StorageLive(_13)
    SourceInfo(src/map/core.rs:324:27-324:31)
  10: _13 = _2
    SourceInfo(src/map/core.rs:324:27-324:31)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:324:27-324:37)
      kind: _12 = HashValue::get(move _13) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_13)
    SourceInfo(src/map/core.rs:324:36-324:37)
  1: StorageLive(_14)
    SourceInfo(src/map/core.rs:324:39-324:41)
  2: _14 = move _4
    SourceInfo(src/map/core.rs:324:39-324:41)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:324:9-324:42)
      kind: _10 = hashbrown::HashTable::<usize>::find::<impl for<'a> Fn(&'a usize) -> bool + '_>(move _11, move _12, move _14) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_14)
    SourceInfo(src/map/core.rs:324:41-324:42)
  1: StorageDead(_12)
    SourceInfo(src/map/core.rs:324:41-324:42)
  2: StorageDead(_11)
    SourceInfo(src/map/core.rs:324:41-324:42)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:324:9-324:51)
      kind: _0 = core::option::Option::<&usize>::copied(move _10) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_10)
    SourceInfo(src/map/core.rs:324:50-324:51)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:325:5-325:6)
      kind: drop(_4) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_4)
    SourceInfo(src/map/core.rs:325:5-325:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:325:6-325:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/map/core.rs:324:41-324:42)
      kind: drop(_14) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/map/core.rs:325:5-325:6)
      kind: drop(_4) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb2, bb4, bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map/core.rs:319:5-325:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb8]
  succs []

