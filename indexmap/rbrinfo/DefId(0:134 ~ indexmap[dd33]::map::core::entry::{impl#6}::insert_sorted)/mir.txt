bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core/entry.rs:399:13-399:18)
  1: StorageLive(_4)
    SourceInfo(src/map/core/entry.rs:399:51-399:67)
  2: StorageLive(_5)
    SourceInfo(src/map/core/entry.rs:399:51-399:67)
  3: StorageLive(_6)
    SourceInfo(src/map/core/entry.rs:399:51-399:67)
  4: _6 = &(*((_1.0: map::core::RefMut<'_, K, V>).1: &mut alloc::vec::Vec<Bucket<K, V>>))
    SourceInfo(src/map/core/entry.rs:399:51-399:67)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:399:51-399:67)
      kind: _5 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _6) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: _4 = &(*_5)
    SourceInfo(src/map/core/entry.rs:399:51-399:67)
  1: StorageDead(_6)
    SourceInfo(src/map/core/entry.rs:399:66-399:67)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:399:21-399:68)
      kind: _3 = map::slice::Slice::<K, V>::from_slice(move _4) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_4)
    SourceInfo(src/map/core/entry.rs:399:67-399:68)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/map/core/entry.rs:399:13-399:18)
  2: StorageDead(_5)
    SourceInfo(src/map/core/entry.rs:399:68-399:69)
  3: StorageLive(_7)
    SourceInfo(src/map/core/entry.rs:400:13-400:14)
  4: StorageLive(_8)
    SourceInfo(src/map/core/entry.rs:400:17-400:52)
  5: StorageLive(_9)
    SourceInfo(src/map/core/entry.rs:400:17-400:22)
  6: _9 = &(*_3)
    SourceInfo(src/map/core/entry.rs:400:17-400:22)
  7: StorageLive(_10)
    SourceInfo(src/map/core/entry.rs:400:42-400:51)
  8: StorageLive(_11)
    SourceInfo(src/map/core/entry.rs:400:42-400:51)
  9: _11 = &(_1.2: K)
    SourceInfo(src/map/core/entry.rs:400:42-400:51)
  10: _10 = &(*_11)
    SourceInfo(src/map/core/entry.rs:400:42-400:51)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:400:17-400:52)
      kind: _8 = map::slice::Slice::<K, V>::binary_search_keys(move _9, move _10) -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_10)
    SourceInfo(src/map/core/entry.rs:400:51-400:52)
  1: StorageDead(_9)
    SourceInfo(src/map/core/entry.rs:400:51-400:52)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:400:17-400:65)
      kind: _7 = core::result::Result::<usize, usize>::unwrap_err(move _8) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_8)
    SourceInfo(src/map/core/entry.rs:400:64-400:65)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(src/map/core/entry.rs:400:13-400:14)
  2: StorageDead(_11)
    SourceInfo(src/map/core/entry.rs:400:65-400:66)
  3: StorageLive(_12)
    SourceInfo(src/map/core/entry.rs:401:10-401:11)
  4: _12 = _7
    SourceInfo(src/map/core/entry.rs:401:10-401:11)
  5: StorageLive(_13)
    SourceInfo(src/map/core/entry.rs:401:13-401:40)
  6: StorageLive(_14)
    SourceInfo(src/map/core/entry.rs:401:13-401:40)
  7: StorageLive(_15)
    SourceInfo(src/map/core/entry.rs:401:13-401:17)
  8: _15 = move _1
    SourceInfo(src/map/core/entry.rs:401:13-401:17)
  9: StorageLive(_16)
    SourceInfo(src/map/core/entry.rs:401:31-401:32)
  10: _16 = _7
    SourceInfo(src/map/core/entry.rs:401:31-401:32)
  11: StorageLive(_17)
    SourceInfo(src/map/core/entry.rs:401:34-401:39)
  12: _17 = move _2
    SourceInfo(src/map/core/entry.rs:401:34-401:39)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:401:13-401:40)
      kind: _14 = map::core::entry::VacantEntry::<'_, K, V>::shift_insert(move _15, move _16, move _17) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: _13 = &mut (*_14)
    SourceInfo(src/map/core/entry.rs:401:13-401:40)
  1: StorageDead(_17)
    SourceInfo(src/map/core/entry.rs:401:39-401:40)
  2: StorageDead(_16)
    SourceInfo(src/map/core/entry.rs:401:39-401:40)
  3: StorageDead(_15)
    SourceInfo(src/map/core/entry.rs:401:39-401:40)
  4: _0 = (move _12, move _13)
    SourceInfo(src/map/core/entry.rs:401:9-401:41)
  5: StorageDead(_13)
    SourceInfo(src/map/core/entry.rs:401:40-401:41)
  6: StorageDead(_12)
    SourceInfo(src/map/core/entry.rs:401:40-401:41)
  7: StorageDead(_7)
    SourceInfo(src/map/core/entry.rs:402:5-402:6)
  8: StorageDead(_3)
    SourceInfo(src/map/core/entry.rs:402:5-402:6)
  9: StorageDead(_14)
    SourceInfo(src/map/core/entry.rs:402:5-402:6)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:402:5-402:6)
      kind: drop(_2) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:402:5-402:6)
      kind: drop(_1) -> [return: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:402:6-402:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:401:39-401:40)
      kind: drop(_17) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:401:39-401:40)
      kind: drop(_15) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:402:5-402:6)
      kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb3, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:402:5-402:6)
      kind: drop(_1) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb5, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:395:5-402:6)
      kind: resume
  }
  preds [bb6, bb11]
  succs []

