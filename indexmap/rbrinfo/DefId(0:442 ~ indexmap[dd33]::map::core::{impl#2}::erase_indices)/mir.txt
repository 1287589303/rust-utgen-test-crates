bb0
  0: StorageLive(_6)
    SourceInfo(src/map/core.rs:452:39-452:65)
  1: StorageLive(_7)
    SourceInfo(src/map/core.rs:452:39-452:51)
  2: StorageLive(_8)
    SourceInfo(src/map/core.rs:452:39-452:65)
  3: StorageLive(_9)
    SourceInfo(src/map/core.rs:452:39-452:51)
  4: _9 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:452:39-452:51)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:452:39-452:65)
      kind: _8 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _9) -> [return: bb1, unwind: bb55]
  }
  preds []
  succs [bb1, bb55]

bb1
  0: _7 = &(*_8)
    SourceInfo(src/map/core.rs:452:39-452:51)
  1: StorageDead(_9)
    SourceInfo(src/map/core.rs:452:50-452:51)
  2: StorageLive(_10)
    SourceInfo(src/map/core.rs:452:61-452:64)
  3: _10 = _3
    SourceInfo(src/map/core.rs:452:61-452:64)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:452:39-452:65)
      kind: _6 = core::slice::<impl [Bucket<K, V>]>::split_at(move _7, move _10) -> [return: bb2, unwind: bb55]
  }
  preds [bb0]
  succs [bb2, bb55]

bb2
  0: StorageDead(_10)
    SourceInfo(src/map/core.rs:452:64-452:65)
  1: StorageDead(_7)
    SourceInfo(src/map/core.rs:452:64-452:65)
  2: PlaceMention(_6)
    SourceInfo(src/map/core.rs:452:39-452:65)
  3: StorageLive(_4)
    SourceInfo(src/map/core.rs:452:14-452:18)
  4: _4 = (_6.0: &[Bucket<K, V>])
    SourceInfo(src/map/core.rs:452:14-452:18)
  5: StorageLive(_5)
    SourceInfo(src/map/core.rs:452:20-452:35)
  6: _5 = (_6.1: &[Bucket<K, V>])
    SourceInfo(src/map/core.rs:452:20-452:35)
  7: StorageDead(_8)
    SourceInfo(src/map/core.rs:452:65-452:66)
  8: StorageDead(_6)
    SourceInfo(src/map/core.rs:452:65-452:66)
  9: StorageLive(_13)
    SourceInfo(src/map/core.rs:453:47-453:67)
  10: StorageLive(_14)
    SourceInfo(src/map/core.rs:453:47-453:51)
  11: _14 = &(*_4)
    SourceInfo(src/map/core.rs:453:47-453:51)
  12: StorageLive(_15)
    SourceInfo(src/map/core.rs:453:61-453:66)
  13: _15 = _2
    SourceInfo(src/map/core.rs:453:61-453:66)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:453:47-453:67)
      kind: _13 = core::slice::<impl [Bucket<K, V>]>::split_at(move _14, move _15) -> [return: bb3, unwind: bb55]
  }
  preds [bb1]
  succs [bb3, bb55]

bb3
  0: StorageDead(_15)
    SourceInfo(src/map/core.rs:453:66-453:67)
  1: StorageDead(_14)
    SourceInfo(src/map/core.rs:453:66-453:67)
  2: PlaceMention(_13)
    SourceInfo(src/map/core.rs:453:47-453:67)
  3: StorageLive(_11)
    SourceInfo(src/map/core.rs:453:14-453:27)
  4: _11 = (_13.0: &[Bucket<K, V>])
    SourceInfo(src/map/core.rs:453:14-453:27)
  5: StorageLive(_12)
    SourceInfo(src/map/core.rs:453:29-453:43)
  6: _12 = (_13.1: &[Bucket<K, V>])
    SourceInfo(src/map/core.rs:453:29-453:43)
  7: StorageDead(_13)
    SourceInfo(src/map/core.rs:453:67-453:68)
  8: StorageLive(_16)
    SourceInfo(src/map/core.rs:455:13-455:19)
  9: StorageLive(_17)
    SourceInfo(src/map/core.rs:455:22-455:36)
  10: _17 = &(*_12)
    SourceInfo(src/map/core.rs:455:22-455:36)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:455:22-455:42)
      kind: _16 = core::slice::<impl [Bucket<K, V>]>::len(move _17) -> [return: bb4, unwind: bb55]
  }
  preds [bb2]
  succs [bb4, bb55]

bb4
  0: StorageDead(_17)
    SourceInfo(src/map/core.rs:455:41-455:42)
  1: FakeRead(ForLet(None), _16)
    SourceInfo(src/map/core.rs:455:13-455:19)
  2: StorageLive(_18)
    SourceInfo(src/map/core.rs:456:13-456:20)
  3: StorageLive(_19)
    SourceInfo(src/map/core.rs:456:23-456:38)
  4: _19 = &(*_5)
    SourceInfo(src/map/core.rs:456:23-456:38)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:456:23-456:44)
      kind: _18 = core::slice::<impl [Bucket<K, V>]>::len(move _19) -> [return: bb5, unwind: bb55]
  }
  preds [bb3]
  succs [bb5, bb55]

bb5
  0: StorageDead(_19)
    SourceInfo(src/map/core.rs:456:43-456:44)
  1: FakeRead(ForLet(None), _18)
    SourceInfo(src/map/core.rs:456:13-456:20)
  2: StorageLive(_20)
    SourceInfo(src/map/core.rs:457:13-457:26)
  3: StorageLive(_21)
    SourceInfo(src/map/core.rs:457:29-457:52)
  4: StorageLive(_22)
    SourceInfo(src/map/core.rs:457:29-457:41)
  5: _22 = &((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:457:29-457:41)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:457:29-457:52)
      kind: _21 = hashbrown::HashTable::<usize>::capacity(move _22) -> [return: bb6, unwind: bb55]
  }
  preds [bb4]
  succs [bb6, bb55]

bb6
  0: StorageDead(_22)
    SourceInfo(src/map/core.rs:457:51-457:52)
  1: _23 = Eq(const 2_usize, const 0_usize)
    SourceInfo(src/map/core.rs:457:29-457:56)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:457:29-457:56)
      kind: assert(!move _23, "attempt to divide `{}` by zero", _21) -> [success: bb7, unwind: bb55]
  }
  preds [bb5]
  succs [bb7, bb55]

bb7
  0: _20 = Div(move _21, const 2_usize)
    SourceInfo(src/map/core.rs:457:29-457:56)
  1: StorageDead(_21)
    SourceInfo(src/map/core.rs:457:55-457:56)
  2: FakeRead(ForLet(None), _20)
    SourceInfo(src/map/core.rs:457:13-457:26)
  3: StorageLive(_24)
    SourceInfo(src/map/core.rs:460:9-492:10)
  4: StorageLive(_25)
    SourceInfo(src/map/core.rs:460:12-460:23)
  5: StorageLive(_26)
    SourceInfo(src/map/core.rs:460:12-460:18)
  6: _26 = _16
    SourceInfo(src/map/core.rs:460:12-460:18)
  7: _25 = Eq(move _26, const 0_usize)
    SourceInfo(src/map/core.rs:460:12-460:23)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:460:12-460:23)
      kind: switchInt(move _25) -> [0: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_26)
    SourceInfo(src/map/core.rs:460:22-460:23)
  1: _24 = const ()
    SourceInfo(src/map/core.rs:460:24-462:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:460:9-492:10)
      kind: goto -> bb47
  }
  preds [bb7]
  succs [bb47]

bb9
  0: StorageDead(_26)
    SourceInfo(src/map/core.rs:460:22-460:23)
  1: StorageLive(_27)
    SourceInfo(src/map/core.rs:462:19-462:50)
  2: StorageLive(_28)
    SourceInfo(src/map/core.rs:462:19-462:34)
  3: StorageLive(_29)
    SourceInfo(src/map/core.rs:462:19-462:24)
  4: _29 = _2
    SourceInfo(src/map/core.rs:462:19-462:24)
  5: StorageLive(_30)
    SourceInfo(src/map/core.rs:462:27-462:34)
  6: _30 = _18
    SourceInfo(src/map/core.rs:462:27-462:34)
  7: _31 = AddWithOverflow(_29, _30)
    SourceInfo(src/map/core.rs:462:19-462:34)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:462:19-462:34)
      kind: assert(!move (_31.1: bool), "attempt to compute `{} + {}`, which would overflow", move _29, move _30) -> [success: bb10, unwind: bb55]
  }
  preds [bb7]
  succs [bb10, bb55]

bb10
  0: _28 = move (_31.0: usize)
    SourceInfo(src/map/core.rs:462:19-462:34)
  1: StorageDead(_30)
    SourceInfo(src/map/core.rs:462:33-462:34)
  2: StorageDead(_29)
    SourceInfo(src/map/core.rs:462:33-462:34)
  3: StorageLive(_32)
    SourceInfo(src/map/core.rs:462:37-462:50)
  4: _32 = _20
    SourceInfo(src/map/core.rs:462:37-462:50)
  5: _27 = Lt(move _28, move _32)
    SourceInfo(src/map/core.rs:462:19-462:50)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:462:19-462:50)
      kind: switchInt(move _27) -> [0: bb17, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb17]

bb11
  0: StorageDead(_32)
    SourceInfo(src/map/core.rs:462:49-462:50)
  1: StorageDead(_28)
    SourceInfo(src/map/core.rs:462:49-462:50)
  2: StorageLive(_33)
    SourceInfo(src/map/core.rs:462:54-462:68)
  3: StorageLive(_34)
    SourceInfo(src/map/core.rs:462:54-462:59)
  4: _34 = _2
    SourceInfo(src/map/core.rs:462:54-462:59)
  5: StorageLive(_35)
    SourceInfo(src/map/core.rs:462:62-462:68)
  6: _35 = _16
    SourceInfo(src/map/core.rs:462:62-462:68)
  7: _33 = Lt(move _34, move _35)
    SourceInfo(src/map/core.rs:462:54-462:68)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:462:54-462:68)
      kind: switchInt(move _33) -> [0: bb16, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb16]

bb12
  0: StorageDead(_35)
    SourceInfo(src/map/core.rs:462:67-462:68)
  1: StorageDead(_34)
    SourceInfo(src/map/core.rs:462:67-462:68)
  2: StorageLive(_36)
    SourceInfo(src/map/core.rs:464:13-464:33)
  3: StorageLive(_37)
    SourceInfo(src/map/core.rs:464:13-464:25)
  4: _37 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:464:13-464:25)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:464:13-464:33)
      kind: _36 = hashbrown::HashTable::<usize>::clear(move _37) -> [return: bb13, unwind: bb55]
  }
  preds [bb11]
  succs [bb13, bb55]

bb13
  0: StorageDead(_37)
    SourceInfo(src/map/core.rs:464:32-464:33)
  1: StorageDead(_36)
    SourceInfo(src/map/core.rs:464:33-464:34)
  2: StorageLive(_38)
    SourceInfo(src/map/core.rs:467:13-467:66)
  3: StorageLive(_39)
    SourceInfo(src/map/core.rs:467:33-467:50)
  4: StorageLive(_40)
    SourceInfo(src/map/core.rs:467:33-467:50)
  5: _40 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:467:33-467:50)
  6: _39 = &mut (*_40)
    SourceInfo(src/map/core.rs:467:33-467:50)
  7: StorageLive(_41)
    SourceInfo(src/map/core.rs:467:52-467:65)
  8: _41 = &(*_11)
    SourceInfo(src/map/core.rs:467:52-467:65)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:467:13-467:66)
      kind: _38 = map::core::insert_bulk_no_grow::<K, V>(move _39, move _41) -> [return: bb14, unwind: bb55]
  }
  preds [bb12]
  succs [bb14, bb55]

bb14
  0: StorageDead(_41)
    SourceInfo(src/map/core.rs:467:65-467:66)
  1: StorageDead(_39)
    SourceInfo(src/map/core.rs:467:65-467:66)
  2: StorageDead(_40)
    SourceInfo(src/map/core.rs:467:66-467:67)
  3: StorageDead(_38)
    SourceInfo(src/map/core.rs:467:66-467:67)
  4: StorageLive(_42)
    SourceInfo(src/map/core.rs:468:13-468:68)
  5: StorageLive(_43)
    SourceInfo(src/map/core.rs:468:33-468:50)
  6: StorageLive(_44)
    SourceInfo(src/map/core.rs:468:33-468:50)
  7: _44 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:468:33-468:50)
  8: _43 = &mut (*_44)
    SourceInfo(src/map/core.rs:468:33-468:50)
  9: StorageLive(_45)
    SourceInfo(src/map/core.rs:468:52-468:67)
  10: _45 = &(*_5)
    SourceInfo(src/map/core.rs:468:52-468:67)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:468:13-468:68)
      kind: _42 = map::core::insert_bulk_no_grow::<K, V>(move _43, move _45) -> [return: bb15, unwind: bb55]
  }
  preds [bb13]
  succs [bb15, bb55]

bb15
  0: StorageDead(_45)
    SourceInfo(src/map/core.rs:468:67-468:68)
  1: StorageDead(_43)
    SourceInfo(src/map/core.rs:468:67-468:68)
  2: StorageDead(_44)
    SourceInfo(src/map/core.rs:468:68-468:69)
  3: StorageDead(_42)
    SourceInfo(src/map/core.rs:468:68-468:69)
  4: _24 = const ()
    SourceInfo(src/map/core.rs:462:69-469:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:462:16-492:10)
      kind: goto -> bb46
  }
  preds [bb14]
  succs [bb46]

bb16
  0: StorageDead(_35)
    SourceInfo(src/map/core.rs:462:67-462:68)
  1: StorageDead(_34)
    SourceInfo(src/map/core.rs:462:67-462:68)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb18
  }
  preds [bb11]
  succs [bb18]

bb17
  0: StorageDead(_32)
    SourceInfo(src/map/core.rs:462:49-462:50)
  1: StorageDead(_28)
    SourceInfo(src/map/core.rs:462:49-462:50)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb18
  }
  preds [bb10]
  succs [bb18]

bb18
  0: StorageLive(_46)
    SourceInfo(src/map/core.rs:469:19-469:51)
  1: StorageLive(_47)
    SourceInfo(src/map/core.rs:469:19-469:35)
  2: StorageLive(_48)
    SourceInfo(src/map/core.rs:469:19-469:25)
  3: _48 = _16
    SourceInfo(src/map/core.rs:469:19-469:25)
  4: StorageLive(_49)
    SourceInfo(src/map/core.rs:469:28-469:35)
  5: _49 = _18
    SourceInfo(src/map/core.rs:469:28-469:35)
  6: _50 = AddWithOverflow(_48, _49)
    SourceInfo(src/map/core.rs:469:19-469:35)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:469:19-469:35)
      kind: assert(!move (_50.1: bool), "attempt to compute `{} + {}`, which would overflow", move _48, move _49) -> [success: bb19, unwind: bb55]
  }
  preds [bb16, bb17]
  succs [bb19, bb55]

bb19
  0: _47 = move (_50.0: usize)
    SourceInfo(src/map/core.rs:469:19-469:35)
  1: StorageDead(_49)
    SourceInfo(src/map/core.rs:469:34-469:35)
  2: StorageDead(_48)
    SourceInfo(src/map/core.rs:469:34-469:35)
  3: StorageLive(_51)
    SourceInfo(src/map/core.rs:469:38-469:51)
  4: _51 = _20
    SourceInfo(src/map/core.rs:469:38-469:51)
  5: _46 = Lt(move _47, move _51)
    SourceInfo(src/map/core.rs:469:19-469:51)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:469:19-469:51)
      kind: switchInt(move _46) -> [0: bb42, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb42]

bb20
  0: StorageDead(_51)
    SourceInfo(src/map/core.rs:469:50-469:51)
  1: StorageDead(_47)
    SourceInfo(src/map/core.rs:469:50-469:51)
  2: StorageLive(_52)
    SourceInfo(src/map/core.rs:473:13-475:14)
  3: StorageLive(_53)
    SourceInfo(src/map/core.rs:473:31-473:60)
  4: StorageLive(_54)
    SourceInfo(src/map/core.rs:473:31-473:60)
  5: StorageLive(_55)
    SourceInfo(src/map/core.rs:473:31-473:40)
  6: StorageLive(_56)
    SourceInfo(src/map/core.rs:473:32-473:37)
  7: _56 = _2
    SourceInfo(src/map/core.rs:473:32-473:37)
  8: _55 = core::ops::RangeFrom::<usize> { start: move _56 }
    SourceInfo(src/map/core.rs:473:31-473:40)
  9: StorageDead(_56)
    SourceInfo(src/map/core.rs:473:39-473:40)
  10: StorageLive(_57)
    SourceInfo(src/map/core.rs:473:45-473:59)
  11: _57 = _12
    SourceInfo(src/map/core.rs:473:45-473:59)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:473:31-473:60)
      kind: _54 = <core::ops::RangeFrom<usize> as core::iter::Iterator>::zip::<&[Bucket<K, V>]>(move _55, move _57) -> [return: bb21, unwind: bb55]
  }
  preds [bb19]
  succs [bb21, bb55]

bb21
  0: StorageDead(_57)
    SourceInfo(src/map/core.rs:473:59-473:60)
  1: StorageDead(_55)
    SourceInfo(src/map/core.rs:473:59-473:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:473:31-473:60)
      kind: _53 = <core::iter::Zip<core::ops::RangeFrom<usize>, core::slice::Iter<'_, Bucket<K, V>>> as core::iter::IntoIterator>::into_iter(move _54) -> [return: bb22, unwind: bb55]
  }
  preds [bb20]
  succs [bb22, bb55]

bb22
  0: StorageDead(_54)
    SourceInfo(src/map/core.rs:473:59-473:60)
  1: PlaceMention(_53)
    SourceInfo(src/map/core.rs:473:31-473:60)
  2: StorageLive(_58)
    SourceInfo(src/map/core.rs:473:31-473:60)
  3: _58 = move _53
    SourceInfo(src/map/core.rs:473:31-473:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:473:13-475:14)
      kind: goto -> bb23
  }
  preds [bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(src/map/core.rs:473:13-475:14)
      kind: falseUnwind -> [real: bb24, unwind: bb55]
  }
  preds [bb22, bb30]
  succs [bb24, bb55]

bb24
  0: StorageLive(_60)
    SourceInfo(src/map/core.rs:473:31-473:60)
  1: StorageLive(_61)
    SourceInfo(src/map/core.rs:473:31-473:60)
  2: StorageLive(_62)
    SourceInfo(src/map/core.rs:473:31-473:60)
  3: StorageLive(_63)
    SourceInfo(src/map/core.rs:473:31-473:60)
  4: _63 = &mut _58
    SourceInfo(src/map/core.rs:473:31-473:60)
  5: _62 = &mut (*_63)
    SourceInfo(src/map/core.rs:473:31-473:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:473:31-473:60)
      kind: _61 = <core::iter::Zip<core::ops::RangeFrom<usize>, core::slice::Iter<'_, Bucket<K, V>>> as core::iter::Iterator>::next(move _62) -> [return: bb25, unwind: bb55]
  }
  preds [bb23]
  succs [bb25, bb55]

bb25
  0: StorageDead(_62)
    SourceInfo(src/map/core.rs:473:59-473:60)
  1: PlaceMention(_61)
    SourceInfo(src/map/core.rs:473:31-473:60)
  2: _64 = discriminant(_61)
    SourceInfo(src/map/core.rs:473:31-473:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:473:31-473:60)
      kind: switchInt(move _64) -> [0: bb27, 1: bb28, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _61)
    SourceInfo(src/map/core.rs:473:31-473:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:473:31-473:60)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(src/map/core.rs:473:13-475:14)
      kind: falseEdge -> [real: bb29, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageLive(_66)
    SourceInfo(src/map/core.rs:473:18-473:19)
  1: _66 = (((_61 as Some).0: (usize, &Bucket<K, V>)).0: usize)
    SourceInfo(src/map/core.rs:473:18-473:19)
  2: StorageLive(_67)
    SourceInfo(src/map/core.rs:473:21-473:26)
  3: _67 = (((_61 as Some).0: (usize, &Bucket<K, V>)).1: &Bucket<K, V>)
    SourceInfo(src/map/core.rs:473:21-473:26)
  4: StorageLive(_68)
    SourceInfo(src/map/core.rs:474:17-474:62)
  5: StorageLive(_69)
    SourceInfo(src/map/core.rs:474:29-474:46)
  6: StorageLive(_70)
    SourceInfo(src/map/core.rs:474:29-474:46)
  7: _70 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:474:29-474:46)
  8: _69 = &mut (*_70)
    SourceInfo(src/map/core.rs:474:29-474:46)
  9: StorageLive(_71)
    SourceInfo(src/map/core.rs:474:48-474:58)
  10: _71 = ((*_67).0: HashValue)
    SourceInfo(src/map/core.rs:474:48-474:58)
  11: StorageLive(_72)
    SourceInfo(src/map/core.rs:474:60-474:61)
  12: _72 = _66
    SourceInfo(src/map/core.rs:474:60-474:61)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:474:17-474:62)
      kind: _68 = map::core::erase_index(move _69, move _71, move _72) -> [return: bb30, unwind: bb55]
  }
  preds [bb25, bb27]
  succs [bb30, bb55]

bb29
  0: _52 = const ()
    SourceInfo(src/map/core.rs:473:13-475:14)
  1: StorageDead(_63)
    SourceInfo(src/map/core.rs:475:13-475:14)
  2: StorageDead(_61)
    SourceInfo(src/map/core.rs:475:13-475:14)
  3: StorageDead(_60)
    SourceInfo(src/map/core.rs:475:13-475:14)
  4: StorageDead(_58)
    SourceInfo(src/map/core.rs:475:13-475:14)
  5: StorageDead(_53)
    SourceInfo(src/map/core.rs:475:13-475:14)
  6: StorageDead(_52)
    SourceInfo(src/map/core.rs:475:13-475:14)
  7: StorageLive(_73)
    SourceInfo(src/map/core.rs:478:40-478:81)
  8: StorageLive(_74)
    SourceInfo(src/map/core.rs:478:40-478:81)
  9: StorageLive(_75)
    SourceInfo(src/map/core.rs:478:40-478:60)
  10: StorageLive(_76)
    SourceInfo(src/map/core.rs:478:40-478:49)
  11: StorageLive(_77)
    SourceInfo(src/map/core.rs:478:41-478:46)
  12: _77 = _2
    SourceInfo(src/map/core.rs:478:41-478:46)
  13: _76 = core::ops::RangeFrom::<usize> { start: move _77 }
    SourceInfo(src/map/core.rs:478:40-478:49)
  14: StorageDead(_77)
    SourceInfo(src/map/core.rs:478:48-478:49)
  15: StorageLive(_78)
    SourceInfo(src/map/core.rs:478:54-478:59)
  16: StorageLive(_79)
    SourceInfo(src/map/core.rs:478:54-478:57)
  17: _79 = _3
    SourceInfo(src/map/core.rs:478:54-478:57)
  18: _78 = core::ops::RangeFrom::<usize> { start: move _79 }
    SourceInfo(src/map/core.rs:478:54-478:59)
  19: StorageDead(_79)
    SourceInfo(src/map/core.rs:478:58-478:59)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:40-478:60)
      kind: _75 = <core::ops::RangeFrom<usize> as core::iter::Iterator>::zip::<core::ops::RangeFrom<usize>>(move _76, move _78) -> [return: bb31, unwind: bb55]
  }
  preds [bb27]
  succs [bb31, bb55]

bb30
  0: StorageDead(_72)
    SourceInfo(src/map/core.rs:474:61-474:62)
  1: StorageDead(_71)
    SourceInfo(src/map/core.rs:474:61-474:62)
  2: StorageDead(_69)
    SourceInfo(src/map/core.rs:474:61-474:62)
  3: StorageDead(_70)
    SourceInfo(src/map/core.rs:474:62-474:63)
  4: StorageDead(_68)
    SourceInfo(src/map/core.rs:474:62-474:63)
  5: _60 = const ()
    SourceInfo(src/map/core.rs:473:61-475:14)
  6: StorageDead(_67)
    SourceInfo(src/map/core.rs:475:13-475:14)
  7: StorageDead(_66)
    SourceInfo(src/map/core.rs:475:13-475:14)
  8: StorageDead(_63)
    SourceInfo(src/map/core.rs:475:13-475:14)
  9: StorageDead(_61)
    SourceInfo(src/map/core.rs:475:13-475:14)
  10: StorageDead(_60)
    SourceInfo(src/map/core.rs:475:13-475:14)
  11: _59 = const ()
    SourceInfo(src/map/core.rs:473:13-475:14)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:473:13-475:14)
      kind: goto -> bb23
  }
  preds [bb28]
  succs [bb23]

bb31
  0: StorageDead(_78)
    SourceInfo(src/map/core.rs:478:59-478:60)
  1: StorageDead(_76)
    SourceInfo(src/map/core.rs:478:59-478:60)
  2: StorageLive(_80)
    SourceInfo(src/map/core.rs:478:65-478:80)
  3: _80 = _5
    SourceInfo(src/map/core.rs:478:65-478:80)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:40-478:81)
      kind: _74 = <core::iter::Zip<core::ops::RangeFrom<usize>, core::ops::RangeFrom<usize>> as core::iter::Iterator>::zip::<&[Bucket<K, V>]>(move _75, move _80) -> [return: bb32, unwind: bb55]
  }
  preds [bb29]
  succs [bb32, bb55]

bb32
  0: StorageDead(_80)
    SourceInfo(src/map/core.rs:478:80-478:81)
  1: StorageDead(_75)
    SourceInfo(src/map/core.rs:478:80-478:81)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:40-478:81)
      kind: _73 = <core::iter::Zip<core::iter::Zip<core::ops::RangeFrom<usize>, core::ops::RangeFrom<usize>>, core::slice::Iter<'_, Bucket<K, V>>> as core::iter::IntoIterator>::into_iter(move _74) -> [return: bb33, unwind: bb55]
  }
  preds [bb31]
  succs [bb33, bb55]

bb33
  0: StorageDead(_74)
    SourceInfo(src/map/core.rs:478:80-478:81)
  1: PlaceMention(_73)
    SourceInfo(src/map/core.rs:478:40-478:81)
  2: StorageLive(_81)
    SourceInfo(src/map/core.rs:478:40-478:81)
  3: _81 = move _73
    SourceInfo(src/map/core.rs:478:40-478:81)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:13-480:14)
      kind: goto -> bb34
  }
  preds [bb32]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:13-480:14)
      kind: falseUnwind -> [real: bb35, unwind: bb55]
  }
  preds [bb33, bb41]
  succs [bb35, bb55]

bb35
  0: StorageLive(_82)
    SourceInfo(src/map/core.rs:478:40-478:81)
  1: StorageLive(_83)
    SourceInfo(src/map/core.rs:478:40-478:81)
  2: StorageLive(_84)
    SourceInfo(src/map/core.rs:478:40-478:81)
  3: StorageLive(_85)
    SourceInfo(src/map/core.rs:478:40-478:81)
  4: _85 = &mut _81
    SourceInfo(src/map/core.rs:478:40-478:81)
  5: _84 = &mut (*_85)
    SourceInfo(src/map/core.rs:478:40-478:81)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:40-478:81)
      kind: _83 = <core::iter::Zip<core::iter::Zip<core::ops::RangeFrom<usize>, core::ops::RangeFrom<usize>>, core::slice::Iter<'_, Bucket<K, V>>> as core::iter::Iterator>::next(move _84) -> [return: bb36, unwind: bb55]
  }
  preds [bb34]
  succs [bb36, bb55]

bb36
  0: StorageDead(_84)
    SourceInfo(src/map/core.rs:478:80-478:81)
  1: PlaceMention(_83)
    SourceInfo(src/map/core.rs:478:40-478:81)
  2: _86 = discriminant(_83)
    SourceInfo(src/map/core.rs:478:40-478:81)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:40-478:81)
      kind: switchInt(move _86) -> [0: bb38, 1: bb39, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb38, bb39]

bb37
  0: FakeRead(ForMatchedPlace(None), _83)
    SourceInfo(src/map/core.rs:478:40-478:81)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:40-478:81)
      kind: unreachable
  }
  preds [bb36]
  succs []

bb38
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:13-480:14)
      kind: falseEdge -> [real: bb40, imaginary: bb39]
  }
  preds [bb36]
  succs [bb39, bb40]

bb39
  0: StorageLive(_88)
    SourceInfo(src/map/core.rs:478:19-478:22)
  1: _88 = ((((_83 as Some).0: ((usize, usize), &Bucket<K, V>)).0: (usize, usize)).0: usize)
    SourceInfo(src/map/core.rs:478:19-478:22)
  2: StorageLive(_89)
    SourceInfo(src/map/core.rs:478:24-478:27)
  3: _89 = ((((_83 as Some).0: ((usize, usize), &Bucket<K, V>)).0: (usize, usize)).1: usize)
    SourceInfo(src/map/core.rs:478:24-478:27)
  4: StorageLive(_90)
    SourceInfo(src/map/core.rs:478:30-478:35)
  5: _90 = (((_83 as Some).0: ((usize, usize), &Bucket<K, V>)).1: &Bucket<K, V>)
    SourceInfo(src/map/core.rs:478:30-478:35)
  6: StorageLive(_91)
    SourceInfo(src/map/core.rs:479:17-479:70)
  7: StorageLive(_92)
    SourceInfo(src/map/core.rs:479:30-479:47)
  8: StorageLive(_93)
    SourceInfo(src/map/core.rs:479:30-479:47)
  9: _93 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:479:30-479:47)
  10: _92 = &mut (*_93)
    SourceInfo(src/map/core.rs:479:30-479:47)
  11: StorageLive(_94)
    SourceInfo(src/map/core.rs:479:49-479:59)
  12: _94 = ((*_90).0: HashValue)
    SourceInfo(src/map/core.rs:479:49-479:59)
  13: StorageLive(_95)
    SourceInfo(src/map/core.rs:479:61-479:64)
  14: _95 = _89
    SourceInfo(src/map/core.rs:479:61-479:64)
  15: StorageLive(_96)
    SourceInfo(src/map/core.rs:479:66-479:69)
  16: _96 = _88
    SourceInfo(src/map/core.rs:479:66-479:69)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:479:17-479:70)
      kind: _91 = map::core::update_index(move _92, move _94, move _95, move _96) -> [return: bb41, unwind: bb55]
  }
  preds [bb36, bb38]
  succs [bb41, bb55]

bb40
  0: _24 = const ()
    SourceInfo(src/map/core.rs:478:13-480:14)
  1: StorageDead(_85)
    SourceInfo(src/map/core.rs:480:13-480:14)
  2: StorageDead(_83)
    SourceInfo(src/map/core.rs:480:13-480:14)
  3: StorageDead(_82)
    SourceInfo(src/map/core.rs:480:13-480:14)
  4: StorageDead(_81)
    SourceInfo(src/map/core.rs:480:13-480:14)
  5: StorageDead(_73)
    SourceInfo(src/map/core.rs:480:13-480:14)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:469:16-492:10)
      kind: goto -> bb45
  }
  preds [bb38]
  succs [bb45]

bb41
  0: StorageDead(_96)
    SourceInfo(src/map/core.rs:479:69-479:70)
  1: StorageDead(_95)
    SourceInfo(src/map/core.rs:479:69-479:70)
  2: StorageDead(_94)
    SourceInfo(src/map/core.rs:479:69-479:70)
  3: StorageDead(_92)
    SourceInfo(src/map/core.rs:479:69-479:70)
  4: StorageDead(_93)
    SourceInfo(src/map/core.rs:479:70-479:71)
  5: StorageDead(_91)
    SourceInfo(src/map/core.rs:479:70-479:71)
  6: _82 = const ()
    SourceInfo(src/map/core.rs:478:82-480:14)
  7: StorageDead(_90)
    SourceInfo(src/map/core.rs:480:13-480:14)
  8: StorageDead(_89)
    SourceInfo(src/map/core.rs:480:13-480:14)
  9: StorageDead(_88)
    SourceInfo(src/map/core.rs:480:13-480:14)
  10: StorageDead(_85)
    SourceInfo(src/map/core.rs:480:13-480:14)
  11: StorageDead(_83)
    SourceInfo(src/map/core.rs:480:13-480:14)
  12: StorageDead(_82)
    SourceInfo(src/map/core.rs:480:13-480:14)
  13: _59 = const ()
    SourceInfo(src/map/core.rs:478:13-480:14)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:478:13-480:14)
      kind: goto -> bb34
  }
  preds [bb39]
  succs [bb34]

bb42
  0: StorageDead(_51)
    SourceInfo(src/map/core.rs:469:50-469:51)
  1: StorageDead(_47)
    SourceInfo(src/map/core.rs:469:50-469:51)
  2: StorageLive(_97)
    SourceInfo(src/map/core.rs:483:17-483:23)
  3: StorageLive(_98)
    SourceInfo(src/map/core.rs:483:26-483:29)
  4: _98 = _3
    SourceInfo(src/map/core.rs:483:26-483:29)
  5: StorageLive(_99)
    SourceInfo(src/map/core.rs:483:32-483:37)
  6: _99 = _2
    SourceInfo(src/map/core.rs:483:32-483:37)
  7: _100 = SubWithOverflow(_98, _99)
    SourceInfo(src/map/core.rs:483:26-483:37)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:483:26-483:37)
      kind: assert(!move (_100.1: bool), "attempt to compute `{} - {}`, which would overflow", move _98, move _99) -> [success: bb43, unwind: bb55]
  }
  preds [bb19]
  succs [bb43, bb55]

bb43
  0: _97 = move (_100.0: usize)
    SourceInfo(src/map/core.rs:483:26-483:37)
  1: StorageDead(_99)
    SourceInfo(src/map/core.rs:483:36-483:37)
  2: StorageDead(_98)
    SourceInfo(src/map/core.rs:483:36-483:37)
  3: FakeRead(ForLet(None), _97)
    SourceInfo(src/map/core.rs:483:17-483:23)
  4: StorageLive(_101)
    SourceInfo(src/map/core.rs:484:13-491:15)
  5: StorageLive(_102)
    SourceInfo(src/map/core.rs:484:13-484:25)
  6: _102 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:484:13-484:25)
  7: StorageLive(_103)
    SourceInfo(src/map/core.rs:484:33-491:14)
  8: _103 = {closure@src/map/core.rs:484:33: 484:41} { end: _3, offset: _97, start: _2 }
    SourceInfo(src/map/core.rs:484:33-491:14)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:484:13-491:15)
      kind: _101 = hashbrown::HashTable::<usize>::retain::<{closure@src/map/core.rs:484:33: 484:41}>(move _102, move _103) -> [return: bb44, unwind: bb55]
  }
  preds [bb42]
  succs [bb44, bb55]

bb44
  0: StorageDead(_103)
    SourceInfo(src/map/core.rs:491:14-491:15)
  1: StorageDead(_102)
    SourceInfo(src/map/core.rs:491:14-491:15)
  2: StorageDead(_101)
    SourceInfo(src/map/core.rs:491:15-491:16)
  3: _24 = const ()
    SourceInfo(src/map/core.rs:481:16-492:10)
  4: StorageDead(_97)
    SourceInfo(src/map/core.rs:492:9-492:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:469:16-492:10)
      kind: goto -> bb45
  }
  preds [bb43]
  succs [bb45]

bb45
  0: StorageDead(_46)
    SourceInfo(src/map/core.rs:492:9-492:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:462:16-492:10)
      kind: goto -> bb46
  }
  preds [bb40, bb44]
  succs [bb46]

bb46
  0: StorageDead(_33)
    SourceInfo(src/map/core.rs:492:9-492:10)
  1: StorageDead(_27)
    SourceInfo(src/map/core.rs:492:9-492:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:460:9-492:10)
      kind: goto -> bb47
  }
  preds [bb15, bb45]
  succs [bb47]

bb47
  0: StorageDead(_25)
    SourceInfo(src/map/core.rs:492:9-492:10)
  1: StorageDead(_24)
    SourceInfo(src/map/core.rs:492:9-492:10)
  2: StorageLive(_104)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9-348:10)
  3: StorageLive(_105)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12-346:42)
  4: _105 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12-346:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12-346:42)
      kind: switchInt(move _105) -> [0: bb53, otherwise: bb48]
  }
  preds [bb8, bb46]
  succs [bb48, bb53]

bb48
  0: StorageLive(_106)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9-48:10)
  1: StorageLive(_107)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  2: StorageLive(_108)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  3: StorageLive(_109)
    SourceInfo(src/map/core.rs:494:26-494:44)
  4: StorageLive(_110)
    SourceInfo(src/map/core.rs:494:26-494:38)
  5: _110 = &((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:494:26-494:38)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:494:26-494:44)
      kind: _109 = hashbrown::HashTable::<usize>::len(move _110) -> [return: bb49, unwind: bb55]
  }
  preds [bb47]
  succs [bb49, bb55]

bb49
  0: StorageDead(_110)
    SourceInfo(src/map/core.rs:494:43-494:44)
  1: _108 = &_109
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  2: StorageLive(_111)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  3: StorageLive(_112)
    SourceInfo(src/map/core.rs:494:46-494:61)
  4: StorageLive(_113)
    SourceInfo(src/map/core.rs:494:46-494:51)
  5: _113 = _2
    SourceInfo(src/map/core.rs:494:46-494:51)
  6: StorageLive(_114)
    SourceInfo(src/map/core.rs:494:54-494:61)
  7: _114 = _18
    SourceInfo(src/map/core.rs:494:54-494:61)
  8: _115 = AddWithOverflow(_113, _114)
    SourceInfo(src/map/core.rs:494:46-494:61)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:494:46-494:61)
      kind: assert(!move (_115.1: bool), "attempt to compute `{} + {}`, which would overflow", move _113, move _114) -> [success: bb50, unwind: bb55]
  }
  preds [bb48]
  succs [bb50, bb55]

bb50
  0: _112 = move (_115.0: usize)
    SourceInfo(src/map/core.rs:494:46-494:61)
  1: StorageDead(_114)
    SourceInfo(src/map/core.rs:494:60-494:61)
  2: StorageDead(_113)
    SourceInfo(src/map/core.rs:494:60-494:61)
  3: _111 = &_112
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  4: _107 = (move _108, move _111)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  5: StorageDead(_111)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  6: StorageDead(_108)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  7: PlaceMention(_107)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  8: StorageLive(_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  9: _116 = (_107.0: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  10: StorageLive(_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  11: _117 = (_107.1: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  12: StorageLive(_118)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  13: StorageLive(_119)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  14: _119 = (*_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  15: StorageLive(_120)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  16: _120 = (*_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  17: _118 = Eq(move _119, move _120)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: switchInt(move _118) -> [0: bb52, otherwise: bb51]
  }
  preds [bb49]
  succs [bb51, bb52]

bb51
  0: StorageDead(_120)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_119)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: _106 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:18-46:18)
  3: StorageDead(_118)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:17-46:18)
  4: StorageDead(_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  5: StorageDead(_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  6: StorageDead(_112)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  7: StorageDead(_109)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  8: StorageDead(_107)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  9: StorageDead(_106)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  10: _104 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:43-348:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9-348:10)
      kind: goto -> bb54
  }
  preds [bb50]
  succs [bb54]

bb52
  0: StorageDead(_120)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_119)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: StorageLive(_122)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  3: _122 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32-41:65)
  4: FakeRead(ForLet(None), _122)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  5: StorageLive(_123)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
  6: StorageLive(_124)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  7: _124 = move _122
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  8: StorageLive(_125)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  9: StorageLive(_126)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  10: _126 = &(*_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  11: _125 = &(*_126)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  12: StorageLive(_127)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  13: StorageLive(_128)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  14: _128 = &(*_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  15: _127 = &(*_128)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  16: StorageLive(_129)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  17: _129 = core::option::Option::<core::fmt::Arguments<'_>>::None
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
      kind: _123 = core::panicking::assert_failed::<usize, usize>(move _124, move _125, move _127, move _129) -> bb55
  }
  preds [bb50]
  succs [bb55]

bb53
  0: _104 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:348:10-348:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9-348:10)
      kind: goto -> bb54
  }
  preds [bb47]
  succs [bb54]

bb54
  0: StorageDead(_105)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:348:9-348:10)
  1: StorageDead(_104)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:348:9-348:10)
  2: _0 = const ()
    SourceInfo(src/map/core.rs:451:59-495:6)
  3: StorageDead(_20)
    SourceInfo(src/map/core.rs:495:5-495:6)
  4: StorageDead(_18)
    SourceInfo(src/map/core.rs:495:5-495:6)
  5: StorageDead(_16)
    SourceInfo(src/map/core.rs:495:5-495:6)
  6: StorageDead(_12)
    SourceInfo(src/map/core.rs:495:5-495:6)
  7: StorageDead(_11)
    SourceInfo(src/map/core.rs:495:5-495:6)
  8: StorageDead(_5)
    SourceInfo(src/map/core.rs:495:5-495:6)
  9: StorageDead(_4)
    SourceInfo(src/map/core.rs:495:5-495:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:495:6-495:6)
      kind: return
  }
  preds [bb51, bb53]
  succs []

bb55
  Terminator {
      source_info: SourceInfo(src/map/core.rs:451:5-495:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb9, bb12, bb13, bb14, bb18, bb20, bb21, bb23, bb24, bb28, bb29, bb31, bb32, bb34, bb35, bb39, bb42, bb43, bb48, bb49, bb52]
  succs []

