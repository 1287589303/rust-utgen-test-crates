bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core.rs:501:9-502:72)
  1: StorageLive(_4)
    SourceInfo(src/map/core.rs:501:9-501:21)
  2: _4 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:501:9-501:21)
  3: StorageLive(_5)
    SourceInfo(src/map/core.rs:502:25-502:71)
  4: StorageLive(_6)
    SourceInfo(src/map/core.rs:502:25-502:71)
  5: _6 = &mut _2
    SourceInfo(src/map/core.rs:502:25-502:71)
  6: _5 = {closure@src/map/core.rs:502:25: 502:32} { keep: move _6 }
    SourceInfo(src/map/core.rs:502:25-502:71)
  7: StorageDead(_6)
    SourceInfo(src/map/core.rs:502:31-502:32)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:501:9-502:72)
      kind: _3 = alloc::vec::Vec::<Bucket<K, V>>::retain_mut::<{closure@src/map/core.rs:502:25: 502:32}>(move _4, move _5) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_5)
    SourceInfo(src/map/core.rs:502:71-502:72)
  1: StorageDead(_4)
    SourceInfo(src/map/core.rs:502:71-502:72)
  2: StorageDead(_3)
    SourceInfo(src/map/core.rs:502:72-502:73)
  3: StorageLive(_7)
    SourceInfo(src/map/core.rs:503:12-503:51)
  4: StorageLive(_8)
    SourceInfo(src/map/core.rs:503:12-503:30)
  5: StorageLive(_9)
    SourceInfo(src/map/core.rs:503:12-503:24)
  6: _9 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:503:12-503:24)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:503:12-503:30)
      kind: _8 = alloc::vec::Vec::<Bucket<K, V>>::len(move _9) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_9)
    SourceInfo(src/map/core.rs:503:29-503:30)
  1: StorageLive(_10)
    SourceInfo(src/map/core.rs:503:33-503:51)
  2: StorageLive(_11)
    SourceInfo(src/map/core.rs:503:33-503:45)
  3: _11 = &((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:503:33-503:45)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:503:33-503:51)
      kind: _10 = hashbrown::HashTable::<usize>::len(move _11) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_11)
    SourceInfo(src/map/core.rs:503:50-503:51)
  1: _7 = Lt(move _8, move _10)
    SourceInfo(src/map/core.rs:503:12-503:51)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:503:12-503:51)
      kind: switchInt(move _7) -> [0: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_10)
    SourceInfo(src/map/core.rs:503:50-503:51)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:503:50-503:51)
  2: StorageLive(_12)
    SourceInfo(src/map/core.rs:504:13-504:38)
  3: StorageLive(_13)
    SourceInfo(src/map/core.rs:504:13-504:17)
  4: _13 = &mut (*_1)
    SourceInfo(src/map/core.rs:504:13-504:17)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:504:13-504:38)
      kind: _12 = map::core::IndexMapCore::<K, V>::rebuild_hash_table(move _13) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_13)
    SourceInfo(src/map/core.rs:504:37-504:38)
  1: StorageDead(_12)
    SourceInfo(src/map/core.rs:504:38-504:39)
  2: _0 = const ()
    SourceInfo(src/map/core.rs:503:52-505:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:503:9-505:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_10)
    SourceInfo(src/map/core.rs:503:50-503:51)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:503:50-503:51)
  2: _0 = const ()
    SourceInfo(src/map/core.rs:505:10-505:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:503:9-505:10)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  0: StorageDead(_7)
    SourceInfo(src/map/core.rs:505:9-505:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:506:5-506:6)
      kind: drop(_2) -> [return: bb8, unwind: bb10]
  }
  preds [bb5, bb6]
  succs [bb8, bb10]

bb8
  Terminator {
      source_info: SourceInfo(src/map/core.rs:506:6-506:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/map/core.rs:506:5-506:6)
      kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb4]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/map/core.rs:497:5-506:6)
      kind: resume
  }
  preds [bb7, bb9]
  succs []

