bb0
  0: StorageLive(_4)
    SourceInfo(src/util.rs:63:5-65:6)
  1: StorageLive(_5)
    SourceInfo(src/util.rs:63:8-63:33)
  2: StorageLive(_6)
    SourceInfo(src/util.rs:63:8-63:18)
  3: StorageLive(_7)
    SourceInfo(src/util.rs:63:8-63:12)
  4: _7 = &(*_1)
    SourceInfo(src/util.rs:63:8-63:12)
  Terminator {
      source_info: SourceInfo(src/util.rs:63:8-63:18)
      kind: _6 = core::slice::<impl [T]>::len(move _7) -> [return: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  0: StorageDead(_7)
    SourceInfo(src/util.rs:63:17-63:18)
  1: StorageLive(_8)
    SourceInfo(src/util.rs:63:22-63:33)
  2: StorageLive(_9)
    SourceInfo(src/util.rs:63:22-63:27)
  3: _9 = &(*_2)
    SourceInfo(src/util.rs:63:22-63:27)
  Terminator {
      source_info: SourceInfo(src/util.rs:63:22-63:33)
      kind: _8 = core::slice::<impl [U]>::len(move _9) -> [return: bb2, unwind: bb21]
  }
  preds [bb0]
  succs [bb2, bb21]

bb2
  0: StorageDead(_9)
    SourceInfo(src/util.rs:63:32-63:33)
  1: _5 = Ne(move _6, move _8)
    SourceInfo(src/util.rs:63:8-63:33)
  Terminator {
      source_info: SourceInfo(src/util.rs:63:8-63:33)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(src/util.rs:63:32-63:33)
  1: StorageDead(_6)
    SourceInfo(src/util.rs:63:32-63:33)
  2: _0 = const false
    SourceInfo(src/util.rs:64:16-64:21)
  3: StorageDead(_5)
    SourceInfo(src/util.rs:65:5-65:6)
  4: StorageDead(_4)
    SourceInfo(src/util.rs:65:5-65:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb19
  }
  preds [bb2]
  succs [bb19]

bb4
  0: StorageDead(_8)
    SourceInfo(src/util.rs:63:32-63:33)
  1: StorageDead(_6)
    SourceInfo(src/util.rs:63:32-63:33)
  2: _4 = const ()
    SourceInfo(src/util.rs:65:6-65:6)
  3: StorageDead(_5)
    SourceInfo(src/util.rs:65:5-65:6)
  4: StorageDead(_4)
    SourceInfo(src/util.rs:65:5-65:6)
  5: StorageLive(_11)
    SourceInfo(src/util.rs:70:5-75:6)
  6: StorageLive(_12)
    SourceInfo(src/util.rs:70:14-70:27)
  7: StorageLive(_13)
    SourceInfo(src/util.rs:70:14-70:27)
  8: StorageLive(_14)
    SourceInfo(src/util.rs:70:17-70:27)
  9: StorageLive(_15)
    SourceInfo(src/util.rs:70:17-70:21)
  10: _15 = &(*_1)
    SourceInfo(src/util.rs:70:17-70:21)
  Terminator {
      source_info: SourceInfo(src/util.rs:70:17-70:27)
      kind: _14 = core::slice::<impl [T]>::len(move _15) -> [return: bb5, unwind: bb21]
  }
  preds [bb2]
  succs [bb5, bb21]

bb5
  0: StorageDead(_15)
    SourceInfo(src/util.rs:70:26-70:27)
  1: _13 = core::ops::Range::<usize> { start: const 0_usize, end: move _14 }
    SourceInfo(src/util.rs:70:14-70:27)
  2: StorageDead(_14)
    SourceInfo(src/util.rs:70:26-70:27)
  Terminator {
      source_info: SourceInfo(src/util.rs:70:14-70:27)
      kind: _12 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _13) -> [return: bb6, unwind: bb21]
  }
  preds [bb4]
  succs [bb6, bb21]

bb6
  0: StorageDead(_13)
    SourceInfo(src/util.rs:70:26-70:27)
  1: PlaceMention(_12)
    SourceInfo(src/util.rs:70:14-70:27)
  2: StorageLive(_16)
    SourceInfo(src/util.rs:70:14-70:27)
  3: _16 = move _12
    SourceInfo(src/util.rs:70:14-70:27)
  Terminator {
      source_info: SourceInfo(src/util.rs:70:5-75:6)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/util.rs:70:5-75:6)
      kind: falseUnwind -> [real: bb8, unwind: bb21]
  }
  preds [bb6, bb17]
  succs [bb8, bb21]

bb8
  0: StorageLive(_18)
    SourceInfo(src/util.rs:70:14-70:27)
  1: StorageLive(_19)
    SourceInfo(src/util.rs:70:14-70:27)
  2: StorageLive(_20)
    SourceInfo(src/util.rs:70:14-70:27)
  3: StorageLive(_21)
    SourceInfo(src/util.rs:70:14-70:27)
  4: _21 = &mut _16
    SourceInfo(src/util.rs:70:14-70:27)
  5: _20 = &mut (*_21)
    SourceInfo(src/util.rs:70:14-70:27)
  Terminator {
      source_info: SourceInfo(src/util.rs:70:14-70:27)
      kind: _19 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _20) -> [return: bb9, unwind: bb21]
  }
  preds [bb7]
  succs [bb9, bb21]

bb9
  0: StorageDead(_20)
    SourceInfo(src/util.rs:70:26-70:27)
  1: PlaceMention(_19)
    SourceInfo(src/util.rs:70:14-70:27)
  2: _22 = discriminant(_19)
    SourceInfo(src/util.rs:70:14-70:27)
  Terminator {
      source_info: SourceInfo(src/util.rs:70:14-70:27)
      kind: switchInt(move _22) -> [0: bb11, 1: bb12, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _19)
    SourceInfo(src/util.rs:70:14-70:27)
  Terminator {
      source_info: SourceInfo(src/util.rs:70:14-70:27)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/util.rs:70:5-75:6)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_24)
    SourceInfo(src/util.rs:70:9-70:10)
  1: _24 = ((_19 as Some).0: usize)
    SourceInfo(src/util.rs:70:9-70:10)
  2: StorageLive(_25)
    SourceInfo(src/util.rs:72:13-72:36)
  3: StorageLive(_26)
    SourceInfo(src/util.rs:72:13-72:15)
  4: _26 = &_3
    SourceInfo(src/util.rs:72:13-72:15)
  5: StorageLive(_27)
    SourceInfo(src/util.rs:72:13-72:36)
  6: StorageLive(_28)
    SourceInfo(src/util.rs:72:16-72:24)
  7: StorageLive(_29)
    SourceInfo(src/util.rs:72:16-72:24)
  8: StorageLive(_30)
    SourceInfo(src/util.rs:72:22-72:23)
  9: _30 = _24
    SourceInfo(src/util.rs:72:22-72:23)
  10: _31 = Len((*_1))
    SourceInfo(src/util.rs:72:17-72:24)
  11: _32 = Lt(_30, _31)
    SourceInfo(src/util.rs:72:17-72:24)
  Terminator {
      source_info: SourceInfo(src/util.rs:72:17-72:24)
      kind: assert(move _32, "index out of bounds: the length is {} but the index is {}", move _31, _30) -> [success: bb14, unwind: bb21]
  }
  preds [bb9, bb11]
  succs [bb14, bb21]

bb13
  0: _11 = const ()
    SourceInfo(src/util.rs:70:5-75:6)
  1: StorageDead(_21)
    SourceInfo(src/util.rs:75:5-75:6)
  2: StorageDead(_19)
    SourceInfo(src/util.rs:75:5-75:6)
  3: StorageDead(_18)
    SourceInfo(src/util.rs:75:5-75:6)
  4: StorageDead(_16)
    SourceInfo(src/util.rs:75:5-75:6)
  5: StorageDead(_12)
    SourceInfo(src/util.rs:75:5-75:6)
  6: StorageDead(_11)
    SourceInfo(src/util.rs:75:5-75:6)
  7: _0 = const true
    SourceInfo(src/util.rs:77:5-77:9)
  Terminator {
      source_info: SourceInfo(src/util.rs:78:1-78:2)
      kind: drop(_3) -> [return: bb20, unwind: bb22]
  }
  preds [bb11]
  succs [bb20, bb22]

bb14
  0: _29 = &(*_1)[_30]
    SourceInfo(src/util.rs:72:16-72:24)
  1: _28 = &(*_29)
    SourceInfo(src/util.rs:72:16-72:24)
  2: StorageLive(_33)
    SourceInfo(src/util.rs:72:26-72:35)
  3: StorageLive(_34)
    SourceInfo(src/util.rs:72:26-72:35)
  4: StorageLive(_35)
    SourceInfo(src/util.rs:72:33-72:34)
  5: _35 = _24
    SourceInfo(src/util.rs:72:33-72:34)
  6: _36 = Len((*_2))
    SourceInfo(src/util.rs:72:27-72:35)
  7: _37 = Lt(_35, _36)
    SourceInfo(src/util.rs:72:27-72:35)
  Terminator {
      source_info: SourceInfo(src/util.rs:72:27-72:35)
      kind: assert(move _37, "index out of bounds: the length is {} but the index is {}", move _36, _35) -> [success: bb15, unwind: bb21]
  }
  preds [bb12]
  succs [bb15, bb21]

bb15
  0: _34 = &(*_2)[_35]
    SourceInfo(src/util.rs:72:26-72:35)
  1: _33 = &(*_34)
    SourceInfo(src/util.rs:72:26-72:35)
  2: _27 = (move _28, move _33)
    SourceInfo(src/util.rs:72:13-72:36)
  Terminator {
      source_info: SourceInfo(src/util.rs:72:13-72:36)
      kind: _25 = <impl Fn(&T, &U) -> bool as core::ops::Fn<(&T, &U)>>::call(move _26, move _27) -> [return: bb16, unwind: bb21]
  }
  preds [bb14]
  succs [bb16, bb21]

bb16
  Terminator {
      source_info: SourceInfo(src/util.rs:72:13-72:36)
      kind: switchInt(move _25) -> [0: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: StorageDead(_33)
    SourceInfo(src/util.rs:72:35-72:36)
  1: StorageDead(_28)
    SourceInfo(src/util.rs:72:35-72:36)
  2: StorageDead(_27)
    SourceInfo(src/util.rs:72:35-72:36)
  3: StorageDead(_26)
    SourceInfo(src/util.rs:72:35-72:36)
  4: StorageDead(_35)
    SourceInfo(src/util.rs:72:35-72:36)
  5: StorageDead(_34)
    SourceInfo(src/util.rs:72:35-72:36)
  6: StorageDead(_30)
    SourceInfo(src/util.rs:72:35-72:36)
  7: StorageDead(_29)
    SourceInfo(src/util.rs:72:35-72:36)
  8: _18 = const ()
    SourceInfo(src/util.rs:74:10-74:10)
  9: StorageDead(_25)
    SourceInfo(src/util.rs:74:9-74:10)
  10: StorageDead(_24)
    SourceInfo(src/util.rs:75:5-75:6)
  11: StorageDead(_21)
    SourceInfo(src/util.rs:75:5-75:6)
  12: StorageDead(_19)
    SourceInfo(src/util.rs:75:5-75:6)
  13: StorageDead(_18)
    SourceInfo(src/util.rs:75:5-75:6)
  14: _17 = const ()
    SourceInfo(src/util.rs:70:5-75:6)
  Terminator {
      source_info: SourceInfo(src/util.rs:70:5-75:6)
      kind: goto -> bb7
  }
  preds [bb16]
  succs [bb7]

bb18
  0: StorageDead(_33)
    SourceInfo(src/util.rs:72:35-72:36)
  1: StorageDead(_28)
    SourceInfo(src/util.rs:72:35-72:36)
  2: StorageDead(_27)
    SourceInfo(src/util.rs:72:35-72:36)
  3: StorageDead(_26)
    SourceInfo(src/util.rs:72:35-72:36)
  4: StorageDead(_35)
    SourceInfo(src/util.rs:72:35-72:36)
  5: StorageDead(_34)
    SourceInfo(src/util.rs:72:35-72:36)
  6: StorageDead(_30)
    SourceInfo(src/util.rs:72:35-72:36)
  7: StorageDead(_29)
    SourceInfo(src/util.rs:72:35-72:36)
  8: _0 = const false
    SourceInfo(src/util.rs:73:20-73:25)
  9: StorageDead(_25)
    SourceInfo(src/util.rs:74:9-74:10)
  10: StorageDead(_24)
    SourceInfo(src/util.rs:75:5-75:6)
  11: StorageDead(_21)
    SourceInfo(src/util.rs:75:5-75:6)
  12: StorageDead(_19)
    SourceInfo(src/util.rs:75:5-75:6)
  13: StorageDead(_18)
    SourceInfo(src/util.rs:75:5-75:6)
  14: StorageDead(_16)
    SourceInfo(src/util.rs:75:5-75:6)
  15: StorageDead(_12)
    SourceInfo(src/util.rs:75:5-75:6)
  16: StorageDead(_11)
    SourceInfo(src/util.rs:75:5-75:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb19
  }
  preds [bb16]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(src/util.rs:78:1-78:2)
      kind: drop(_3) -> [return: bb20, unwind: bb22]
  }
  preds [bb3, bb18]
  succs [bb20, bb22]

bb20
  Terminator {
      source_info: SourceInfo(src/util.rs:78:2-78:2)
      kind: return
  }
  preds [bb13, bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(src/util.rs:78:1-78:2)
      kind: drop(_3) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb4, bb5, bb7, bb8, bb12, bb14, bb15]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(src/util.rs:62:1-78:2)
      kind: resume
  }
  preds [bb13, bb19, bb21]
  succs []

