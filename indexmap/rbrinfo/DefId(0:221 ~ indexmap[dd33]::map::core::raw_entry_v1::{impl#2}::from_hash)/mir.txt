bb0
  0: StorageLive(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:224:13-224:16)
  1: _4 = (_1.0: &map::IndexMap<K, V, S>)
    SourceInfo(src/map/core/raw_entry_v1.rs:224:19-224:27)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/map/core/raw_entry_v1.rs:224:13-224:16)
  3: StorageLive(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:13-225:14)
  4: StorageLive(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
  5: StorageLive(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:53)
  6: StorageLive(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:21)
  7: _8 = move _1
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:21)
  8: StorageLive(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:38-225:42)
  9: _9 = _2
    SourceInfo(src/map/core/raw_entry_v1.rs:225:38-225:42)
  10: StorageLive(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:44-225:52)
  11: _10 = move _3
    SourceInfo(src/map/core/raw_entry_v1.rs:225:44-225:52)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:53)
      kind: _7 = map::core::raw_entry_v1::RawEntryBuilder::<'_, K, V, S>::index_from_hash::<F>(move _8, move _9, move _10) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:52-225:53)
  1: StorageDead(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:52-225:53)
  2: StorageDead(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:52-225:53)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
      kind: _6 = <core::option::Option<usize> as core::ops::Try>::branch(move _7) -> [return: bb2, unwind: bb11]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: StorageDead(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:53-225:54)
  1: PlaceMention(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
  2: _11 = discriminant(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
      kind: switchInt(move _11) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _6)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:225:53-225:54)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_15)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
  1: _15 = ((_6 as Continue).0: usize)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
  2: _5 = _15
    SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
  3: StorageDead(_15)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:53-225:54)
  4: FakeRead(ForLet(None), _5)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:13-225:14)
  5: StorageDead(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:54-225:55)
  6: StorageLive(_16)
    SourceInfo(src/map/core/raw_entry_v1.rs:226:9-226:12)
  7: _16 = &(*_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:226:9-226:12)
  8: StorageLive(_17)
    SourceInfo(src/map/core/raw_entry_v1.rs:226:23-226:24)
  9: _17 = _5
    SourceInfo(src/map/core/raw_entry_v1.rs:226:23-226:24)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:226:9-226:25)
      kind: _0 = map::IndexMap::<K, V, S>::get_index(move _16, move _17) -> [return: bb8, unwind: bb11]
  }
  preds [bb2, bb4]
  succs [bb8, bb11]

bb6
  0: StorageLive(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:53-225:54)
  1: _12 = ((_6 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:53-225:54)
  2: StorageLive(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:53-225:54)
  3: _14 = _12
    SourceInfo(src/map/core/raw_entry_v1.rs:225:53-225:54)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:225:17-225:54)
      kind: _0 = <core::option::Option<(&K, &V)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _14) -> [return: bb7, unwind: bb11]
  }
  preds [bb4]
  succs [bb7, bb11]

bb7
  0: StorageDead(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:53-225:54)
  1: StorageDead(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:53-225:54)
  2: StorageDead(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:225:54-225:55)
  3: StorageDead(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:227:5-227:6)
  4: StorageDead(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:227:5-227:6)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:227:5-227:6)
      kind: drop(_3) -> [return: bb9, unwind: bb12]
  }
  preds [bb6]
  succs [bb9, bb12]

bb8
  0: StorageDead(_17)
    SourceInfo(src/map/core/raw_entry_v1.rs:226:24-226:25)
  1: StorageDead(_16)
    SourceInfo(src/map/core/raw_entry_v1.rs:226:24-226:25)
  2: StorageDead(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:227:5-227:6)
  3: StorageDead(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:227:5-227:6)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:227:5-227:6)
      kind: drop(_3) -> [return: bb9, unwind: bb12]
  }
  preds [bb5]
  succs [bb9, bb12]

bb9
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:227:6-227:6)
      kind: return
  }
  preds [bb7, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:225:52-225:53)
      kind: drop(_10) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:227:5-227:6)
      kind: drop(_3) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb1, bb5, bb6, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:220:5-227:6)
      kind: resume
  }
  preds [bb7, bb8, bb11]
  succs []

